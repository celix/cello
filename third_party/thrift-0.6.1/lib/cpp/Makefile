# Makefile.in generated by automake 1.9.6 from Makefile.am.
# lib/cpp/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements. See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership. The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
#




srcdir = .
top_srcdir = ../..

pkgdatadir = $(datadir)/thrift
pkglibdir = $(libdir)/thrift
pkgincludedir = $(includedir)/thrift
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-redhat-linux-gnu
host_triplet = i686-redhat-linux-gnu
#am__append_1 = libthriftnb.la
#am__append_2 = thrift-nb.pc
am__append_3 = libthriftz.la
am__append_4 = thrift-z.pc
noinst_PROGRAMS = concurrency_test$(EXEEXT)
subdir = lib/cpp
DIST_COMMON = README $(include_async_HEADERS) \
	$(include_concurrency_HEADERS) $(include_processor_HEADERS) \
	$(include_protocol_HEADERS) $(include_server_HEADERS) \
	$(include_thrift_HEADERS) $(include_transport_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/thrift-nb.pc.in $(srcdir)/thrift-z.pc.in \
	$(srcdir)/thrift.pc.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/aclocal/ax_boost_base.m4 \
	$(top_srcdir)/aclocal/ax_javac_and_java.m4 \
	$(top_srcdir)/aclocal/ax_lib_event.m4 \
	$(top_srcdir)/aclocal/ax_lib_zlib.m4 \
	$(top_srcdir)/aclocal/ax_prog_perl_modules.m4 \
	$(top_srcdir)/aclocal/ax_signed_right_shift.m4 \
	$(top_srcdir)/aclocal/ax_thrift_internal.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = thrift-nb.pc thrift-z.pc thrift.pc
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgconfigdir)" \
	"$(DESTDIR)$(include_asyncdir)" \
	"$(DESTDIR)$(include_concurrencydir)" \
	"$(DESTDIR)$(include_processordir)" \
	"$(DESTDIR)$(include_protocoldir)" \
	"$(DESTDIR)$(include_serverdir)" \
	"$(DESTDIR)$(include_thriftdir)" \
	"$(DESTDIR)$(include_transportdir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
libthrift_la_LIBADD =
am_libthrift_la_OBJECTS = Thrift.lo TApplicationException.lo Mutex.lo \
	Monitor.lo PosixThreadFactory.lo ThreadManager.lo \
	TimerManager.lo Util.lo TDebugProtocol.lo TDenseProtocol.lo \
	TJSONProtocol.lo TBase64Utils.lo TTransportException.lo \
	TFDTransport.lo TFileTransport.lo TSimpleFileTransport.lo \
	THttpTransport.lo THttpClient.lo THttpServer.lo TSocket.lo \
	TSocketPool.lo TServerSocket.lo TTransportUtils.lo \
	TBufferTransports.lo TServer.lo TSimpleServer.lo \
	TThreadPoolServer.lo TThreadedServer.lo TAsyncChannel.lo \
	PeekProcessor.lo
libthrift_la_OBJECTS = $(am_libthrift_la_OBJECTS)
libthriftnb_la_LIBADD =
am_libthriftnb_la_OBJECTS = libthriftnb_la-TNonblockingServer.lo \
	libthriftnb_la-TAsyncProtocolProcessor.lo
libthriftnb_la_OBJECTS = $(am_libthriftnb_la_OBJECTS)
#am_libthriftnb_la_rpath = -rpath $(libdir)
libthriftz_la_LIBADD =
am_libthriftz_la_OBJECTS = libthriftz_la-TZlibTransport.lo
libthriftz_la_OBJECTS = $(am_libthriftz_la_OBJECTS)
am_libthriftz_la_rpath = -rpath $(libdir)
PROGRAMS = $(noinst_PROGRAMS)
am_concurrency_test_OBJECTS = Tests.$(OBJEXT)
concurrency_test_OBJECTS = $(am_concurrency_test_OBJECTS)
concurrency_test_DEPENDENCIES = libthrift.la
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libthrift_la_SOURCES) $(libthriftnb_la_SOURCES) \
	$(libthriftz_la_SOURCES) $(concurrency_test_SOURCES)
DIST_SOURCES = $(libthrift_la_SOURCES) $(libthriftnb_la_SOURCES) \
	$(libthriftz_la_SOURCES) $(concurrency_test_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
pkgconfigDATA_INSTALL = $(INSTALL_DATA)
DATA = $(pkgconfig_DATA)
include_asyncHEADERS_INSTALL = $(INSTALL_HEADER)
include_concurrencyHEADERS_INSTALL = $(INSTALL_HEADER)
include_processorHEADERS_INSTALL = $(INSTALL_HEADER)
include_protocolHEADERS_INSTALL = $(INSTALL_HEADER)
include_serverHEADERS_INSTALL = $(INSTALL_HEADER)
include_thriftHEADERS_INSTALL = $(INSTALL_HEADER)
include_transportHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(include_async_HEADERS) $(include_concurrency_HEADERS) \
	$(include_processor_HEADERS) $(include_protocol_HEADERS) \
	$(include_server_HEADERS) $(include_thrift_HEADERS) \
	$(include_transport_HEADERS)
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/chris/cello/third_party/thrift-0.6.1/missing --run aclocal-1.9
ALLOCA = 
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/chris/cello/third_party/thrift-0.6.1/missing --run tar
AMX_HAVE_LIBEVENT_FALSE = 
AMX_HAVE_LIBEVENT_TRUE = #
AMX_HAVE_ZLIB_FALSE = #
AMX_HAVE_ZLIB_TRUE = 
ANT = /usr/bin/ant
ANT_FLAGS = 
AR = ar
AUTOCONF = ${SHELL} /home/chris/cello/third_party/thrift-0.6.1/missing --run autoconf
AUTOHEADER = ${SHELL} /home/chris/cello/third_party/thrift-0.6.1/missing --run autoheader
AUTOMAKE = ${SHELL} /home/chris/cello/third_party/thrift-0.6.1/missing --run automake-1.9
AWK = gawk
BOOST_CPPFLAGS = -I/usr/local/include
BOOST_LDFLAGS = -L/usr/local/lib
BOOST_ROOT_PATH = /usr/local
CABAL = true
CABAL_CONFIGURE_FLAGS = 
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CLASSPATH = .:./classes:/lib/dt.jar:/lib/tools.jar:/lib/Ice.jar:/home/chris/cello/third_party/thrift/lib/java/libthrift.jar:/home/chris/cello/third_party/thrift/lib/java/log4j-1.2.14.jar:/home/chris/cello/third_party/thrift/lib/java/slf4j-log4j12-1.5.8.jar:/home/chris/cello/third_party/thrift/lib/java/slf4j-api-1.5.8.jar
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ENABLE_COVERAGE = 2
ERL = 
ERLANG_INSTALL_LIB_DIR = 
ERLANG_INSTALL_LIB_DIR_thrift = 
ERLANG_LIB_DIR = 
ERLC = 
ERLCFLAGS = 
EXEEXT = 
F77 = gfortran
FFLAGS = -g -O2
GCOV_CFLAGS = 
GCOV_CXXFLAGS = 
GCOV_LDFLAGS = 
GLIB_CFLAGS = 
GLIB_LIBS = 
GOBJECT_CFLAGS = 
GOBJECT_LIBS = 
GREP = /bin/grep
HAVE_RSPEC_FALSE = 
HAVE_RSPEC_TRUE = #
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
JAVA_PREFIX = /usr/local/lib
LDFLAGS = 
LEX = flex
LEXLIB = -lfl
LEX_OUTPUT_ROOT = lex.yy
LIBEVENT_CPPFLAGS = 
LIBEVENT_LDFLAGS = 
LIBEVENT_LIBS = 
LIBOBJS = 
LIBS = -lrt -lpthread 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/chris/cello/third_party/thrift-0.6.1/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MONO_CFLAGS = 
MONO_LIBS = 
NET_2_0_FALSE = #
NET_2_0_TRUE = 
OBJEXT = o
PACKAGE = thrift
PACKAGE_BUGREPORT = 
PACKAGE_NAME = thrift
PACKAGE_STRING = thrift 0.6.1
PACKAGE_TARNAME = thrift
PACKAGE_URL = 
PACKAGE_VERSION = 0.6.1
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PERL_PREFIX = /usr/local
PHP = 
PHP_CONFIG = 
PHP_CONFIG_PREFIX = /etc/php.d
PHP_PREFIX = /usr/lib/php
PKG_CONFIG = 
PYTHON = /usr/bin/python
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_PLATFORM = linux2
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 2.6
PY_PREFIX = /usr
RANLIB = ranlib
RSPEC = 
RUBY = 
RUBY_PREFIX = 
RUNHASKELL = true
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
THRIFT_GEN_as3_FALSE = #
THRIFT_GEN_as3_TRUE = 
THRIFT_GEN_c_glib_FALSE = #
THRIFT_GEN_c_glib_TRUE = 
THRIFT_GEN_cocoa_FALSE = #
THRIFT_GEN_cocoa_TRUE = 
THRIFT_GEN_cpp_FALSE = #
THRIFT_GEN_cpp_TRUE = 
THRIFT_GEN_csharp_FALSE = #
THRIFT_GEN_csharp_TRUE = 
THRIFT_GEN_erl_FALSE = #
THRIFT_GEN_erl_TRUE = 
THRIFT_GEN_hs_FALSE = #
THRIFT_GEN_hs_TRUE = 
THRIFT_GEN_html_FALSE = #
THRIFT_GEN_html_TRUE = 
THRIFT_GEN_java_FALSE = #
THRIFT_GEN_java_TRUE = 
THRIFT_GEN_javame_FALSE = #
THRIFT_GEN_javame_TRUE = 
THRIFT_GEN_js_FALSE = #
THRIFT_GEN_js_TRUE = 
THRIFT_GEN_ocaml_FALSE = #
THRIFT_GEN_ocaml_TRUE = 
THRIFT_GEN_perl_FALSE = #
THRIFT_GEN_perl_TRUE = 
THRIFT_GEN_php_FALSE = #
THRIFT_GEN_php_TRUE = 
THRIFT_GEN_py_FALSE = #
THRIFT_GEN_py_TRUE = 
THRIFT_GEN_rb_FALSE = #
THRIFT_GEN_rb_TRUE = 
THRIFT_GEN_st_FALSE = #
THRIFT_GEN_st_TRUE = 
THRIFT_GEN_xsd_FALSE = #
THRIFT_GEN_xsd_TRUE = 
TRIAL = 
VERSION = 0.6.1
WITH_CPP_FALSE = #
WITH_CPP_TRUE = 
WITH_C_GLIB_FALSE = 
WITH_C_GLIB_TRUE = #
WITH_ERLANG_FALSE = 
WITH_ERLANG_TRUE = #
WITH_HASKELL_FALSE = 
WITH_HASKELL_TRUE = #
WITH_JAVA_FALSE = #
WITH_JAVA_TRUE = 
WITH_MONO_FALSE = 
WITH_MONO_TRUE = #
WITH_PERL_FALSE = 
WITH_PERL_TRUE = #
WITH_PHP_EXTENSION_FALSE = 
WITH_PHP_EXTENSION_TRUE = #
WITH_PHP_FALSE = 
WITH_PHP_TRUE = #
WITH_PYTHON_FALSE = #
WITH_PYTHON_TRUE = 
WITH_RUBY_FALSE = 
WITH_RUBY_TRUE = #
YACC = bison -y
YFLAGS = 
ZLIB_CPPFLAGS = 
ZLIB_LDFLAGS = 
ZLIB_LIBS = -lz
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = gfortran
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = i686-redhat-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = redhat
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-redhat-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = redhat
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /home/chris/cello/third_party/thrift-0.6.1/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/thrift
pkgpythondir = ${pythondir}/thrift
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib/python2.6/site-packages
pythondir = ${prefix}/lib/python2.6/site-packages
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
subdirs = 
sysconfdir = ${prefix}/etc
target_alias = 
SUBDIRS = . test
pkgconfigdir = $(libdir)/pkgconfig
lib_LTLIBRARIES = libthrift.la $(am__append_1) $(am__append_3)
pkgconfig_DATA = thrift.pc $(am__append_2) $(am__append_4)
AM_CXXFLAGS = -Wall
AM_CPPFLAGS = $(BOOST_CPPFLAGS) -I$(srcdir)/src

# Define the source files for the module
libthrift_la_SOURCES = src/Thrift.cpp \
                       src/TApplicationException.cpp \
                       src/concurrency/Mutex.cpp \
                       src/concurrency/Monitor.cpp \
                       src/concurrency/PosixThreadFactory.cpp \
                       src/concurrency/ThreadManager.cpp \
                       src/concurrency/TimerManager.cpp \
                       src/concurrency/Util.cpp \
                       src/protocol/TDebugProtocol.cpp \
                       src/protocol/TDenseProtocol.cpp \
                       src/protocol/TJSONProtocol.cpp \
                       src/protocol/TBase64Utils.cpp \
                       src/transport/TTransportException.cpp \
                       src/transport/TFDTransport.cpp \
                       src/transport/TFileTransport.cpp \
                       src/transport/TSimpleFileTransport.cpp \
                       src/transport/THttpTransport.cpp \
                       src/transport/THttpClient.cpp \
                       src/transport/THttpServer.cpp \
                       src/transport/TSocket.cpp \
                       src/transport/TSocketPool.cpp \
                       src/transport/TServerSocket.cpp \
                       src/transport/TTransportUtils.cpp \
                       src/transport/TBufferTransports.cpp \
                       src/server/TServer.cpp \
                       src/server/TSimpleServer.cpp \
                       src/server/TThreadPoolServer.cpp \
                       src/server/TThreadedServer.cpp \
											 src/async/TAsyncChannel.cpp \
                       src/processor/PeekProcessor.cpp

libthriftnb_la_SOURCES = src/server/TNonblockingServer.cpp \
                         src/async/TAsyncProtocolProcessor.cpp

libthriftz_la_SOURCES = src/transport/TZlibTransport.cpp

# Flags for the various libraries
libthriftnb_la_CPPFLAGS = $(AM_CPPFLAGS) $(LIBEVENT_CPPFLAGS)
libthriftz_la_CPPFLAGS = $(AM_CPPFLAGS) $(ZLIB_CPPFLAGS)
libthriftnb_la_CXXFLAGS = $(AM_CXXFLAGS)
libthriftz_la_CXXFLAGS = $(AM_CXXFLAGS)
include_thriftdir = $(includedir)/thrift
include_thrift_HEADERS = \
                         $(top_builddir)/config.h \
                         src/Thrift.h \
                         src/TReflectionLocal.h \
                         src/TProcessor.h \
                         src/TApplicationException.h \
                         src/TLogging.h

include_concurrencydir = $(include_thriftdir)/concurrency
include_concurrency_HEADERS = \
                         src/concurrency/Exception.h \
                         src/concurrency/Mutex.h \
                         src/concurrency/Monitor.h \
                         src/concurrency/PosixThreadFactory.h \
                         src/concurrency/Thread.h \
                         src/concurrency/ThreadManager.h \
                         src/concurrency/TimerManager.h \
                         src/concurrency/FunctionRunner.h \
                         src/concurrency/Util.h

include_protocoldir = $(include_thriftdir)/protocol
include_protocol_HEADERS = \
                         src/protocol/TBinaryProtocol.h \
                         src/protocol/TBinaryProtocol.tcc \
                         src/protocol/TCompactProtocol.h \
                         src/protocol/TCompactProtocol.tcc \
                         src/protocol/TDenseProtocol.h \
                         src/protocol/TDebugProtocol.h \
                         src/protocol/TBase64Utils.h \
                         src/protocol/TJSONProtocol.h \
                         src/protocol/TProtocolTap.h \
                         src/protocol/TProtocolException.h \
                         src/protocol/TVirtualProtocol.h \
                         src/protocol/TProtocol.h

include_transportdir = $(include_thriftdir)/transport
include_transport_HEADERS = \
                         src/transport/TFDTransport.h \
                         src/transport/TFileTransport.h \
                         src/transport/TSimpleFileTransport.h \
                         src/transport/TServerSocket.h \
                         src/transport/TServerTransport.h \
                         src/transport/THttpTransport.h \
                         src/transport/THttpClient.h \
                         src/transport/THttpServer.h \
                         src/transport/TSocket.h \
                         src/transport/TSocketPool.h \
                         src/transport/TVirtualTransport.h \
                         src/transport/TTransport.h \
                         src/transport/TTransportException.h \
                         src/transport/TTransportUtils.h \
                         src/transport/TBufferTransports.h \
                         src/transport/TShortReadTransport.h \
                         src/transport/TZlibTransport.h

include_serverdir = $(include_thriftdir)/server
include_server_HEADERS = \
                         src/server/TServer.h \
                         src/server/TSimpleServer.h \
                         src/server/TThreadPoolServer.h \
                         src/server/TThreadedServer.h \
                         src/server/TNonblockingServer.h

include_processordir = $(include_thriftdir)/processor
include_processor_HEADERS = \
                         src/processor/PeekProcessor.h \
                         src/processor/StatsProcessor.h

include_asyncdir = $(include_thriftdir)/async
include_async_HEADERS = \
                     src/async/TAsyncChannel.h \
                     src/async/TAsyncProcessor.h \
                     src/async/TAsyncBufferProcessor.h \
                     src/async/TAsyncProtocolProcessor.h \
                     src/async/TEvhttpClientChannel.h \
                     src/async/TEvhttpServer.h \
                     src/async/SimpleCallback.h

concurrency_test_SOURCES = src/concurrency/test/Tests.cpp \
                           src/concurrency/test/ThreadFactoryTests.h \
                           src/concurrency/test/ThreadManagerTests.h \
                           src/concurrency/test/TimerManagerTests.h

concurrency_test_LDADD = libthrift.la
EXTRA_DIST = \
             README \
             thrift-nb.pc.in \
             thrift.pc.in \
             thrift-z.pc.in

all: all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  lib/cpp/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  lib/cpp/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
thrift-nb.pc: $(top_builddir)/config.status $(srcdir)/thrift-nb.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
thrift-z.pc: $(top_builddir)/config.status $(srcdir)/thrift-z.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
thrift.pc: $(top_builddir)/config.status $(srcdir)/thrift.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libthrift.la: $(libthrift_la_OBJECTS) $(libthrift_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libthrift_la_LDFLAGS) $(libthrift_la_OBJECTS) $(libthrift_la_LIBADD) $(LIBS)
libthriftnb.la: $(libthriftnb_la_OBJECTS) $(libthriftnb_la_DEPENDENCIES) 
	$(CXXLINK) $(am_libthriftnb_la_rpath) $(libthriftnb_la_LDFLAGS) $(libthriftnb_la_OBJECTS) $(libthriftnb_la_LIBADD) $(LIBS)
libthriftz.la: $(libthriftz_la_OBJECTS) $(libthriftz_la_DEPENDENCIES) 
	$(CXXLINK) $(am_libthriftz_la_rpath) $(libthriftz_la_LDFLAGS) $(libthriftz_la_OBJECTS) $(libthriftz_la_LIBADD) $(LIBS)

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
concurrency_test$(EXEEXT): $(concurrency_test_OBJECTS) $(concurrency_test_DEPENDENCIES) 
	@rm -f concurrency_test$(EXEEXT)
	$(CXXLINK) $(concurrency_test_LDFLAGS) $(concurrency_test_OBJECTS) $(concurrency_test_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/Monitor.Plo
include ./$(DEPDIR)/Mutex.Plo
include ./$(DEPDIR)/PeekProcessor.Plo
include ./$(DEPDIR)/PosixThreadFactory.Plo
include ./$(DEPDIR)/TApplicationException.Plo
include ./$(DEPDIR)/TAsyncChannel.Plo
include ./$(DEPDIR)/TBase64Utils.Plo
include ./$(DEPDIR)/TBufferTransports.Plo
include ./$(DEPDIR)/TDebugProtocol.Plo
include ./$(DEPDIR)/TDenseProtocol.Plo
include ./$(DEPDIR)/TFDTransport.Plo
include ./$(DEPDIR)/TFileTransport.Plo
include ./$(DEPDIR)/THttpClient.Plo
include ./$(DEPDIR)/THttpServer.Plo
include ./$(DEPDIR)/THttpTransport.Plo
include ./$(DEPDIR)/TJSONProtocol.Plo
include ./$(DEPDIR)/TServer.Plo
include ./$(DEPDIR)/TServerSocket.Plo
include ./$(DEPDIR)/TSimpleFileTransport.Plo
include ./$(DEPDIR)/TSimpleServer.Plo
include ./$(DEPDIR)/TSocket.Plo
include ./$(DEPDIR)/TSocketPool.Plo
include ./$(DEPDIR)/TThreadPoolServer.Plo
include ./$(DEPDIR)/TThreadedServer.Plo
include ./$(DEPDIR)/TTransportException.Plo
include ./$(DEPDIR)/TTransportUtils.Plo
include ./$(DEPDIR)/Tests.Po
include ./$(DEPDIR)/ThreadManager.Plo
include ./$(DEPDIR)/Thrift.Plo
include ./$(DEPDIR)/TimerManager.Plo
include ./$(DEPDIR)/Util.Plo
include ./$(DEPDIR)/libthriftnb_la-TAsyncProtocolProcessor.Plo
include ./$(DEPDIR)/libthriftnb_la-TNonblockingServer.Plo
include ./$(DEPDIR)/libthriftz_la-TZlibTransport.Plo

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

Thrift.lo: src/Thrift.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Thrift.lo -MD -MP -MF "$(DEPDIR)/Thrift.Tpo" -c -o Thrift.lo `test -f 'src/Thrift.cpp' || echo '$(srcdir)/'`src/Thrift.cpp; \
	then mv -f "$(DEPDIR)/Thrift.Tpo" "$(DEPDIR)/Thrift.Plo"; else rm -f "$(DEPDIR)/Thrift.Tpo"; exit 1; fi
#	source='src/Thrift.cpp' object='Thrift.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thrift.lo `test -f 'src/Thrift.cpp' || echo '$(srcdir)/'`src/Thrift.cpp

TApplicationException.lo: src/TApplicationException.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TApplicationException.lo -MD -MP -MF "$(DEPDIR)/TApplicationException.Tpo" -c -o TApplicationException.lo `test -f 'src/TApplicationException.cpp' || echo '$(srcdir)/'`src/TApplicationException.cpp; \
	then mv -f "$(DEPDIR)/TApplicationException.Tpo" "$(DEPDIR)/TApplicationException.Plo"; else rm -f "$(DEPDIR)/TApplicationException.Tpo"; exit 1; fi
#	source='src/TApplicationException.cpp' object='TApplicationException.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TApplicationException.lo `test -f 'src/TApplicationException.cpp' || echo '$(srcdir)/'`src/TApplicationException.cpp

Mutex.lo: src/concurrency/Mutex.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Mutex.lo -MD -MP -MF "$(DEPDIR)/Mutex.Tpo" -c -o Mutex.lo `test -f 'src/concurrency/Mutex.cpp' || echo '$(srcdir)/'`src/concurrency/Mutex.cpp; \
	then mv -f "$(DEPDIR)/Mutex.Tpo" "$(DEPDIR)/Mutex.Plo"; else rm -f "$(DEPDIR)/Mutex.Tpo"; exit 1; fi
#	source='src/concurrency/Mutex.cpp' object='Mutex.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Mutex.lo `test -f 'src/concurrency/Mutex.cpp' || echo '$(srcdir)/'`src/concurrency/Mutex.cpp

Monitor.lo: src/concurrency/Monitor.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Monitor.lo -MD -MP -MF "$(DEPDIR)/Monitor.Tpo" -c -o Monitor.lo `test -f 'src/concurrency/Monitor.cpp' || echo '$(srcdir)/'`src/concurrency/Monitor.cpp; \
	then mv -f "$(DEPDIR)/Monitor.Tpo" "$(DEPDIR)/Monitor.Plo"; else rm -f "$(DEPDIR)/Monitor.Tpo"; exit 1; fi
#	source='src/concurrency/Monitor.cpp' object='Monitor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Monitor.lo `test -f 'src/concurrency/Monitor.cpp' || echo '$(srcdir)/'`src/concurrency/Monitor.cpp

PosixThreadFactory.lo: src/concurrency/PosixThreadFactory.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PosixThreadFactory.lo -MD -MP -MF "$(DEPDIR)/PosixThreadFactory.Tpo" -c -o PosixThreadFactory.lo `test -f 'src/concurrency/PosixThreadFactory.cpp' || echo '$(srcdir)/'`src/concurrency/PosixThreadFactory.cpp; \
	then mv -f "$(DEPDIR)/PosixThreadFactory.Tpo" "$(DEPDIR)/PosixThreadFactory.Plo"; else rm -f "$(DEPDIR)/PosixThreadFactory.Tpo"; exit 1; fi
#	source='src/concurrency/PosixThreadFactory.cpp' object='PosixThreadFactory.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PosixThreadFactory.lo `test -f 'src/concurrency/PosixThreadFactory.cpp' || echo '$(srcdir)/'`src/concurrency/PosixThreadFactory.cpp

ThreadManager.lo: src/concurrency/ThreadManager.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ThreadManager.lo -MD -MP -MF "$(DEPDIR)/ThreadManager.Tpo" -c -o ThreadManager.lo `test -f 'src/concurrency/ThreadManager.cpp' || echo '$(srcdir)/'`src/concurrency/ThreadManager.cpp; \
	then mv -f "$(DEPDIR)/ThreadManager.Tpo" "$(DEPDIR)/ThreadManager.Plo"; else rm -f "$(DEPDIR)/ThreadManager.Tpo"; exit 1; fi
#	source='src/concurrency/ThreadManager.cpp' object='ThreadManager.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ThreadManager.lo `test -f 'src/concurrency/ThreadManager.cpp' || echo '$(srcdir)/'`src/concurrency/ThreadManager.cpp

TimerManager.lo: src/concurrency/TimerManager.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TimerManager.lo -MD -MP -MF "$(DEPDIR)/TimerManager.Tpo" -c -o TimerManager.lo `test -f 'src/concurrency/TimerManager.cpp' || echo '$(srcdir)/'`src/concurrency/TimerManager.cpp; \
	then mv -f "$(DEPDIR)/TimerManager.Tpo" "$(DEPDIR)/TimerManager.Plo"; else rm -f "$(DEPDIR)/TimerManager.Tpo"; exit 1; fi
#	source='src/concurrency/TimerManager.cpp' object='TimerManager.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TimerManager.lo `test -f 'src/concurrency/TimerManager.cpp' || echo '$(srcdir)/'`src/concurrency/TimerManager.cpp

Util.lo: src/concurrency/Util.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Util.lo -MD -MP -MF "$(DEPDIR)/Util.Tpo" -c -o Util.lo `test -f 'src/concurrency/Util.cpp' || echo '$(srcdir)/'`src/concurrency/Util.cpp; \
	then mv -f "$(DEPDIR)/Util.Tpo" "$(DEPDIR)/Util.Plo"; else rm -f "$(DEPDIR)/Util.Tpo"; exit 1; fi
#	source='src/concurrency/Util.cpp' object='Util.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Util.lo `test -f 'src/concurrency/Util.cpp' || echo '$(srcdir)/'`src/concurrency/Util.cpp

TDebugProtocol.lo: src/protocol/TDebugProtocol.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TDebugProtocol.lo -MD -MP -MF "$(DEPDIR)/TDebugProtocol.Tpo" -c -o TDebugProtocol.lo `test -f 'src/protocol/TDebugProtocol.cpp' || echo '$(srcdir)/'`src/protocol/TDebugProtocol.cpp; \
	then mv -f "$(DEPDIR)/TDebugProtocol.Tpo" "$(DEPDIR)/TDebugProtocol.Plo"; else rm -f "$(DEPDIR)/TDebugProtocol.Tpo"; exit 1; fi
#	source='src/protocol/TDebugProtocol.cpp' object='TDebugProtocol.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TDebugProtocol.lo `test -f 'src/protocol/TDebugProtocol.cpp' || echo '$(srcdir)/'`src/protocol/TDebugProtocol.cpp

TDenseProtocol.lo: src/protocol/TDenseProtocol.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TDenseProtocol.lo -MD -MP -MF "$(DEPDIR)/TDenseProtocol.Tpo" -c -o TDenseProtocol.lo `test -f 'src/protocol/TDenseProtocol.cpp' || echo '$(srcdir)/'`src/protocol/TDenseProtocol.cpp; \
	then mv -f "$(DEPDIR)/TDenseProtocol.Tpo" "$(DEPDIR)/TDenseProtocol.Plo"; else rm -f "$(DEPDIR)/TDenseProtocol.Tpo"; exit 1; fi
#	source='src/protocol/TDenseProtocol.cpp' object='TDenseProtocol.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TDenseProtocol.lo `test -f 'src/protocol/TDenseProtocol.cpp' || echo '$(srcdir)/'`src/protocol/TDenseProtocol.cpp

TJSONProtocol.lo: src/protocol/TJSONProtocol.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TJSONProtocol.lo -MD -MP -MF "$(DEPDIR)/TJSONProtocol.Tpo" -c -o TJSONProtocol.lo `test -f 'src/protocol/TJSONProtocol.cpp' || echo '$(srcdir)/'`src/protocol/TJSONProtocol.cpp; \
	then mv -f "$(DEPDIR)/TJSONProtocol.Tpo" "$(DEPDIR)/TJSONProtocol.Plo"; else rm -f "$(DEPDIR)/TJSONProtocol.Tpo"; exit 1; fi
#	source='src/protocol/TJSONProtocol.cpp' object='TJSONProtocol.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TJSONProtocol.lo `test -f 'src/protocol/TJSONProtocol.cpp' || echo '$(srcdir)/'`src/protocol/TJSONProtocol.cpp

TBase64Utils.lo: src/protocol/TBase64Utils.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TBase64Utils.lo -MD -MP -MF "$(DEPDIR)/TBase64Utils.Tpo" -c -o TBase64Utils.lo `test -f 'src/protocol/TBase64Utils.cpp' || echo '$(srcdir)/'`src/protocol/TBase64Utils.cpp; \
	then mv -f "$(DEPDIR)/TBase64Utils.Tpo" "$(DEPDIR)/TBase64Utils.Plo"; else rm -f "$(DEPDIR)/TBase64Utils.Tpo"; exit 1; fi
#	source='src/protocol/TBase64Utils.cpp' object='TBase64Utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TBase64Utils.lo `test -f 'src/protocol/TBase64Utils.cpp' || echo '$(srcdir)/'`src/protocol/TBase64Utils.cpp

TTransportException.lo: src/transport/TTransportException.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TTransportException.lo -MD -MP -MF "$(DEPDIR)/TTransportException.Tpo" -c -o TTransportException.lo `test -f 'src/transport/TTransportException.cpp' || echo '$(srcdir)/'`src/transport/TTransportException.cpp; \
	then mv -f "$(DEPDIR)/TTransportException.Tpo" "$(DEPDIR)/TTransportException.Plo"; else rm -f "$(DEPDIR)/TTransportException.Tpo"; exit 1; fi
#	source='src/transport/TTransportException.cpp' object='TTransportException.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TTransportException.lo `test -f 'src/transport/TTransportException.cpp' || echo '$(srcdir)/'`src/transport/TTransportException.cpp

TFDTransport.lo: src/transport/TFDTransport.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TFDTransport.lo -MD -MP -MF "$(DEPDIR)/TFDTransport.Tpo" -c -o TFDTransport.lo `test -f 'src/transport/TFDTransport.cpp' || echo '$(srcdir)/'`src/transport/TFDTransport.cpp; \
	then mv -f "$(DEPDIR)/TFDTransport.Tpo" "$(DEPDIR)/TFDTransport.Plo"; else rm -f "$(DEPDIR)/TFDTransport.Tpo"; exit 1; fi
#	source='src/transport/TFDTransport.cpp' object='TFDTransport.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TFDTransport.lo `test -f 'src/transport/TFDTransport.cpp' || echo '$(srcdir)/'`src/transport/TFDTransport.cpp

TFileTransport.lo: src/transport/TFileTransport.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TFileTransport.lo -MD -MP -MF "$(DEPDIR)/TFileTransport.Tpo" -c -o TFileTransport.lo `test -f 'src/transport/TFileTransport.cpp' || echo '$(srcdir)/'`src/transport/TFileTransport.cpp; \
	then mv -f "$(DEPDIR)/TFileTransport.Tpo" "$(DEPDIR)/TFileTransport.Plo"; else rm -f "$(DEPDIR)/TFileTransport.Tpo"; exit 1; fi
#	source='src/transport/TFileTransport.cpp' object='TFileTransport.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TFileTransport.lo `test -f 'src/transport/TFileTransport.cpp' || echo '$(srcdir)/'`src/transport/TFileTransport.cpp

TSimpleFileTransport.lo: src/transport/TSimpleFileTransport.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSimpleFileTransport.lo -MD -MP -MF "$(DEPDIR)/TSimpleFileTransport.Tpo" -c -o TSimpleFileTransport.lo `test -f 'src/transport/TSimpleFileTransport.cpp' || echo '$(srcdir)/'`src/transport/TSimpleFileTransport.cpp; \
	then mv -f "$(DEPDIR)/TSimpleFileTransport.Tpo" "$(DEPDIR)/TSimpleFileTransport.Plo"; else rm -f "$(DEPDIR)/TSimpleFileTransport.Tpo"; exit 1; fi
#	source='src/transport/TSimpleFileTransport.cpp' object='TSimpleFileTransport.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSimpleFileTransport.lo `test -f 'src/transport/TSimpleFileTransport.cpp' || echo '$(srcdir)/'`src/transport/TSimpleFileTransport.cpp

THttpTransport.lo: src/transport/THttpTransport.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT THttpTransport.lo -MD -MP -MF "$(DEPDIR)/THttpTransport.Tpo" -c -o THttpTransport.lo `test -f 'src/transport/THttpTransport.cpp' || echo '$(srcdir)/'`src/transport/THttpTransport.cpp; \
	then mv -f "$(DEPDIR)/THttpTransport.Tpo" "$(DEPDIR)/THttpTransport.Plo"; else rm -f "$(DEPDIR)/THttpTransport.Tpo"; exit 1; fi
#	source='src/transport/THttpTransport.cpp' object='THttpTransport.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o THttpTransport.lo `test -f 'src/transport/THttpTransport.cpp' || echo '$(srcdir)/'`src/transport/THttpTransport.cpp

THttpClient.lo: src/transport/THttpClient.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT THttpClient.lo -MD -MP -MF "$(DEPDIR)/THttpClient.Tpo" -c -o THttpClient.lo `test -f 'src/transport/THttpClient.cpp' || echo '$(srcdir)/'`src/transport/THttpClient.cpp; \
	then mv -f "$(DEPDIR)/THttpClient.Tpo" "$(DEPDIR)/THttpClient.Plo"; else rm -f "$(DEPDIR)/THttpClient.Tpo"; exit 1; fi
#	source='src/transport/THttpClient.cpp' object='THttpClient.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o THttpClient.lo `test -f 'src/transport/THttpClient.cpp' || echo '$(srcdir)/'`src/transport/THttpClient.cpp

THttpServer.lo: src/transport/THttpServer.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT THttpServer.lo -MD -MP -MF "$(DEPDIR)/THttpServer.Tpo" -c -o THttpServer.lo `test -f 'src/transport/THttpServer.cpp' || echo '$(srcdir)/'`src/transport/THttpServer.cpp; \
	then mv -f "$(DEPDIR)/THttpServer.Tpo" "$(DEPDIR)/THttpServer.Plo"; else rm -f "$(DEPDIR)/THttpServer.Tpo"; exit 1; fi
#	source='src/transport/THttpServer.cpp' object='THttpServer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o THttpServer.lo `test -f 'src/transport/THttpServer.cpp' || echo '$(srcdir)/'`src/transport/THttpServer.cpp

TSocket.lo: src/transport/TSocket.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSocket.lo -MD -MP -MF "$(DEPDIR)/TSocket.Tpo" -c -o TSocket.lo `test -f 'src/transport/TSocket.cpp' || echo '$(srcdir)/'`src/transport/TSocket.cpp; \
	then mv -f "$(DEPDIR)/TSocket.Tpo" "$(DEPDIR)/TSocket.Plo"; else rm -f "$(DEPDIR)/TSocket.Tpo"; exit 1; fi
#	source='src/transport/TSocket.cpp' object='TSocket.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSocket.lo `test -f 'src/transport/TSocket.cpp' || echo '$(srcdir)/'`src/transport/TSocket.cpp

TSocketPool.lo: src/transport/TSocketPool.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSocketPool.lo -MD -MP -MF "$(DEPDIR)/TSocketPool.Tpo" -c -o TSocketPool.lo `test -f 'src/transport/TSocketPool.cpp' || echo '$(srcdir)/'`src/transport/TSocketPool.cpp; \
	then mv -f "$(DEPDIR)/TSocketPool.Tpo" "$(DEPDIR)/TSocketPool.Plo"; else rm -f "$(DEPDIR)/TSocketPool.Tpo"; exit 1; fi
#	source='src/transport/TSocketPool.cpp' object='TSocketPool.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSocketPool.lo `test -f 'src/transport/TSocketPool.cpp' || echo '$(srcdir)/'`src/transport/TSocketPool.cpp

TServerSocket.lo: src/transport/TServerSocket.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TServerSocket.lo -MD -MP -MF "$(DEPDIR)/TServerSocket.Tpo" -c -o TServerSocket.lo `test -f 'src/transport/TServerSocket.cpp' || echo '$(srcdir)/'`src/transport/TServerSocket.cpp; \
	then mv -f "$(DEPDIR)/TServerSocket.Tpo" "$(DEPDIR)/TServerSocket.Plo"; else rm -f "$(DEPDIR)/TServerSocket.Tpo"; exit 1; fi
#	source='src/transport/TServerSocket.cpp' object='TServerSocket.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TServerSocket.lo `test -f 'src/transport/TServerSocket.cpp' || echo '$(srcdir)/'`src/transport/TServerSocket.cpp

TTransportUtils.lo: src/transport/TTransportUtils.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TTransportUtils.lo -MD -MP -MF "$(DEPDIR)/TTransportUtils.Tpo" -c -o TTransportUtils.lo `test -f 'src/transport/TTransportUtils.cpp' || echo '$(srcdir)/'`src/transport/TTransportUtils.cpp; \
	then mv -f "$(DEPDIR)/TTransportUtils.Tpo" "$(DEPDIR)/TTransportUtils.Plo"; else rm -f "$(DEPDIR)/TTransportUtils.Tpo"; exit 1; fi
#	source='src/transport/TTransportUtils.cpp' object='TTransportUtils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TTransportUtils.lo `test -f 'src/transport/TTransportUtils.cpp' || echo '$(srcdir)/'`src/transport/TTransportUtils.cpp

TBufferTransports.lo: src/transport/TBufferTransports.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TBufferTransports.lo -MD -MP -MF "$(DEPDIR)/TBufferTransports.Tpo" -c -o TBufferTransports.lo `test -f 'src/transport/TBufferTransports.cpp' || echo '$(srcdir)/'`src/transport/TBufferTransports.cpp; \
	then mv -f "$(DEPDIR)/TBufferTransports.Tpo" "$(DEPDIR)/TBufferTransports.Plo"; else rm -f "$(DEPDIR)/TBufferTransports.Tpo"; exit 1; fi
#	source='src/transport/TBufferTransports.cpp' object='TBufferTransports.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TBufferTransports.lo `test -f 'src/transport/TBufferTransports.cpp' || echo '$(srcdir)/'`src/transport/TBufferTransports.cpp

TServer.lo: src/server/TServer.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TServer.lo -MD -MP -MF "$(DEPDIR)/TServer.Tpo" -c -o TServer.lo `test -f 'src/server/TServer.cpp' || echo '$(srcdir)/'`src/server/TServer.cpp; \
	then mv -f "$(DEPDIR)/TServer.Tpo" "$(DEPDIR)/TServer.Plo"; else rm -f "$(DEPDIR)/TServer.Tpo"; exit 1; fi
#	source='src/server/TServer.cpp' object='TServer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TServer.lo `test -f 'src/server/TServer.cpp' || echo '$(srcdir)/'`src/server/TServer.cpp

TSimpleServer.lo: src/server/TSimpleServer.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSimpleServer.lo -MD -MP -MF "$(DEPDIR)/TSimpleServer.Tpo" -c -o TSimpleServer.lo `test -f 'src/server/TSimpleServer.cpp' || echo '$(srcdir)/'`src/server/TSimpleServer.cpp; \
	then mv -f "$(DEPDIR)/TSimpleServer.Tpo" "$(DEPDIR)/TSimpleServer.Plo"; else rm -f "$(DEPDIR)/TSimpleServer.Tpo"; exit 1; fi
#	source='src/server/TSimpleServer.cpp' object='TSimpleServer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSimpleServer.lo `test -f 'src/server/TSimpleServer.cpp' || echo '$(srcdir)/'`src/server/TSimpleServer.cpp

TThreadPoolServer.lo: src/server/TThreadPoolServer.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TThreadPoolServer.lo -MD -MP -MF "$(DEPDIR)/TThreadPoolServer.Tpo" -c -o TThreadPoolServer.lo `test -f 'src/server/TThreadPoolServer.cpp' || echo '$(srcdir)/'`src/server/TThreadPoolServer.cpp; \
	then mv -f "$(DEPDIR)/TThreadPoolServer.Tpo" "$(DEPDIR)/TThreadPoolServer.Plo"; else rm -f "$(DEPDIR)/TThreadPoolServer.Tpo"; exit 1; fi
#	source='src/server/TThreadPoolServer.cpp' object='TThreadPoolServer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TThreadPoolServer.lo `test -f 'src/server/TThreadPoolServer.cpp' || echo '$(srcdir)/'`src/server/TThreadPoolServer.cpp

TThreadedServer.lo: src/server/TThreadedServer.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TThreadedServer.lo -MD -MP -MF "$(DEPDIR)/TThreadedServer.Tpo" -c -o TThreadedServer.lo `test -f 'src/server/TThreadedServer.cpp' || echo '$(srcdir)/'`src/server/TThreadedServer.cpp; \
	then mv -f "$(DEPDIR)/TThreadedServer.Tpo" "$(DEPDIR)/TThreadedServer.Plo"; else rm -f "$(DEPDIR)/TThreadedServer.Tpo"; exit 1; fi
#	source='src/server/TThreadedServer.cpp' object='TThreadedServer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TThreadedServer.lo `test -f 'src/server/TThreadedServer.cpp' || echo '$(srcdir)/'`src/server/TThreadedServer.cpp

TAsyncChannel.lo: src/async/TAsyncChannel.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TAsyncChannel.lo -MD -MP -MF "$(DEPDIR)/TAsyncChannel.Tpo" -c -o TAsyncChannel.lo `test -f 'src/async/TAsyncChannel.cpp' || echo '$(srcdir)/'`src/async/TAsyncChannel.cpp; \
	then mv -f "$(DEPDIR)/TAsyncChannel.Tpo" "$(DEPDIR)/TAsyncChannel.Plo"; else rm -f "$(DEPDIR)/TAsyncChannel.Tpo"; exit 1; fi
#	source='src/async/TAsyncChannel.cpp' object='TAsyncChannel.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TAsyncChannel.lo `test -f 'src/async/TAsyncChannel.cpp' || echo '$(srcdir)/'`src/async/TAsyncChannel.cpp

PeekProcessor.lo: src/processor/PeekProcessor.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PeekProcessor.lo -MD -MP -MF "$(DEPDIR)/PeekProcessor.Tpo" -c -o PeekProcessor.lo `test -f 'src/processor/PeekProcessor.cpp' || echo '$(srcdir)/'`src/processor/PeekProcessor.cpp; \
	then mv -f "$(DEPDIR)/PeekProcessor.Tpo" "$(DEPDIR)/PeekProcessor.Plo"; else rm -f "$(DEPDIR)/PeekProcessor.Tpo"; exit 1; fi
#	source='src/processor/PeekProcessor.cpp' object='PeekProcessor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PeekProcessor.lo `test -f 'src/processor/PeekProcessor.cpp' || echo '$(srcdir)/'`src/processor/PeekProcessor.cpp

libthriftnb_la-TNonblockingServer.lo: src/server/TNonblockingServer.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libthriftnb_la_CPPFLAGS) $(CPPFLAGS) $(libthriftnb_la_CXXFLAGS) $(CXXFLAGS) -MT libthriftnb_la-TNonblockingServer.lo -MD -MP -MF "$(DEPDIR)/libthriftnb_la-TNonblockingServer.Tpo" -c -o libthriftnb_la-TNonblockingServer.lo `test -f 'src/server/TNonblockingServer.cpp' || echo '$(srcdir)/'`src/server/TNonblockingServer.cpp; \
	then mv -f "$(DEPDIR)/libthriftnb_la-TNonblockingServer.Tpo" "$(DEPDIR)/libthriftnb_la-TNonblockingServer.Plo"; else rm -f "$(DEPDIR)/libthriftnb_la-TNonblockingServer.Tpo"; exit 1; fi
#	source='src/server/TNonblockingServer.cpp' object='libthriftnb_la-TNonblockingServer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libthriftnb_la_CPPFLAGS) $(CPPFLAGS) $(libthriftnb_la_CXXFLAGS) $(CXXFLAGS) -c -o libthriftnb_la-TNonblockingServer.lo `test -f 'src/server/TNonblockingServer.cpp' || echo '$(srcdir)/'`src/server/TNonblockingServer.cpp

libthriftnb_la-TAsyncProtocolProcessor.lo: src/async/TAsyncProtocolProcessor.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libthriftnb_la_CPPFLAGS) $(CPPFLAGS) $(libthriftnb_la_CXXFLAGS) $(CXXFLAGS) -MT libthriftnb_la-TAsyncProtocolProcessor.lo -MD -MP -MF "$(DEPDIR)/libthriftnb_la-TAsyncProtocolProcessor.Tpo" -c -o libthriftnb_la-TAsyncProtocolProcessor.lo `test -f 'src/async/TAsyncProtocolProcessor.cpp' || echo '$(srcdir)/'`src/async/TAsyncProtocolProcessor.cpp; \
	then mv -f "$(DEPDIR)/libthriftnb_la-TAsyncProtocolProcessor.Tpo" "$(DEPDIR)/libthriftnb_la-TAsyncProtocolProcessor.Plo"; else rm -f "$(DEPDIR)/libthriftnb_la-TAsyncProtocolProcessor.Tpo"; exit 1; fi
#	source='src/async/TAsyncProtocolProcessor.cpp' object='libthriftnb_la-TAsyncProtocolProcessor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libthriftnb_la_CPPFLAGS) $(CPPFLAGS) $(libthriftnb_la_CXXFLAGS) $(CXXFLAGS) -c -o libthriftnb_la-TAsyncProtocolProcessor.lo `test -f 'src/async/TAsyncProtocolProcessor.cpp' || echo '$(srcdir)/'`src/async/TAsyncProtocolProcessor.cpp

libthriftz_la-TZlibTransport.lo: src/transport/TZlibTransport.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libthriftz_la_CPPFLAGS) $(CPPFLAGS) $(libthriftz_la_CXXFLAGS) $(CXXFLAGS) -MT libthriftz_la-TZlibTransport.lo -MD -MP -MF "$(DEPDIR)/libthriftz_la-TZlibTransport.Tpo" -c -o libthriftz_la-TZlibTransport.lo `test -f 'src/transport/TZlibTransport.cpp' || echo '$(srcdir)/'`src/transport/TZlibTransport.cpp; \
	then mv -f "$(DEPDIR)/libthriftz_la-TZlibTransport.Tpo" "$(DEPDIR)/libthriftz_la-TZlibTransport.Plo"; else rm -f "$(DEPDIR)/libthriftz_la-TZlibTransport.Tpo"; exit 1; fi
#	source='src/transport/TZlibTransport.cpp' object='libthriftz_la-TZlibTransport.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libthriftz_la_CPPFLAGS) $(CPPFLAGS) $(libthriftz_la_CXXFLAGS) $(CXXFLAGS) -c -o libthriftz_la-TZlibTransport.lo `test -f 'src/transport/TZlibTransport.cpp' || echo '$(srcdir)/'`src/transport/TZlibTransport.cpp

Tests.o: src/concurrency/test/Tests.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Tests.o -MD -MP -MF "$(DEPDIR)/Tests.Tpo" -c -o Tests.o `test -f 'src/concurrency/test/Tests.cpp' || echo '$(srcdir)/'`src/concurrency/test/Tests.cpp; \
	then mv -f "$(DEPDIR)/Tests.Tpo" "$(DEPDIR)/Tests.Po"; else rm -f "$(DEPDIR)/Tests.Tpo"; exit 1; fi
#	source='src/concurrency/test/Tests.cpp' object='Tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Tests.o `test -f 'src/concurrency/test/Tests.cpp' || echo '$(srcdir)/'`src/concurrency/test/Tests.cpp

Tests.obj: src/concurrency/test/Tests.cpp
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Tests.obj -MD -MP -MF "$(DEPDIR)/Tests.Tpo" -c -o Tests.obj `if test -f 'src/concurrency/test/Tests.cpp'; then $(CYGPATH_W) 'src/concurrency/test/Tests.cpp'; else $(CYGPATH_W) '$(srcdir)/src/concurrency/test/Tests.cpp'; fi`; \
	then mv -f "$(DEPDIR)/Tests.Tpo" "$(DEPDIR)/Tests.Po"; else rm -f "$(DEPDIR)/Tests.Tpo"; exit 1; fi
#	source='src/concurrency/test/Tests.cpp' object='Tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Tests.obj `if test -f 'src/concurrency/test/Tests.cpp'; then $(CYGPATH_W) 'src/concurrency/test/Tests.cpp'; else $(CYGPATH_W) '$(srcdir)/src/concurrency/test/Tests.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(pkgconfigdir)" || $(mkdir_p) "$(DESTDIR)$(pkgconfigdir)"
	@list='$(pkgconfig_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(pkgconfigDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(pkgconfigdir)/$$f'"; \
	  $(pkgconfigDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(pkgconfigdir)/$$f"; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(pkgconfigdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(pkgconfigdir)/$$f"; \
	done
install-include_asyncHEADERS: $(include_async_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(include_asyncdir)" || $(mkdir_p) "$(DESTDIR)$(include_asyncdir)"
	@list='$(include_async_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(include_asyncHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(include_asyncdir)/$$f'"; \
	  $(include_asyncHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(include_asyncdir)/$$f"; \
	done

uninstall-include_asyncHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_async_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(include_asyncdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(include_asyncdir)/$$f"; \
	done
install-include_concurrencyHEADERS: $(include_concurrency_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(include_concurrencydir)" || $(mkdir_p) "$(DESTDIR)$(include_concurrencydir)"
	@list='$(include_concurrency_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(include_concurrencyHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(include_concurrencydir)/$$f'"; \
	  $(include_concurrencyHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(include_concurrencydir)/$$f"; \
	done

uninstall-include_concurrencyHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_concurrency_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(include_concurrencydir)/$$f'"; \
	  rm -f "$(DESTDIR)$(include_concurrencydir)/$$f"; \
	done
install-include_processorHEADERS: $(include_processor_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(include_processordir)" || $(mkdir_p) "$(DESTDIR)$(include_processordir)"
	@list='$(include_processor_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(include_processorHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(include_processordir)/$$f'"; \
	  $(include_processorHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(include_processordir)/$$f"; \
	done

uninstall-include_processorHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_processor_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(include_processordir)/$$f'"; \
	  rm -f "$(DESTDIR)$(include_processordir)/$$f"; \
	done
install-include_protocolHEADERS: $(include_protocol_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(include_protocoldir)" || $(mkdir_p) "$(DESTDIR)$(include_protocoldir)"
	@list='$(include_protocol_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(include_protocolHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(include_protocoldir)/$$f'"; \
	  $(include_protocolHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(include_protocoldir)/$$f"; \
	done

uninstall-include_protocolHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_protocol_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(include_protocoldir)/$$f'"; \
	  rm -f "$(DESTDIR)$(include_protocoldir)/$$f"; \
	done
install-include_serverHEADERS: $(include_server_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(include_serverdir)" || $(mkdir_p) "$(DESTDIR)$(include_serverdir)"
	@list='$(include_server_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(include_serverHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(include_serverdir)/$$f'"; \
	  $(include_serverHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(include_serverdir)/$$f"; \
	done

uninstall-include_serverHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_server_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(include_serverdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(include_serverdir)/$$f"; \
	done
install-include_thriftHEADERS: $(include_thrift_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(include_thriftdir)" || $(mkdir_p) "$(DESTDIR)$(include_thriftdir)"
	@list='$(include_thrift_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(include_thriftHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(include_thriftdir)/$$f'"; \
	  $(include_thriftHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(include_thriftdir)/$$f"; \
	done

uninstall-include_thriftHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_thrift_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(include_thriftdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(include_thriftdir)/$$f"; \
	done
install-include_transportHEADERS: $(include_transport_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(include_transportdir)" || $(mkdir_p) "$(DESTDIR)$(include_transportdir)"
	@list='$(include_transport_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(include_transportHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(include_transportdir)/$$f'"; \
	  $(include_transportHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(include_transportdir)/$$f"; \
	done

uninstall-include_transportHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_transport_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(include_transportdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(include_transportdir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/$(top_builddir) $(distdir)/src $(distdir)/src/async $(distdir)/src/concurrency $(distdir)/src/processor $(distdir)/src/protocol $(distdir)/src/server $(distdir)/src/transport
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(DATA) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(include_asyncdir)" "$(DESTDIR)$(include_concurrencydir)" "$(DESTDIR)$(include_processordir)" "$(DESTDIR)$(include_protocoldir)" "$(DESTDIR)$(include_serverdir)" "$(DESTDIR)$(include_thriftdir)" "$(DESTDIR)$(include_transportdir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am: install-include_asyncHEADERS \
	install-include_concurrencyHEADERS \
	install-include_processorHEADERS \
	install-include_protocolHEADERS install-include_serverHEADERS \
	install-include_thriftHEADERS install-include_transportHEADERS \
	install-pkgconfigDATA

install-exec-am: install-libLTLIBRARIES

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-include_asyncHEADERS \
	uninstall-include_concurrencyHEADERS \
	uninstall-include_processorHEADERS \
	uninstall-include_protocolHEADERS \
	uninstall-include_serverHEADERS \
	uninstall-include_thriftHEADERS \
	uninstall-include_transportHEADERS uninstall-info-am \
	uninstall-libLTLIBRARIES uninstall-pkgconfigDATA

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	clean clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstPROGRAMS clean-recursive ctags ctags-recursive \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-recursive distclean-tags distdir \
	dvi dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-exec install-exec-am \
	install-include_asyncHEADERS \
	install-include_concurrencyHEADERS \
	install-include_processorHEADERS \
	install-include_protocolHEADERS install-include_serverHEADERS \
	install-include_thriftHEADERS install-include_transportHEADERS \
	install-info install-info-am install-libLTLIBRARIES \
	install-man install-pkgconfigDATA install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic maintainer-clean-recursive \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool mostlyclean-recursive pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am \
	uninstall-include_asyncHEADERS \
	uninstall-include_concurrencyHEADERS \
	uninstall-include_processorHEADERS \
	uninstall-include_protocolHEADERS \
	uninstall-include_serverHEADERS \
	uninstall-include_thriftHEADERS \
	uninstall-include_transportHEADERS uninstall-info-am \
	uninstall-libLTLIBRARIES uninstall-pkgconfigDATA

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
