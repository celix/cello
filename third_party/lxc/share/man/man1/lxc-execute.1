.\\" auto-generated by docbook2man-spec $Revision: 1.2 $
.TH "LXC-EXECUTE" "1" "Wed Aug 31 21:48:43 CST 2011" "" ""
.SH NAME
lxc-execute \- run an application inside a container.
.SH SYNOPSIS
.sp
\fBlxc-execute \fI-n name\fB
[-f config_file] [-s KEY=VAL
]
[--]
\fIcommand\fB\fR
.SH "DESCRIPTION"
.PP
\fBlxc-execute\fR runs the specified
\fIcommand\fR inside the container
specified by \fIname\fR\&.
.PP
It will setup the container
according to the configuration previously defined with the
lxc-create command or with the configuration file parameter.
If no configuration is
defined, the default isolation is used.
.PP
This command is mainly used when you want to quickly launch an
application in an isolated environment.
.PP
\fBlxc-execute\fR command will run the
specified command into the container via an intermediate
process, \fBlxc-init\fR\&.
This lxc-init after launching the specified command,
will wait for its end and all other reparented processes.
(that allows to support daemons in the container).
In other words, in the
container, \fBlxc-init\fR has the pid 1 and the
first process of the application has the pid 2.
.PP
The above \fBlxc-init\fR is designed to forward received
signals to the started command.
So \fBlxc-kill\fR (1) sent signal is received
by the user specified command (pid 2 in the container).
.SH "OPTIONS"
.TP
\fB-f, --rcfile \fIconfig_file\fB\fR
Specify the configuration file to configure the virtualization
and isolation functionalities for the container.

This configuration file if present will be used even if there is
already a configuration file present in the previously created
container (via lxc-create).
.TP
\fB-s, --define \fIKEY=VAL\fB\fR
Assign value \fIVAL\fR to configuration
variable \fIKEY\fR\&. This overrides any
assignment done in \fIconfig_file\fR\&.
.TP
\fB--\fR
Signal the end of options and disables further option
processing. Any arguments after the -- are treated as
arguments.

This option is useful when you want to execute, with the
command \fBlxc-execute\fR, a command line
with its own options.
.SH "COMMON OPTIONS"
.PP
These options are common to most of lxc commands.
.TP
\fB-?, -h, --help\fR
Print a longer usage message than normal.
.TP
\fB--usage\fR
Give the usage message
.TP
\fB-q, --quiet\fR
mute on
.TP
\fB-o, --logfile=\fIFILE\fB\fR
Output to an alternate log
\fIFILE\fR\&. The default is no log.
.TP
\fB-l, --logpriority=\fILEVEL\fB\fR
Set log priority to
\fILEVEL\fR\&. The default log
priority is ERROR\&. Possible values are :
FATAL, CRIT,
WARN, ERROR,
NOTICE, INFO,
DEBUG\&.

Note that this option is setting the priority of the events
log in the alternate log file. It do not have effect on the
ERROR events log on stderr.
.TP
\fB-n, --name=\fINAME\fB\fR
Use container identifier \fINAME\fR\&.
The container identifier format is an alphanumeric string.
.SH "DIAGNOSTIC"
.TP
\fBThe container is busy\fR
The specified container is already running an
application. You should stop it before reuse this
container or create a new one.
.SH "SEE ALSO"
.PP
\fBlxc\fR(1),
\fBlxc-create\fR(1),
\fBlxc-destroy\fR(1),
\fBlxc-start\fR(1),
\fBlxc-stop\fR(1),
\fBlxc-execute\fR(1),
\fBlxc-kill\fR(1),
\fBlxc-console\fR(1),
\fBlxc-monitor\fR(1),
\fBlxc-wait\fR(1),
\fBlxc-cgroup\fR(1),
\fBlxc-ls\fR(1),
\fBlxc-ps\fR(1),
\fBlxc-info\fR(1),
\fBlxc-freeze\fR(1),
\fBlxc-unfreeze\fR(1),
\fBlxc.conf\fR(5)
.SH "AUTHOR"
.PP
Daniel Lezcano <daniel.lezcano@free.fr>
