!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.5.4	//
ACTION_APPEND_AS_CHILDREN	include/xercesc/dom/DOMLSParser.hpp	/^        ACTION_APPEND_AS_CHILDREN = 1,$/;"	e	enum:DOMLSParser::ActionType
ACTION_INSERT_AFTER	include/xercesc/dom/DOMLSParser.hpp	/^        ACTION_INSERT_AFTER       = 4,$/;"	e	enum:DOMLSParser::ActionType
ACTION_INSERT_BEFORE	include/xercesc/dom/DOMLSParser.hpp	/^        ACTION_INSERT_BEFORE      = 3,$/;"	e	enum:DOMLSParser::ActionType
ACTION_REPLACE	include/xercesc/dom/DOMLSParser.hpp	/^        ACTION_REPLACE            = 5$/;"	e	enum:DOMLSParser::ActionType
ACTION_REPLACE_CHILDREN	include/xercesc/dom/DOMLSParser.hpp	/^        ACTION_REPLACE_CHILDREN   = 2,$/;"	e	enum:DOMLSParser::ActionType
AFTER	include/xercesc/dom/impl/DOMRangeImpl.hpp	/^        AFTER   = 1$/;"	e	enum:DOMRangeImpl::TraversePoint
ANNOTATION	include/xercesc/framework/psvi/XSConstants.hpp	/^	      ANNOTATION                = 12,$/;"	e	enum:XSConstants::COMPONENT_TYPE
ANNOTATION_TARGET	include/xercesc/framework/psvi/XSAnnotation.hpp	/^    enum ANNOTATION_TARGET {$/;"	g	class:XSAnnotation
ANY_TYPE	include/xercesc/dom/DOMXPathResult.hpp	/^                ANY_TYPE = 0,$/;"	e	enum:DOMXPathResult::ResultType
ANY_UNORDERED_NODE_TYPE	include/xercesc/dom/DOMXPathResult.hpp	/^                ANY_UNORDERED_NODE_TYPE = 8,$/;"	e	enum:DOMXPathResult::ResultType
ASCIIRangeFactory	include/xercesc/util/regx/ASCIIRangeFactory.hpp	/^class XMLUTIL_EXPORT ASCIIRangeFactory: public RangeFactory {$/;"	c
ASSESSMENT_TYPE	include/xercesc/framework/psvi/PSVIItem.hpp	/^    enum ASSESSMENT_TYPE {$/;"	g	class:PSVIItem
ATTRIBUTE_DECLARATION	include/xercesc/framework/psvi/XSConstants.hpp	/^	      ATTRIBUTE_DECLARATION     = 1,$/;"	e	enum:XSConstants::COMPONENT_TYPE
ATTRIBUTE_GROUP_DEFINITION	include/xercesc/framework/psvi/XSConstants.hpp	/^	      ATTRIBUTE_GROUP_DEFINITION= 5,$/;"	e	enum:XSConstants::COMPONENT_TYPE
ATTRIBUTE_NODE	include/xercesc/dom/DOMNode.hpp	/^        ATTRIBUTE_NODE              = 2,$/;"	e	enum:DOMNode::NodeType
ATTRIBUTE_USE	include/xercesc/framework/psvi/XSConstants.hpp	/^	      ATTRIBUTE_USE             = 4,$/;"	e	enum:XSConstants::COMPONENT_TYPE
ATTR_NS_OBJECT	include/xercesc/dom/DOMMemoryManager.hpp	/^        ATTR_NS_OBJECT                = 1,$/;"	e	enum:DOMMemoryManager::NodeObjectType
ATTR_OBJECT	include/xercesc/dom/DOMMemoryManager.hpp	/^        ATTR_OBJECT                   = 0,$/;"	e	enum:DOMMemoryManager::NodeObjectType
A_Abstract	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        A_Abstract,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
A_AttributeFormDefault	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        A_AttributeFormDefault,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
A_Base	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        A_Base,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
A_Block	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        A_Block,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
A_BlockDefault	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        A_BlockDefault,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
A_Count	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        A_Count,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
A_Default	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        A_Default,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
A_ElementFormDefault	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        A_ElementFormDefault,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
A_Final	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        A_Final,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
A_FinalDefault	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        A_FinalDefault,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
A_Fixed	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        A_Fixed,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
A_Form	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        A_Form,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
A_ID	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        A_ID,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
A_Invalid	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        A_Invalid = -1$/;"	e	enum:GeneralAttributeCheck::<anonymous>
A_ItemType	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        A_ItemType,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
A_MaxOccurs	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        A_MaxOccurs,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
A_MemberTypes	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        A_MemberTypes,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
A_MinOccurs	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        A_MinOccurs,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
A_Mixed	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        A_Mixed,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
A_Name	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        A_Name,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
A_Namespace	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        A_Namespace,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
A_Nillable	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        A_Nillable,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
A_ProcessContents	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        A_ProcessContents,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
A_Public	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        A_Public,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
A_Ref	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        A_Ref,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
A_Refer	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        A_Refer,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
A_SchemaLocation	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        A_SchemaLocation,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
A_Source	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        A_Source,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
A_SubstitutionGroup	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        A_SubstitutionGroup,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
A_System	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        A_System,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
A_TargetNamespace	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        A_TargetNamespace,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
A_Type	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        A_Type,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
A_Use	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        A_Use,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
A_Value	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        A_Value,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
A_Version	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        A_Version,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
A_XPath	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        A_XPath,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
AbstractDOMParser	include/xercesc/parsers/AbstractDOMParser.hpp	/^class PARSERS_EXPORT AbstractDOMParser :$/;"	c
AbstractNumericFacetValidator	include/xercesc/validators/datatype/AbstractNumericFacetValidator.hpp	/^class VALIDATORS_EXPORT AbstractNumericFacetValidator : public DatatypeValidator$/;"	c
AbstractNumericValidator	include/xercesc/validators/datatype/AbstractNumericValidator.hpp	/^class VALIDATORS_EXPORT AbstractNumericValidator : public AbstractNumericFacetValidator$/;"	c
AbstractStringValidator	include/xercesc/validators/datatype/AbstractStringValidator.hpp	/^class VALIDATORS_EXPORT AbstractStringValidator : public DatatypeValidator$/;"	c
ActionType	include/xercesc/dom/DOMLSParser.hpp	/^    enum ActionType$/;"	g	class:DOMLSParser
All	include/xercesc/validators/common/ContentSpecNode.hpp	/^        , All = 9$/;"	e	enum:ContentSpecNode::NodeTypes
AllCharData	include/xercesc/framework/XMLElementDecl.hpp	/^        , AllCharData$/;"	e	enum:XMLElementDecl::CharDataOpts
AllContentError	include/xercesc/framework/XMLErrorCodes.hpp	/^      , AllContentError                    = 118$/;"	e	enum:XMLErrs::Codes
AllContentLimited	include/xercesc/framework/XMLErrorCodes.hpp	/^      , AllContentLimited                  = 104$/;"	e	enum:XMLErrs::Codes
AllContentModel	include/xercesc/validators/common/AllContentModel.hpp	/^class AllContentModel : public XMLContentModel$/;"	c
All_Element	include/xercesc/validators/schema/TraverseSchema.hpp	/^        , All_Element = 1$/;"	e	enum:TraverseSchema::<anonymous>
All_Group	include/xercesc/validators/schema/TraverseSchema.hpp	/^        , All_Group = 4$/;"	e	enum:TraverseSchema::<anonymous>
AnnotationError	include/xercesc/framework/XMLErrorCodes.hpp	/^      , AnnotationError                    = 61$/;"	e	enum:XMLErrs::Codes
AnonComplexTypeWithName	include/xercesc/framework/XMLErrorCodes.hpp	/^      , AnonComplexTypeWithName            = 20$/;"	e	enum:XMLErrs::Codes
AnonSimpleTypeWithName	include/xercesc/framework/XMLErrorCodes.hpp	/^      , AnonSimpleTypeWithName             = 21$/;"	e	enum:XMLErrs::Codes
Any	include/xercesc/validators/DTD/DTDElementDecl.hpp	/^        , Any$/;"	e	enum:DTDElementDecl::ModelTypes
Any	include/xercesc/validators/common/ContentSpecNode.hpp	/^        , Any$/;"	e	enum:ContentSpecNode::NodeTypes
Any	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^        , Any$/;"	e	enum:SchemaElementDecl::ModelTypes
AnyAttributeBeforeAttribute	include/xercesc/framework/XMLErrorCodes.hpp	/^      , AnyAttributeBeforeAttribute        = 153$/;"	e	enum:XMLErrs::Codes
AnyAttributeContentError	include/xercesc/framework/XMLErrorCodes.hpp	/^      , AnyAttributeContentError           = 84$/;"	e	enum:XMLErrs::Codes
AnySimpleType	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        AnySimpleType,$/;"	e	enum:DatatypeValidator::ValidatorType
AnySimpleTypeDatatypeValidator	include/xercesc/validators/datatype/AnySimpleTypeDatatypeValidator.hpp	/^class VALIDATORS_EXPORT AnySimpleTypeDatatypeValidator : public DatatypeValidator$/;"	c
AnyURI	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        AnyURI,$/;"	e	enum:DatatypeValidator::ValidatorType
AnyURIDatatypeValidator	include/xercesc/validators/datatype/AnyURIDatatypeValidator.hpp	/^class VALIDATORS_EXPORT AnyURIDatatypeValidator : public AbstractStringValidator$/;"	c
Any_Any	include/xercesc/framework/XMLAttDef.hpp	/^        , Any_Any           = 11$/;"	e	enum:XMLAttDef::AttTypes
Any_Lax	include/xercesc/validators/common/ContentSpecNode.hpp	/^        , Any_Lax = 22                  \/\/ 16 + 6 (Any)$/;"	e	enum:ContentSpecNode::NodeTypes
Any_List	include/xercesc/framework/XMLAttDef.hpp	/^        , Any_List          = 13$/;"	e	enum:XMLAttDef::AttTypes
Any_NS	include/xercesc/validators/common/ContentSpecNode.hpp	/^        , Any_NS = 8$/;"	e	enum:ContentSpecNode::NodeTypes
Any_NS_Choice	include/xercesc/validators/common/ContentSpecNode.hpp	/^        , Any_NS_Choice = 20            \/\/ 16 + 4 (Choice)$/;"	e	enum:ContentSpecNode::NodeTypes
Any_NS_Lax	include/xercesc/validators/common/ContentSpecNode.hpp	/^        , Any_NS_Lax = 24               \/\/ 16 + 8 (Any_NS)$/;"	e	enum:ContentSpecNode::NodeTypes
Any_NS_Skip	include/xercesc/validators/common/ContentSpecNode.hpp	/^        , Any_NS_Skip = 40              \/\/ 32 + 8 (Any_NS)$/;"	e	enum:ContentSpecNode::NodeTypes
Any_Other	include/xercesc/framework/XMLAttDef.hpp	/^        , Any_Other         = 12$/;"	e	enum:XMLAttDef::AttTypes
Any_Other	include/xercesc/validators/common/ContentSpecNode.hpp	/^        , Any_Other$/;"	e	enum:ContentSpecNode::NodeTypes
Any_Other_Lax	include/xercesc/validators/common/ContentSpecNode.hpp	/^        , Any_Other_Lax = 23            \/\/ 16 + 7 (Any_Other)$/;"	e	enum:ContentSpecNode::NodeTypes
Any_Other_Skip	include/xercesc/validators/common/ContentSpecNode.hpp	/^        , Any_Other_Skip = 39           \/\/ 32 + 7 (Any_Other)$/;"	e	enum:ContentSpecNode::NodeTypes
Any_Skip	include/xercesc/validators/common/ContentSpecNode.hpp	/^        , Any_Skip = 38                 \/\/ 32 + 6 (Any)$/;"	e	enum:ContentSpecNode::NodeTypes
ArrayJanitor	include/xercesc/util/Janitor.c	/^ArrayJanitor<T>::ArrayJanitor(T* const toDelete,$/;"	f	class:T
ArrayJanitor	include/xercesc/util/Janitor.c	/^template <class T> ArrayJanitor<T>::ArrayJanitor(T* const toDelete) :$/;"	f	class:T
ArrayJanitor	include/xercesc/util/Janitor.hpp	/^template <class T> class ArrayJanitor : public XMemory$/;"	c
Array_BadIndex	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Array_BadIndex                     = 5$/;"	e	enum:XMLExcepts::Codes
Array_BadNewSize	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Array_BadNewSize                   = 6$/;"	e	enum:XMLExcepts::Codes
AsRootElem	include/xercesc/framework/XMLElementDecl.hpp	/^        , AsRootElem$/;"	e	enum:XMLElementDecl::CreateReasons
Assert	include/xercesc/internal/XSerializeEngine.hpp	/^inline void XSerializeEngine::Assert(bool toEval$/;"	f	class:XSerializeEngine
AtomicItemType	include/xercesc/framework/XMLErrorCodes.hpp	/^      , AtomicItemType                     = 99$/;"	e	enum:XMLErrs::Codes
AttDeclPropCorrect3	include/xercesc/framework/XMLErrorCodes.hpp	/^      , AttDeclPropCorrect3                = 136$/;"	e	enum:XMLErrs::Codes
AttDeclPropCorrect5	include/xercesc/framework/XMLErrorCodes.hpp	/^      , AttDeclPropCorrect5                = 137$/;"	e	enum:XMLErrs::Codes
AttDef_BadAttType	include/xercesc/util/XMLExceptMsgs.hpp	/^      , AttDef_BadAttType                  = 8$/;"	e	enum:XMLExcepts::Codes
AttDef_BadDefAttType	include/xercesc/util/XMLExceptMsgs.hpp	/^      , AttDef_BadDefAttType               = 9$/;"	e	enum:XMLExcepts::Codes
AttGroupContentError	include/xercesc/framework/XMLErrorCodes.hpp	/^      , AttGroupContentError               = 101$/;"	e	enum:XMLErrs::Codes
AttGrpPropCorrect3	include/xercesc/framework/XMLErrorCodes.hpp	/^      , AttGrpPropCorrect3                 = 138$/;"	e	enum:XMLErrs::Codes
AttList	include/xercesc/framework/XMLElementDecl.hpp	/^        , AttList$/;"	e	enum:XMLElementDecl::CreateReasons
AttListAlreadyExists	include/xercesc/framework/XMLErrorCodes.hpp	/^      , AttListAlreadyExists               = 3$/;"	e	enum:XMLErrs::Codes
AttNotDefined	include/xercesc/framework/XMLValidityCodes.hpp	/^      , AttNotDefined                      = 3$/;"	e	enum:XMLValid::Codes
AttNotDefinedForElement	include/xercesc/framework/XMLValidityCodes.hpp	/^      , AttNotDefinedForElement            = 17$/;"	e	enum:XMLValid::Codes
AttTypes	include/xercesc/framework/XMLAttDef.hpp	/^	enum AttTypes$/;"	g	class:XMLAttDef
AttTypes_Count	include/xercesc/framework/XMLAttDef.hpp	/^        , AttTypes_Count$/;"	e	enum:XMLAttDef::AttTypes
AttTypes_Max	include/xercesc/framework/XMLAttDef.hpp	/^        , AttTypes_Max      = 13$/;"	e	enum:XMLAttDef::AttTypes
AttTypes_Min	include/xercesc/framework/XMLAttDef.hpp	/^        , AttTypes_Min      = 0$/;"	e	enum:XMLAttDef::AttTypes
AttTypes_Unknown	include/xercesc/framework/XMLAttDef.hpp	/^        , AttTypes_Unknown  = -1$/;"	e	enum:XMLAttDef::AttTypes
AttUseCorrect	include/xercesc/framework/XMLErrorCodes.hpp	/^      , AttUseCorrect                      = 135$/;"	e	enum:XMLErrs::Codes
Att_Mask	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        Att_Mask = 3$/;"	e	enum:GeneralAttributeCheck::<anonymous>
Att_Optional	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        Att_Optional = 2,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
Att_Required	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        Att_Required = 1,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
AttrAlreadyUsedInSTag	include/xercesc/framework/XMLErrorCodes.hpp	/^      , AttrAlreadyUsedInSTag              = 221$/;"	e	enum:XMLErrs::Codes
AttrDupToken	include/xercesc/framework/XMLValidityCodes.hpp	/^      , AttrDupToken                       = 77$/;"	e	enum:XMLValid::Codes
AttrEscapes	include/xercesc/framework/XMLFormatter.hpp	/^        , AttrEscapes$/;"	e	enum:XMLFormatter::EscapeFlags
AttrList_BadIndex	include/xercesc/util/XMLExceptMsgs.hpp	/^      , AttrList_BadIndex                  = 7$/;"	e	enum:XMLExcepts::Codes
AttrValNotName	include/xercesc/framework/XMLValidityCodes.hpp	/^      , AttrValNotName                     = 24$/;"	e	enum:XMLValid::Codes
Attr_Def_Qualified	include/xercesc/validators/schema/TraverseSchema.hpp	/^        Attr_Def_Qualified = 2$/;"	e	enum:TraverseSchema::<anonymous>
AttributeDefaultFixedValue	include/xercesc/framework/XMLErrorCodes.hpp	/^      , AttributeDefaultFixedValue         = 47$/;"	e	enum:XMLErrs::Codes
AttributeDisallowedGlobal	include/xercesc/framework/XMLErrorCodes.hpp	/^      , AttributeDisallowedGlobal          = 81$/;"	e	enum:XMLErrs::Codes
AttributeDisallowedLocal	include/xercesc/framework/XMLErrorCodes.hpp	/^      , AttributeDisallowedLocal           = 82$/;"	e	enum:XMLErrs::Codes
AttributeList	include/xercesc/sax/AttributeList.hpp	/^    AttributeList()$/;"	f	class:AttributeList
AttributeList	include/xercesc/sax/AttributeList.hpp	/^class SAX_EXPORT AttributeList$/;"	c
AttributeNotQualified	include/xercesc/framework/XMLValidityCodes.hpp	/^      , AttributeNotQualified              = 62$/;"	e	enum:XMLValid::Codes
AttributeNotUnQualified	include/xercesc/framework/XMLValidityCodes.hpp	/^      , AttributeNotUnQualified            = 63$/;"	e	enum:XMLValid::Codes
AttributeRefContentError	include/xercesc/framework/XMLErrorCodes.hpp	/^      , AttributeRefContentError           = 69$/;"	e	enum:XMLErrs::Codes
AttributeRequiredGlobal	include/xercesc/framework/XMLErrorCodes.hpp	/^      , AttributeRequiredGlobal            = 79$/;"	e	enum:XMLErrs::Codes
AttributeRequiredLocal	include/xercesc/framework/XMLErrorCodes.hpp	/^      , AttributeRequiredLocal             = 80$/;"	e	enum:XMLErrs::Codes
AttributeSimpleTypeNotFound	include/xercesc/framework/XMLErrorCodes.hpp	/^      , AttributeSimpleTypeNotFound        = 51$/;"	e	enum:XMLErrs::Codes
AttributeWithTypeAndSimpleType	include/xercesc/framework/XMLErrorCodes.hpp	/^      , AttributeWithTypeAndSimpleType     = 50$/;"	e	enum:XMLErrs::Codes
Attributes	include/xercesc/sax2/Attributes.hpp	/^    Attributes()$/;"	f	class:Attributes
Attributes	include/xercesc/sax2/Attributes.hpp	/^class SAX2_EXPORT Attributes$/;"	c
AxisType	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    enum AxisType { \/\/ Axis type$/;"	g	class:XercesStep
AxisType_ATTRIBUTE	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        AxisType_ATTRIBUTE = 2,$/;"	e	enum:XercesStep::AxisType
AxisType_CHILD	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        AxisType_CHILD = 1,$/;"	e	enum:XercesStep::AxisType
AxisType_DESCENDANT	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        AxisType_DESCENDANT = 4,$/;"	e	enum:XercesStep::AxisType
AxisType_SELF	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        AxisType_SELF = 3,$/;"	e	enum:XercesStep::AxisType
AxisType_UNKNOWN	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        AxisType_UNKNOWN$/;"	e	enum:XercesStep::AxisType
BAD_BOUNDARYPOINTS_ERR	include/xercesc/dom/DOMRangeException.hpp	/^                BAD_BOUNDARYPOINTS_ERR  = 111,$/;"	e	enum:DOMRangeException::RangeExceptionCode
BAD_BOUNDARYPOINTS_ERR	include/xercesc/util/XMLDOMMsg.hpp	/^      , BAD_BOUNDARYPOINTS_ERR             = 21$/;"	e	enum:XMLDOMMsg::Codes
BEFORE	include/xercesc/dom/impl/DOMRangeImpl.hpp	/^        BEFORE  = -1,$/;"	e	enum:DOMRangeImpl::TraversePoint
BMPattern	include/xercesc/util/regx/BMPattern.hpp	/^class XMLUTIL_EXPORT BMPattern : public XMemory$/;"	c
BOOLEAN_TYPE	include/xercesc/dom/DOMXPathResult.hpp	/^                BOOLEAN_TYPE = 3,$/;"	e	enum:DOMXPathResult::ResultType
BadAttDerivation_1	include/xercesc/framework/XMLErrorCodes.hpp	/^      , BadAttDerivation_1                 = 109$/;"	e	enum:XMLErrs::Codes
BadAttDerivation_2	include/xercesc/framework/XMLErrorCodes.hpp	/^      , BadAttDerivation_2                 = 110$/;"	e	enum:XMLErrs::Codes
BadAttDerivation_3	include/xercesc/framework/XMLErrorCodes.hpp	/^      , BadAttDerivation_3                 = 111$/;"	e	enum:XMLErrs::Codes
BadAttDerivation_4	include/xercesc/framework/XMLErrorCodes.hpp	/^      , BadAttDerivation_4                 = 112$/;"	e	enum:XMLErrs::Codes
BadAttDerivation_5	include/xercesc/framework/XMLErrorCodes.hpp	/^      , BadAttDerivation_5                 = 113$/;"	e	enum:XMLErrs::Codes
BadAttDerivation_6	include/xercesc/framework/XMLErrorCodes.hpp	/^      , BadAttDerivation_6                 = 114$/;"	e	enum:XMLErrs::Codes
BadAttDerivation_7	include/xercesc/framework/XMLErrorCodes.hpp	/^      , BadAttDerivation_7                 = 115$/;"	e	enum:XMLErrs::Codes
BadAttDerivation_8	include/xercesc/framework/XMLErrorCodes.hpp	/^      , BadAttDerivation_8                 = 116$/;"	e	enum:XMLErrs::Codes
BadAttDerivation_9	include/xercesc/framework/XMLErrorCodes.hpp	/^      , BadAttDerivation_9                 = 117$/;"	e	enum:XMLErrs::Codes
BadDigitForRadix	include/xercesc/framework/XMLErrorCodes.hpp	/^      , BadDigitForRadix                   = 245$/;"	e	enum:XMLErrs::Codes
BadEntityRefAttr	include/xercesc/framework/XMLValidityCodes.hpp	/^      , BadEntityRefAttr                   = 18$/;"	e	enum:XMLValid::Codes
BadIDAttrDefType	include/xercesc/framework/XMLValidityCodes.hpp	/^      , BadIDAttrDefType                   = 8$/;"	e	enum:XMLValid::Codes
BadMinMaxAllCT	include/xercesc/framework/XMLErrorCodes.hpp	/^      , BadMinMaxAllCT                     = 105$/;"	e	enum:XMLErrs::Codes
BadMinMaxAllElem	include/xercesc/framework/XMLErrorCodes.hpp	/^      , BadMinMaxAllElem                   = 106$/;"	e	enum:XMLErrs::Codes
BadSchemaLocation	include/xercesc/framework/XMLErrorCodes.hpp	/^      , BadSchemaLocation                  = 260$/;"	e	enum:XMLErrs::Codes
BadSequenceInCharData	include/xercesc/framework/XMLErrorCodes.hpp	/^      , BadSequenceInCharData              = 234$/;"	e	enum:XMLErrs::Codes
BadStandalone	include/xercesc/framework/XMLErrorCodes.hpp	/^      , BadStandalone                      = 171$/;"	e	enum:XMLErrs::Codes
BadXMLEncoding	include/xercesc/framework/XMLErrorCodes.hpp	/^      , BadXMLEncoding                     = 170$/;"	e	enum:XMLErrs::Codes
BadXMLVersion	include/xercesc/framework/XMLErrorCodes.hpp	/^      , BadXMLVersion                      = 167$/;"	e	enum:XMLErrs::Codes
BadXsiType	include/xercesc/framework/XMLValidityCodes.hpp	/^      , BadXsiType                         = 58$/;"	e	enum:XMLValid::Codes
Base64	include/xercesc/util/Base64.hpp	/^class XMLUTIL_EXPORT Base64$/;"	c
Base64Binary	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        Base64Binary,$/;"	e	enum:DatatypeValidator::ValidatorType
Base64BinaryDatatypeValidator	include/xercesc/validators/datatype/Base64BinaryDatatypeValidator.hpp	/^class VALIDATORS_EXPORT Base64BinaryDatatypeValidator : public AbstractStringValidator$/;"	c
BaseNotComplexType	include/xercesc/framework/XMLErrorCodes.hpp	/^      , BaseNotComplexType                 = 73$/;"	e	enum:XMLErrs::Codes
BaseRefVectorEnumerator	include/xercesc/util/BaseRefVectorOf.c	/^BaseRefVectorEnumerator(        BaseRefVectorOf<TElem>* const   toEnum$/;"	f	class:TElem
BaseRefVectorEnumerator	include/xercesc/util/BaseRefVectorOf.c	/^BaseRefVectorEnumerator(const BaseRefVectorEnumerator<TElem>& toCopy) :$/;"	f	class:TElem
BaseRefVectorEnumerator	include/xercesc/util/BaseRefVectorOf.hpp	/^template <class TElem> class BaseRefVectorEnumerator : public XMLEnumerator<TElem>, public XMemory$/;"	c
BaseRefVectorOf	include/xercesc/util/BaseRefVectorOf.c	/^BaseRefVectorOf<TElem>::BaseRefVectorOf( const XMLSize_t maxElems$/;"	f	class:TElem
BaseRefVectorOf	include/xercesc/util/BaseRefVectorOf.hpp	/^template <class TElem> class BaseRefVectorOf : public XMemory$/;"	c
BaseTypeNotFound	include/xercesc/framework/XMLErrorCodes.hpp	/^      , BaseTypeNotFound                   = 43$/;"	e	enum:XMLErrs::Codes
BigDecimal	include/xercesc/util/XMLNumber.hpp	/^        BigDecimal,$/;"	e	enum:XMLNumber::NumberType
BinFileInputStream	include/xercesc/util/BinFileInputStream.hpp	/^class XMLUTIL_EXPORT BinFileInputStream : public BinInputStream$/;"	c
BinFileOutputStream	include/xercesc/internal/BinFileOutputStream.hpp	/^class XMLUTIL_EXPORT BinFileOutputStream : public BinOutputStream$/;"	c
BinInputStream	include/xercesc/util/BinInputStream.hpp	/^class XMLUTIL_EXPORT BinInputStream : public XMemory$/;"	c
BinMemInputStream	include/xercesc/util/BinMemInputStream.hpp	/^class XMLUTIL_EXPORT BinMemInputStream : public BinInputStream$/;"	c
BinMemOutputStream	include/xercesc/internal/BinMemOutputStream.hpp	/^class XMLUTIL_EXPORT BinMemOutputStream : public BinOutputStream $/;"	c
BinOutputStream	include/xercesc/framework/BinOutputStream.hpp	/^class XMLUTIL_EXPORT BinOutputStream : public XMemory$/;"	c
BitOps	include/xercesc/util/BitOps.hpp	/^class XMLUTIL_EXPORT BitOps$/;"	c
BitSet	include/xercesc/util/BitSet.hpp	/^class XMLUTIL_EXPORT BitSet : public XMemory$/;"	c
Bitset_BadIndex	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Bitset_BadIndex                    = 10$/;"	e	enum:XMLExcepts::Codes
Bitset_NotEqualSize	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Bitset_NotEqualSize                = 11$/;"	e	enum:XMLExcepts::Codes
BlockRangeFactory	include/xercesc/util/regx/BlockRangeFactory.hpp	/^class XMLUTIL_EXPORT BlockRangeFactory: public RangeFactory {$/;"	c
Boolean	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        Boolean,$/;"	e	enum:DatatypeValidator::ValidatorType
Boolean	include/xercesc/validators/datatype/XMLCanRepGroup.hpp	/^        Boolean,$/;"	e	enum:XMLCanRepGroup::CanRepGroup
BooleanDatatypeValidator	include/xercesc/validators/datatype/BooleanDatatypeValidator.hpp	/^class VALIDATORS_EXPORT BooleanDatatypeValidator : public DatatypeValidator$/;"	c
BooleanDatatypeValidator	include/xercesc/validators/datatype/BooleanDatatypeValidator.hpp	/^inline BooleanDatatypeValidator::BooleanDatatypeValidator(MemoryManager* const manager)$/;"	f	class:BooleanDatatypeValidator
BracketInAttrValue	include/xercesc/framework/XMLErrorCodes.hpp	/^      , BracketInAttrValue                 = 222$/;"	e	enum:XMLErrs::Codes
BufMgr_BufferNotInPool	include/xercesc/util/XMLExceptMsgs.hpp	/^      , BufMgr_BufferNotInPool             = 13$/;"	e	enum:XMLExcepts::Codes
BufMgr_NoMoreBuffers	include/xercesc/util/XMLExceptMsgs.hpp	/^      , BufMgr_NoMoreBuffers               = 12$/;"	e	enum:XMLExcepts::Codes
BufOpt_Adopt	include/xercesc/util/BinMemInputStream.hpp	/^        BufOpt_Adopt$/;"	e	enum:BinMemInputStream::BufOpts
BufOpt_Copy	include/xercesc/util/BinMemInputStream.hpp	/^        , BufOpt_Copy$/;"	e	enum:BinMemInputStream::BufOpts
BufOpt_Reference	include/xercesc/util/BinMemInputStream.hpp	/^        , BufOpt_Reference$/;"	e	enum:BinMemInputStream::BufOpts
BufOpts	include/xercesc/util/BinMemInputStream.hpp	/^    enum BufOpts$/;"	g	class:BinMemInputStream
CALC_EXPANDED_FORM	include/xercesc/util/XercesVersion.hpp	188;"	d
CAT2_RAW_NUMERIC	include/xercesc/util/XercesVersion.hpp	159;"	d
CAT2_SEP_NIL	include/xercesc/util/XercesVersion.hpp	158;"	d
CAT2_SEP_PERIOD	include/xercesc/util/XercesVersion.hpp	157;"	d
CAT2_SEP_UNDERSCORE	include/xercesc/util/XercesVersion.hpp	156;"	d
CAT3_RAW_NUMERIC	include/xercesc/util/XercesVersion.hpp	174;"	d
CAT3_RAW_NUMERIC_SEP_UNDERSCORE	include/xercesc/util/XercesVersion.hpp	175;"	d
CAT3_SEP_NIL	include/xercesc/util/XercesVersion.hpp	173;"	d
CAT3_SEP_PERIOD	include/xercesc/util/XercesVersion.hpp	172;"	d
CAT3_SEP_UNDERSCORE	include/xercesc/util/XercesVersion.hpp	171;"	d
CDATAOutsideOfContent	include/xercesc/framework/XMLErrorCodes.hpp	/^      , CDATAOutsideOfContent              = 251$/;"	e	enum:XMLErrs::Codes
CDATA_SECTION_NODE	include/xercesc/dom/DOMNode.hpp	/^        CDATA_SECTION_NODE          = 4,$/;"	e	enum:DOMNode::NodeType
CDATA_SECTION_OBJECT	include/xercesc/dom/DOMMemoryManager.hpp	/^        CDATA_SECTION_OBJECT          = 2,$/;"	e	enum:DOMMemoryManager::NodeObjectType
CDOM_EXPORT	include/xercesc/util/XercesDefs.hpp	142;"	d
CDOM_EXPORT	include/xercesc/util/XercesDefs.hpp	151;"	d
CDOM_EXPORT	include/xercesc/util/XercesDefs.hpp	166;"	d
CData	include/xercesc/framework/XMLAttDef.hpp	/^        CData               = 0$/;"	e	enum:XMLAttDef::AttTypes
CHARTYPE_ATSIGN	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        CHARTYPE_ATSIGN             = 19,   \/\/ '@' (0x40)$/;"	e	enum:XPathScanner::<anonymous>
CHARTYPE_CLOSE_BRACKET	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        CHARTYPE_CLOSE_BRACKET      = 22,   \/\/ ']' (0x5D)$/;"	e	enum:XPathScanner::<anonymous>
CHARTYPE_CLOSE_PAREN	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        CHARTYPE_CLOSE_PAREN        =  7,   \/\/ ')' (0x29)$/;"	e	enum:XPathScanner::<anonymous>
CHARTYPE_COLON	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        CHARTYPE_COLON              = 15,   \/\/ ':' (0x3A)$/;"	e	enum:XPathScanner::<anonymous>
CHARTYPE_COMMA	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        CHARTYPE_COMMA              = 10,   \/\/ ',' (0x2C)$/;"	e	enum:XPathScanner::<anonymous>
CHARTYPE_DIGIT	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        CHARTYPE_DIGIT              = 14,   \/\/ '0'-'9' (0x30 to 0x39)$/;"	e	enum:XPathScanner::<anonymous>
CHARTYPE_DOLLAR	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        CHARTYPE_DOLLAR             =  5,   \/\/ '$' (0x24)$/;"	e	enum:XPathScanner::<anonymous>
CHARTYPE_EQUAL	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        CHARTYPE_EQUAL              = 17,   \/\/ '=' (0x3D)$/;"	e	enum:XPathScanner::<anonymous>
CHARTYPE_EXCLAMATION	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        CHARTYPE_EXCLAMATION        =  3,   \/\/ '!' (0x21)$/;"	e	enum:XPathScanner::<anonymous>
CHARTYPE_GREATER	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        CHARTYPE_GREATER            = 18,   \/\/ '>' (0x3E)$/;"	e	enum:XPathScanner::<anonymous>
CHARTYPE_INVALID	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        CHARTYPE_INVALID            =  0,   \/\/ invalid XML character$/;"	e	enum:XPathScanner::<anonymous>
CHARTYPE_LESS	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        CHARTYPE_LESS               = 16,   \/\/ '<' (0x3C)$/;"	e	enum:XPathScanner::<anonymous>
CHARTYPE_LETTER	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        CHARTYPE_LETTER             = 20,   \/\/ 'A'-'Z' or 'a'-'z' (0x41 to 0x5A and 0x61 to 0x7A)$/;"	e	enum:XPathScanner::<anonymous>
CHARTYPE_MINUS	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        CHARTYPE_MINUS              = 11,   \/\/ '-' (0x2D)$/;"	e	enum:XPathScanner::<anonymous>
CHARTYPE_NONASCII	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        CHARTYPE_NONASCII           = 25   \/\/ Non-ASCII Unicode codepoint (>= 0x80)$/;"	e	enum:XPathScanner::<anonymous>
CHARTYPE_OPEN_BRACKET	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        CHARTYPE_OPEN_BRACKET       = 21,   \/\/ '[' (0x5B)$/;"	e	enum:XPathScanner::<anonymous>
CHARTYPE_OPEN_PAREN	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        CHARTYPE_OPEN_PAREN         =  6,   \/\/ '(' (0x28)$/;"	e	enum:XPathScanner::<anonymous>
CHARTYPE_OTHER	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        CHARTYPE_OTHER              =  1,   \/\/ not special - one of "#%&;?\\^`{}~" or DEL$/;"	e	enum:XPathScanner::<anonymous>
CHARTYPE_PERIOD	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        CHARTYPE_PERIOD             = 12,   \/\/ '.' (0x2E)$/;"	e	enum:XPathScanner::<anonymous>
CHARTYPE_PLUS	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        CHARTYPE_PLUS               =  9,   \/\/ '+' (0x2B)$/;"	e	enum:XPathScanner::<anonymous>
CHARTYPE_QUOTE	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        CHARTYPE_QUOTE              =  4,   \/\/ '\\"' or '\\'' (0x22 and 0x27)$/;"	e	enum:XPathScanner::<anonymous>
CHARTYPE_SLASH	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        CHARTYPE_SLASH              = 13,   \/\/ '\/' (0x2F)$/;"	e	enum:XPathScanner::<anonymous>
CHARTYPE_STAR	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        CHARTYPE_STAR               =  8,   \/\/ '*' (0x2A)$/;"	e	enum:XPathScanner::<anonymous>
CHARTYPE_UNDERSCORE	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        CHARTYPE_UNDERSCORE         = 23,   \/\/ '_' (0x5F)$/;"	e	enum:XPathScanner::<anonymous>
CHARTYPE_UNION	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        CHARTYPE_UNION              = 24,   \/\/ '|' (0x7C)$/;"	e	enum:XPathScanner::<anonymous>
CHARTYPE_WHITESPACE	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        CHARTYPE_WHITESPACE         =  2,   \/\/ one of "\\t\\n\\r " (0x09, 0x0A, 0x0D, 0x20)$/;"	e	enum:XPathScanner::<anonymous>
CHAR_LETTER	include/xercesc/util/regx/UnicodeRangeFactory.hpp	/^        CHAR_LETTER      = XMLUniCharacter::FINAL_PUNCTUATION+1,$/;"	e	enum:UnicodeRangeFactory::<anonymous>
CHAR_MARK	include/xercesc/util/regx/UnicodeRangeFactory.hpp	/^        CHAR_MARK,$/;"	e	enum:UnicodeRangeFactory::<anonymous>
CHAR_NUMBER	include/xercesc/util/regx/UnicodeRangeFactory.hpp	/^        CHAR_NUMBER,$/;"	e	enum:UnicodeRangeFactory::<anonymous>
CHAR_OTHER	include/xercesc/util/regx/UnicodeRangeFactory.hpp	/^        CHAR_OTHER,$/;"	e	enum:UnicodeRangeFactory::<anonymous>
CHAR_PUNCTUATION	include/xercesc/util/regx/UnicodeRangeFactory.hpp	/^        CHAR_PUNCTUATION,$/;"	e	enum:UnicodeRangeFactory::<anonymous>
CHAR_SEPARATOR	include/xercesc/util/regx/UnicodeRangeFactory.hpp	/^        CHAR_SEPARATOR,$/;"	e	enum:UnicodeRangeFactory::<anonymous>
CHAR_SYMBOL	include/xercesc/util/regx/UnicodeRangeFactory.hpp	/^        CHAR_SYMBOL,$/;"	e	enum:UnicodeRangeFactory::<anonymous>
CHILDNODE	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    static const unsigned short CHILDNODE;$/;"	m	class:DOMNodeImpl
CLONE_CONTENTS	include/xercesc/dom/impl/DOMRangeImpl.hpp	/^        CLONE_CONTENTS   = 2,$/;"	e	enum:DOMRangeImpl::TraversalType
CMAny	include/xercesc/validators/common/CMAny.hpp	/^class CMAny : public CMNode$/;"	c
CMBinaryOp	include/xercesc/validators/common/CMBinaryOp.hpp	/^class CMBinaryOp : public CMNode$/;"	c
CMDynamicBuffer	include/xercesc/validators/common/CMStateSet.hpp	/^struct CMDynamicBuffer$/;"	s
CMLeaf	include/xercesc/validators/common/CMLeaf.hpp	/^class CMLeaf : public CMNode$/;"	c
CMLeaf	include/xercesc/validators/common/CMLeaf.hpp	/^inline CMLeaf::CMLeaf( QName* const         element$/;"	f	class:CMLeaf
CMNode	include/xercesc/validators/common/CMNode.hpp	/^class CMNode : public XMemory$/;"	c
CMNode	include/xercesc/validators/common/CMNode.hpp	/^inline CMNode::CMNode(const ContentSpecNode::NodeTypes type$/;"	f	class:CMNode
CMRepeatingLeaf	include/xercesc/validators/common/CMRepeatingLeaf.hpp	/^class CMRepeatingLeaf : public CMLeaf$/;"	c
CMRepeatingLeaf	include/xercesc/validators/common/CMRepeatingLeaf.hpp	/^inline CMRepeatingLeaf::CMRepeatingLeaf(   QName* const               element$/;"	f	class:CMRepeatingLeaf
CMSTATE_BITFIELD_CHUNK	include/xercesc/validators/common/CMStateSet.hpp	52;"	d
CMSTATE_BITFIELD_INT32_SIZE	include/xercesc/validators/common/CMStateSet.hpp	53;"	d
CMSTATE_CACHED_INT32_SIZE	include/xercesc/validators/common/CMStateSet.hpp	49;"	d
CMStateSet	include/xercesc/validators/common/CMStateSet.hpp	/^    CMStateSet( const XMLSize_t bitCount$/;"	f	class:CMStateSet
CMStateSet	include/xercesc/validators/common/CMStateSet.hpp	/^    CMStateSet(const CMStateSet& toCopy) :$/;"	f	class:CMStateSet
CMStateSet	include/xercesc/validators/common/CMStateSet.hpp	/^class CMStateSet : public XMemory$/;"	c
CMStateSetEnumerator	include/xercesc/validators/common/CMStateSet.hpp	/^    CMStateSetEnumerator(const CMStateSet* toEnum, XMLSize_t start = 0) :$/;"	f	class:CMStateSetEnumerator
CMStateSetEnumerator	include/xercesc/validators/common/CMStateSet.hpp	/^class CMStateSetEnumerator : public XMemory$/;"	c
CMUnaryOp	include/xercesc/validators/common/CMUnaryOp.hpp	/^class CMUnaryOp : public CMNode$/;"	c
CM_BinOpHadUnaryType	include/xercesc/util/XMLExceptMsgs.hpp	/^      , CM_BinOpHadUnaryType               = 15$/;"	e	enum:XMLExcepts::Codes
CM_MustBeMixedOrChildren	include/xercesc/util/XMLExceptMsgs.hpp	/^      , CM_MustBeMixedOrChildren           = 16$/;"	e	enum:XMLExcepts::Codes
CM_NoPCDATAHere	include/xercesc/util/XMLExceptMsgs.hpp	/^      , CM_NoPCDATAHere                    = 17$/;"	e	enum:XMLExcepts::Codes
CM_NoParentCSN	include/xercesc/util/XMLExceptMsgs.hpp	/^      , CM_NoParentCSN                     = 21$/;"	e	enum:XMLExcepts::Codes
CM_NotValidSpecTypeForNode	include/xercesc/util/XMLExceptMsgs.hpp	/^      , CM_NotValidSpecTypeForNode         = 22$/;"	e	enum:XMLExcepts::Codes
CM_UnaryOpHadBinType	include/xercesc/util/XMLExceptMsgs.hpp	/^      , CM_UnaryOpHadBinType               = 18$/;"	e	enum:XMLExcepts::Codes
CM_UnknownCMSpecType	include/xercesc/util/XMLExceptMsgs.hpp	/^      , CM_UnknownCMSpecType               = 20$/;"	e	enum:XMLExcepts::Codes
CM_UnknownCMType	include/xercesc/util/XMLExceptMsgs.hpp	/^      , CM_UnknownCMType                   = 19$/;"	e	enum:XMLExcepts::Codes
COLLAPSE	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        COLLAPSE = 2$/;"	e	enum:DatatypeValidator::<anonymous>
COMBINING_SPACING_MARK	include/xercesc/util/regx/XMLUniCharacter.hpp	/^        COMBINING_SPACING_MARK  = 8,$/;"	e	enum:XMLUniCharacter::<anonymous>
COMMENT_NODE	include/xercesc/dom/DOMNode.hpp	/^        COMMENT_NODE                = 8,$/;"	e	enum:DOMNode::NodeType
COMMENT_OBJECT	include/xercesc/dom/DOMMemoryManager.hpp	/^        COMMENT_OBJECT                = 3,$/;"	e	enum:DOMMemoryManager::NodeObjectType
COMPLEX_TYPE	include/xercesc/framework/psvi/XSTypeDefinition.hpp	/^        COMPLEX_TYPE              = 15,$/;"	e	enum:XSTypeDefinition::TYPE_CATEGORY
COMPONENT_TYPE	include/xercesc/framework/psvi/XSConstants.hpp	/^    enum COMPONENT_TYPE {$/;"	g	class:XSConstants
COMPOSITOR_ALL	include/xercesc/framework/psvi/XSModelGroup.hpp	/^	    COMPOSITOR_ALL            = 3$/;"	e	enum:XSModelGroup::COMPOSITOR_TYPE
COMPOSITOR_CHOICE	include/xercesc/framework/psvi/XSModelGroup.hpp	/^	    COMPOSITOR_CHOICE         = 2,$/;"	e	enum:XSModelGroup::COMPOSITOR_TYPE
COMPOSITOR_SEQUENCE	include/xercesc/framework/psvi/XSModelGroup.hpp	/^	    COMPOSITOR_SEQUENCE       = 1,$/;"	e	enum:XSModelGroup::COMPOSITOR_TYPE
COMPOSITOR_TYPE	include/xercesc/framework/psvi/XSModelGroup.hpp	/^    enum COMPOSITOR_TYPE {$/;"	g	class:XSModelGroup
CONNECTOR_PUNCTUATION	include/xercesc/util/regx/XMLUniCharacter.hpp	/^        CONNECTOR_PUNCTUATION   = 22,$/;"	e	enum:XMLUniCharacter::<anonymous>
CONTENTTYPE_ELEMENT	include/xercesc/framework/psvi/XSComplexTypeDefinition.hpp	/^	     CONTENTTYPE_ELEMENT       = 2,$/;"	e	enum:XSComplexTypeDefinition::CONTENT_TYPE
CONTENTTYPE_EMPTY	include/xercesc/framework/psvi/XSComplexTypeDefinition.hpp	/^	     CONTENTTYPE_EMPTY         = 0,$/;"	e	enum:XSComplexTypeDefinition::CONTENT_TYPE
CONTENTTYPE_MIXED	include/xercesc/framework/psvi/XSComplexTypeDefinition.hpp	/^	     CONTENTTYPE_MIXED         = 3$/;"	e	enum:XSComplexTypeDefinition::CONTENT_TYPE
CONTENTTYPE_SIMPLE	include/xercesc/framework/psvi/XSComplexTypeDefinition.hpp	/^	     CONTENTTYPE_SIMPLE        = 1,$/;"	e	enum:XSComplexTypeDefinition::CONTENT_TYPE
CONTENT_TYPE	include/xercesc/framework/psvi/XSComplexTypeDefinition.hpp	/^    enum CONTENT_TYPE {$/;"	g	class:XSComplexTypeDefinition
CONTEXT_ATTRIBUTE	include/xercesc/framework/XMLSchemaDescription.hpp	/^            CONTEXT_ATTRIBUTE,$/;"	e	enum:XMLSchemaDescription::ContextType
CONTEXT_ELEMENT	include/xercesc/framework/XMLSchemaDescription.hpp	/^            CONTEXT_ELEMENT,$/;"	e	enum:XMLSchemaDescription::ContextType
CONTEXT_IMPORT	include/xercesc/framework/XMLSchemaDescription.hpp	/^            CONTEXT_IMPORT,$/;"	e	enum:XMLSchemaDescription::ContextType
CONTEXT_INCLUDE	include/xercesc/framework/XMLSchemaDescription.hpp	/^            CONTEXT_INCLUDE,$/;"	e	enum:XMLSchemaDescription::ContextType
CONTEXT_INSTANCE	include/xercesc/framework/XMLSchemaDescription.hpp	/^            CONTEXT_INSTANCE,$/;"	e	enum:XMLSchemaDescription::ContextType
CONTEXT_PREPARSE	include/xercesc/framework/XMLSchemaDescription.hpp	/^            CONTEXT_PREPARSE,$/;"	e	enum:XMLSchemaDescription::ContextType
CONTEXT_REDEFINE	include/xercesc/framework/XMLSchemaDescription.hpp	/^            CONTEXT_REDEFINE,$/;"	e	enum:XMLSchemaDescription::ContextType
CONTEXT_UNKNOWN	include/xercesc/framework/XMLSchemaDescription.hpp	/^            CONTEXT_UNKNOWN$/;"	e	enum:XMLSchemaDescription::ContextType
CONTEXT_XSITYPE	include/xercesc/framework/XMLSchemaDescription.hpp	/^            CONTEXT_XSITYPE,$/;"	e	enum:XMLSchemaDescription::ContextType
CONTROL	include/xercesc/util/regx/XMLUniCharacter.hpp	/^        CONTROL                 = 15,$/;"	e	enum:XMLUniCharacter::<anonymous>
CPtr_PointerIsZero	include/xercesc/util/XMLExceptMsgs.hpp	/^      , CPtr_PointerIsZero                 = 14$/;"	e	enum:XMLExcepts::Codes
CT_SimpleTypeChildRequired	include/xercesc/framework/XMLErrorCodes.hpp	/^      , CT_SimpleTypeChildRequired         = 270$/;"	e	enum:XMLErrs::Codes
CURRENCY_SYMBOL	include/xercesc/util/regx/XMLUniCharacter.hpp	/^        CURRENCY_SYMBOL         = 25,$/;"	e	enum:XMLUniCharacter::<anonymous>
C_Attribute	include/xercesc/validators/schema/SchemaInfo.hpp	/^        C_Attribute,$/;"	e	enum:SchemaInfo::<anonymous>
C_AttributeGroup	include/xercesc/validators/schema/SchemaInfo.hpp	/^        C_AttributeGroup,$/;"	e	enum:SchemaInfo::<anonymous>
C_Block	include/xercesc/validators/schema/TraverseSchema.hpp	/^        , C_Block$/;"	e	enum:TraverseSchema::<anonymous>
C_ComplexType	include/xercesc/validators/schema/SchemaInfo.hpp	/^        C_ComplexType,$/;"	e	enum:SchemaInfo::<anonymous>
C_Count	include/xercesc/validators/schema/SchemaInfo.hpp	/^        C_Count$/;"	e	enum:SchemaInfo::<anonymous>
C_Element	include/xercesc/validators/schema/SchemaInfo.hpp	/^        C_Element,$/;"	e	enum:SchemaInfo::<anonymous>
C_Group	include/xercesc/validators/schema/SchemaInfo.hpp	/^        C_Group,$/;"	e	enum:SchemaInfo::<anonymous>
C_Notation	include/xercesc/validators/schema/SchemaInfo.hpp	/^        C_Notation,$/;"	e	enum:SchemaInfo::<anonymous>
C_SimpleType	include/xercesc/validators/schema/SchemaInfo.hpp	/^        C_SimpleType,$/;"	e	enum:SchemaInfo::<anonymous>
CanRepGroup	include/xercesc/validators/datatype/XMLCanRepGroup.hpp	/^    enum CanRepGroup {$/;"	g	class:XMLCanRepGroup
CentYear	include/xercesc/util/XMLDateTime.hpp	/^        CentYear   = 0,$/;"	e	enum:XMLDateTime::valueIndex
CharDataOpts	include/xercesc/framework/XMLElementDecl.hpp	/^    enum CharDataOpts$/;"	g	class:XMLElementDecl
CharEscapes	include/xercesc/framework/XMLFormatter.hpp	/^        , CharEscapes$/;"	e	enum:XMLFormatter::EscapeFlags
CharOp	include/xercesc/util/regx/Op.hpp	/^class XMLUTIL_EXPORT CharOp: public Op {$/;"	c
CharToken	include/xercesc/util/regx/CharToken.hpp	/^class XMLUTIL_EXPORT CharToken : public Token {$/;"	c
ChildOp	include/xercesc/util/regx/Op.hpp	/^class XMLUTIL_EXPORT ChildOp: public Op {$/;"	c
Children	include/xercesc/validators/DTD/DTDElementDecl.hpp	/^        , Children$/;"	e	enum:DTDElementDecl::ModelTypes
Children	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^        , Children$/;"	e	enum:SchemaElementDecl::ModelTypes
Choice	include/xercesc/validators/common/ContentSpecNode.hpp	/^        , Choice$/;"	e	enum:ContentSpecNode::NodeTypes
CircularSubsGroup	include/xercesc/framework/XMLErrorCodes.hpp	/^      , CircularSubsGroup                  = 147$/;"	e	enum:XMLErrs::Codes
ClearNode	include/xercesc/dom/StDOMNode.hpp	/^	inline void ClearNode() { operator=((T*)(0)); }$/;"	f	class:StDOMNode
ClosureToken	include/xercesc/util/regx/ClosureToken.hpp	/^class XMLUTIL_EXPORT ClosureToken : public Token {$/;"	c
Codes	include/xercesc/framework/XMLErrorCodes.hpp	/^    enum Codes$/;"	g	class:XMLErrs
Codes	include/xercesc/framework/XMLValidityCodes.hpp	/^    enum Codes$/;"	g	class:XMLValid
Codes	include/xercesc/util/TransService.hpp	/^    enum Codes$/;"	g	class:XMLTransService
Codes	include/xercesc/util/XMLDOMMsg.hpp	/^    enum Codes$/;"	g	class:XMLDOMMsg
Codes	include/xercesc/util/XMLExceptMsgs.hpp	/^    enum Codes$/;"	g	class:XMLExcepts
ColonNotLegalWithNS	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ColonNotLegalWithNS                = 258$/;"	e	enum:XMLErrs::Codes
ColonNotValidWithNS	include/xercesc/framework/XMLValidityCodes.hpp	/^      , ColonNotValidWithNS                = 20$/;"	e	enum:XMLValid::Codes
CommentsMustStartWith	include/xercesc/framework/XMLErrorCodes.hpp	/^      , CommentsMustStartWith              = 164$/;"	e	enum:XMLErrs::Codes
CompareHow	include/xercesc/dom/DOMRange.hpp	/^    enum CompareHow {$/;"	g	class:DOMRange
ComplexTypeInfo	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^class VALIDATORS_EXPORT ComplexTypeInfo : public XSerializable, public XMemory$/;"	c
ConcatToken	include/xercesc/util/regx/ConcatToken.hpp	/^class XMLUTIL_EXPORT ConcatToken : public Token {$/;"	c
ConditionalSectInIntSubset	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ConditionalSectInIntSubset         = 196$/;"	e	enum:XMLErrs::Codes
Conf_RFC2045	include/xercesc/util/Base64.hpp	/^        Conf_RFC2045$/;"	e	enum:Base64::Conformance
Conf_Schema	include/xercesc/util/Base64.hpp	/^      , Conf_Schema$/;"	e	enum:Base64::Conformance
Conformance	include/xercesc/util/Base64.hpp	/^    enum Conformance$/;"	g	class:Base64
Constants	include/xercesc/framework/XMLFormatter.hpp	/^    enum Constants$/;"	g	class:XMLFormatter
Constants	include/xercesc/internal/XMLReader.hpp	/^    enum Constants$/;"	g	class:XMLReader
ContentError	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ContentError                       = 35$/;"	e	enum:XMLErrs::Codes
ContentHandler	include/xercesc/sax2/ContentHandler.hpp	/^    ContentHandler()$/;"	f	class:ContentHandler
ContentHandler	include/xercesc/sax2/ContentHandler.hpp	/^class SAX2_EXPORT ContentHandler$/;"	c
ContentLeafNameTypeVector	include/xercesc/validators/common/ContentLeafNameTypeVector.hpp	/^class XMLPARSER_EXPORT ContentLeafNameTypeVector : public XMemory$/;"	c
ContentSpecNode	include/xercesc/validators/common/ContentSpecNode.hpp	/^ContentSpecNode::ContentSpecNode( QName* const element$/;"	f	class:ContentSpecNode
ContentSpecNode	include/xercesc/validators/common/ContentSpecNode.hpp	/^ContentSpecNode::ContentSpecNode(QName* const element,$/;"	f	class:ContentSpecNode
ContentSpecNode	include/xercesc/validators/common/ContentSpecNode.hpp	/^ContentSpecNode::ContentSpecNode(XMLElementDecl* const elemDecl,$/;"	f	class:ContentSpecNode
ContentSpecNode	include/xercesc/validators/common/ContentSpecNode.hpp	/^ContentSpecNode::ContentSpecNode(const  NodeTypes              type$/;"	f	class:ContentSpecNode
ContentSpecNode	include/xercesc/validators/common/ContentSpecNode.hpp	/^class XMLUTIL_EXPORT ContentSpecNode : public XSerializable, public XMemory$/;"	c
ContentSpecNode	include/xercesc/validators/common/ContentSpecNode.hpp	/^inline ContentSpecNode::ContentSpecNode(MemoryManager* const manager) :$/;"	f	class:ContentSpecNode
Context	include/xercesc/util/regx/RegularExpression.hpp	/^    class XMLUTIL_EXPORT Context : public XMemory$/;"	c	class:RegularExpression
ContextType	include/xercesc/framework/XMLSchemaDescription.hpp	/^    enum ContextType $/;"	g	class:XMLSchemaDescription
ContradictoryEncoding	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ContradictoryEncoding              = 4$/;"	e	enum:XMLErrs::Codes
CountedPointerTo	include/xercesc/util/CountedPointer.c	/^CountedPointerTo(const CountedPointerTo<T>& toCopy) :$/;"	f	class:T
CountedPointerTo	include/xercesc/util/CountedPointer.c	/^template <class T> CountedPointerTo<T>::CountedPointerTo(T* p) :$/;"	f	class:T
CountedPointerTo	include/xercesc/util/CountedPointer.hpp	/^template <class T> class CountedPointerTo : public XMemory$/;"	c
CreateReasons	include/xercesc/framework/XMLAttDef.hpp	/^    enum CreateReasons$/;"	g	class:XMLAttDef
CreateReasons	include/xercesc/framework/XMLElementDecl.hpp	/^    enum CreateReasons$/;"	g	class:XMLElementDecl
CurlNetAccessor	include/xercesc/util/NetAccessors/Curl/CurlNetAccessor.hpp	/^class XMLUTIL_EXPORT CurlNetAccessor : public XMLNetAccessor$/;"	c
CurlURLInputStream	include/xercesc/util/NetAccessors/Curl/CurlURLInputStream.hpp	/^class XMLUTIL_EXPORT CurlURLInputStream : public BinInputStream$/;"	c
DASH_PUNCTUATION	include/xercesc/util/regx/XMLUniCharacter.hpp	/^        DASH_PUNCTUATION        = 19,$/;"	e	enum:XMLUniCharacter::<anonymous>
DECIMAL_DIGIT_NUMBER	include/xercesc/util/regx/XMLUniCharacter.hpp	/^        DECIMAL_DIGIT_NUMBER    = 9,$/;"	e	enum:XMLUniCharacter::<anonymous>
DECL_XPROTOTYPE	include/xercesc/internal/XProtoType.hpp	61;"	d
DECL_XSERIALIZABLE	include/xercesc/internal/XSerializable.hpp	68;"	d
DECREFCOUNT	include/xercesc/dom/StDOMNode.hpp	/^	static inline void DECREFCOUNT(T *x) { if (x != (T*)0) x->decRefCount(); }$/;"	f	class:StDOMNode
DELETE_CONTENTS	include/xercesc/dom/impl/DOMRangeImpl.hpp	/^        DELETE_CONTENTS  = 3$/;"	e	enum:DOMRangeImpl::TraversalType
DEPRECATED_DOM_EXPORT	include/xercesc/util/XercesDefs.hpp	157;"	d
DEPRECATED_DOM_EXPORT	include/xercesc/util/XercesDefs.hpp	159;"	d
DEPRECATED_DOM_EXPORT	include/xercesc/util/XercesDefs.hpp	167;"	d
DERIVATION_EXTENSION	include/xercesc/dom/DOMTypeInfo.hpp	/^         DERIVATION_EXTENSION   = 0x002,$/;"	e	enum:DOMTypeInfo::DerivationMethods
DERIVATION_EXTENSION	include/xercesc/framework/psvi/XSConstants.hpp	/^	     DERIVATION_EXTENSION      = 1,$/;"	e	enum:XSConstants::DERIVATION_TYPE
DERIVATION_LIST	include/xercesc/dom/DOMTypeInfo.hpp	/^         DERIVATION_LIST        = 0x008$/;"	e	enum:DOMTypeInfo::DerivationMethods
DERIVATION_LIST	include/xercesc/framework/psvi/XSConstants.hpp	/^	     DERIVATION_LIST           = 16$/;"	e	enum:XSConstants::DERIVATION_TYPE
DERIVATION_NONE	include/xercesc/framework/psvi/XSConstants.hpp	/^	     DERIVATION_NONE     = 0,$/;"	e	enum:XSConstants::DERIVATION_TYPE
DERIVATION_RESTRICTION	include/xercesc/dom/DOMTypeInfo.hpp	/^         DERIVATION_RESTRICTION = 0x001,$/;"	e	enum:DOMTypeInfo::DerivationMethods
DERIVATION_RESTRICTION	include/xercesc/framework/psvi/XSConstants.hpp	/^	     DERIVATION_RESTRICTION    = 2,$/;"	e	enum:XSConstants::DERIVATION_TYPE
DERIVATION_SUBSTITUTION	include/xercesc/framework/psvi/XSConstants.hpp	/^	     DERIVATION_SUBSTITUTION   = 4,$/;"	e	enum:XSConstants::DERIVATION_TYPE
DERIVATION_TYPE	include/xercesc/framework/psvi/XSConstants.hpp	/^    enum DERIVATION_TYPE {$/;"	g	class:XSConstants
DERIVATION_UNION	include/xercesc/dom/DOMTypeInfo.hpp	/^         DERIVATION_UNION       = 0x004,$/;"	e	enum:DOMTypeInfo::DerivationMethods
DERIVATION_UNION	include/xercesc/framework/psvi/XSConstants.hpp	/^	     DERIVATION_UNION          = 8,$/;"	e	enum:XSConstants::DERIVATION_TYPE
DFAContentModel	include/xercesc/validators/common/DFAContentModel.hpp	/^class DFAContentModel : public XMLContentModel$/;"	c
DGXMLScanner	include/xercesc/internal/DGXMLScanner.hpp	/^class XMLPARSER_EXPORT DGXMLScanner : public XMLScanner$/;"	c
DOCUMENT_FRAGMENT_NODE	include/xercesc/dom/DOMNode.hpp	/^        DOCUMENT_FRAGMENT_NODE      = 11,$/;"	e	enum:DOMNode::NodeType
DOCUMENT_FRAGMENT_OBJECT	include/xercesc/dom/DOMMemoryManager.hpp	/^        DOCUMENT_FRAGMENT_OBJECT      = 4,$/;"	e	enum:DOMMemoryManager::NodeObjectType
DOCUMENT_NODE	include/xercesc/dom/DOMNode.hpp	/^        DOCUMENT_NODE               = 9,$/;"	e	enum:DOMNode::NodeType
DOCUMENT_POSITION_CONTAINED_BY	include/xercesc/dom/DOMNode.hpp	/^        DOCUMENT_POSITION_CONTAINED_BY            = 0x10,$/;"	e	enum:DOMNode::DocumentPosition
DOCUMENT_POSITION_CONTAINS	include/xercesc/dom/DOMNode.hpp	/^        DOCUMENT_POSITION_CONTAINS                = 0x08,$/;"	e	enum:DOMNode::DocumentPosition
DOCUMENT_POSITION_DISCONNECTED	include/xercesc/dom/DOMNode.hpp	/^        DOCUMENT_POSITION_DISCONNECTED            = 0x01,$/;"	e	enum:DOMNode::DocumentPosition
DOCUMENT_POSITION_FOLLOWING	include/xercesc/dom/DOMNode.hpp	/^        DOCUMENT_POSITION_FOLLOWING               = 0x04,$/;"	e	enum:DOMNode::DocumentPosition
DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC	include/xercesc/dom/DOMNode.hpp	/^        DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC = 0x20$/;"	e	enum:DOMNode::DocumentPosition
DOCUMENT_POSITION_PRECEDING	include/xercesc/dom/DOMNode.hpp	/^        DOCUMENT_POSITION_PRECEDING               = 0x02,$/;"	e	enum:DOMNode::DocumentPosition
DOCUMENT_TYPE_NODE	include/xercesc/dom/DOMNode.hpp	/^        DOCUMENT_TYPE_NODE          = 10,$/;"	e	enum:DOMNode::NodeType
DOCUMENT_TYPE_OBJECT	include/xercesc/dom/DOMMemoryManager.hpp	/^        DOCUMENT_TYPE_OBJECT          = 5,$/;"	e	enum:DOMMemoryManager::NodeObjectType
DOMAttr	include/xercesc/dom/DOMAttr.hpp	/^    DOMAttr() {}$/;"	f	class:DOMAttr
DOMAttr	include/xercesc/dom/DOMAttr.hpp	/^    DOMAttr(const DOMAttr &other) : DOMNode(other) {}$/;"	f	class:DOMAttr
DOMAttr	include/xercesc/dom/DOMAttr.hpp	/^class CDOM_EXPORT DOMAttr: public DOMNode {$/;"	c
DOMAttrImpl	include/xercesc/dom/impl/DOMAttrImpl.hpp	/^class CDOM_EXPORT DOMAttrImpl: public DOMAttr {$/;"	c
DOMAttrMapImpl	include/xercesc/dom/impl/DOMAttrMapImpl.hpp	/^class CDOM_EXPORT DOMAttrMapImpl : public DOMNamedNodeMap$/;"	c
DOMAttrNSImpl	include/xercesc/dom/impl/DOMAttrNSImpl.hpp	/^class CDOM_EXPORT DOMAttrNSImpl: public DOMAttrImpl {$/;"	c
DOMAttrSPtr	include/xercesc/dom/StDOMNode.hpp	/^    typedef DOMAttr* DOMAttrSPtr;$/;"	t
DOMAttrSPtr	include/xercesc/dom/StDOMNode.hpp	/^    typedef StDOMNode<DOMAttr> DOMAttrSPtr;$/;"	t
DOMBuffer	include/xercesc/dom/impl/DOMStringPool.hpp	/^class DOMBuffer$/;"	c
DOMCDATASection	include/xercesc/dom/DOMCDATASection.hpp	/^    DOMCDATASection() {}$/;"	f	class:DOMCDATASection
DOMCDATASection	include/xercesc/dom/DOMCDATASection.hpp	/^    DOMCDATASection(const DOMCDATASection &other) : DOMText(other) {}$/;"	f	class:DOMCDATASection
DOMCDATASection	include/xercesc/dom/DOMCDATASection.hpp	/^class CDOM_EXPORT DOMCDATASection: public DOMText {$/;"	c
DOMCDATASectionImpl	include/xercesc/dom/impl/DOMCDATASectionImpl.hpp	/^class CDOM_EXPORT DOMCDATASectionImpl: public DOMCDATASection {$/;"	c
DOMCharacterData	include/xercesc/dom/DOMCharacterData.hpp	/^    DOMCharacterData() {}$/;"	f	class:DOMCharacterData
DOMCharacterData	include/xercesc/dom/DOMCharacterData.hpp	/^    DOMCharacterData(const DOMCharacterData &other) : DOMNode(other) {}$/;"	f	class:DOMCharacterData
DOMCharacterData	include/xercesc/dom/DOMCharacterData.hpp	/^class CDOM_EXPORT DOMCharacterData: public DOMNode {$/;"	c
DOMCharacterDataImpl	include/xercesc/dom/impl/DOMCharacterDataImpl.hpp	/^class CDOM_EXPORT DOMCharacterDataImpl$/;"	c
DOMChildNode	include/xercesc/dom/impl/DOMChildNode.hpp	/^class CDOM_EXPORT DOMChildNode {$/;"	c
DOMComment	include/xercesc/dom/DOMComment.hpp	/^    DOMComment() {};$/;"	f	class:DOMComment
DOMComment	include/xercesc/dom/DOMComment.hpp	/^class CDOM_EXPORT DOMComment: public DOMCharacterData {$/;"	c
DOMCommentImpl	include/xercesc/dom/impl/DOMCommentImpl.hpp	/^class CDOM_EXPORT DOMCommentImpl: public DOMComment {$/;"	c
DOMConfiguration	include/xercesc/dom/DOMConfiguration.hpp	/^    DOMConfiguration() {};$/;"	f	class:DOMConfiguration
DOMConfiguration	include/xercesc/dom/DOMConfiguration.hpp	/^class CDOM_EXPORT DOMConfiguration$/;"	c
DOMConfigurationFeature	include/xercesc/dom/impl/DOMConfigurationImpl.hpp	/^    enum DOMConfigurationFeature {$/;"	g	class:DOMConfigurationImpl
DOMConfigurationImpl	include/xercesc/dom/impl/DOMConfigurationImpl.hpp	/^class CDOM_EXPORT DOMConfigurationImpl : public DOMConfiguration$/;"	c
DOMDeepNodeListImpl	include/xercesc/dom/impl/DOMDeepNodeListImpl.hpp	/^class CDOM_EXPORT DOMDeepNodeListImpl: public DOMNodeList {$/;"	c
DOMDeepNodeListPool	include/xercesc/dom/impl/DOMDeepNodeListPool.c	/^DOMDeepNodeListPool<TVal, THasher>::DOMDeepNodeListPool( const XMLSize_t modulus$/;"	f	class:THasher
DOMDeepNodeListPool	include/xercesc/dom/impl/DOMDeepNodeListPool.hpp	/^class DOMDeepNodeListPool$/;"	c
DOMDeepNodeListPoolTableBucketElem	include/xercesc/dom/impl/DOMDeepNodeListPool.hpp	/^    DOMDeepNodeListPoolTableBucketElem$/;"	f	struct:DOMDeepNodeListPoolTableBucketElem
DOMDeepNodeListPoolTableBucketElem	include/xercesc/dom/impl/DOMDeepNodeListPool.hpp	/^struct DOMDeepNodeListPoolTableBucketElem : public XMemory$/;"	s
DOMDocument	include/xercesc/dom/DOMDocument.hpp	/^    DOMDocument() {};$/;"	f	class:DOMDocument
DOMDocument	include/xercesc/dom/DOMDocument.hpp	/^class CDOM_EXPORT DOMDocument: public DOMDocumentRange,$/;"	c
DOMDocumentFragment	include/xercesc/dom/DOMDocumentFragment.hpp	/^    DOMDocumentFragment() {};$/;"	f	class:DOMDocumentFragment
DOMDocumentFragment	include/xercesc/dom/DOMDocumentFragment.hpp	/^class CDOM_EXPORT DOMDocumentFragment: public DOMNode {$/;"	c
DOMDocumentFragmentImpl	include/xercesc/dom/impl/DOMDocumentFragmentImpl.hpp	/^class CDOM_EXPORT DOMDocumentFragmentImpl: public DOMDocumentFragment {$/;"	c
DOMDocumentImpl	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^class CDOM_EXPORT DOMDocumentImpl: public XMemory, public DOMMemoryManager, public DOMDocument {$/;"	c
DOMDocumentRange	include/xercesc/dom/DOMDocumentRange.hpp	/^    DOMDocumentRange() {};$/;"	f	class:DOMDocumentRange
DOMDocumentRange	include/xercesc/dom/DOMDocumentRange.hpp	/^class CDOM_EXPORT DOMDocumentRange {$/;"	c
DOMDocumentTraversal	include/xercesc/dom/DOMDocumentTraversal.hpp	/^    DOMDocumentTraversal() {};$/;"	f	class:DOMDocumentTraversal
DOMDocumentTraversal	include/xercesc/dom/DOMDocumentTraversal.hpp	/^class CDOM_EXPORT DOMDocumentTraversal {$/;"	c
DOMDocumentType	include/xercesc/dom/DOMDocumentType.hpp	/^    DOMDocumentType() {};$/;"	f	class:DOMDocumentType
DOMDocumentType	include/xercesc/dom/DOMDocumentType.hpp	/^class CDOM_EXPORT DOMDocumentType: public DOMNode {$/;"	c
DOMDocumentTypeImpl	include/xercesc/dom/impl/DOMDocumentTypeImpl.hpp	/^class CDOM_EXPORT DOMDocumentTypeImpl: public DOMDocumentType {$/;"	c
DOMEXCEPTION_ERRX	include/xercesc/util/XMLDOMMsg.hpp	/^      , DOMEXCEPTION_ERRX                  = 2$/;"	e	enum:XMLDOMMsg::Codes
DOMElement	include/xercesc/dom/DOMElement.hpp	/^    DOMElement() {}$/;"	f	class:DOMElement
DOMElement	include/xercesc/dom/DOMElement.hpp	/^    DOMElement(const DOMElement &other) : DOMNode(other) {}$/;"	f	class:DOMElement
DOMElement	include/xercesc/dom/DOMElement.hpp	/^class CDOM_EXPORT DOMElement: public DOMNode {$/;"	c
DOMElementImpl	include/xercesc/dom/impl/DOMElementImpl.hpp	/^class CDOM_EXPORT DOMElementImpl: public DOMElement {$/;"	c
DOMElementNSImpl	include/xercesc/dom/impl/DOMElementNSImpl.hpp	/^class CDOM_EXPORT DOMElementNSImpl: public DOMElementImpl {$/;"	c
DOMElementSPtr	include/xercesc/dom/StDOMNode.hpp	/^    typedef DOMElement* DOMElementSPtr;$/;"	t
DOMElementSPtr	include/xercesc/dom/StDOMNode.hpp	/^    typedef StDOMNode<DOMElement> DOMElementSPtr;$/;"	t
DOMEntity	include/xercesc/dom/DOMEntity.hpp	/^    DOMEntity() {}$/;"	f	class:DOMEntity
DOMEntity	include/xercesc/dom/DOMEntity.hpp	/^    DOMEntity(const DOMEntity &other) : DOMNode(other) {}$/;"	f	class:DOMEntity
DOMEntity	include/xercesc/dom/DOMEntity.hpp	/^class CDOM_EXPORT DOMEntity: public DOMNode {$/;"	c
DOMEntityImpl	include/xercesc/dom/impl/DOMEntityImpl.hpp	/^class CDOM_EXPORT DOMEntityImpl: public DOMEntity {$/;"	c
DOMEntityReference	include/xercesc/dom/DOMEntityReference.hpp	/^    DOMEntityReference() {}$/;"	f	class:DOMEntityReference
DOMEntityReference	include/xercesc/dom/DOMEntityReference.hpp	/^    DOMEntityReference(const DOMEntityReference &other) : DOMNode(other) {}$/;"	f	class:DOMEntityReference
DOMEntityReference	include/xercesc/dom/DOMEntityReference.hpp	/^class CDOM_EXPORT DOMEntityReference: public DOMNode {$/;"	c
DOMEntityReferenceImpl	include/xercesc/dom/impl/DOMEntityReferenceImpl.hpp	/^class CDOM_EXPORT DOMEntityReferenceImpl: public DOMEntityReference$/;"	c
DOMError	include/xercesc/dom/DOMError.hpp	/^    DOMError() {};$/;"	f	class:DOMError
DOMError	include/xercesc/dom/DOMError.hpp	/^class CDOM_EXPORT DOMError$/;"	c
DOMErrorHandler	include/xercesc/dom/DOMErrorHandler.hpp	/^    DOMErrorHandler() {};$/;"	f	class:DOMErrorHandler
DOMErrorHandler	include/xercesc/dom/DOMErrorHandler.hpp	/^class CDOM_EXPORT DOMErrorHandler$/;"	c
DOMErrorImpl	include/xercesc/dom/impl/DOMErrorImpl.hpp	/^class CDOM_EXPORT DOMErrorImpl : public DOMError$/;"	c
DOMErrorType	include/xercesc/framework/XMLErrorCodes.hpp	/^    static DOMError::ErrorSeverity  DOMErrorType(const XMLErrs::Codes toCheck)$/;"	f	class:XMLErrs
DOMErrorType	include/xercesc/framework/XMLValidityCodes.hpp	/^    static DOMError::ErrorSeverity  DOMErrorType(const XMLValid::Codes toCheck)$/;"	f	class:XMLValid
DOMErrorType	include/xercesc/util/XMLDOMMsg.hpp	/^    static DOMError::ErrorSeverity  DOMErrorType(const XMLDOMMsg::Codes toCheck)$/;"	f	class:XMLDOMMsg
DOMException	include/xercesc/dom/DOMException.hpp	/^class CDOM_EXPORT DOMException  {$/;"	c
DOMImplementation	include/xercesc/dom/DOMImplementation.hpp	/^        DOMImplementation() {};                                      \/\/ no plain constructor$/;"	f	class:DOMImplementation
DOMImplementation	include/xercesc/dom/DOMImplementation.hpp	/^class CDOM_EXPORT DOMImplementation : public DOMImplementationLS$/;"	c
DOMImplementationImpl	include/xercesc/dom/impl/DOMImplementationImpl.hpp	/^    DOMImplementationImpl() {};$/;"	f	class:DOMImplementationImpl
DOMImplementationImpl	include/xercesc/dom/impl/DOMImplementationImpl.hpp	/^class DOMImplementationImpl: public XMemory,$/;"	c
DOMImplementationLS	include/xercesc/dom/DOMImplementationLS.hpp	/^    DOMImplementationLS() {};$/;"	f	class:DOMImplementationLS
DOMImplementationLS	include/xercesc/dom/DOMImplementationLS.hpp	/^class CDOM_EXPORT DOMImplementationLS$/;"	c
DOMImplementationLSMode	include/xercesc/dom/DOMImplementationLS.hpp	/^    enum DOMImplementationLSMode$/;"	g	class:DOMImplementationLS
DOMImplementationList	include/xercesc/dom/DOMImplementationList.hpp	/^    DOMImplementationList() {};$/;"	f	class:DOMImplementationList
DOMImplementationList	include/xercesc/dom/DOMImplementationList.hpp	/^class  CDOM_EXPORT DOMImplementationList {$/;"	c
DOMImplementationListImpl	include/xercesc/dom/impl/DOMImplementationListImpl.hpp	/^class CDOM_EXPORT DOMImplementationListImpl: public DOMImplementationList$/;"	c
DOMImplementationRegistry	include/xercesc/dom/DOMImplementationRegistry.hpp	/^class CDOM_EXPORT DOMImplementationRegistry$/;"	c
DOMImplementationSource	include/xercesc/dom/DOMImplementationSource.hpp	/^    DOMImplementationSource() {};$/;"	f	class:DOMImplementationSource
DOMImplementationSource	include/xercesc/dom/DOMImplementationSource.hpp	/^class CDOM_EXPORT DOMImplementationSource$/;"	c
DOMLSEXCEPTION_ERRX	include/xercesc/util/XMLDOMMsg.hpp	/^      , DOMLSEXCEPTION_ERRX                = 23$/;"	e	enum:XMLDOMMsg::Codes
DOMLSException	include/xercesc/dom/DOMLSException.hpp	/^class CDOM_EXPORT DOMLSException : public DOMException {$/;"	c
DOMLSInput	include/xercesc/dom/DOMLSInput.hpp	/^    DOMLSInput() {};$/;"	f	class:DOMLSInput
DOMLSInput	include/xercesc/dom/DOMLSInput.hpp	/^class CDOM_EXPORT DOMLSInput$/;"	c
DOMLSInputImpl	include/xercesc/dom/impl/DOMLSInputImpl.hpp	/^class CDOM_EXPORT DOMLSInputImpl : public XMemory, public DOMLSInput$/;"	c
DOMLSOutput	include/xercesc/dom/DOMLSOutput.hpp	/^    DOMLSOutput() {};$/;"	f	class:DOMLSOutput
DOMLSOutput	include/xercesc/dom/DOMLSOutput.hpp	/^class CDOM_EXPORT DOMLSOutput$/;"	c
DOMLSOutputImpl	include/xercesc/dom/impl/DOMLSOutputImpl.hpp	/^class CDOM_EXPORT DOMLSOutputImpl : public XMemory, public DOMLSOutput$/;"	c
DOMLSParser	include/xercesc/dom/DOMLSParser.hpp	/^    DOMLSParser() {};$/;"	f	class:DOMLSParser
DOMLSParser	include/xercesc/dom/DOMLSParser.hpp	/^class CDOM_EXPORT DOMLSParser$/;"	c
DOMLSParserFilter	include/xercesc/dom/DOMLSParserFilter.hpp	/^    DOMLSParserFilter() {};$/;"	f	class:DOMLSParserFilter
DOMLSParserFilter	include/xercesc/dom/DOMLSParserFilter.hpp	/^class CDOM_EXPORT DOMLSParserFilter {$/;"	c
DOMLSParserImpl	include/xercesc/parsers/DOMLSParserImpl.hpp	/^class PARSERS_EXPORT DOMLSParserImpl : public AbstractDOMParser,$/;"	c
DOMLSResourceResolver	include/xercesc/dom/DOMLSResourceResolver.hpp	/^    DOMLSResourceResolver() {};$/;"	f	class:DOMLSResourceResolver
DOMLSResourceResolver	include/xercesc/dom/DOMLSResourceResolver.hpp	/^class CDOM_EXPORT DOMLSResourceResolver$/;"	c
DOMLSSerializer	include/xercesc/dom/DOMLSSerializer.hpp	/^    DOMLSSerializer() {};$/;"	f	class:DOMLSSerializer
DOMLSSerializer	include/xercesc/dom/DOMLSSerializer.hpp	/^class CDOM_EXPORT DOMLSSerializer$/;"	c
DOMLSSerializerFilter	include/xercesc/dom/DOMLSSerializerFilter.hpp	/^    DOMLSSerializerFilter() {};$/;"	f	class:DOMLSSerializerFilter
DOMLSSerializerFilter	include/xercesc/dom/DOMLSSerializerFilter.hpp	/^class CDOM_EXPORT DOMLSSerializerFilter : public DOMNodeFilter {$/;"	c
DOMLSSerializerImpl	include/xercesc/dom/impl/DOMLSSerializerImpl.hpp	/^class CDOM_EXPORT DOMLSSerializerImpl : public XMemory,$/;"	c
DOMLevel1Node	include/xercesc/framework/XMLErrorCodes.hpp	/^      , DOMLevel1Node                      = 151$/;"	e	enum:XMLErrs::Codes
DOMLocator	include/xercesc/dom/DOMLocator.hpp	/^    DOMLocator() {};$/;"	f	class:DOMLocator
DOMLocator	include/xercesc/dom/DOMLocator.hpp	/^class CDOM_EXPORT DOMLocator$/;"	c
DOMLocatorImpl	include/xercesc/dom/impl/DOMLocatorImpl.hpp	/^class CDOM_EXPORT DOMLocatorImpl : public DOMLocator$/;"	c
DOMMemoryManager	include/xercesc/dom/DOMMemoryManager.hpp	/^    DOMMemoryManager() {};$/;"	f	class:DOMMemoryManager
DOMMemoryManager	include/xercesc/dom/DOMMemoryManager.hpp	/^class CDOM_EXPORT DOMMemoryManager$/;"	c
DOMNODE_FUNCTIONS	include/xercesc/dom/impl/DOMAttrImpl.hpp	/^    DOMNODE_FUNCTIONS;$/;"	m	class:DOMAttrImpl
DOMNODE_FUNCTIONS	include/xercesc/dom/impl/DOMCDATASectionImpl.hpp	/^    DOMNODE_FUNCTIONS;$/;"	m	class:DOMCDATASectionImpl
DOMNODE_FUNCTIONS	include/xercesc/dom/impl/DOMCommentImpl.hpp	/^    DOMNODE_FUNCTIONS;$/;"	m	class:DOMCommentImpl
DOMNODE_FUNCTIONS	include/xercesc/dom/impl/DOMDocumentFragmentImpl.hpp	/^    DOMNODE_FUNCTIONS;$/;"	m	class:DOMDocumentFragmentImpl
DOMNODE_FUNCTIONS	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^    DOMNODE_FUNCTIONS;$/;"	m	class:DOMDocumentImpl
DOMNODE_FUNCTIONS	include/xercesc/dom/impl/DOMDocumentTypeImpl.hpp	/^    DOMNODE_FUNCTIONS;$/;"	m	class:DOMDocumentTypeImpl
DOMNODE_FUNCTIONS	include/xercesc/dom/impl/DOMElementImpl.hpp	/^    DOMNODE_FUNCTIONS;$/;"	m	class:DOMElementImpl
DOMNODE_FUNCTIONS	include/xercesc/dom/impl/DOMEntityImpl.hpp	/^    DOMNODE_FUNCTIONS;$/;"	m	class:DOMEntityImpl
DOMNODE_FUNCTIONS	include/xercesc/dom/impl/DOMEntityReferenceImpl.hpp	/^    DOMNODE_FUNCTIONS;$/;"	m	class:DOMEntityReferenceImpl
DOMNODE_FUNCTIONS	include/xercesc/dom/impl/DOMNodeImpl.hpp	289;"	d
DOMNODE_FUNCTIONS	include/xercesc/dom/impl/DOMNotationImpl.hpp	/^    DOMNODE_FUNCTIONS;$/;"	m	class:DOMNotationImpl
DOMNODE_FUNCTIONS	include/xercesc/dom/impl/DOMProcessingInstructionImpl.hpp	/^    DOMNODE_FUNCTIONS;$/;"	m	class:DOMProcessingInstructionImpl
DOMNODE_FUNCTIONS	include/xercesc/dom/impl/DOMTextImpl.hpp	/^    DOMNODE_FUNCTIONS;$/;"	m	class:DOMTextImpl
DOMNamedNodeMap	include/xercesc/dom/DOMNamedNodeMap.hpp	/^    DOMNamedNodeMap() {};$/;"	f	class:DOMNamedNodeMap
DOMNamedNodeMap	include/xercesc/dom/DOMNamedNodeMap.hpp	/^class CDOM_EXPORT DOMNamedNodeMap {$/;"	c
DOMNamedNodeMapImpl	include/xercesc/dom/impl/DOMNamedNodeMapImpl.hpp	/^class CDOM_EXPORT DOMNamedNodeMapImpl: public DOMNamedNodeMap {$/;"	c
DOMNode	include/xercesc/dom/DOMNode.hpp	/^    DOMNode() {}$/;"	f	class:DOMNode
DOMNode	include/xercesc/dom/DOMNode.hpp	/^    DOMNode(const DOMNode &) {}$/;"	f	class:DOMNode
DOMNode	include/xercesc/dom/DOMNode.hpp	/^class  CDOM_EXPORT DOMNode {$/;"	c
DOMNodeFilter	include/xercesc/dom/DOMNodeFilter.hpp	/^    DOMNodeFilter() {};$/;"	f	class:DOMNodeFilter
DOMNodeFilter	include/xercesc/dom/DOMNodeFilter.hpp	/^class CDOM_EXPORT DOMNodeFilter$/;"	c
DOMNodeIDMap	include/xercesc/dom/impl/DOMNodeIDMap.hpp	/^class DOMNodeIDMap {$/;"	c
DOMNodeImpl	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^class CDOM_EXPORT DOMNodeImpl {$/;"	c
DOMNodeIterator	include/xercesc/dom/DOMNodeIterator.hpp	/^    DOMNodeIterator() {}$/;"	f	class:DOMNodeIterator
DOMNodeIterator	include/xercesc/dom/DOMNodeIterator.hpp	/^    DOMNodeIterator(const DOMNodeIterator &) {}$/;"	f	class:DOMNodeIterator
DOMNodeIterator	include/xercesc/dom/DOMNodeIterator.hpp	/^class CDOM_EXPORT DOMNodeIterator$/;"	c
DOMNodeIteratorImpl	include/xercesc/dom/impl/DOMNodeIteratorImpl.hpp	/^class CDOM_EXPORT DOMNodeIteratorImpl : public DOMNodeIterator {$/;"	c
DOMNodeList	include/xercesc/dom/DOMNodeList.hpp	/^    DOMNodeList() {};$/;"	f	class:DOMNodeList
DOMNodeList	include/xercesc/dom/DOMNodeList.hpp	/^class  CDOM_EXPORT DOMNodeList {$/;"	c
DOMNodeListImpl	include/xercesc/dom/impl/DOMNodeListImpl.hpp	/^class CDOM_EXPORT DOMNodeListImpl: public DOMNodeList$/;"	c
DOMNodePtr	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^typedef RefStackOf<DOMNode>               DOMNodePtr;$/;"	t
DOMNodeSPtr	include/xercesc/dom/StDOMNode.hpp	/^    typedef DOMNode* DOMNodeSPtr;$/;"	t
DOMNodeSPtr	include/xercesc/dom/StDOMNode.hpp	/^    typedef StDOMNode<DOMNode> DOMNodeSPtr;$/;"	t
DOMNodeVector	include/xercesc/dom/impl/DOMNodeVector.hpp	/^class  DOMNodeVector {$/;"	c
DOMNormalizer	include/xercesc/dom/impl/DOMNormalizer.hpp	/^class DOMNormalizer : public XMemory {$/;"	c
DOMNotation	include/xercesc/dom/DOMNotation.hpp	/^    DOMNotation() {}$/;"	f	class:DOMNotation
DOMNotation	include/xercesc/dom/DOMNotation.hpp	/^    DOMNotation(const DOMNotation &other) : DOMNode(other) {}$/;"	f	class:DOMNotation
DOMNotation	include/xercesc/dom/DOMNotation.hpp	/^class CDOM_EXPORT DOMNotation: public DOMNode {$/;"	c
DOMNotationImpl	include/xercesc/dom/impl/DOMNotationImpl.hpp	/^class CDOM_EXPORT DOMNotationImpl: public DOMNotation {$/;"	c
DOMOperationType	include/xercesc/dom/DOMUserDataHandler.hpp	/^    enum DOMOperationType {$/;"	g	class:DOMUserDataHandler
DOMPSVITypeInfo	include/xercesc/dom/DOMPSVITypeInfo.hpp	/^    DOMPSVITypeInfo() {};$/;"	f	class:DOMPSVITypeInfo
DOMPSVITypeInfo	include/xercesc/dom/DOMPSVITypeInfo.hpp	/^class CDOM_EXPORT DOMPSVITypeInfo$/;"	c
DOMParentNode	include/xercesc/dom/impl/DOMParentNode.hpp	/^class CDOM_EXPORT DOMParentNode  {$/;"	c
DOMProcessingInstruction	include/xercesc/dom/DOMProcessingInstruction.hpp	/^    DOMProcessingInstruction() {}$/;"	f	class:DOMProcessingInstruction
DOMProcessingInstruction	include/xercesc/dom/DOMProcessingInstruction.hpp	/^    DOMProcessingInstruction(const DOMProcessingInstruction &other) : DOMNode(other) {}$/;"	f	class:DOMProcessingInstruction
DOMProcessingInstruction	include/xercesc/dom/DOMProcessingInstruction.hpp	/^class  CDOM_EXPORT DOMProcessingInstruction: public DOMNode {$/;"	c
DOMProcessingInstructionImpl	include/xercesc/dom/impl/DOMProcessingInstructionImpl.hpp	/^class CDOM_EXPORT DOMProcessingInstructionImpl: public DOMProcessingInstruction {$/;"	c
DOMRANGEEXCEPTION_ERRX	include/xercesc/util/XMLDOMMsg.hpp	/^      , DOMRANGEEXCEPTION_ERRX             = 20$/;"	e	enum:XMLDOMMsg::Codes
DOMRange	include/xercesc/dom/DOMRange.hpp	/^    DOMRange() {}$/;"	f	class:DOMRange
DOMRange	include/xercesc/dom/DOMRange.hpp	/^    DOMRange(const DOMRange &) {}$/;"	f	class:DOMRange
DOMRange	include/xercesc/dom/DOMRange.hpp	/^class CDOM_EXPORT DOMRange {$/;"	c
DOMRangeException	include/xercesc/dom/DOMRangeException.hpp	/^class CDOM_EXPORT DOMRangeException  : public DOMException {$/;"	c
DOMRangeImpl	include/xercesc/dom/impl/DOMRangeImpl.hpp	/^class CDOM_EXPORT DOMRangeImpl: public DOMRange {$/;"	c
DOMSTRING_SIZE_ERR	include/xercesc/dom/DOMException.hpp	/^         DOMSTRING_SIZE_ERR             = 2,$/;"	e	enum:DOMException::ExceptionCode
DOMSTRING_SIZE_ERR	include/xercesc/util/XMLDOMMsg.hpp	/^      , DOMSTRING_SIZE_ERR                 = 4$/;"	e	enum:XMLDOMMsg::Codes
DOMStringList	include/xercesc/dom/DOMStringList.hpp	/^    DOMStringList() {};$/;"	f	class:DOMStringList
DOMStringList	include/xercesc/dom/DOMStringList.hpp	/^class  CDOM_EXPORT DOMStringList {$/;"	c
DOMStringListImpl	include/xercesc/dom/impl/DOMStringListImpl.hpp	/^class CDOM_EXPORT DOMStringListImpl: public XMemory,$/;"	c
DOMStringPoolEntry	include/xercesc/dom/impl/DOMStringPool.hpp	/^struct DOMStringPoolEntry$/;"	s
DOMText	include/xercesc/dom/DOMText.hpp	/^    DOMText() {}$/;"	f	class:DOMText
DOMText	include/xercesc/dom/DOMText.hpp	/^    DOMText(const DOMText &other) : DOMCharacterData(other) {}$/;"	f	class:DOMText
DOMText	include/xercesc/dom/DOMText.hpp	/^class CDOM_EXPORT DOMText: public DOMCharacterData {$/;"	c
DOMTextImpl	include/xercesc/dom/impl/DOMTextImpl.hpp	/^class CDOM_EXPORT DOMTextImpl: public DOMText {$/;"	c
DOMTreeWalker	include/xercesc/dom/DOMTreeWalker.hpp	/^    DOMTreeWalker() {}$/;"	f	class:DOMTreeWalker
DOMTreeWalker	include/xercesc/dom/DOMTreeWalker.hpp	/^    DOMTreeWalker(const DOMTreeWalker &) {}$/;"	f	class:DOMTreeWalker
DOMTreeWalker	include/xercesc/dom/DOMTreeWalker.hpp	/^class CDOM_EXPORT DOMTreeWalker {$/;"	c
DOMTreeWalkerImpl	include/xercesc/dom/impl/DOMTreeWalkerImpl.hpp	/^class CDOM_EXPORT DOMTreeWalkerImpl : public DOMTreeWalker {$/;"	c
DOMTypeInfo	include/xercesc/dom/DOMTypeInfo.hpp	/^    DOMTypeInfo() {};$/;"	f	class:DOMTypeInfo
DOMTypeInfo	include/xercesc/dom/DOMTypeInfo.hpp	/^class CDOM_EXPORT DOMTypeInfo$/;"	c
DOMTypeInfoImpl	include/xercesc/dom/impl/DOMTypeInfoImpl.hpp	/^class CDOM_EXPORT DOMTypeInfoImpl : public DOMTypeInfo, public DOMPSVITypeInfo$/;"	c
DOMUserDataHandler	include/xercesc/dom/DOMUserDataHandler.hpp	/^    DOMUserDataHandler() {};$/;"	f	class:DOMUserDataHandler
DOMUserDataHandler	include/xercesc/dom/DOMUserDataHandler.hpp	/^class CDOM_EXPORT DOMUserDataHandler {$/;"	c
DOMUserDataRecord	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^typedef KeyRefPair<void, DOMUserDataHandler> DOMUserDataRecord;$/;"	t
DOMXPATHEXCEPTION_ERRX	include/xercesc/util/XMLDOMMsg.hpp	/^      , DOMXPATHEXCEPTION_ERRX             = 26$/;"	e	enum:XMLDOMMsg::Codes
DOMXPathEvaluator	include/xercesc/dom/DOMXPathEvaluator.hpp	/^    DOMXPathEvaluator() {};$/;"	f	class:DOMXPathEvaluator
DOMXPathEvaluator	include/xercesc/dom/DOMXPathEvaluator.hpp	/^class CDOM_EXPORT DOMXPathEvaluator$/;"	c
DOMXPathException	include/xercesc/dom/DOMXPathException.hpp	/^class CDOM_EXPORT DOMXPathException : public DOMException$/;"	c
DOMXPathExpression	include/xercesc/dom/DOMXPathExpression.hpp	/^    DOMXPathExpression() {};$/;"	f	class:DOMXPathExpression
DOMXPathExpression	include/xercesc/dom/DOMXPathExpression.hpp	/^class CDOM_EXPORT DOMXPathExpression$/;"	c
DOMXPathExpressionImpl	include/xercesc/dom/impl/DOMXPathExpressionImpl.hpp	/^class CDOM_EXPORT DOMXPathExpressionImpl :  public XMemory,$/;"	c
DOMXPathNSResolver	include/xercesc/dom/DOMXPathNSResolver.hpp	/^    DOMXPathNSResolver() {};$/;"	f	class:DOMXPathNSResolver
DOMXPathNSResolver	include/xercesc/dom/DOMXPathNSResolver.hpp	/^class CDOM_EXPORT DOMXPathNSResolver$/;"	c
DOMXPathNSResolverImpl	include/xercesc/dom/impl/DOMXPathNSResolverImpl.hpp	/^class CDOM_EXPORT DOMXPathNSResolverImpl : public XMemory,$/;"	c
DOMXPathNamespace	include/xercesc/dom/DOMXPathNamespace.hpp	/^    DOMXPathNamespace() {};$/;"	f	class:DOMXPathNamespace
DOMXPathNamespace	include/xercesc/dom/DOMXPathNamespace.hpp	/^class CDOM_EXPORT DOMXPathNamespace : public DOMNode$/;"	c
DOMXPathResult	include/xercesc/dom/DOMXPathResult.hpp	/^    DOMXPathResult() {};$/;"	f	class:DOMXPathResult
DOMXPathResult	include/xercesc/dom/DOMXPathResult.hpp	/^class CDOM_EXPORT DOMXPathResult$/;"	c
DOMXPathResultImpl	include/xercesc/dom/impl/DOMXPathResultImpl.hpp	/^class CDOM_EXPORT DOMXPathResultImpl :  public XMemory,$/;"	c
DOM_SEVERITY_ERROR	include/xercesc/dom/DOMError.hpp	/^        DOM_SEVERITY_ERROR       = 2,$/;"	e	enum:DOMError::ErrorSeverity
DOM_SEVERITY_FATAL_ERROR	include/xercesc/dom/DOMError.hpp	/^        DOM_SEVERITY_FATAL_ERROR = 3$/;"	e	enum:DOMError::ErrorSeverity
DOM_SEVERITY_WARNING	include/xercesc/dom/DOMError.hpp	/^        DOM_SEVERITY_WARNING     = 1,$/;"	e	enum:DOMError::ErrorSeverity
DTD	include/xercesc/framework/XMLElementDecl.hpp	/^      , DTD$/;"	e	enum:XMLElementDecl::objectType
DTDAttDef	include/xercesc/validators/DTD/DTDAttDef.hpp	/^class VALIDATORS_EXPORT DTDAttDef : public XMLAttDef$/;"	c
DTDAttDefList	include/xercesc/validators/DTD/DTDAttDefList.hpp	/^class VALIDATORS_EXPORT DTDAttDefList : public XMLAttDefList$/;"	c
DTDElementDecl	include/xercesc/validators/DTD/DTDElementDecl.hpp	/^class VALIDATORS_EXPORT DTDElementDecl : public XMLElementDecl$/;"	c
DTDEntityDecl	include/xercesc/validators/DTD/DTDEntityDecl.hpp	/^class VALIDATORS_EXPORT DTDEntityDecl : public XMLEntityDecl$/;"	c
DTDEntityDecl	include/xercesc/validators/DTD/DTDEntityDecl.hpp	/^inline DTDEntityDecl::DTDEntityDecl( const XMLCh* const   entName$/;"	f	class:DTDEntityDecl
DTDEntityDecl	include/xercesc/validators/DTD/DTDEntityDecl.hpp	/^inline DTDEntityDecl::DTDEntityDecl(MemoryManager* const manager) :$/;"	f	class:DTDEntityDecl
DTDEntityDecl	include/xercesc/validators/DTD/DTDEntityDecl.hpp	/^inline DTDEntityDecl::DTDEntityDecl(const   XMLCh* const    entName$/;"	f	class:DTDEntityDecl
DTDGrammar	include/xercesc/validators/DTD/DTDGrammar.hpp	/^class VALIDATORS_EXPORT DTDGrammar : public Grammar$/;"	c
DTDGrammarType	include/xercesc/validators/common/Grammar.hpp	/^        DTDGrammarType$/;"	e	enum:Grammar::GrammarType
DTDHandler	include/xercesc/sax/DTDHandler.hpp	/^    DTDHandler()$/;"	f	class:DTDHandler
DTDHandler	include/xercesc/sax/DTDHandler.hpp	/^class SAX_EXPORT DTDHandler$/;"	c
DTDScanner	include/xercesc/validators/DTD/DTDScanner.hpp	/^class VALIDATORS_EXPORT DTDScanner : public XMemory$/;"	c
DTDValidator	include/xercesc/validators/DTD/DTDValidator.hpp	/^class VALIDATORS_EXPORT DTDValidator : public XMLValidator$/;"	c
DTD_UnknownCreateReason	include/xercesc/util/XMLExceptMsgs.hpp	/^      , DTD_UnknownCreateReason            = 23$/;"	e	enum:XMLExcepts::Codes
DVHashTable	include/xercesc/validators/datatype/DatatypeValidatorFactory.hpp	/^typedef RefHashTableOf<DatatypeValidator> DVHashTable;$/;"	t
DV_AnyURI	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        DV_AnyURI = 4,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
DV_Boolean	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        DV_Boolean = 16,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
DV_Form	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        DV_Form = 64,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
DV_ID	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        DV_ID = 32,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
DV_InvalidOperation	include/xercesc/util/XMLExceptMsgs.hpp	/^      , DV_InvalidOperation                = 267$/;"	e	enum:XMLExcepts::Codes
DV_Mask	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        DV_Mask = (DV_AnyURI | DV_NonNegInt | DV_Boolean | DV_ID | DV_Form |$/;"	e	enum:GeneralAttributeCheck::<anonymous>
DV_MaxOccurs	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        DV_MaxOccurs = 128,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
DV_MaxOccurs1	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        DV_MaxOccurs1 = 256,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
DV_MinOccurs1	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        DV_MinOccurs1 = 512,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
DV_NonNegInt	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        DV_NonNegInt = 8,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
DV_ProcessContents	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        DV_ProcessContents = 1024,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
DV_String	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        DV_String = 0,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
DV_Use	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        DV_Use = 2048,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
DV_WhiteSpace	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        DV_WhiteSpace = 4096,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
DataGroup	include/xercesc/framework/psvi/XSValue.hpp	/^    enum DataGroup {$/;"	g	class:XSValue
DataType	include/xercesc/framework/psvi/XSValue.hpp	/^    enum DataType {$/;"	g	class:XSValue
DatatypeError	include/xercesc/framework/XMLValidityCodes.hpp	/^      , DatatypeError                      = 32$/;"	e	enum:XMLValid::Codes
DatatypeValidationFailure	include/xercesc/framework/XMLValidityCodes.hpp	/^      , DatatypeValidationFailure          = 53$/;"	e	enum:XMLValid::Codes
DatatypeValidator	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^class VALIDATORS_EXPORT DatatypeValidator : public XSerializable, public XMemory$/;"	c
DatatypeValidatorCreationError	include/xercesc/framework/XMLErrorCodes.hpp	/^      , DatatypeValidatorCreationError     = 44$/;"	e	enum:XMLErrs::Codes
DatatypeValidatorFactory	include/xercesc/validators/datatype/DatatypeValidatorFactory.hpp	/^class VALIDATORS_EXPORT DatatypeValidatorFactory : public XSerializable, public XMemory$/;"	c
Date	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        Date,$/;"	e	enum:DatatypeValidator::ValidatorType
DateDatatypeValidator	include/xercesc/validators/datatype/DateDatatypeValidator.hpp	/^class VALIDATORS_EXPORT DateDatatypeValidator : public DateTimeValidator$/;"	c
DateTime	include/xercesc/util/XMLNumber.hpp	/^        DateTime,$/;"	e	enum:XMLNumber::NumberType
DateTime	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        DateTime,$/;"	e	enum:DatatypeValidator::ValidatorType
DateTime	include/xercesc/validators/datatype/XMLCanRepGroup.hpp	/^        DateTime,$/;"	e	enum:XMLCanRepGroup::CanRepGroup
DateTimeDatatypeValidator	include/xercesc/validators/datatype/DateTimeDatatypeValidator.hpp	/^class VALIDATORS_EXPORT DateTimeDatatypeValidator : public DateTimeValidator$/;"	c
DateTimeValidator	include/xercesc/validators/datatype/DateTimeValidator.hpp	/^class VALIDATORS_EXPORT DateTimeValidator : public AbstractNumericFacetValidator$/;"	c
DateTime_date_incomplete	include/xercesc/util/XMLExceptMsgs.hpp	/^      , DateTime_date_incomplete           = 300$/;"	e	enum:XMLExcepts::Codes
DateTime_date_invalid	include/xercesc/util/XMLExceptMsgs.hpp	/^      , DateTime_date_invalid              = 301$/;"	e	enum:XMLExcepts::Codes
DateTime_day_invalid	include/xercesc/util/XMLExceptMsgs.hpp	/^      , DateTime_day_invalid               = 316$/;"	e	enum:XMLExcepts::Codes
DateTime_dt_invalid	include/xercesc/util/XMLExceptMsgs.hpp	/^      , DateTime_dt_invalid                = 287$/;"	e	enum:XMLExcepts::Codes
DateTime_dt_missingT	include/xercesc/util/XMLExceptMsgs.hpp	/^      , DateTime_dt_missingT               = 288$/;"	e	enum:XMLExcepts::Codes
DateTime_dur_DashNotFirst	include/xercesc/util/XMLExceptMsgs.hpp	/^      , DateTime_dur_DashNotFirst          = 295$/;"	e	enum:XMLExcepts::Codes
DateTime_dur_NoElementAtAll	include/xercesc/util/XMLExceptMsgs.hpp	/^      , DateTime_dur_NoElementAtAll        = 298$/;"	e	enum:XMLExcepts::Codes
DateTime_dur_NoTimeAfterT	include/xercesc/util/XMLExceptMsgs.hpp	/^      , DateTime_dur_NoTimeAfterT          = 297$/;"	e	enum:XMLExcepts::Codes
DateTime_dur_Start_dashP	include/xercesc/util/XMLExceptMsgs.hpp	/^      , DateTime_dur_Start_dashP           = 293$/;"	e	enum:XMLExcepts::Codes
DateTime_dur_inv_b4T	include/xercesc/util/XMLExceptMsgs.hpp	/^      , DateTime_dur_inv_b4T               = 296$/;"	e	enum:XMLExcepts::Codes
DateTime_dur_inv_seconds	include/xercesc/util/XMLExceptMsgs.hpp	/^      , DateTime_dur_inv_seconds           = 299$/;"	e	enum:XMLExcepts::Codes
DateTime_dur_invalid	include/xercesc/util/XMLExceptMsgs.hpp	/^      , DateTime_dur_invalid               = 292$/;"	e	enum:XMLExcepts::Codes
DateTime_dur_noP	include/xercesc/util/XMLExceptMsgs.hpp	/^      , DateTime_dur_noP                   = 294$/;"	e	enum:XMLExcepts::Codes
DateTime_gDay_invalid	include/xercesc/util/XMLExceptMsgs.hpp	/^      , DateTime_gDay_invalid              = 289$/;"	e	enum:XMLExcepts::Codes
DateTime_gMthDay_invalid	include/xercesc/util/XMLExceptMsgs.hpp	/^      , DateTime_gMthDay_invalid           = 291$/;"	e	enum:XMLExcepts::Codes
DateTime_gMth_invalid	include/xercesc/util/XMLExceptMsgs.hpp	/^      , DateTime_gMth_invalid              = 290$/;"	e	enum:XMLExcepts::Codes
DateTime_hour_invalid	include/xercesc/util/XMLExceptMsgs.hpp	/^      , DateTime_hour_invalid              = 317$/;"	e	enum:XMLExcepts::Codes
DateTime_min_invalid	include/xercesc/util/XMLExceptMsgs.hpp	/^      , DateTime_min_invalid               = 318$/;"	e	enum:XMLExcepts::Codes
DateTime_ms_noDigit	include/xercesc/util/XMLExceptMsgs.hpp	/^      , DateTime_ms_noDigit                = 304$/;"	e	enum:XMLExcepts::Codes
DateTime_mth_invalid	include/xercesc/util/XMLExceptMsgs.hpp	/^      , DateTime_mth_invalid               = 315$/;"	e	enum:XMLExcepts::Codes
DateTime_second_invalid	include/xercesc/util/XMLExceptMsgs.hpp	/^      , DateTime_second_invalid            = 319$/;"	e	enum:XMLExcepts::Codes
DateTime_time_incomplete	include/xercesc/util/XMLExceptMsgs.hpp	/^      , DateTime_time_incomplete           = 302$/;"	e	enum:XMLExcepts::Codes
DateTime_time_invalid	include/xercesc/util/XMLExceptMsgs.hpp	/^      , DateTime_time_invalid              = 303$/;"	e	enum:XMLExcepts::Codes
DateTime_tz_hh_invalid	include/xercesc/util/XMLExceptMsgs.hpp	/^      , DateTime_tz_hh_invalid             = 320$/;"	e	enum:XMLExcepts::Codes
DateTime_tz_invalid	include/xercesc/util/XMLExceptMsgs.hpp	/^      , DateTime_tz_invalid                = 313$/;"	e	enum:XMLExcepts::Codes
DateTime_tz_noUTCsign	include/xercesc/util/XMLExceptMsgs.hpp	/^      , DateTime_tz_noUTCsign              = 311$/;"	e	enum:XMLExcepts::Codes
DateTime_tz_stuffAfterZ	include/xercesc/util/XMLExceptMsgs.hpp	/^      , DateTime_tz_stuffAfterZ            = 312$/;"	e	enum:XMLExcepts::Codes
DateTime_year_invalid	include/xercesc/util/XMLExceptMsgs.hpp	/^      , DateTime_year_invalid              = 307$/;"	e	enum:XMLExcepts::Codes
DateTime_year_leadingZero	include/xercesc/util/XMLExceptMsgs.hpp	/^      , DateTime_year_leadingZero          = 309$/;"	e	enum:XMLExcepts::Codes
DateTime_year_tooShort	include/xercesc/util/XMLExceptMsgs.hpp	/^      , DateTime_year_tooShort             = 308$/;"	e	enum:XMLExcepts::Codes
DateTime_year_zero	include/xercesc/util/XMLExceptMsgs.hpp	/^      , DateTime_year_zero                 = 314$/;"	e	enum:XMLExcepts::Codes
DateTime_ym_incomplete	include/xercesc/util/XMLExceptMsgs.hpp	/^      , DateTime_ym_incomplete             = 305$/;"	e	enum:XMLExcepts::Codes
DateTime_ym_invalid	include/xercesc/util/XMLExceptMsgs.hpp	/^      , DateTime_ym_invalid                = 306$/;"	e	enum:XMLExcepts::Codes
DateTime_ym_noMonth	include/xercesc/util/XMLExceptMsgs.hpp	/^      , DateTime_ym_noMonth                = 310$/;"	e	enum:XMLExcepts::Codes
Day	include/xercesc/util/XMLDateTime.hpp	/^        Day        ,$/;"	e	enum:XMLDateTime::valueIndex
Day	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        Day,$/;"	e	enum:DatatypeValidator::ValidatorType
DayDatatypeValidator	include/xercesc/validators/datatype/DayDatatypeValidator.hpp	/^class VALIDATORS_EXPORT DayDatatypeValidator : public DateTimeValidator$/;"	c
Decimal	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        Decimal,$/;"	e	enum:DatatypeValidator::ValidatorType
Decimal	include/xercesc/validators/datatype/XMLCanRepGroup.hpp	/^        Decimal,$/;"	e	enum:XMLCanRepGroup::CanRepGroup
DecimalDatatypeValidator	include/xercesc/validators/datatype/DecimalDatatypeValidator.hpp	/^class VALIDATORS_EXPORT DecimalDatatypeValidator : public AbstractNumericValidator$/;"	c
Decimal_Derived_npi	include/xercesc/validators/datatype/XMLCanRepGroup.hpp	/^        Decimal_Derived_npi,$/;"	e	enum:XMLCanRepGroup::CanRepGroup
Decimal_Derived_signed	include/xercesc/validators/datatype/XMLCanRepGroup.hpp	/^        Decimal_Derived_signed,$/;"	e	enum:XMLCanRepGroup::CanRepGroup
Decimal_Derived_unsigned	include/xercesc/validators/datatype/XMLCanRepGroup.hpp	/^        Decimal_Derived_unsigned,$/;"	e	enum:XMLCanRepGroup::CanRepGroup
DeclHandler	include/xercesc/sax2/DeclHandler.hpp	/^    DeclHandler()$/;"	f	class:DeclHandler
DeclHandler	include/xercesc/sax2/DeclHandler.hpp	/^class SAX2_EXPORT DeclHandler$/;"	c
DeclStringRep	include/xercesc/framework/XMLErrorCodes.hpp	/^      , DeclStringRep                      = 240$/;"	e	enum:XMLErrs::Codes
DeclStringsInWrongOrder	include/xercesc/framework/XMLErrorCodes.hpp	/^      , DeclStringsInWrongOrder            = 241$/;"	e	enum:XMLErrs::Codes
DeclTypes	include/xercesc/internal/XMLScanner.hpp	/^    enum DeclTypes$/;"	g	class:XMLScanner
Decl_Text	include/xercesc/internal/XMLScanner.hpp	/^        Decl_Text$/;"	e	enum:XMLScanner::DeclTypes
Decl_XML	include/xercesc/internal/XMLScanner.hpp	/^        , Decl_XML$/;"	e	enum:XMLScanner::DeclTypes
DeclarationNoSchemaLocation	include/xercesc/framework/XMLErrorCodes.hpp	/^      , DeclarationNoSchemaLocation        = 75$/;"	e	enum:XMLErrs::Codes
DeclarationNotFound	include/xercesc/framework/XMLErrorCodes.hpp	/^      , DeclarationNotFound                = 103$/;"	e	enum:XMLErrs::Codes
Declared	include/xercesc/framework/XMLElementDecl.hpp	/^        , Declared$/;"	e	enum:XMLElementDecl::CreateReasons
DefAttTypes	include/xercesc/framework/XMLAttDef.hpp	/^    enum DefAttTypes$/;"	g	class:XMLAttDef
DefAttTypes_Count	include/xercesc/framework/XMLAttDef.hpp	/^        , DefAttTypes_Count$/;"	e	enum:XMLAttDef::DefAttTypes
DefAttTypes_Max	include/xercesc/framework/XMLAttDef.hpp	/^        , DefAttTypes_Max   = 8$/;"	e	enum:XMLAttDef::DefAttTypes
DefAttTypes_Min	include/xercesc/framework/XMLAttDef.hpp	/^        , DefAttTypes_Min   = 0$/;"	e	enum:XMLAttDef::DefAttTypes
DefAttTypes_Unknown	include/xercesc/framework/XMLAttDef.hpp	/^        , DefAttTypes_Unknown = -1$/;"	e	enum:XMLAttDef::DefAttTypes
Default	include/xercesc/framework/XMLAttDef.hpp	/^        Default                  = 0$/;"	e	enum:XMLAttDef::DefAttTypes
DefaultEscape	include/xercesc/framework/XMLFormatter.hpp	/^        , DefaultEscape     = 999$/;"	e	enum:XMLFormatter::EscapeFlags
DefaultHandler	include/xercesc/sax2/DefaultHandler.hpp	/^    DefaultHandler() {};$/;"	f	class:DefaultHandler
DefaultHandler	include/xercesc/sax2/DefaultHandler.hpp	/^class SAX2_EXPORT DefaultHandler :$/;"	c
DefaultPanicHandler	include/xercesc/util/DefaultPanicHandler.hpp	/^    DefaultPanicHandler(){};$/;"	f	class:DefaultPanicHandler
DefaultPanicHandler	include/xercesc/util/DefaultPanicHandler.hpp	/^class XMLUTIL_EXPORT DefaultPanicHandler : public XMemory, public PanicHandler$/;"	c
DefaultUnRep	include/xercesc/framework/XMLFormatter.hpp	/^        , DefaultUnRep      = 999$/;"	e	enum:XMLFormatter::UnRepFlags
DerivationMethods	include/xercesc/dom/DOMTypeInfo.hpp	/^    enum DerivationMethods {$/;"	g	class:DOMTypeInfo
DisallowedBaseDerivation	include/xercesc/framework/XMLErrorCodes.hpp	/^      , DisallowedBaseDerivation           = 62$/;"	e	enum:XMLErrs::Codes
DisallowedSimpleTypeExtension	include/xercesc/framework/XMLErrorCodes.hpp	/^      , DisallowedSimpleTypeExtension      = 56$/;"	e	enum:XMLErrs::Codes
DisplayErrorMessage	include/xercesc/framework/XMLValidityCodes.hpp	/^      , DisplayErrorMessage                = 39$/;"	e	enum:XMLValid::Codes
DocTypeHandler	include/xercesc/validators/DTD/DocTypeHandler.hpp	/^    DocTypeHandler()$/;"	f	class:DocTypeHandler
DocTypeHandler	include/xercesc/validators/DTD/DocTypeHandler.hpp	/^class VALIDATORS_EXPORT DocTypeHandler$/;"	c
DocumentHandler	include/xercesc/sax/DocumentHandler.hpp	/^    DocumentHandler()$/;"	f	class:DocumentHandler
DocumentHandler	include/xercesc/sax/DocumentHandler.hpp	/^class SAX_EXPORT DocumentHandler$/;"	c
DocumentPosition	include/xercesc/dom/DOMNode.hpp	/^    enum DocumentPosition {$/;"	g	class:DOMNode
DoesNotMatchEnumList	include/xercesc/framework/XMLValidityCodes.hpp	/^      , DoesNotMatchEnumList               = 23$/;"	e	enum:XMLValid::Codes
Double	include/xercesc/util/XMLNumber.hpp	/^        Double,$/;"	e	enum:XMLNumber::NumberType
Double	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        Double,$/;"	e	enum:DatatypeValidator::ValidatorType
DoubleDatatypeValidator	include/xercesc/validators/datatype/DoubleDatatypeValidator.hpp	/^class VALIDATORS_EXPORT DoubleDatatypeValidator : public AbstractNumericValidator$/;"	c
DoubleFloat	include/xercesc/validators/datatype/XMLCanRepGroup.hpp	/^        DoubleFloat,$/;"	e	enum:XMLCanRepGroup::CanRepGroup
DoubleFloatType	include/xercesc/framework/psvi/XSValue.hpp	/^    enum DoubleFloatType$/;"	g	class:XSValue
DoubleFloatType_NaN	include/xercesc/framework/psvi/XSValue.hpp	/^        DoubleFloatType_NaN,$/;"	e	enum:XSValue::DoubleFloatType
DoubleFloatType_NegINF	include/xercesc/framework/psvi/XSValue.hpp	/^        DoubleFloatType_NegINF,$/;"	e	enum:XSValue::DoubleFloatType
DoubleFloatType_Normal	include/xercesc/framework/psvi/XSValue.hpp	/^        DoubleFloatType_Normal$/;"	e	enum:XSValue::DoubleFloatType
DoubleFloatType_PosINF	include/xercesc/framework/psvi/XSValue.hpp	/^        DoubleFloatType_PosINF,$/;"	e	enum:XSValue::DoubleFloatType
DoubleFloatType_Zero	include/xercesc/framework/psvi/XSValue.hpp	/^        DoubleFloatType_Zero,$/;"	e	enum:XSValue::DoubleFloatType
DuplicateAnyAttribute	include/xercesc/framework/XMLErrorCodes.hpp	/^      , DuplicateAnyAttribute              = 152$/;"	e	enum:XMLErrs::Codes
DuplicateAttInDerivation	include/xercesc/framework/XMLErrorCodes.hpp	/^      , DuplicateAttInDerivation           = 107$/;"	e	enum:XMLErrs::Codes
DuplicateAttribute	include/xercesc/framework/XMLErrorCodes.hpp	/^      , DuplicateAttribute                 = 49$/;"	e	enum:XMLErrs::Codes
DuplicateDocTypeDecl	include/xercesc/framework/XMLErrorCodes.hpp	/^      , DuplicateDocTypeDecl               = 275$/;"	e	enum:XMLErrs::Codes
DuplicateElementDeclaration	include/xercesc/framework/XMLErrorCodes.hpp	/^      , DuplicateElementDeclaration        = 67$/;"	e	enum:XMLErrs::Codes
DuplicateFacet	include/xercesc/framework/XMLErrorCodes.hpp	/^      , DuplicateFacet                     = 28$/;"	e	enum:XMLErrs::Codes
DuplicateGlobalDeclaration	include/xercesc/framework/XMLErrorCodes.hpp	/^      , DuplicateGlobalDeclaration         = 88$/;"	e	enum:XMLErrs::Codes
DuplicateGlobalType	include/xercesc/framework/XMLErrorCodes.hpp	/^      , DuplicateGlobalType                = 87$/;"	e	enum:XMLErrs::Codes
DuplicateRefAttribute	include/xercesc/framework/XMLErrorCodes.hpp	/^      , DuplicateRefAttribute              = 70$/;"	e	enum:XMLErrs::Codes
Duration	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        Duration,$/;"	e	enum:DatatypeValidator::ValidatorType
DurationDatatypeValidator	include/xercesc/validators/datatype/DurationDatatypeValidator.hpp	/^class VALIDATORS_EXPORT DurationDatatypeValidator : public DateTimeValidator$/;"	c
EBCDIC	include/xercesc/framework/XMLRecognizer.hpp	/^        EBCDIC          = 0$/;"	e	enum:XMLRecognizer::Encodings
ECS_Final	include/xercesc/validators/schema/TraverseSchema.hpp	/^        , ECS_Final$/;"	e	enum:TraverseSchema::<anonymous>
EC_Final	include/xercesc/validators/schema/TraverseSchema.hpp	/^        , EC_Final$/;"	e	enum:TraverseSchema::<anonymous>
EEndianNameMapFor	include/xercesc/util/TransENameMap.c	/^template <class TType> EEndianNameMapFor<TType>::EEndianNameMapFor(const XMLCh* const encodingName, const bool swapped) :$/;"	f	class:TType
EEndianNameMapFor	include/xercesc/util/TransENameMap.hpp	/^template <class TType> class EEndianNameMapFor : public ENameMap$/;"	c
ELEMENT_DECLARATION	include/xercesc/framework/psvi/XSConstants.hpp	/^	      ELEMENT_DECLARATION       = 2,$/;"	e	enum:XSConstants::COMPONENT_TYPE
ELEMENT_NODE	include/xercesc/dom/DOMNode.hpp	/^        ELEMENT_NODE                = 1,$/;"	e	enum:DOMNode::NodeType
ELEMENT_NS_OBJECT	include/xercesc/dom/DOMMemoryManager.hpp	/^        ELEMENT_NS_OBJECT             = 7,$/;"	e	enum:DOMMemoryManager::NodeObjectType
ELEMENT_OBJECT	include/xercesc/dom/DOMMemoryManager.hpp	/^        ELEMENT_OBJECT                = 6,$/;"	e	enum:DOMMemoryManager::NodeObjectType
ELTSchemaNS	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ELTSchemaNS                        = 148$/;"	e	enum:XMLErrs::Codes
ENCLOSING_MARK	include/xercesc/util/regx/XMLUniCharacter.hpp	/^        ENCLOSING_MARK          = 7,$/;"	e	enum:XMLUniCharacter::<anonymous>
END_PUNCTUATION	include/xercesc/util/regx/XMLUniCharacter.hpp	/^        END_PUNCTUATION         = 21,$/;"	e	enum:XMLUniCharacter::<anonymous>
END_TO_END	include/xercesc/dom/DOMRange.hpp	/^        END_TO_END      = 2,$/;"	e	enum:DOMRange::CompareHow
END_TO_START	include/xercesc/dom/DOMRange.hpp	/^        END_TO_START    = 3$/;"	e	enum:DOMRange::CompareHow
ENTITY	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        ENTITY,$/;"	e	enum:DatatypeValidator::ValidatorType
ENTITYDatatypeValidator	include/xercesc/validators/datatype/ENTITYDatatypeValidator.hpp	/^class VALIDATORS_EXPORT ENTITYDatatypeValidator : public StringDatatypeValidator$/;"	c
ENTITY_EXPANSION_LIMIT	include/xercesc/util/SecurityManager.hpp	/^    enum { ENTITY_EXPANSION_LIMIT = 50000};$/;"	e	enum:SecurityManager::<anonymous>
ENTITY_NODE	include/xercesc/dom/DOMNode.hpp	/^        ENTITY_NODE                 = 6,$/;"	e	enum:DOMNode::NodeType
ENTITY_OBJECT	include/xercesc/dom/DOMMemoryManager.hpp	/^        ENTITY_OBJECT                 = 8,$/;"	e	enum:DOMMemoryManager::NodeObjectType
ENTITY_REFERENCE_NODE	include/xercesc/dom/DOMNode.hpp	/^        ENTITY_REFERENCE_NODE       = 5,$/;"	e	enum:DOMNode::NodeType
ENTITY_REFERENCE_OBJECT	include/xercesc/dom/DOMMemoryManager.hpp	/^        ENTITY_REFERENCE_OBJECT       = 9,$/;"	e	enum:DOMMemoryManager::NodeObjectType
ENameMap	include/xercesc/util/TransENameMap.hpp	/^    ENameMap(const XMLCh* const encodingName) :$/;"	f	class:ENameMap
ENameMap	include/xercesc/util/TransENameMap.hpp	/^class ENameMap : public XMemory$/;"	c
ENameMapFor	include/xercesc/util/TransENameMap.c	/^ENameMapFor<TType>::ENameMapFor(const XMLCh* const encodingName) :$/;"	f	class:TType
ENameMapFor	include/xercesc/util/TransENameMap.hpp	/^template <class TType> class ENameMapFor : public ENameMap$/;"	c
EQUAL	include/xercesc/util/XMLNumber.hpp	/^        EQUAL         = 0,$/;"	e	enum:XMLNumber::<anonymous>
ES_Block	include/xercesc/validators/schema/TraverseSchema.hpp	/^        ES_Block$/;"	e	enum:TraverseSchema::<anonymous>
EXPRTOKEN_ATSIGN	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_ATSIGN                      =  6,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_AXISNAME_ANCESTOR	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_AXISNAME_ANCESTOR           = 33,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_AXISNAME_ANCESTOR_OR_SELF	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_AXISNAME_ANCESTOR_OR_SELF   = 34,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_AXISNAME_ATTRIBUTE	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_AXISNAME_ATTRIBUTE          = 35,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_AXISNAME_CHILD	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_AXISNAME_CHILD              = 36,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_AXISNAME_DESCENDANT	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_AXISNAME_DESCENDANT         = 37,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_AXISNAME_DESCENDANT_OR_SELF	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_AXISNAME_DESCENDANT_OR_SELF = 38,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_AXISNAME_FOLLOWING	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_AXISNAME_FOLLOWING          = 39,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_AXISNAME_FOLLOWING_SIBLING	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_AXISNAME_FOLLOWING_SIBLING  = 40,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_AXISNAME_NAMESPACE	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_AXISNAME_NAMESPACE          = 41,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_AXISNAME_PARENT	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_AXISNAME_PARENT             = 42,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_AXISNAME_PRECEDING	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_AXISNAME_PRECEDING          = 43,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_AXISNAME_PRECEDING_SIBLING	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_AXISNAME_PRECEDING_SIBLING  = 44,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_AXISNAME_SELF	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_AXISNAME_SELF               = 45,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_CLOSE_BRACKET	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_CLOSE_BRACKET               =  3,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_CLOSE_PAREN	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_CLOSE_PAREN                 =  1,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_COMMA	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_COMMA                       =  7,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_DOUBLE_COLON	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_DOUBLE_COLON                =  8,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_DOUBLE_PERIOD	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_DOUBLE_PERIOD               =  5,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_FUNCTION_NAME	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_FUNCTION_NAME               = 32,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_LITERAL	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_LITERAL                     = 46,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_NAMETEST_ANY	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_NAMETEST_ANY                =  9,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_NAMETEST_NAMESPACE	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_NAMETEST_NAMESPACE          = 10,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_NAMETEST_QNAME	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_NAMETEST_QNAME              = 11,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_NODETYPE_COMMENT	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_NODETYPE_COMMENT            = 12,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_NODETYPE_NODE	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_NODETYPE_NODE               = 15,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_NODETYPE_PI	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_NODETYPE_PI                 = 14,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_NODETYPE_TEXT	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_NODETYPE_TEXT               = 13,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_NUMBER	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_NUMBER                      = 47,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_OPEN_BRACKET	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_OPEN_BRACKET                =  2,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_OPEN_PAREN	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_OPEN_PAREN                  =  0,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_OPERATOR_AND	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_OPERATOR_AND                = 16,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_OPERATOR_DIV	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_OPERATOR_DIV                = 19,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_OPERATOR_DOUBLE_SLASH	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_OPERATOR_DOUBLE_SLASH       = 22,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_OPERATOR_EQUAL	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_OPERATOR_EQUAL              = 26,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_OPERATOR_GREATER	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_OPERATOR_GREATER            = 30,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_OPERATOR_GREATER_EQUAL	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_OPERATOR_GREATER_EQUAL      = 31,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_OPERATOR_LESS	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_OPERATOR_LESS               = 28,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_OPERATOR_LESS_EQUAL	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_OPERATOR_LESS_EQUAL         = 29,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_OPERATOR_MINUS	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_OPERATOR_MINUS              = 25,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_OPERATOR_MOD	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_OPERATOR_MOD                = 18,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_OPERATOR_MULT	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_OPERATOR_MULT               = 20,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_OPERATOR_NOT_EQUAL	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_OPERATOR_NOT_EQUAL          = 27,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_OPERATOR_OR	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_OPERATOR_OR                 = 17,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_OPERATOR_PLUS	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_OPERATOR_PLUS               = 24,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_OPERATOR_SLASH	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_OPERATOR_SLASH              = 21,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_OPERATOR_UNION	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_OPERATOR_UNION              = 23,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_PERIOD	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_PERIOD                      =  4,$/;"	e	enum:XercesXPath::<anonymous>
EXPRTOKEN_VARIABLE_REFERENCE	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        EXPRTOKEN_VARIABLE_REFERENCE          = 48$/;"	e	enum:XercesXPath::<anonymous>
EXTENDED_COMMENT	include/xercesc/util/regx/RegularExpression.hpp	/^    static const unsigned int   EXTENDED_COMMENT;$/;"	m	class:RegularExpression
EXTRACT_CONTENTS	include/xercesc/dom/impl/DOMRangeImpl.hpp	/^        EXTRACT_CONTENTS = 1,$/;"	e	enum:DOMRangeImpl::TraversalType
E_All	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_All,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_Annotation	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_Annotation,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_Any	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_Any,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_AnyAttribute	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_AnyAttribute,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_Appinfo	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_Appinfo,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_AttributeGlobal	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_AttributeGlobal,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_AttributeGroupGlobal	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_AttributeGroupGlobal,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_AttributeGroupRef	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_AttributeGroupRef,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_AttributeLocal	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_AttributeLocal,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_AttributeRef	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_AttributeRef,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_Choice	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_Choice,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_ComplexContent	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_ComplexContent,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_ComplexTypeGlobal	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_ComplexTypeGlobal,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_ComplexTypeLocal	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_ComplexTypeLocal,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_Count	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_Count,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_Documentation	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_Documentation,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_ElementGlobal	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_ElementGlobal,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_ElementLocal	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_ElementLocal,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_ElementRef	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_ElementRef,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_Enumeration	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_Enumeration,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_Extension	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_Extension,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_Field	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_Field,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_FractionDigits	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_FractionDigits,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_GroupGlobal	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_GroupGlobal,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_GroupRef	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_GroupRef,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_HighBounds	include/xercesc/framework/XMLErrorCodes.hpp	/^      , E_HighBounds                       = 154$/;"	e	enum:XMLErrs::Codes
E_HighBounds	include/xercesc/framework/XMLValidityCodes.hpp	/^      , E_HighBounds                       = 79$/;"	e	enum:XMLValid::Codes
E_HighBounds	include/xercesc/util/XMLDOMMsg.hpp	/^      , E_HighBounds                       = 40$/;"	e	enum:XMLDOMMsg::Codes
E_HighBounds	include/xercesc/util/XMLExceptMsgs.hpp	/^      , E_HighBounds                       = 368$/;"	e	enum:XMLExcepts::Codes
E_Import	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_Import,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_Include	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_Include,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_Invalid	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_Invalid = -1$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_Key	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_Key,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_KeyRef	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_KeyRef,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_Length	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_Length,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_List	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_List,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_LowBounds	include/xercesc/framework/XMLErrorCodes.hpp	/^      , E_LowBounds                        = 12$/;"	e	enum:XMLErrs::Codes
E_LowBounds	include/xercesc/framework/XMLValidityCodes.hpp	/^      , E_LowBounds                        = 1$/;"	e	enum:XMLValid::Codes
E_LowBounds	include/xercesc/util/XMLDOMMsg.hpp	/^      , E_LowBounds                        = 39$/;"	e	enum:XMLDOMMsg::Codes
E_LowBounds	include/xercesc/util/XMLExceptMsgs.hpp	/^      , E_LowBounds                        = 367$/;"	e	enum:XMLExcepts::Codes
E_MaxExclusive	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_MaxExclusive,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_MaxInclusive	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_MaxInclusive,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_MaxLength	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_MaxLength,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_MinExclusive	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_MinExclusive,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_MinInclusive	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_MinInclusive,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_MinLength	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_MinLength,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_Notation	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_Notation,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_Pattern	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_Pattern,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_Redefine	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_Redefine,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_Restriction	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_Restriction,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_Schema	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_Schema,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_Selector	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_Selector,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_Sequence	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_Sequence,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_SimpleContent	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_SimpleContent,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_SimpleTypeGlobal	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_SimpleTypeGlobal,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_SimpleTypeLocal	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_SimpleTypeLocal,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_TotalDigits	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_TotalDigits,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_Union	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_Union,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_Unique	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_Unique,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
E_WhiteSpace	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^        E_WhiteSpace,$/;"	e	enum:GeneralAttributeCheck::<anonymous>
ElemChildrenHasInvalidWS	include/xercesc/framework/XMLValidityCodes.hpp	/^      , ElemChildrenHasInvalidWS           = 78$/;"	e	enum:XMLValid::Codes
ElemIDValueConstraint	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ElemIDValueConstraint              = 92$/;"	e	enum:XMLErrs::Codes
ElemNoSubforBlock	include/xercesc/framework/XMLValidityCodes.hpp	/^      , ElemNoSubforBlock                  = 60$/;"	e	enum:XMLValid::Codes
ElemOneNotationAttr	include/xercesc/framework/XMLValidityCodes.hpp	/^      , ElemOneNotationAttr                = 76$/;"	e	enum:XMLValid::Codes
ElemStack	include/xercesc/internal/ElemStack.hpp	/^class XMLPARSER_EXPORT ElemStack : public XMemory$/;"	c
ElemStack_EmptyStack	include/xercesc/util/XMLExceptMsgs.hpp	/^      , ElemStack_EmptyStack               = 24$/;"	e	enum:XMLExcepts::Codes
ElemStack_NoParentPushed	include/xercesc/util/XMLExceptMsgs.hpp	/^      , ElemStack_NoParentPushed           = 26$/;"	e	enum:XMLExcepts::Codes
ElemStack_StackUnderflow	include/xercesc/util/XMLExceptMsgs.hpp	/^      , ElemStack_StackUnderflow           = 25$/;"	e	enum:XMLExcepts::Codes
ElemVector	include/xercesc/validators/schema/SchemaGrammar.hpp	/^typedef ValueVectorOf<SchemaElementDecl*> ElemVector;$/;"	t
Elem_Def_Qualified	include/xercesc/validators/schema/TraverseSchema.hpp	/^        Elem_Def_Qualified = 1,$/;"	e	enum:TraverseSchema::<anonymous>
ElementAlreadyExists	include/xercesc/framework/XMLValidityCodes.hpp	/^      , ElementAlreadyExists               = 10$/;"	e	enum:XMLValid::Codes
ElementNotDefined	include/xercesc/framework/XMLValidityCodes.hpp	/^      , ElementNotDefined                  = 2$/;"	e	enum:XMLValid::Codes
ElementNotQualified	include/xercesc/framework/XMLValidityCodes.hpp	/^      , ElementNotQualified                = 45$/;"	e	enum:XMLValid::Codes
ElementNotUnQualified	include/xercesc/framework/XMLValidityCodes.hpp	/^      , ElementNotUnQualified              = 46$/;"	e	enum:XMLValid::Codes
ElementNotValidForContent	include/xercesc/framework/XMLValidityCodes.hpp	/^      , ElementNotValidForContent          = 7$/;"	e	enum:XMLValid::Codes
ElementOnlyEmpty	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^        , ElementOnlyEmpty$/;"	e	enum:SchemaElementDecl::ModelTypes
ElementWithFixedAndDefault	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ElementWithFixedAndDefault         = 52$/;"	e	enum:XMLErrs::Codes
ElementWithTypeAndAnonType	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ElementWithTypeAndAnonType         = 54$/;"	e	enum:XMLErrs::Codes
EmptiableMixedContent	include/xercesc/framework/XMLErrorCodes.hpp	/^      , EmptiableMixedContent              = 94$/;"	e	enum:XMLErrs::Codes
Empty	include/xercesc/validators/DTD/DTDElementDecl.hpp	/^        Empty$/;"	e	enum:DTDElementDecl::ModelTypes
Empty	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^        Empty$/;"	e	enum:SchemaElementDecl::ModelTypes
EmptyComplexRestrictionDerivation	include/xercesc/framework/XMLErrorCodes.hpp	/^      , EmptyComplexRestrictionDerivation   = 95$/;"	e	enum:XMLErrs::Codes
EmptyElemHasContent	include/xercesc/framework/XMLValidityCodes.hpp	/^      , EmptyElemHasContent                = 75$/;"	e	enum:XMLValid::Codes
EmptyElemNotationAttr	include/xercesc/framework/XMLValidityCodes.hpp	/^      , EmptyElemNotationAttr              = 74$/;"	e	enum:XMLValid::Codes
EmptyMainEntity	include/xercesc/framework/XMLErrorCodes.hpp	/^      , EmptyMainEntity                    = 250$/;"	e	enum:XMLErrs::Codes
EmptyNotValidForContent	include/xercesc/framework/XMLValidityCodes.hpp	/^      , EmptyNotValidForContent            = 16$/;"	e	enum:XMLValid::Codes
EmptySimpleTypeContent	include/xercesc/framework/XMLErrorCodes.hpp	/^      , EmptySimpleTypeContent             = 30$/;"	e	enum:XMLErrs::Codes
EncodingRequired	include/xercesc/framework/XMLErrorCodes.hpp	/^      , EncodingRequired                   = 257$/;"	e	enum:XMLErrs::Codes
EncodingValidator	include/xercesc/util/EncodingValidator.hpp	/^class XMLUTIL_EXPORT EncodingValidator {$/;"	c
Encodings	include/xercesc/framework/XMLRecognizer.hpp	/^    enum Encodings$/;"	g	class:XMLRecognizer
Encodings_Count	include/xercesc/framework/XMLRecognizer.hpp	/^        , Encodings_Count$/;"	e	enum:XMLRecognizer::Encodings
Encodings_Max	include/xercesc/framework/XMLRecognizer.hpp	/^        , Encodings_Max = XERCES_XMLCH$/;"	e	enum:XMLRecognizer::Encodings
Encodings_Min	include/xercesc/framework/XMLRecognizer.hpp	/^        , Encodings_Min = EBCDIC$/;"	e	enum:XMLRecognizer::Encodings
EndOfEntityException	include/xercesc/internal/EndOfEntityException.hpp	/^    EndOfEntityException(       XMLEntityDecl*  entityThatEnded$/;"	f	class:EndOfEntityException
EndOfEntityException	include/xercesc/internal/EndOfEntityException.hpp	/^    EndOfEntityException(const EndOfEntityException& toCopy) :$/;"	f	class:EndOfEntityException
EndOfEntityException	include/xercesc/internal/EndOfEntityException.hpp	/^class XMLPARSER_EXPORT EndOfEntityException$/;"	c
EndedWithTagsOnStack	include/xercesc/framework/XMLErrorCodes.hpp	/^      , EndedWithTagsOnStack               = 246$/;"	e	enum:XMLErrs::Codes
Entities	include/xercesc/framework/XMLAttDef.hpp	/^        , Entities          = 5$/;"	e	enum:XMLAttDef::AttTypes
Entity	include/xercesc/framework/XMLAttDef.hpp	/^        , Entity            = 4$/;"	e	enum:XMLAttDef::AttTypes
EntityExpRes	include/xercesc/internal/XMLScanner.hpp	/^    enum EntityExpRes$/;"	g	class:XMLScanner
EntityExpRes	include/xercesc/validators/DTD/DTDScanner.hpp	/^    enum EntityExpRes$/;"	g	class:DTDScanner
EntityExp_Failed	include/xercesc/internal/XMLScanner.hpp	/^        , EntityExp_Failed$/;"	e	enum:XMLScanner::EntityExpRes
EntityExp_Failed	include/xercesc/validators/DTD/DTDScanner.hpp	/^        EntityExp_Failed$/;"	e	enum:DTDScanner::EntityExpRes
EntityExp_Pushed	include/xercesc/internal/XMLScanner.hpp	/^        EntityExp_Pushed$/;"	e	enum:XMLScanner::EntityExpRes
EntityExp_Pushed	include/xercesc/validators/DTD/DTDScanner.hpp	/^        , EntityExp_Pushed$/;"	e	enum:DTDScanner::EntityExpRes
EntityExp_Returned	include/xercesc/internal/XMLScanner.hpp	/^        , EntityExp_Returned$/;"	e	enum:XMLScanner::EntityExpRes
EntityExp_Returned	include/xercesc/validators/DTD/DTDScanner.hpp	/^        , EntityExp_Returned$/;"	e	enum:DTDScanner::EntityExpRes
EntityExpansionLimitExceeded	include/xercesc/framework/XMLErrorCodes.hpp	/^      , EntityExpansionLimitExceeded       = 156$/;"	e	enum:XMLErrs::Codes
EntityNotFound	include/xercesc/framework/XMLErrorCodes.hpp	/^      , EntityNotFound                     = 202$/;"	e	enum:XMLErrs::Codes
EntityPropogated	include/xercesc/framework/XMLErrorCodes.hpp	/^      , EntityPropogated                   = 231$/;"	e	enum:XMLErrs::Codes
EntityResolver	include/xercesc/sax/EntityResolver.hpp	/^    EntityResolver()$/;"	f	class:EntityResolver
EntityResolver	include/xercesc/sax/EntityResolver.hpp	/^class SAX_EXPORT EntityResolver$/;"	c
Enum_NoMoreElements	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Enum_NoMoreElements                = 27$/;"	e	enum:XMLExcepts::Codes
Enumeration	include/xercesc/framework/XMLAttDef.hpp	/^        , Enumeration       = 9$/;"	e	enum:XMLAttDef::AttTypes
ErrType_Error	include/xercesc/framework/XMLErrorReporter.hpp	/^        , ErrType_Error$/;"	e	enum:XMLErrorReporter::ErrTypes
ErrType_Fatal	include/xercesc/framework/XMLErrorReporter.hpp	/^        , ErrType_Fatal$/;"	e	enum:XMLErrorReporter::ErrTypes
ErrType_Warning	include/xercesc/framework/XMLErrorReporter.hpp	/^        ErrType_Warning$/;"	e	enum:XMLErrorReporter::ErrTypes
ErrTypes	include/xercesc/framework/XMLErrorReporter.hpp	/^    enum ErrTypes$/;"	g	class:XMLErrorReporter
ErrTypes_Unknown	include/xercesc/framework/XMLErrorReporter.hpp	/^        , ErrTypes_Unknown$/;"	e	enum:XMLErrorReporter::ErrTypes
ErrorHandler	include/xercesc/sax/ErrorHandler.hpp	/^    ErrorHandler()$/;"	f	class:ErrorHandler
ErrorHandler	include/xercesc/sax/ErrorHandler.hpp	/^class SAX_EXPORT ErrorHandler$/;"	c
ErrorSeverity	include/xercesc/dom/DOMError.hpp	/^    enum ErrorSeverity$/;"	g	class:DOMError
EscapeFlags	include/xercesc/framework/XMLFormatter.hpp	/^    enum EscapeFlags$/;"	g	class:XMLFormatter
EscapeFlags_Count	include/xercesc/framework/XMLFormatter.hpp	/^        , EscapeFlags_Count$/;"	e	enum:XMLFormatter::EscapeFlags
ExceptionCode	include/xercesc/dom/DOMException.hpp	/^    enum ExceptionCode {$/;"	g	class:DOMException
ExceptionCode	include/xercesc/dom/DOMXPathException.hpp	/^	enum ExceptionCode {$/;"	g	class:DOMXPathException
ExceptionCodes	include/xercesc/validators/schema/TraverseSchema.hpp	/^    enum ExceptionCodes$/;"	g	class:TraverseSchema
Expected2ndSurrogateChar	include/xercesc/framework/XMLErrorCodes.hpp	/^      , Expected2ndSurrogateChar           = 223$/;"	e	enum:XMLErrs::Codes
ExpectedAsterisk	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedAsterisk                   = 209$/;"	e	enum:XMLErrs::Codes
ExpectedAttrName	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedAttrName                   = 158$/;"	e	enum:XMLErrs::Codes
ExpectedAttrValue	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedAttrValue                  = 177$/;"	e	enum:XMLErrs::Codes
ExpectedAttributeType	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedAttributeType              = 179$/;"	e	enum:XMLErrs::Codes
ExpectedChoiceOrCloseParen	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedChoiceOrCloseParen         = 214$/;"	e	enum:XMLErrs::Codes
ExpectedComment	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedComment                    = 183$/;"	e	enum:XMLErrs::Codes
ExpectedCommentOrCDATA	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedCommentOrCDATA             = 157$/;"	e	enum:XMLErrs::Codes
ExpectedCommentOrPI	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedCommentOrPI                = 184$/;"	e	enum:XMLErrs::Codes
ExpectedContentSpecExpr	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedContentSpecExpr            = 208$/;"	e	enum:XMLErrs::Codes
ExpectedDeclString	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedDeclString                 = 166$/;"	e	enum:XMLErrs::Codes
ExpectedDefAttrDecl	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedDefAttrDecl                = 161$/;"	e	enum:XMLErrs::Codes
ExpectedElementName	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedElementName                = 163$/;"	e	enum:XMLErrs::Codes
ExpectedEndOfConditional	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedEndOfConditional           = 224$/;"	e	enum:XMLErrs::Codes
ExpectedEndOfTagX	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedEndOfTagX                  = 180$/;"	e	enum:XMLErrs::Codes
ExpectedEntityRefName	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedEntityRefName              = 201$/;"	e	enum:XMLErrs::Codes
ExpectedEntityValue	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedEntityValue                = 244$/;"	e	enum:XMLErrs::Codes
ExpectedEnumSepOrParen	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedEnumSepOrParen             = 217$/;"	e	enum:XMLErrs::Codes
ExpectedEnumValue	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedEnumValue                  = 216$/;"	e	enum:XMLErrs::Codes
ExpectedEqSign	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedEqSign                     = 162$/;"	e	enum:XMLErrs::Codes
ExpectedINCLUDEBracket	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedINCLUDEBracket             = 226$/;"	e	enum:XMLErrs::Codes
ExpectedIncOrIgn	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedIncOrIgn                   = 225$/;"	e	enum:XMLErrs::Codes
ExpectedMarkup	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedMarkup                     = 181$/;"	e	enum:XMLErrs::Codes
ExpectedMarkupDecl	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedMarkupDecl                 = 194$/;"	e	enum:XMLErrs::Codes
ExpectedNDATA	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedNDATA                      = 237$/;"	e	enum:XMLErrs::Codes
ExpectedNotationName	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedNotationName               = 159$/;"	e	enum:XMLErrs::Codes
ExpectedNumericalCharRef	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedNumericalCharRef           = 232$/;"	e	enum:XMLErrs::Codes
ExpectedOpenParen	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedOpenParen                  = 220$/;"	e	enum:XMLErrs::Codes
ExpectedOpenSquareBracket	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedOpenSquareBracket          = 233$/;"	e	enum:XMLErrs::Codes
ExpectedPEName	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedPEName                     = 197$/;"	e	enum:XMLErrs::Codes
ExpectedPublicId	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedPublicId                   = 188$/;"	e	enum:XMLErrs::Codes
ExpectedQuotedString	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedQuotedString               = 187$/;"	e	enum:XMLErrs::Codes
ExpectedSeqChoiceLeaf	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedSeqChoiceLeaf              = 213$/;"	e	enum:XMLErrs::Codes
ExpectedSeqOrCloseParen	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedSeqOrCloseParen            = 215$/;"	e	enum:XMLErrs::Codes
ExpectedSimpleTypeInList	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedSimpleTypeInList           = 24$/;"	e	enum:XMLErrs::Codes
ExpectedSimpleTypeInRestriction	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedSimpleTypeInRestriction    = 27$/;"	e	enum:XMLErrs::Codes
ExpectedSimpleTypeInUnion	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedSimpleTypeInUnion          = 29$/;"	e	enum:XMLErrs::Codes
ExpectedSystemOrPublicId	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedSystemOrPublicId           = 211$/;"	e	enum:XMLErrs::Codes
ExpectedWhitespace	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExpectedWhitespace                 = 185$/;"	e	enum:XMLErrs::Codes
ExternalEntity	include/xercesc/util/XMLResourceIdentifier.hpp	/^        ExternalEntity,$/;"	e	enum:XMLResourceIdentifier::ResourceIdentifierType
ExtraCloseSquare	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ExtraCloseSquare                   = 229$/;"	e	enum:XMLErrs::Codes
FACET	include/xercesc/framework/psvi/XSConstants.hpp	/^	      FACET                     = 13,$/;"	e	enum:XSConstants::COMPONENT_TYPE
FACET	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^    enum FACET {$/;"	g	class:XSSimpleTypeDefinition
FACET_DURATION	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        FACET_DURATION       = 1<<12,$/;"	e	enum:DatatypeValidator::<anonymous>
FACET_ENCODING	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        FACET_ENCODING       = 1<<11,$/;"	e	enum:DatatypeValidator::<anonymous>
FACET_ENUMERATION	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^	    FACET_ENUMERATION         = 2048$/;"	e	enum:XSSimpleTypeDefinition::FACET
FACET_ENUMERATION	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        FACET_ENUMERATION    = 1<<4,$/;"	e	enum:DatatypeValidator::<anonymous>
FACET_FRACTIONDIGITS	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^	    FACET_FRACTIONDIGITS      = 1024,$/;"	e	enum:XSSimpleTypeDefinition::FACET
FACET_FRACTIONDIGITS	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        FACET_FRACTIONDIGITS = 1<<10,$/;"	e	enum:DatatypeValidator::<anonymous>
FACET_Invalid_FractDigit	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_Invalid_FractDigit           = 163$/;"	e	enum:XMLExcepts::Codes
FACET_Invalid_Len	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_Invalid_Len                  = 135$/;"	e	enum:XMLExcepts::Codes
FACET_Invalid_MaxExcl	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_Invalid_MaxExcl              = 159$/;"	e	enum:XMLExcepts::Codes
FACET_Invalid_MaxIncl	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_Invalid_MaxIncl              = 158$/;"	e	enum:XMLExcepts::Codes
FACET_Invalid_MinExcl	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_Invalid_MinExcl              = 161$/;"	e	enum:XMLExcepts::Codes
FACET_Invalid_MinIncl	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_Invalid_MinIncl              = 160$/;"	e	enum:XMLExcepts::Codes
FACET_Invalid_Tag	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_Invalid_Tag                  = 144$/;"	e	enum:XMLExcepts::Codes
FACET_Invalid_TotalDigit	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_Invalid_TotalDigit           = 162$/;"	e	enum:XMLExcepts::Codes
FACET_Invalid_WS	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_Invalid_WS                   = 155$/;"	e	enum:XMLExcepts::Codes
FACET_Invalid_maxLen	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_Invalid_maxLen               = 136$/;"	e	enum:XMLExcepts::Codes
FACET_Invalid_minLen	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_Invalid_minLen               = 137$/;"	e	enum:XMLExcepts::Codes
FACET_LENGTH	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^	    FACET_LENGTH              = 1,$/;"	e	enum:XSSimpleTypeDefinition::FACET
FACET_LENGTH	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        FACET_LENGTH         = 1,$/;"	e	enum:DatatypeValidator::<anonymous>
FACET_Len_baseLen	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_Len_baseLen                  = 145$/;"	e	enum:XMLExcepts::Codes
FACET_Len_baseMaxLen	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_Len_baseMaxLen               = 151$/;"	e	enum:XMLExcepts::Codes
FACET_Len_baseMinLen	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_Len_baseMinLen               = 150$/;"	e	enum:XMLExcepts::Codes
FACET_Len_maxLen	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_Len_maxLen                   = 141$/;"	e	enum:XMLExcepts::Codes
FACET_Len_minLen	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_Len_minLen                   = 142$/;"	e	enum:XMLExcepts::Codes
FACET_List_Null_baseValidator	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_List_Null_baseValidator      = 206$/;"	e	enum:XMLExcepts::Codes
FACET_MAXEXCLUSIVE	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^	    FACET_MAXEXCLUSIVE        = 64,$/;"	e	enum:XSSimpleTypeDefinition::FACET
FACET_MAXEXCLUSIVE	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        FACET_MAXEXCLUSIVE   = 1<<6,$/;"	e	enum:DatatypeValidator::<anonymous>
FACET_MAXINCLUSIVE	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^	    FACET_MAXINCLUSIVE        = 32,$/;"	e	enum:XSSimpleTypeDefinition::FACET
FACET_MAXINCLUSIVE	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        FACET_MAXINCLUSIVE   = 1<<5,$/;"	e	enum:DatatypeValidator::<anonymous>
FACET_MAXLENGTH	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^	    FACET_MAXLENGTH           = 4,$/;"	e	enum:XSSimpleTypeDefinition::FACET
FACET_MAXLENGTH	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        FACET_MAXLENGTH      = 1<<2,$/;"	e	enum:DatatypeValidator::<anonymous>
FACET_MINEXCLUSIVE	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^	    FACET_MINEXCLUSIVE        = 128,$/;"	e	enum:XSSimpleTypeDefinition::FACET
FACET_MINEXCLUSIVE	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        FACET_MINEXCLUSIVE   = 1<<8,$/;"	e	enum:DatatypeValidator::<anonymous>
FACET_MININCLUSIVE	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^	    FACET_MININCLUSIVE        = 256,$/;"	e	enum:XSSimpleTypeDefinition::FACET
FACET_MININCLUSIVE	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        FACET_MININCLUSIVE   = 1<<7,$/;"	e	enum:DatatypeValidator::<anonymous>
FACET_MINLENGTH	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^	    FACET_MINLENGTH           = 2,$/;"	e	enum:XSSimpleTypeDefinition::FACET
FACET_MINLENGTH	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        FACET_MINLENGTH      = 1<<1,$/;"	e	enum:DatatypeValidator::<anonymous>
FACET_NONE	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^	    FACET_NONE                = 0,$/;"	e	enum:XSSimpleTypeDefinition::FACET
FACET_NonNeg_FractDigit	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_NonNeg_FractDigit            = 165$/;"	e	enum:XMLExcepts::Codes
FACET_NonNeg_Len	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_NonNeg_Len                   = 138$/;"	e	enum:XMLExcepts::Codes
FACET_NonNeg_maxLen	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_NonNeg_maxLen                = 139$/;"	e	enum:XMLExcepts::Codes
FACET_NonNeg_minLen	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_NonNeg_minLen                = 140$/;"	e	enum:XMLExcepts::Codes
FACET_PATTERN	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^	    FACET_PATTERN             = 8,$/;"	e	enum:XSSimpleTypeDefinition::FACET
FACET_PATTERN	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        FACET_PATTERN        = 1<<3,$/;"	e	enum:DatatypeValidator::<anonymous>
FACET_PERIOD	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        FACET_PERIOD         = 1<<13,$/;"	e	enum:DatatypeValidator::<anonymous>
FACET_PosInt_TotalDigit	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_PosInt_TotalDigit            = 164$/;"	e	enum:XMLExcepts::Codes
FACET_TOTALDIGITS	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^	    FACET_TOTALDIGITS         = 512,$/;"	e	enum:XSSimpleTypeDefinition::FACET
FACET_TOTALDIGITS	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        FACET_TOTALDIGITS    = 1<<9,$/;"	e	enum:DatatypeValidator::<anonymous>
FACET_TotDigit_FractDigit	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_TotDigit_FractDigit          = 172$/;"	e	enum:XMLExcepts::Codes
FACET_Union_Null_baseValidator	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_Union_Null_baseValidator     = 208$/;"	e	enum:XMLExcepts::Codes
FACET_Union_Null_memberTypeValidators	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_Union_Null_memberTypeValidators   = 207$/;"	e	enum:XMLExcepts::Codes
FACET_Union_invalid_baseValidatorType	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_Union_invalid_baseValidatorType   = 209$/;"	e	enum:XMLExcepts::Codes
FACET_WHITESPACE	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^	    FACET_WHITESPACE          = 16,$/;"	e	enum:XSSimpleTypeDefinition::FACET
FACET_WHITESPACE	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        FACET_WHITESPACE     = 1<<14$/;"	e	enum:DatatypeValidator::<anonymous>
FACET_WS_collapse	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_WS_collapse                  = 156$/;"	e	enum:XMLExcepts::Codes
FACET_WS_replace	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_WS_replace                   = 157$/;"	e	enum:XMLExcepts::Codes
FACET_enum_base	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_enum_base                    = 154$/;"	e	enum:XMLExcepts::Codes
FACET_fractDigit_base_fixed	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_fractDigit_base_fixed        = 201$/;"	e	enum:XMLExcepts::Codes
FACET_fractDigit_base_fractDigit	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_fractDigit_base_fractDigit   = 195$/;"	e	enum:XMLExcepts::Codes
FACET_fractDigit_base_totalDigit	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_fractDigit_base_totalDigit   = 194$/;"	e	enum:XMLExcepts::Codes
FACET_internalError_fixed	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_internalError_fixed          = 205$/;"	e	enum:XMLExcepts::Codes
FACET_maxExcl_base_fixed	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_maxExcl_base_fixed           = 197$/;"	e	enum:XMLExcepts::Codes
FACET_maxExcl_base_maxExcl	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_maxExcl_base_maxExcl         = 177$/;"	e	enum:XMLExcepts::Codes
FACET_maxExcl_base_maxIncl	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_maxExcl_base_maxIncl         = 178$/;"	e	enum:XMLExcepts::Codes
FACET_maxExcl_base_minExcl	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_maxExcl_base_minExcl         = 180$/;"	e	enum:XMLExcepts::Codes
FACET_maxExcl_base_minIncl	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_maxExcl_base_minIncl         = 179$/;"	e	enum:XMLExcepts::Codes
FACET_maxExcl_minExcl	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_maxExcl_minExcl              = 168$/;"	e	enum:XMLExcepts::Codes
FACET_maxExcl_minIncl	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_maxExcl_minIncl              = 169$/;"	e	enum:XMLExcepts::Codes
FACET_maxExcl_notFromBase	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_maxExcl_notFromBase          = 190$/;"	e	enum:XMLExcepts::Codes
FACET_maxIncl_base_fixed	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_maxIncl_base_fixed           = 196$/;"	e	enum:XMLExcepts::Codes
FACET_maxIncl_base_maxExcl	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_maxIncl_base_maxExcl         = 173$/;"	e	enum:XMLExcepts::Codes
FACET_maxIncl_base_maxIncl	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_maxIncl_base_maxIncl         = 174$/;"	e	enum:XMLExcepts::Codes
FACET_maxIncl_base_minExcl	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_maxIncl_base_minExcl         = 176$/;"	e	enum:XMLExcepts::Codes
FACET_maxIncl_base_minIncl	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_maxIncl_base_minIncl         = 175$/;"	e	enum:XMLExcepts::Codes
FACET_maxIncl_minExcl	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_maxIncl_minExcl              = 170$/;"	e	enum:XMLExcepts::Codes
FACET_maxIncl_minIncl	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_maxIncl_minIncl              = 171$/;"	e	enum:XMLExcepts::Codes
FACET_maxIncl_notFromBase	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_maxIncl_notFromBase          = 189$/;"	e	enum:XMLExcepts::Codes
FACET_maxLen_baseLen	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_maxLen_baseLen               = 153$/;"	e	enum:XMLExcepts::Codes
FACET_maxLen_base_fixed	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_maxLen_base_fixed            = 202$/;"	e	enum:XMLExcepts::Codes
FACET_maxLen_basemaxLen	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_maxLen_basemaxLen            = 148$/;"	e	enum:XMLExcepts::Codes
FACET_maxLen_baseminLen	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_maxLen_baseminLen            = 149$/;"	e	enum:XMLExcepts::Codes
FACET_maxLen_minLen	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_maxLen_minLen                = 143$/;"	e	enum:XMLExcepts::Codes
FACET_max_Incl_Excl	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_max_Incl_Excl                = 166$/;"	e	enum:XMLExcepts::Codes
FACET_minExcl_base_fixed	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_minExcl_base_fixed           = 199$/;"	e	enum:XMLExcepts::Codes
FACET_minExcl_base_maxExcl	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_minExcl_base_maxExcl         = 181$/;"	e	enum:XMLExcepts::Codes
FACET_minExcl_base_maxIncl	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_minExcl_base_maxIncl         = 182$/;"	e	enum:XMLExcepts::Codes
FACET_minExcl_base_minExcl	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_minExcl_base_minExcl         = 184$/;"	e	enum:XMLExcepts::Codes
FACET_minExcl_base_minIncl	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_minExcl_base_minIncl         = 183$/;"	e	enum:XMLExcepts::Codes
FACET_minExcl_notFromBase	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_minExcl_notFromBase          = 192$/;"	e	enum:XMLExcepts::Codes
FACET_minIncl_base_fixed	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_minIncl_base_fixed           = 198$/;"	e	enum:XMLExcepts::Codes
FACET_minIncl_base_maxExcl	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_minIncl_base_maxExcl         = 185$/;"	e	enum:XMLExcepts::Codes
FACET_minIncl_base_maxIncl	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_minIncl_base_maxIncl         = 186$/;"	e	enum:XMLExcepts::Codes
FACET_minIncl_base_minExcl	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_minIncl_base_minExcl         = 188$/;"	e	enum:XMLExcepts::Codes
FACET_minIncl_base_minIncl	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_minIncl_base_minIncl         = 187$/;"	e	enum:XMLExcepts::Codes
FACET_minIncl_notFromBase	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_minIncl_notFromBase          = 191$/;"	e	enum:XMLExcepts::Codes
FACET_minLen_baseLen	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_minLen_baseLen               = 152$/;"	e	enum:XMLExcepts::Codes
FACET_minLen_base_fixed	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_minLen_base_fixed            = 203$/;"	e	enum:XMLExcepts::Codes
FACET_minLen_basemaxLen	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_minLen_basemaxLen            = 147$/;"	e	enum:XMLExcepts::Codes
FACET_minLen_baseminLen	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_minLen_baseminLen            = 146$/;"	e	enum:XMLExcepts::Codes
FACET_min_Incl_Excl	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_min_Incl_Excl                = 167$/;"	e	enum:XMLExcepts::Codes
FACET_totalDigit_base_fixed	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_totalDigit_base_fixed        = 200$/;"	e	enum:XMLExcepts::Codes
FACET_totalDigit_base_totalDigit	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_totalDigit_base_totalDigit   = 193$/;"	e	enum:XMLExcepts::Codes
FACET_whitespace_base_fixed	include/xercesc/util/XMLExceptMsgs.hpp	/^      , FACET_whitespace_base_fixed        = 204$/;"	e	enum:XMLExcepts::Codes
FC_ANY	include/xercesc/util/regx/Token.hpp	/^        FC_ANY = 2$/;"	e	enum:Token::<anonymous>
FC_CONTINUE	include/xercesc/util/regx/Token.hpp	/^        FC_CONTINUE = 0,$/;"	e	enum:Token::<anonymous>
FC_TERMINAL	include/xercesc/util/regx/Token.hpp	/^        FC_TERMINAL = 1,$/;"	e	enum:Token::<anonymous>
FEATURE_CANONICAL_FORM	include/xercesc/dom/impl/DOMConfigurationImpl.hpp	/^        FEATURE_CANONICAL_FORM                = 0x0001,$/;"	e	enum:DOMConfigurationImpl::DOMConfigurationFeature
FEATURE_CDATA_SECTIONS	include/xercesc/dom/impl/DOMConfigurationImpl.hpp	/^        FEATURE_CDATA_SECTIONS                = 0x0002,$/;"	e	enum:DOMConfigurationImpl::DOMConfigurationFeature
FEATURE_COMMENTS	include/xercesc/dom/impl/DOMConfigurationImpl.hpp	/^        FEATURE_COMMENTS                      = 0x0004,$/;"	e	enum:DOMConfigurationImpl::DOMConfigurationFeature
FEATURE_DATATYPE_NORMALIZATION	include/xercesc/dom/impl/DOMConfigurationImpl.hpp	/^        FEATURE_DATATYPE_NORMALIZATION        = 0x0008,$/;"	e	enum:DOMConfigurationImpl::DOMConfigurationFeature
FEATURE_DISCARD_DEFAULT_CONTENT	include/xercesc/dom/impl/DOMConfigurationImpl.hpp	/^        FEATURE_DISCARD_DEFAULT_CONTENT       = 0x0010, $/;"	e	enum:DOMConfigurationImpl::DOMConfigurationFeature
FEATURE_ELEMENT_CONTENT_WHITESPACE	include/xercesc/dom/impl/DOMConfigurationImpl.hpp	/^        FEATURE_ELEMENT_CONTENT_WHITESPACE    = 0x2000$/;"	e	enum:DOMConfigurationImpl::DOMConfigurationFeature
FEATURE_ENTITIES	include/xercesc/dom/impl/DOMConfigurationImpl.hpp	/^        FEATURE_ENTITIES                      = 0x0020,  $/;"	e	enum:DOMConfigurationImpl::DOMConfigurationFeature
FEATURE_INFOSET	include/xercesc/dom/impl/DOMConfigurationImpl.hpp	/^        FEATURE_INFOSET                       = 0x0040, $/;"	e	enum:DOMConfigurationImpl::DOMConfigurationFeature
FEATURE_NAMESPACES	include/xercesc/dom/impl/DOMConfigurationImpl.hpp	/^        FEATURE_NAMESPACES                    = 0x0080, $/;"	e	enum:DOMConfigurationImpl::DOMConfigurationFeature
FEATURE_NAMESPACE_DECLARATIONS	include/xercesc/dom/impl/DOMConfigurationImpl.hpp	/^        FEATURE_NAMESPACE_DECLARATIONS        = 0x0100, $/;"	e	enum:DOMConfigurationImpl::DOMConfigurationFeature
FEATURE_NORMALIZE_CHARACTERS	include/xercesc/dom/impl/DOMConfigurationImpl.hpp	/^        FEATURE_NORMALIZE_CHARACTERS          = 0x0200, $/;"	e	enum:DOMConfigurationImpl::DOMConfigurationFeature
FEATURE_SPLIT_CDATA_SECTIONS	include/xercesc/dom/impl/DOMConfigurationImpl.hpp	/^        FEATURE_SPLIT_CDATA_SECTIONS          = 0x0400, $/;"	e	enum:DOMConfigurationImpl::DOMConfigurationFeature
FEATURE_VALIDATE	include/xercesc/dom/impl/DOMConfigurationImpl.hpp	/^        FEATURE_VALIDATE                      = 0x0800, $/;"	e	enum:DOMConfigurationImpl::DOMConfigurationFeature
FEATURE_VALIDATE_IF_SCHEMA	include/xercesc/dom/impl/DOMConfigurationImpl.hpp	/^        FEATURE_VALIDATE_IF_SCHEMA            = 0x1000, $/;"	e	enum:DOMConfigurationImpl::DOMConfigurationFeature
FILTER_ACCEPT	include/xercesc/dom/DOMLSParserFilter.hpp	/^    enum FilterAction {FILTER_ACCEPT = 1,$/;"	e	enum:DOMLSParserFilter::FilterAction
FILTER_ACCEPT	include/xercesc/dom/DOMNodeFilter.hpp	/^    enum FilterAction {FILTER_ACCEPT = 1,$/;"	e	enum:DOMNodeFilter::FilterAction
FILTER_INTERRUPT	include/xercesc/dom/DOMLSParserFilter.hpp	/^                       FILTER_INTERRUPT = 4};$/;"	e	enum:DOMLSParserFilter::FilterAction
FILTER_REJECT	include/xercesc/dom/DOMLSParserFilter.hpp	/^                       FILTER_REJECT = 2,$/;"	e	enum:DOMLSParserFilter::FilterAction
FILTER_REJECT	include/xercesc/dom/DOMNodeFilter.hpp	/^                       FILTER_REJECT = 2,$/;"	e	enum:DOMNodeFilter::FilterAction
FILTER_SKIP	include/xercesc/dom/DOMLSParserFilter.hpp	/^                       FILTER_SKIP   = 3,$/;"	e	enum:DOMLSParserFilter::FilterAction
FILTER_SKIP	include/xercesc/dom/DOMNodeFilter.hpp	/^                       FILTER_SKIP   = 3};$/;"	e	enum:DOMNodeFilter::FilterAction
FINAL_PUNCTUATION	include/xercesc/util/regx/XMLUniCharacter.hpp	/^        FINAL_PUNCTUATION       = 29$/;"	e	enum:XMLUniCharacter::<anonymous>
FIRSTCHILD	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    static const unsigned short FIRSTCHILD;$/;"	m	class:DOMNodeImpl
FIRST_ORDERED_NODE_TYPE	include/xercesc/dom/DOMXPathResult.hpp	/^                FIRST_ORDERED_NODE_TYPE = 9,$/;"	e	enum:DOMXPathResult::ResultType
FIRST_RESULT_TYPE	include/xercesc/dom/DOMXPathResult.hpp	/^                FIRST_RESULT_TYPE    = 100,$/;"	e	enum:DOMXPathResult::ResultType
FORMAT	include/xercesc/util/regx/XMLUniCharacter.hpp	/^        FORMAT                  = 16,$/;"	e	enum:XMLUniCharacter::<anonymous>
FTP	include/xercesc/util/XMLURL.hpp	/^        , FTP$/;"	e	enum:XMLURL::Protocols
F_HighBounds	include/xercesc/framework/XMLErrorCodes.hpp	/^      , F_HighBounds                       = 287$/;"	e	enum:XMLErrs::Codes
F_HighBounds	include/xercesc/framework/XMLValidityCodes.hpp	/^      , F_HighBounds                       = 83$/;"	e	enum:XMLValid::Codes
F_HighBounds	include/xercesc/util/XMLDOMMsg.hpp	/^      , F_HighBounds                       = 36$/;"	e	enum:XMLDOMMsg::Codes
F_HighBounds	include/xercesc/util/XMLExceptMsgs.hpp	/^      , F_HighBounds                       = 366$/;"	e	enum:XMLExcepts::Codes
F_LowBounds	include/xercesc/framework/XMLErrorCodes.hpp	/^      , F_LowBounds                        = 155$/;"	e	enum:XMLErrs::Codes
F_LowBounds	include/xercesc/framework/XMLValidityCodes.hpp	/^      , F_LowBounds                        = 82$/;"	e	enum:XMLValid::Codes
F_LowBounds	include/xercesc/util/XMLDOMMsg.hpp	/^      , F_LowBounds                        = 1$/;"	e	enum:XMLDOMMsg::Codes
F_LowBounds	include/xercesc/util/XMLExceptMsgs.hpp	/^      , F_LowBounds                        = 4$/;"	e	enum:XMLExcepts::Codes
FeatureUnsupported	include/xercesc/framework/XMLErrorCodes.hpp	/^      , FeatureUnsupported                 = 13$/;"	e	enum:XMLErrs::Codes
FeatureUnsupported	include/xercesc/framework/XMLValidityCodes.hpp	/^      , FeatureUnsupported                 = 28$/;"	e	enum:XMLValid::Codes
FieldActivator	include/xercesc/validators/schema/identity/FieldActivator.hpp	/^class VALIDATORS_EXPORT FieldActivator : public XMemory$/;"	c
FieldMatcher	include/xercesc/validators/schema/identity/IC_Field.hpp	/^class VALIDATORS_EXPORT FieldMatcher : public XPathMatcher$/;"	c
FieldValueMap	include/xercesc/validators/schema/identity/FieldValueMap.hpp	/^class VALIDATORS_EXPORT FieldValueMap : public XMemory$/;"	c
File	include/xercesc/util/XMLURL.hpp	/^        File$/;"	e	enum:XMLURL::Protocols
FileHandle	include/xercesc/util/XMLFileMgr.hpp	/^typedef void* FileHandle;$/;"	t
File_CouldNotCloseFile	include/xercesc/util/XMLExceptMsgs.hpp	/^      , File_CouldNotCloseFile             = 30$/;"	e	enum:XMLExcepts::Codes
File_CouldNotDupHandle	include/xercesc/util/XMLExceptMsgs.hpp	/^      , File_CouldNotDupHandle             = 33$/;"	e	enum:XMLExcepts::Codes
File_CouldNotGetBasePathName	include/xercesc/util/XMLExceptMsgs.hpp	/^      , File_CouldNotGetBasePathName       = 38$/;"	e	enum:XMLExcepts::Codes
File_CouldNotGetCurPos	include/xercesc/util/XMLExceptMsgs.hpp	/^      , File_CouldNotGetCurPos             = 29$/;"	e	enum:XMLExcepts::Codes
File_CouldNotGetSize	include/xercesc/util/XMLExceptMsgs.hpp	/^      , File_CouldNotGetSize               = 37$/;"	e	enum:XMLExcepts::Codes
File_CouldNotOpenFile	include/xercesc/util/XMLExceptMsgs.hpp	/^      , File_CouldNotOpenFile              = 28$/;"	e	enum:XMLExcepts::Codes
File_CouldNotReadFromFile	include/xercesc/util/XMLExceptMsgs.hpp	/^      , File_CouldNotReadFromFile          = 34$/;"	e	enum:XMLExcepts::Codes
File_CouldNotResetFile	include/xercesc/util/XMLExceptMsgs.hpp	/^      , File_CouldNotResetFile             = 36$/;"	e	enum:XMLExcepts::Codes
File_CouldNotSeekToEnd	include/xercesc/util/XMLExceptMsgs.hpp	/^      , File_CouldNotSeekToEnd             = 31$/;"	e	enum:XMLExcepts::Codes
File_CouldNotSeekToPos	include/xercesc/util/XMLExceptMsgs.hpp	/^      , File_CouldNotSeekToPos             = 32$/;"	e	enum:XMLExcepts::Codes
File_CouldNotWriteToFile	include/xercesc/util/XMLExceptMsgs.hpp	/^      , File_CouldNotWriteToFile           = 35$/;"	e	enum:XMLExcepts::Codes
FilterAction	include/xercesc/dom/DOMLSParserFilter.hpp	/^    enum FilterAction {FILTER_ACCEPT = 1,$/;"	g	class:DOMLSParserFilter
FilterAction	include/xercesc/dom/DOMNodeFilter.hpp	/^    enum FilterAction {FILTER_ACCEPT = 1,$/;"	g	class:DOMNodeFilter
Fixed	include/xercesc/framework/XMLAttDef.hpp	/^        , Fixed                  = 1$/;"	e	enum:XMLAttDef::DefAttTypes
FixedDifferentFromActual	include/xercesc/framework/XMLValidityCodes.hpp	/^      , FixedDifferentFromActual           = 42$/;"	e	enum:XMLValid::Codes
FlagJanitor	include/xercesc/util/FlagJanitor.c	/^template <class T> FlagJanitor<T>::FlagJanitor(T* const valPtr, const T newVal)$/;"	f	class:T
FlagJanitor	include/xercesc/util/FlagJanitor.hpp	/^template <class T> class FlagJanitor$/;"	c
Float	include/xercesc/util/XMLNumber.hpp	/^        Float,$/;"	e	enum:XMLNumber::NumberType
Float	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        Float,$/;"	e	enum:DatatypeValidator::ValidatorType
FloatDatatypeValidator	include/xercesc/validators/datatype/FloatDatatypeValidator.hpp	/^class VALIDATORS_EXPORT FloatDatatypeValidator : public AbstractNumericValidator$/;"	c
ForbiddenDerivation	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ForbiddenDerivation                = 98$/;"	e	enum:XMLErrs::Codes
ForbiddenDerivationByExtension	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ForbiddenDerivationByExtension     = 72$/;"	e	enum:XMLErrs::Codes
ForbiddenDerivationByRestriction	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ForbiddenDerivationByRestriction   = 71$/;"	e	enum:XMLErrs::Codes
GET	include/xercesc/util/XMLNetAccessor.hpp	/^        GET,$/;"	e	enum:XMLNetHTTPInfo::<anonymous>
GET_DIRECT_MM	include/xercesc/dom/DOMNode.hpp	907;"	d
GET_INDIRECT_MM	include/xercesc/dom/DOMNode.hpp	910;"	d
GET_OWNER_DOCUMENT	include/xercesc/dom/DOMNode.hpp	904;"	d
GREATER_THAN	include/xercesc/util/XMLNumber.hpp	/^        GREATER_THAN  = 1,$/;"	e	enum:XMLNumber::<anonymous>
Gen_CouldNotOpenDTD	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Gen_CouldNotOpenDTD                = 41$/;"	e	enum:XMLExcepts::Codes
Gen_CouldNotOpenExtEntity	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Gen_CouldNotOpenExtEntity          = 42$/;"	e	enum:XMLExcepts::Codes
Gen_NoDTDValidator	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Gen_NoDTDValidator                 = 40$/;"	e	enum:XMLExcepts::Codes
Gen_NoSchemaValidator	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Gen_NoSchemaValidator              = 133$/;"	e	enum:XMLExcepts::Codes
Gen_ParseInProgress	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Gen_ParseInProgress                = 39$/;"	e	enum:XMLExcepts::Codes
Gen_UnexpectedEOF	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Gen_UnexpectedEOF                  = 43$/;"	e	enum:XMLExcepts::Codes
GeneralAttributeCheck	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^class VALIDATORS_EXPORT GeneralAttributeCheck : public XMemory$/;"	c
GenericError	include/xercesc/framework/XMLValidityCodes.hpp	/^      , GenericError                       = 44$/;"	e	enum:XMLValid::Codes
GetDOMCharacterDataImplMemoryManager	include/xercesc/dom/impl/DOMCharacterDataImpl.hpp	84;"	d
GetDOMNamedNodeMapMemoryManager	include/xercesc/dom/DOMNamedNodeMap.hpp	241;"	d
GetDOMNodeIteratorMemoryManager	include/xercesc/dom/DOMNodeIterator.hpp	192;"	d
GetDOMNodeMemoryManager	include/xercesc/dom/DOMNode.hpp	918;"	d
GetDOMParentNodeMemoryManager	include/xercesc/dom/impl/DOMParentNode.hpp	110;"	d
GetDOMTreeWalkerMemoryManager	include/xercesc/dom/DOMTreeWalker.hpp	272;"	d
Grammar	include/xercesc/validators/common/Grammar.hpp	/^    Grammar(){};$/;"	f	class:Grammar
Grammar	include/xercesc/validators/common/Grammar.hpp	/^class VALIDATORS_EXPORT Grammar : public XSerializable, public XMemory$/;"	c
GrammarNotFound	include/xercesc/framework/XMLValidityCodes.hpp	/^      , GrammarNotFound                    = 38$/;"	e	enum:XMLValid::Codes
GrammarResolver	include/xercesc/validators/common/GrammarResolver.hpp	/^class VALIDATORS_EXPORT GrammarResolver : public XMemory$/;"	c
GrammarType	include/xercesc/validators/common/Grammar.hpp	/^    enum GrammarType {$/;"	g	class:Grammar
GroupContentError	include/xercesc/framework/XMLErrorCodes.hpp	/^      , GroupContentError                  = 100$/;"	e	enum:XMLErrs::Codes
GroupContentRestricted	include/xercesc/framework/XMLValidityCodes.hpp	/^      , GroupContentRestricted             = 29$/;"	e	enum:XMLValid::Codes
Group_Ref_With_All	include/xercesc/validators/schema/TraverseSchema.hpp	/^        , Group_Ref_With_All = 2$/;"	e	enum:TraverseSchema::<anonymous>
HIERARCHY_REQUEST_ERR	include/xercesc/dom/DOMException.hpp	/^         HIERARCHY_REQUEST_ERR          = 3,$/;"	e	enum:DOMException::ExceptionCode
HIERARCHY_REQUEST_ERR	include/xercesc/util/XMLDOMMsg.hpp	/^      , HIERARCHY_REQUEST_ERR              = 5$/;"	e	enum:XMLDOMMsg::Codes
HTTP	include/xercesc/util/XMLURL.hpp	/^        , HTTP$/;"	e	enum:XMLURL::Protocols
HTTPMethod	include/xercesc/util/XMLNetAccessor.hpp	/^    } HTTPMethod;$/;"	t	class:XMLNetHTTPInfo
HTTPS	include/xercesc/util/XMLURL.hpp	/^        , HTTPS$/;"	e	enum:XMLURL::Protocols
HandlerBase	include/xercesc/sax/HandlerBase.hpp	/^    HandlerBase() {};$/;"	f	class:HandlerBase
HandlerBase	include/xercesc/sax/HandlerBase.hpp	/^class SAX_EXPORT HandlerBase :$/;"	c
Hash2KeysSetBucketElem	include/xercesc/util/Hash2KeysSetOf.hpp	/^struct Hash2KeysSetBucketElem$/;"	s
Hash2KeysSetOf	include/xercesc/util/Hash2KeysSetOf.c	/^Hash2KeysSetOf<THasher>::Hash2KeysSetOf($/;"	f	class:THasher
Hash2KeysSetOf	include/xercesc/util/Hash2KeysSetOf.hpp	/^class Hash2KeysSetOf : public XMemory$/;"	c
Hash2KeysSetOfEnumerator	include/xercesc/util/Hash2KeysSetOf.c	/^Hash2KeysSetOfEnumerator(Hash2KeysSetOf<THasher>* const toEnum$/;"	f	class:THasher
Hash2KeysSetOfEnumerator	include/xercesc/util/Hash2KeysSetOf.hpp	/^class Hash2KeysSetOfEnumerator : public XMemory$/;"	c
HexBin	include/xercesc/util/HexBin.hpp	/^class XMLUTIL_EXPORT HexBin$/;"	c
HexBinary	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        HexBinary,$/;"	e	enum:DatatypeValidator::ValidatorType
HexBinaryDatatypeValidator	include/xercesc/validators/datatype/HexBinaryDatatypeValidator.hpp	/^class VALIDATORS_EXPORT HexBinaryDatatypeValidator : public AbstractStringValidator$/;"	c
HexRadixMustBeLowerCase	include/xercesc/framework/XMLErrorCodes.hpp	/^      , HexRadixMustBeLowerCase            = 239$/;"	e	enum:XMLErrs::Codes
Hour	include/xercesc/util/XMLDateTime.hpp	/^        Hour       ,$/;"	e	enum:XMLDateTime::valueIndex
HshTbl_BadHashFromKey	include/xercesc/util/XMLExceptMsgs.hpp	/^      , HshTbl_BadHashFromKey              = 45$/;"	e	enum:XMLExcepts::Codes
HshTbl_NoSuchKeyExists	include/xercesc/util/XMLExceptMsgs.hpp	/^      , HshTbl_NoSuchKeyExists             = 46$/;"	e	enum:XMLExcepts::Codes
HshTbl_ZeroModulus	include/xercesc/util/XMLExceptMsgs.hpp	/^      , HshTbl_ZeroModulus                 = 44$/;"	e	enum:XMLExcepts::Codes
ICType	include/xercesc/validators/schema/identity/IdentityConstraint.hpp	/^    enum ICType {$/;"	g	class:IdentityConstraint
ICType_KEY	include/xercesc/validators/schema/identity/IdentityConstraint.hpp	/^        ICType_KEY = 1,$/;"	e	enum:IdentityConstraint::ICType
ICType_KEYREF	include/xercesc/validators/schema/identity/IdentityConstraint.hpp	/^        ICType_KEYREF = 2,$/;"	e	enum:IdentityConstraint::ICType
ICType_UNIQUE	include/xercesc/validators/schema/identity/IdentityConstraint.hpp	/^        ICType_UNIQUE = 0,$/;"	e	enum:IdentityConstraint::ICType
ICType_UNKNOWN	include/xercesc/validators/schema/identity/IdentityConstraint.hpp	/^        ICType_UNKNOWN$/;"	e	enum:IdentityConstraint::ICType
ICValueHasher	include/xercesc/validators/schema/identity/ValueStore.hpp	/^    ICValueHasher(MemoryManager* const manager) : fMemoryManager(manager) {}$/;"	f	struct:ICValueHasher
ICValueHasher	include/xercesc/validators/schema/identity/ValueStore.hpp	/^struct ICValueHasher$/;"	s
IC_AbsentKeyValue	include/xercesc/framework/XMLValidityCodes.hpp	/^      , IC_AbsentKeyValue                  = 66$/;"	e	enum:XMLValid::Codes
IC_BadContent	include/xercesc/framework/XMLErrorCodes.hpp	/^      , IC_BadContent                      = 131$/;"	e	enum:XMLErrs::Codes
IC_CATEGORY	include/xercesc/framework/psvi/XSIDCDefinition.hpp	/^    enum IC_CATEGORY {$/;"	g	class:XSIDCDefinition
IC_DuplicateDecl	include/xercesc/framework/XMLErrorCodes.hpp	/^      , IC_DuplicateDecl                   = 130$/;"	e	enum:XMLErrs::Codes
IC_DuplicateKey	include/xercesc/framework/XMLValidityCodes.hpp	/^      , IC_DuplicateKey                    = 70$/;"	e	enum:XMLValid::Codes
IC_DuplicateUnique	include/xercesc/framework/XMLValidityCodes.hpp	/^      , IC_DuplicateUnique                 = 69$/;"	e	enum:XMLValid::Codes
IC_Field	include/xercesc/validators/schema/identity/IC_Field.hpp	/^class VALIDATORS_EXPORT IC_Field : public XSerializable, public XMemory$/;"	c
IC_FieldMultipleMatch	include/xercesc/framework/XMLValidityCodes.hpp	/^      , IC_FieldMultipleMatch              = 64$/;"	e	enum:XMLValid::Codes
IC_KEY	include/xercesc/framework/psvi/XSIDCDefinition.hpp	/^	    IC_KEY                    = 1,$/;"	e	enum:XSIDCDefinition::IC_CATEGORY
IC_KEYREF	include/xercesc/framework/psvi/XSIDCDefinition.hpp	/^	    IC_KEYREF                 = 2,$/;"	e	enum:XSIDCDefinition::IC_CATEGORY
IC_Key	include/xercesc/validators/schema/identity/IC_Key.hpp	/^class VALIDATORS_EXPORT IC_Key: public IdentityConstraint$/;"	c
IC_KeyMatchesNillable	include/xercesc/framework/XMLValidityCodes.hpp	/^      , IC_KeyMatchesNillable              = 68$/;"	e	enum:XMLValid::Codes
IC_KeyNotEnoughValues	include/xercesc/framework/XMLValidityCodes.hpp	/^      , IC_KeyNotEnoughValues              = 67$/;"	e	enum:XMLValid::Codes
IC_KeyNotFound	include/xercesc/framework/XMLValidityCodes.hpp	/^      , IC_KeyNotFound                     = 72$/;"	e	enum:XMLValid::Codes
IC_KeyRef	include/xercesc/validators/schema/identity/IC_KeyRef.hpp	/^class VALIDATORS_EXPORT IC_KeyRef: public IdentityConstraint$/;"	c
IC_KeyRefCardinality	include/xercesc/framework/XMLErrorCodes.hpp	/^      , IC_KeyRefCardinality               = 133$/;"	e	enum:XMLErrs::Codes
IC_KeyRefOutOfScope	include/xercesc/framework/XMLValidityCodes.hpp	/^      , IC_KeyRefOutOfScope                = 71$/;"	e	enum:XMLValid::Codes
IC_KeyRefReferNotFound	include/xercesc/framework/XMLErrorCodes.hpp	/^      , IC_KeyRefReferNotFound             = 132$/;"	e	enum:XMLErrs::Codes
IC_Selector	include/xercesc/validators/schema/identity/IC_Selector.hpp	/^class VALIDATORS_EXPORT IC_Selector : public XSerializable, public XMemory$/;"	c
IC_UNIQUE	include/xercesc/framework/psvi/XSIDCDefinition.hpp	/^	    IC_UNIQUE                 = 3$/;"	e	enum:XSIDCDefinition::IC_CATEGORY
IC_Unique	include/xercesc/validators/schema/identity/IC_Unique.hpp	/^class VALIDATORS_EXPORT IC_Unique: public IdentityConstraint$/;"	c
IC_UnknownField	include/xercesc/framework/XMLValidityCodes.hpp	/^      , IC_UnknownField                    = 65$/;"	e	enum:XMLValid::Codes
IC_XPathExprMissing	include/xercesc/framework/XMLErrorCodes.hpp	/^      , IC_XPathExprMissing                = 134$/;"	e	enum:XMLErrs::Codes
ID	include/xercesc/framework/XMLAttDef.hpp	/^        , ID                = 1$/;"	e	enum:XMLAttDef::AttTypes
ID	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        ID,$/;"	e	enum:DatatypeValidator::ValidatorType
IDDatatypeValidator	include/xercesc/validators/datatype/IDDatatypeValidator.hpp	/^class VALIDATORS_EXPORT IDDatatypeValidator : public StringDatatypeValidator$/;"	c
IDENTITY_CONSTRAINT	include/xercesc/framework/psvi/XSConstants.hpp	/^	      IDENTITY_CONSTRAINT       = 10,$/;"	e	enum:XSConstants::COMPONENT_TYPE
IDNotDeclared	include/xercesc/framework/XMLValidityCodes.hpp	/^      , IDNotDeclared                      = 13$/;"	e	enum:XMLValid::Codes
IDREF	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        IDREF,$/;"	e	enum:DatatypeValidator::ValidatorType
IDREFDatatypeValidator	include/xercesc/validators/datatype/IDREFDatatypeValidator.hpp	/^class VALIDATORS_EXPORT IDREFDatatypeValidator : public StringDatatypeValidator$/;"	c
IDRef	include/xercesc/framework/XMLAttDef.hpp	/^        , IDRef             = 2$/;"	e	enum:XMLAttDef::AttTypes
IDRefs	include/xercesc/framework/XMLAttDef.hpp	/^        , IDRefs            = 3$/;"	e	enum:XMLAttDef::AttTypes
IDType_Either	include/xercesc/validators/DTD/DTDScanner.hpp	/^        , IDType_Either$/;"	e	enum:DTDScanner::IDTypes
IDType_External	include/xercesc/validators/DTD/DTDScanner.hpp	/^        , IDType_External$/;"	e	enum:DTDScanner::IDTypes
IDType_Public	include/xercesc/validators/DTD/DTDScanner.hpp	/^        IDType_Public$/;"	e	enum:DTDScanner::IDTypes
IDTypes	include/xercesc/validators/DTD/DTDScanner.hpp	/^    enum IDTypes$/;"	g	class:DTDScanner
ID_ATTR	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    static const unsigned short ID_ATTR;$/;"	m	class:DOMNodeImpl
IGNORABLEWS	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    static const unsigned short IGNORABLEWS;$/;"	m	class:DOMNodeImpl
IGNORE_CASE	include/xercesc/util/regx/RegularExpression.hpp	/^    static const unsigned int   IGNORE_CASE;$/;"	m	class:RegularExpression
IGXMLScanner	include/xercesc/internal/IGXMLScanner.hpp	/^class XMLPARSER_EXPORT IGXMLScanner : public XMLScanner$/;"	c
IMPL_XPROTOTYPE_INSTANCE	include/xercesc/internal/XProtoType.hpp	87;"	d
IMPL_XPROTOTYPE_NOCREATE	include/xercesc/internal/XProtoType.hpp	76;"	d
IMPL_XPROTOTYPE_TOCREATE	include/xercesc/internal/XProtoType.hpp	68;"	d
IMPL_XSERIAL	include/xercesc/internal/XSerializable.hpp	102;"	d
IMPL_XSERIALIZABLE_NOCREATE	include/xercesc/internal/XSerializable.hpp	95;"	d
IMPL_XSERIALIZABLE_TOCREATE	include/xercesc/internal/XSerializable.hpp	87;"	d
IMPORT	include/xercesc/validators/schema/SchemaInfo.hpp	/^        IMPORT = 1,$/;"	e	enum:SchemaInfo::ListType
INCLUDE	include/xercesc/validators/schema/SchemaInfo.hpp	/^        INCLUDE = 2$/;"	e	enum:SchemaInfo::ListType
INCREFCOUNT	include/xercesc/dom/StDOMNode.hpp	/^	static inline void INCREFCOUNT(T *x) { if (x != (T*)0) x->incRefCount(); }$/;"	f	class:StDOMNode
INDETERMINATE	include/xercesc/util/XMLNumber.hpp	/^        INDETERMINATE = 2$/;"	e	enum:XMLNumber::<anonymous>
INDETERMINATE	include/xercesc/validators/datatype/AbstractNumericFacetValidator.hpp	/^    static const int INDETERMINATE;$/;"	m	class:AbstractNumericFacetValidator
INDEX_SIZE_ERR	include/xercesc/dom/DOMException.hpp	/^         INDEX_SIZE_ERR                 = 1,$/;"	e	enum:DOMException::ExceptionCode
INDEX_SIZE_ERR	include/xercesc/util/XMLDOMMsg.hpp	/^      , INDEX_SIZE_ERR                     = 3$/;"	e	enum:XMLDOMMsg::Codes
INITIALSIZE	include/xercesc/util/regx/RangeToken.hpp	/^    static const unsigned int INITIALSIZE;$/;"	m	class:RangeToken
INITIALSIZE	include/xercesc/util/regx/UnionToken.hpp	/^    static const unsigned short INITIALSIZE;$/;"	m	class:UnionToken
INITIAL_PUNCTUATION	include/xercesc/util/regx/XMLUniCharacter.hpp	/^        INITIAL_PUNCTUATION     = 28,$/;"	e	enum:XMLUniCharacter::<anonymous>
INUSE_ATTRIBUTE_ERR	include/xercesc/dom/DOMException.hpp	/^         INUSE_ATTRIBUTE_ERR            = 10,$/;"	e	enum:DOMException::ExceptionCode
INUSE_ATTRIBUTE_ERR	include/xercesc/util/XMLDOMMsg.hpp	/^      , INUSE_ATTRIBUTE_ERR                = 12$/;"	e	enum:XMLDOMMsg::Codes
INVALID_ACCESS_ERR	include/xercesc/dom/DOMException.hpp	/^         INVALID_ACCESS_ERR             = 15,$/;"	e	enum:DOMException::ExceptionCode
INVALID_ACCESS_ERR	include/xercesc/util/XMLDOMMsg.hpp	/^      , INVALID_ACCESS_ERR                 = 17$/;"	e	enum:XMLDOMMsg::Codes
INVALID_CHARACTER_ERR	include/xercesc/dom/DOMException.hpp	/^         INVALID_CHARACTER_ERR          = 5,$/;"	e	enum:DOMException::ExceptionCode
INVALID_CHARACTER_ERR	include/xercesc/util/XMLDOMMsg.hpp	/^      , INVALID_CHARACTER_ERR              = 7$/;"	e	enum:XMLDOMMsg::Codes
INVALID_EXPRESSION_ERR	include/xercesc/dom/DOMXPathException.hpp	/^		INVALID_EXPRESSION_ERR = 51,$/;"	e	enum:DOMXPathException::ExceptionCode
INVALID_EXPRESSION_ERR	include/xercesc/util/XMLDOMMsg.hpp	/^      , INVALID_EXPRESSION_ERR             = 27$/;"	e	enum:XMLDOMMsg::Codes
INVALID_MODIFICATION_ERR	include/xercesc/dom/DOMException.hpp	/^         INVALID_MODIFICATION_ERR       = 13,$/;"	e	enum:DOMException::ExceptionCode
INVALID_MODIFICATION_ERR	include/xercesc/util/XMLDOMMsg.hpp	/^      , INVALID_MODIFICATION_ERR           = 15$/;"	e	enum:XMLDOMMsg::Codes
INVALID_NODE_TYPE_ERR	include/xercesc/dom/DOMRangeException.hpp	/^                INVALID_NODE_TYPE_ERR   = 112$/;"	e	enum:DOMRangeException::RangeExceptionCode
INVALID_NODE_TYPE_ERR	include/xercesc/util/XMLDOMMsg.hpp	/^      , INVALID_NODE_TYPE_ERR              = 22$/;"	e	enum:XMLDOMMsg::Codes
INVALID_STATE_ERR	include/xercesc/dom/DOMException.hpp	/^         INVALID_STATE_ERR              = 11,$/;"	e	enum:DOMException::ExceptionCode
INVALID_STATE_ERR	include/xercesc/util/XMLDOMMsg.hpp	/^      , INVALID_STATE_ERR                  = 13$/;"	e	enum:XMLDOMMsg::Codes
INVK_CAT2_RAW_NUMERIC	include/xercesc/util/XercesVersion.hpp	165;"	d
INVK_CAT2_SEP_PERIOD	include/xercesc/util/XercesVersion.hpp	163;"	d
INVK_CAT2_SEP_UNDERSCORE	include/xercesc/util/XercesVersion.hpp	162;"	d
INVK_CAT2_STR_SEP_NIL	include/xercesc/util/XercesVersion.hpp	164;"	d
INVK_CAT3_RAW_NUMERIC	include/xercesc/util/XercesVersion.hpp	181;"	d
INVK_CAT3_RAW_NUMERIC_SEP_UNDERSCORE	include/xercesc/util/XercesVersion.hpp	182;"	d
INVK_CAT3_SEP_NIL	include/xercesc/util/XercesVersion.hpp	180;"	d
INVK_CAT3_SEP_PERIOD	include/xercesc/util/XercesVersion.hpp	179;"	d
INVK_CAT3_SEP_UNDERSCORE	include/xercesc/util/XercesVersion.hpp	178;"	d
IS_EQUIVALENT	include/xercesc/internal/XSerializable.hpp	108;"	d
ITERATOR_RESULT_TYPE	include/xercesc/dom/DOMXPathResult.hpp	/^                ITERATOR_RESULT_TYPE = 101,$/;"	e	enum:DOMXPathResult::ResultType
IconvGNULCPTranscoder	include/xercesc/util/Transcoders/IconvGNU/IconvGNUTransService.hpp	/^class XMLUTIL_EXPORT IconvGNULCPTranscoder : public XMLLCPTranscoder, IconvGNUWrapper$/;"	c
IconvGNUTransService	include/xercesc/util/Transcoders/IconvGNU/IconvGNUTransService.hpp	/^class XMLUTIL_EXPORT IconvGNUTransService : public XMLTransService, IconvGNUWrapper$/;"	c
IconvGNUTranscoder	include/xercesc/util/Transcoders/IconvGNU/IconvGNUTransService.hpp	/^class XMLUTIL_EXPORT IconvGNUTranscoder : public XMLTranscoder, IconvGNUWrapper$/;"	c
IconvGNUWrapper	include/xercesc/util/Transcoders/IconvGNU/IconvGNUTransService.hpp	/^class XMLUTIL_EXPORT IconvGNUWrapper$/;"	c
IdentityConstraint	include/xercesc/validators/schema/identity/IdentityConstraint.hpp	/^class VALIDATORS_EXPORT IdentityConstraint : public XSerializable, public XMemory$/;"	c
IdentityConstraintHandler	include/xercesc/validators/schema/identity/IdentityConstraintHandler.hpp	/^class VALIDATORS_EXPORT IdentityConstraintHandler: public XMemory$/;"	c
IllegalRefInStandalone	include/xercesc/framework/XMLErrorCodes.hpp	/^      , IllegalRefInStandalone             = 262$/;"	e	enum:XMLErrs::Codes
IllegalSequenceInComment	include/xercesc/framework/XMLErrorCodes.hpp	/^      , IllegalSequenceInComment           = 235$/;"	e	enum:XMLErrs::Codes
IllegalXMLSpace	include/xercesc/framework/XMLValidityCodes.hpp	/^      , IllegalXMLSpace                    = 34$/;"	e	enum:XMLValid::Codes
Implied	include/xercesc/framework/XMLAttDef.hpp	/^        , Implied                = 4$/;"	e	enum:XMLAttDef::DefAttTypes
ImportNamespaceDifference	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ImportNamespaceDifference          = 74$/;"	e	enum:XMLErrs::Codes
Import_1_1	include/xercesc/framework/XMLErrorCodes.hpp	/^      , Import_1_1                         = 90$/;"	e	enum:XMLErrs::Codes
Import_1_2	include/xercesc/framework/XMLErrorCodes.hpp	/^      , Import_1_2                         = 91$/;"	e	enum:XMLErrs::Codes
InContentModel	include/xercesc/framework/XMLElementDecl.hpp	/^        , InContentModel$/;"	e	enum:XMLElementDecl::CreateReasons
InMemMsgLoader	include/xercesc/util/MsgLoaders/InMemory/InMemMsgLoader.hpp	/^class XMLUTIL_EXPORT InMemMsgLoader : public XMLMsgLoader$/;"	c
InScopeNamespaces	include/xercesc/dom/impl/DOMNormalizer.hpp	/^    class InScopeNamespaces : public XMemory {$/;"	c	class:DOMNormalizer
IncludeNamespaceDifference	include/xercesc/framework/XMLErrorCodes.hpp	/^      , IncludeNamespaceDifference         = 76$/;"	e	enum:XMLErrs::Codes
InputSource	include/xercesc/sax/InputSource.hpp	/^class SAX_EXPORT InputSource : public XMemory$/;"	c
InternalFailure	include/xercesc/util/TransService.hpp	/^        , InternalFailure$/;"	e	enum:XMLTransService::Codes
InvalidAnnotationContent	include/xercesc/framework/XMLErrorCodes.hpp	/^      , InvalidAnnotationContent           = 144$/;"	e	enum:XMLErrs::Codes
InvalidAttTNS	include/xercesc/framework/XMLErrorCodes.hpp	/^      , InvalidAttTNS                      = 149$/;"	e	enum:XMLErrs::Codes
InvalidAttValue	include/xercesc/framework/XMLErrorCodes.hpp	/^      , InvalidAttValue                    = 68$/;"	e	enum:XMLErrs::Codes
InvalidAttrName	include/xercesc/framework/XMLErrorCodes.hpp	/^      , InvalidAttrName                    = 273$/;"	e	enum:XMLErrs::Codes
InvalidAttributeContent	include/xercesc/framework/XMLErrorCodes.hpp	/^      , InvalidAttributeContent            = 78$/;"	e	enum:XMLErrs::Codes
InvalidBlockValue	include/xercesc/framework/XMLErrorCodes.hpp	/^      , InvalidBlockValue                  = 63$/;"	e	enum:XMLErrs::Codes
InvalidCharacter	include/xercesc/framework/XMLErrorCodes.hpp	/^      , InvalidCharacter                   = 175$/;"	e	enum:XMLErrs::Codes
InvalidCharacterInAttrValue	include/xercesc/framework/XMLErrorCodes.hpp	/^      , InvalidCharacterInAttrValue        = 193$/;"	e	enum:XMLErrs::Codes
InvalidCharacterInIntSubset	include/xercesc/framework/XMLErrorCodes.hpp	/^      , InvalidCharacterInIntSubset        = 191$/;"	e	enum:XMLErrs::Codes
InvalidCharacterRef	include/xercesc/framework/XMLErrorCodes.hpp	/^      , InvalidCharacterRef                = 199$/;"	e	enum:XMLErrs::Codes
InvalidChildFollowingConplexContent	include/xercesc/framework/XMLErrorCodes.hpp	/^      , InvalidChildFollowingConplexContent   = 46$/;"	e	enum:XMLErrs::Codes
InvalidChildFollowingSimpleContent	include/xercesc/framework/XMLErrorCodes.hpp	/^      , InvalidChildFollowingSimpleContent   = 45$/;"	e	enum:XMLErrs::Codes
InvalidChildInComplexContent	include/xercesc/framework/XMLErrorCodes.hpp	/^      , InvalidChildInComplexContent       = 60$/;"	e	enum:XMLErrs::Codes
InvalidChildInComplexType	include/xercesc/framework/XMLErrorCodes.hpp	/^      , InvalidChildInComplexType          = 42$/;"	e	enum:XMLErrs::Codes
InvalidChildInSimpleContent	include/xercesc/framework/XMLErrorCodes.hpp	/^      , InvalidChildInSimpleContent        = 59$/;"	e	enum:XMLErrs::Codes
InvalidComplexContent	include/xercesc/framework/XMLErrorCodes.hpp	/^      , InvalidComplexContent              = 33$/;"	e	enum:XMLErrs::Codes
InvalidComplexTypeBase	include/xercesc/framework/XMLErrorCodes.hpp	/^      , InvalidComplexTypeBase             = 58$/;"	e	enum:XMLErrs::Codes
InvalidComplexTypeInfo	include/xercesc/validators/schema/TraverseSchema.hpp	/^        InvalidComplexTypeInfo = 1,$/;"	e	enum:TraverseSchema::ExceptionCodes
InvalidContentRestriction	include/xercesc/framework/XMLErrorCodes.hpp	/^      , InvalidContentRestriction          = 97$/;"	e	enum:XMLErrs::Codes
InvalidDeclarationName	include/xercesc/framework/XMLErrorCodes.hpp	/^      , InvalidDeclarationName             = 53$/;"	e	enum:XMLErrs::Codes
InvalidDocumentStructure	include/xercesc/framework/XMLErrorCodes.hpp	/^      , InvalidDocumentStructure           = 165$/;"	e	enum:XMLErrs::Codes
InvalidElementContent	include/xercesc/framework/XMLErrorCodes.hpp	/^      , InvalidElementContent              = 22$/;"	e	enum:XMLErrs::Codes
InvalidElementName	include/xercesc/framework/XMLErrorCodes.hpp	/^      , InvalidElementName                 = 272$/;"	e	enum:XMLErrs::Codes
InvalidEmptyAttValue	include/xercesc/framework/XMLValidityCodes.hpp	/^      , InvalidEmptyAttValue               = 9$/;"	e	enum:XMLValid::Codes
InvalidEntityRefName	include/xercesc/framework/XMLErrorCodes.hpp	/^      , InvalidEntityRefName               = 274$/;"	e	enum:XMLErrs::Codes
InvalidFacetName	include/xercesc/framework/XMLErrorCodes.hpp	/^      , InvalidFacetName                   = 145$/;"	e	enum:XMLErrs::Codes
InvalidFinalValue	include/xercesc/framework/XMLErrorCodes.hpp	/^      , InvalidFinalValue                  = 64$/;"	e	enum:XMLErrs::Codes
InvalidMin2MaxOccurs	include/xercesc/framework/XMLErrorCodes.hpp	/^      , InvalidMin2MaxOccurs               = 83$/;"	e	enum:XMLErrs::Codes
InvalidNSReference	include/xercesc/framework/XMLErrorCodes.hpp	/^      , InvalidNSReference                 = 142$/;"	e	enum:XMLErrs::Codes
InvalidPublicIdChar	include/xercesc/framework/XMLErrorCodes.hpp	/^      , InvalidPublicIdChar                = 189$/;"	e	enum:XMLErrs::Codes
InvalidRedefine	include/xercesc/framework/XMLErrorCodes.hpp	/^      , InvalidRedefine                    = 141$/;"	e	enum:XMLErrs::Codes
InvalidRootElemInDOCTYPE	include/xercesc/framework/XMLErrorCodes.hpp	/^      , InvalidRootElemInDOCTYPE           = 271$/;"	e	enum:XMLErrs::Codes
InvalidSimpleContent	include/xercesc/framework/XMLErrorCodes.hpp	/^      , InvalidSimpleContent               = 31$/;"	e	enum:XMLErrs::Codes
InvalidSimpleContentBase	include/xercesc/framework/XMLErrorCodes.hpp	/^      , InvalidSimpleContentBase           = 57$/;"	e	enum:XMLErrs::Codes
InvalidSubstitutionGroupElement	include/xercesc/framework/XMLErrorCodes.hpp	/^      , InvalidSubstitutionGroupElement    = 65$/;"	e	enum:XMLErrs::Codes
InvalidTargetNSValue	include/xercesc/framework/XMLErrorCodes.hpp	/^      , InvalidTargetNSValue               = 139$/;"	e	enum:XMLErrs::Codes
InvalidXMLSchemaRoot	include/xercesc/framework/XMLErrorCodes.hpp	/^      , InvalidXMLSchemaRoot               = 146$/;"	e	enum:XMLErrs::Codes
Janitor	include/xercesc/util/Janitor.c	/^template <class T> Janitor<T>::Janitor(T* const toDelete) :$/;"	f	class:T
Janitor	include/xercesc/util/Janitor.hpp	/^template <class T> class Janitor : public XMemory$/;"	c
JanitorMemFunCall	include/xercesc/util/Janitor.c	/^JanitorMemFunCall<T>::JanitorMemFunCall($/;"	f	class:T
JanitorMemFunCall	include/xercesc/util/Janitor.hpp	/^template <class T> class JanitorMemFunCall$/;"	c
JustFaultIn	include/xercesc/framework/XMLAttDef.hpp	/^        , JustFaultIn$/;"	e	enum:XMLAttDef::CreateReasons
JustFaultIn	include/xercesc/framework/XMLElementDecl.hpp	/^        , JustFaultIn$/;"	e	enum:XMLElementDecl::CreateReasons
KVStringPair	include/xercesc/util/KVStringPair.hpp	/^class XMLUTIL_EXPORT KVStringPair : public XSerializable, public XMemory$/;"	c
KVStringPairHashTable	include/xercesc/validators/datatype/DatatypeValidatorFactory.hpp	/^typedef RefHashTableOf<KVStringPair> KVStringPairHashTable;$/;"	t
KeyRefPair	include/xercesc/util/KeyRefPair.c	/^KeyRefPair(TKey* key, TValue* value) :$/;"	f	class:TValue
KeyRefPair	include/xercesc/util/KeyRefPair.c	/^KeyRefPair(const KeyRefPair<TKey,TValue>& toCopy) :$/;"	f	class:TValue
KeyRefPair	include/xercesc/util/KeyRefPair.c	/^KeyRefPair(const KeyRefPair<TKey,TValue>* toCopy) :$/;"	f	class:TValue
KeyRefPair	include/xercesc/util/KeyRefPair.c	/^template <class TKey, class TValue> KeyRefPair<TKey,TValue>::KeyRefPair()$/;"	f	class:TValue
KeyRefPair	include/xercesc/util/KeyRefPair.hpp	/^template <class TKey, class TValue> class KeyRefPair : public XMemory$/;"	c
KeyValuePair	include/xercesc/util/KeyValuePair.c	/^KeyValuePair(const KeyValuePair<TKey,TValue>& toCopy) :$/;"	f	class:TValue
KeyValuePair	include/xercesc/util/KeyValuePair.c	/^KeyValuePair(const TKey& key, const TValue& value) :$/;"	f	class:TValue
KeyValuePair	include/xercesc/util/KeyValuePair.c	/^template <class TKey, class TValue> KeyValuePair<TKey,TValue>::KeyValuePair()$/;"	f	class:TValue
KeyValuePair	include/xercesc/util/KeyValuePair.hpp	/^template <class TKey, class TValue> class KeyValuePair : public XMemory$/;"	c
LEAFNODETYPE	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    static const unsigned short LEAFNODETYPE;$/;"	m	class:DOMNodeImpl
LESS_THAN	include/xercesc/util/XMLNumber.hpp	/^        LESS_THAN     = -1,$/;"	e	enum:XMLNumber::<anonymous>
LETTER_NUMBER	include/xercesc/util/regx/XMLUniCharacter.hpp	/^        LETTER_NUMBER           = 10,$/;"	e	enum:XMLUniCharacter::<anonymous>
LINE_SEPARATOR	include/xercesc/util/regx/XMLUniCharacter.hpp	/^        LINE_SEPARATOR          = 13,$/;"	e	enum:XMLUniCharacter::<anonymous>
LOWERCASE_LETTER	include/xercesc/util/regx/XMLUniCharacter.hpp	/^        LOWERCASE_LETTER        = 2,$/;"	e	enum:XMLUniCharacter::<anonymous>
LSExceptionCode	include/xercesc/dom/DOMLSException.hpp	/^    enum LSExceptionCode {$/;"	g	class:DOMLSException
LSParser_ParseInProgress	include/xercesc/util/XMLDOMMsg.hpp	/^      , LSParser_ParseInProgress           = 33$/;"	e	enum:XMLDOMMsg::Codes
LSParser_ParsingAborted	include/xercesc/util/XMLDOMMsg.hpp	/^      , LSParser_ParsingAborted            = 34$/;"	e	enum:XMLDOMMsg::Codes
LSParser_ParsingFailed	include/xercesc/util/XMLDOMMsg.hpp	/^      , LSParser_ParsingFailed             = 35$/;"	e	enum:XMLDOMMsg::Codes
LastExtEntityInfo	include/xercesc/internal/ReaderMgr.hpp	/^    struct LastExtEntityInfo : public XMemory$/;"	s	class:ReaderMgr
Leaf	include/xercesc/validators/common/ContentSpecNode.hpp	/^        Leaf = 0$/;"	e	enum:ContentSpecNode::NodeTypes
LexicalHandler	include/xercesc/sax2/LexicalHandler.hpp	/^    LexicalHandler()$/;"	f	class:LexicalHandler
LexicalHandler	include/xercesc/sax2/LexicalHandler.hpp	/^class SAX2_EXPORT LexicalHandler$/;"	c
List	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        List,$/;"	e	enum:DatatypeValidator::ValidatorType
ListDatatypeValidator	include/xercesc/validators/datatype/ListDatatypeValidator.hpp	/^class VALIDATORS_EXPORT ListDatatypeValidator : public AbstractStringValidator$/;"	c
ListType	include/xercesc/validators/schema/SchemaInfo.hpp	/^    enum ListType {$/;"	g	class:SchemaInfo
ListUnionRestrictionError	include/xercesc/framework/XMLErrorCodes.hpp	/^      , ListUnionRestrictionError          = 25$/;"	e	enum:XMLErrs::Codes
LiteralType	include/xercesc/util/XMLAbstractDoubleFloat.hpp	/^    enum LiteralType$/;"	g	class:XMLAbstractDoubleFloat
LocalFileFormatTarget	include/xercesc/framework/LocalFileFormatTarget.hpp	/^class XMLPARSER_EXPORT LocalFileFormatTarget : public XMLFormatTarget {$/;"	c
LocalFileInputSource	include/xercesc/framework/LocalFileInputSource.hpp	/^class XMLPARSER_EXPORT LocalFileInputSource : public InputSource$/;"	c
LocationHint	include/xercesc/framework/XMLSchemaDescription.hpp	/^typedef const XMLCh* const LocationHint;$/;"	t
Locator	include/xercesc/sax/Locator.hpp	/^    Locator()$/;"	f	class:Locator
Locator	include/xercesc/sax/Locator.hpp	/^class SAX_EXPORT Locator$/;"	c
Loop	include/xercesc/validators/common/ContentSpecNode.hpp	/^        , Loop = 10$/;"	e	enum:ContentSpecNode::NodeTypes
MAPSIZE	include/xercesc/util/regx/RangeToken.hpp	/^    static const int MAPSIZE;$/;"	m	class:RangeToken
MAP_SIZE	include/xercesc/dom/impl/DOMNamedNodeMapImpl.hpp	43;"	d
MARK_CHARACTERS	include/xercesc/util/XMLUri.hpp	/^    static const XMLCh MARK_CHARACTERS[];$/;"	m	class:XMLUri
MARK_OR_RESERVED_CHARACTERS	include/xercesc/util/XMLUri.hpp	/^    static const XMLCh MARK_OR_RESERVED_CHARACTERS[];$/;"	m	class:XMLUri
MATH_SYMBOL	include/xercesc/util/regx/XMLUniCharacter.hpp	/^        MATH_SYMBOL             = 24,$/;"	e	enum:XMLUniCharacter::<anonymous>
MFPT	include/xercesc/util/Janitor.hpp	/^    typedef void (T::*MFPT) ();$/;"	t	class:JanitorMemFunCall
MODEL_GROUP	include/xercesc/framework/psvi/XSConstants.hpp	/^	      MODEL_GROUP               = 7,$/;"	e	enum:XSConstants::COMPONENT_TYPE
MODEL_GROUP_DEFINITION	include/xercesc/framework/psvi/XSConstants.hpp	/^	      MODEL_GROUP_DEFINITION    = 6,$/;"	e	enum:XSConstants::COMPONENT_TYPE
MODE_ASYNCHRONOUS	include/xercesc/dom/DOMImplementationLS.hpp	/^        MODE_ASYNCHRONOUS = 2$/;"	e	enum:DOMImplementationLS::DOMImplementationLSMode
MODE_SYNCHRONOUS	include/xercesc/dom/DOMImplementationLS.hpp	/^        MODE_SYNCHRONOUS = 1,$/;"	e	enum:DOMImplementationLS::DOMImplementationLSMode
MODIFIER_LETTER	include/xercesc/util/regx/XMLUniCharacter.hpp	/^        MODIFIER_LETTER         = 4,$/;"	e	enum:XMLUniCharacter::<anonymous>
MODIFIER_SYMBOL	include/xercesc/util/regx/XMLUniCharacter.hpp	/^        MODIFIER_SYMBOL         = 26,$/;"	e	enum:XMLUniCharacter::<anonymous>
MULTIPLE_LINE	include/xercesc/util/regx/RegularExpression.hpp	/^    static const unsigned int   MULTIPLE_LINE;$/;"	m	class:RegularExpression
MULTIPLY	include/xercesc/util/XercesVersion.hpp	187;"	d
MULTIVALUE_FACET	include/xercesc/framework/psvi/XSConstants.hpp	/^	      MULTIVALUE_FACET           = 14$/;"	e	enum:XSConstants::COMPONENT_TYPE
MakeXMLException	include/xercesc/util/XMLException.hpp	178;"	d
MapModes	include/xercesc/internal/ElemStack.hpp	/^    enum MapModes$/;"	g	class:ElemStack
MapModes	include/xercesc/internal/ElemStack.hpp	/^    enum MapModes$/;"	g	class:WFElemStack
Match	include/xercesc/util/regx/Match.hpp	/^  class XMLUTIL_EXPORT Match : public XMemory$/;"	c
MemBufFormatTarget	include/xercesc/framework/MemBufFormatTarget.hpp	/^class XMLPARSER_EXPORT MemBufFormatTarget : public XMLFormatTarget {$/;"	c
MemBufInputSource	include/xercesc/framework/MemBufInputSource.hpp	/^class XMLPARSER_EXPORT MemBufInputSource : public InputSource$/;"	c
MemoryManager	include/xercesc/framework/MemoryManager.hpp	/^    MemoryManager()$/;"	f	class:MemoryManager
MemoryManager	include/xercesc/framework/MemoryManager.hpp	/^class XMLPARSER_EXPORT MemoryManager$/;"	c
MemoryManagerImpl	include/xercesc/internal/MemoryManagerImpl.hpp	/^    MemoryManagerImpl()$/;"	f	class:MemoryManagerImpl
MemoryManagerImpl	include/xercesc/internal/MemoryManagerImpl.hpp	/^class XMLUTIL_EXPORT MemoryManagerImpl : public MemoryManager$/;"	c
MiliSecond	include/xercesc/util/XMLDateTime.hpp	/^        MiliSecond ,  \/\/not to be used directly$/;"	e	enum:XMLDateTime::valueIndex
MinMaxOnGroupChild	include/xercesc/framework/XMLErrorCodes.hpp	/^      , MinMaxOnGroupChild                 = 102$/;"	e	enum:XMLErrs::Codes
Minute	include/xercesc/util/XMLDateTime.hpp	/^        Minute     ,$/;"	e	enum:XMLDateTime::valueIndex
MixedContentModel	include/xercesc/validators/common/MixedContentModel.hpp	/^class MixedContentModel : public XMLContentModel$/;"	c
MixedOrElementOnly	include/xercesc/framework/XMLErrorCodes.hpp	/^      , MixedOrElementOnly                 = 96$/;"	e	enum:XMLErrs::Codes
Mixed_Complex	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^        , Mixed_Complex$/;"	e	enum:SchemaElementDecl::ModelTypes
Mixed_Simple	include/xercesc/validators/DTD/DTDElementDecl.hpp	/^        , Mixed_Simple$/;"	e	enum:DTDElementDecl::ModelTypes
Mixed_Simple	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^        , Mixed_Simple$/;"	e	enum:SchemaElementDecl::ModelTypes
Mode_Attribute	include/xercesc/internal/ElemStack.hpp	/^        Mode_Attribute$/;"	e	enum:ElemStack::MapModes
Mode_Attribute	include/xercesc/internal/ElemStack.hpp	/^        Mode_Attribute$/;"	e	enum:WFElemStack::MapModes
Mode_Element	include/xercesc/internal/ElemStack.hpp	/^        , Mode_Element$/;"	e	enum:ElemStack::MapModes
Mode_Element	include/xercesc/internal/ElemStack.hpp	/^        , Mode_Element$/;"	e	enum:WFElemStack::MapModes
ModelGroupChoice	include/xercesc/validators/common/ContentSpecNode.hpp	/^        , ModelGroupChoice = 36         \/\/ 32 + 4 (Choice)$/;"	e	enum:ContentSpecNode::NodeTypes
ModelGroupSequence	include/xercesc/validators/common/ContentSpecNode.hpp	/^        , ModelGroupSequence = 21       \/\/ 16 + 5 (Sequence)$/;"	e	enum:ContentSpecNode::NodeTypes
ModelTypes	include/xercesc/validators/DTD/DTDElementDecl.hpp	/^    enum ModelTypes$/;"	g	class:DTDElementDecl
ModelTypes	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^    enum ModelTypes$/;"	g	class:SchemaElementDecl
ModelTypes_Count	include/xercesc/validators/DTD/DTDElementDecl.hpp	/^        , ModelTypes_Count$/;"	e	enum:DTDElementDecl::ModelTypes
ModelTypes_Count	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^        , ModelTypes_Count$/;"	e	enum:SchemaElementDecl::ModelTypes
ModifierOp	include/xercesc/util/regx/Op.hpp	/^class XMLUTIL_EXPORT ModifierOp: public ChildOp {$/;"	c
Month	include/xercesc/util/XMLDateTime.hpp	/^        Month      ,$/;"	e	enum:XMLDateTime::valueIndex
Month	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        Month,$/;"	e	enum:DatatypeValidator::ValidatorType
MonthDatatypeValidator	include/xercesc/validators/datatype/MonthDatatypeValidator.hpp	/^class VALIDATORS_EXPORT MonthDatatypeValidator : public DateTimeValidator$/;"	c
MonthDay	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        MonthDay,$/;"	e	enum:DatatypeValidator::ValidatorType
MonthDayDatatypeValidator	include/xercesc/validators/datatype/MonthDayDatatypeValidator.hpp	/^class VALIDATORS_EXPORT MonthDayDatatypeValidator : public DateTimeValidator$/;"	c
MoreEndThanStartTags	include/xercesc/framework/XMLErrorCodes.hpp	/^      , MoreEndThanStartTags               = 219$/;"	e	enum:XMLErrs::Codes
MultipleIdAttrs	include/xercesc/framework/XMLValidityCodes.hpp	/^      , MultipleIdAttrs                    = 11$/;"	e	enum:XMLValid::Codes
Mutex_CouldNotDestroy	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Mutex_CouldNotDestroy              = 47$/;"	e	enum:XMLExcepts::Codes
NAMESPACE_CONSTRAINT	include/xercesc/framework/psvi/XSWildcard.hpp	/^    enum NAMESPACE_CONSTRAINT {$/;"	g	class:XSWildcard
NAMESPACE_ERR	include/xercesc/dom/DOMException.hpp	/^         NAMESPACE_ERR                  = 14,$/;"	e	enum:DOMException::ExceptionCode
NAMESPACE_ERR	include/xercesc/util/XMLDOMMsg.hpp	/^      , NAMESPACE_ERR                      = 16$/;"	e	enum:XMLDOMMsg::Codes
NCName	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        NCName,$/;"	e	enum:DatatypeValidator::ValidatorType
NCNameDatatypeValidator	include/xercesc/validators/datatype/NCNameDatatypeValidator.hpp	/^class VALIDATORS_EXPORT NCNameDatatypeValidator : public StringDatatypeValidator$/;"	c
NDATANotValidForPE	include/xercesc/framework/XMLErrorCodes.hpp	/^      , NDATANotValidForPE                 = 238$/;"	e	enum:XMLErrs::Codes
NEL_RepeatedCalls	include/xercesc/util/XMLExceptMsgs.hpp	/^      , NEL_RepeatedCalls                  = 265$/;"	e	enum:XMLExcepts::Codes
NODE_ADOPTED	include/xercesc/dom/DOMUserDataHandler.hpp	/^        NODE_ADOPTED              = 5$/;"	e	enum:DOMUserDataHandler::DOMOperationType
NODE_CLONED	include/xercesc/dom/DOMUserDataHandler.hpp	/^        NODE_CLONED               = 1,$/;"	e	enum:DOMUserDataHandler::DOMOperationType
NODE_DELETED	include/xercesc/dom/DOMUserDataHandler.hpp	/^        NODE_DELETED              = 3,$/;"	e	enum:DOMUserDataHandler::DOMOperationType
NODE_IMPORTED	include/xercesc/dom/DOMUserDataHandler.hpp	/^        NODE_IMPORTED             = 2,$/;"	e	enum:DOMUserDataHandler::DOMOperationType
NODE_RENAMED	include/xercesc/dom/DOMUserDataHandler.hpp	/^        NODE_RENAMED              = 4,$/;"	e	enum:DOMUserDataHandler::DOMOperationType
NON_SPACING_MARK	include/xercesc/util/regx/XMLUniCharacter.hpp	/^        NON_SPACING_MARK        = 6,$/;"	e	enum:XMLUniCharacter::<anonymous>
NOTATION	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        NOTATION,$/;"	e	enum:DatatypeValidator::ValidatorType
NOTATIONDatatypeValidator	include/xercesc/validators/datatype/NOTATIONDatatypeValidator.hpp	/^class VALIDATORS_EXPORT NOTATIONDatatypeValidator : public AbstractStringValidator$/;"	c
NOTATION_DECLARATION	include/xercesc/framework/psvi/XSConstants.hpp	/^	      NOTATION_DECLARATION      = 11,$/;"	e	enum:XSConstants::COMPONENT_TYPE
NOTATION_NODE	include/xercesc/dom/DOMNode.hpp	/^        NOTATION_NODE               = 12$/;"	e	enum:DOMNode::NodeType
NOTATION_OBJECT	include/xercesc/dom/DOMMemoryManager.hpp	/^        NOTATION_OBJECT               = 10,$/;"	e	enum:DOMMemoryManager::NodeObjectType
NOT_FOUND_ERR	include/xercesc/dom/DOMException.hpp	/^         NOT_FOUND_ERR                  = 8,$/;"	e	enum:DOMException::ExceptionCode
NOT_FOUND_ERR	include/xercesc/util/XMLDOMMsg.hpp	/^      , NOT_FOUND_ERR                      = 10$/;"	e	enum:XMLDOMMsg::Codes
NOT_SUPPORTED_ERR	include/xercesc/dom/DOMException.hpp	/^         NOT_SUPPORTED_ERR              = 9,$/;"	e	enum:DOMException::ExceptionCode
NOT_SUPPORTED_ERR	include/xercesc/util/XMLDOMMsg.hpp	/^      , NOT_SUPPORTED_ERR                  = 11$/;"	e	enum:XMLDOMMsg::Codes
NO_DATA_ALLOWED_ERR	include/xercesc/dom/DOMException.hpp	/^         NO_DATA_ALLOWED_ERR            = 6,$/;"	e	enum:DOMException::ExceptionCode
NO_DATA_ALLOWED_ERR	include/xercesc/util/XMLDOMMsg.hpp	/^      , NO_DATA_ALLOWED_ERR                = 8$/;"	e	enum:XMLDOMMsg::Codes
NO_MODIFICATION_ALLOWED_ERR	include/xercesc/dom/DOMException.hpp	/^         NO_MODIFICATION_ALLOWED_ERR    = 7,$/;"	e	enum:DOMException::ExceptionCode
NO_MODIFICATION_ALLOWED_ERR	include/xercesc/util/XMLDOMMsg.hpp	/^      , NO_MODIFICATION_ALLOWED_ERR        = 9$/;"	e	enum:XMLDOMMsg::Codes
NO_RESULT_ERR	include/xercesc/util/XMLDOMMsg.hpp	/^      , NO_RESULT_ERR                      = 29$/;"	e	enum:XMLDOMMsg::Codes
NO_RESULT_ERROR	include/xercesc/dom/DOMXPathException.hpp	/^                NO_RESULT_ERROR = 53$/;"	e	enum:DOMXPathException::ExceptionCode
NSCONSTRAINT_ANY	include/xercesc/framework/psvi/XSWildcard.hpp	/^	    NSCONSTRAINT_ANY          = 1,$/;"	e	enum:XSWildcard::NAMESPACE_CONSTRAINT
NSCONSTRAINT_DERIVATION_LIST	include/xercesc/framework/psvi/XSWildcard.hpp	/^	    NSCONSTRAINT_DERIVATION_LIST         = 3$/;"	e	enum:XSWildcard::NAMESPACE_CONSTRAINT
NSCONSTRAINT_NOT	include/xercesc/framework/psvi/XSWildcard.hpp	/^	    NSCONSTRAINT_NOT          = 2,$/;"	e	enum:XSWildcard::NAMESPACE_CONSTRAINT
NSDeclInvalid	include/xercesc/framework/XMLErrorCodes.hpp	/^      , NSDeclInvalid                      = 150$/;"	e	enum:XMLErrs::Codes
NUMBER_TYPE	include/xercesc/dom/DOMXPathResult.hpp	/^                NUMBER_TYPE = 1,$/;"	e	enum:DOMXPathResult::ResultType
NaN	include/xercesc/util/XMLAbstractDoubleFloat.hpp	/^        NaN,$/;"	e	enum:XMLAbstractDoubleFloat::LiteralType
Name	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        Name,$/;"	e	enum:DatatypeValidator::ValidatorType
NameDatatypeValidator	include/xercesc/validators/datatype/NameDatatypeValidator.hpp	/^class VALIDATORS_EXPORT NameDatatypeValidator : public StringDatatypeValidator$/;"	c
NameIdPool	include/xercesc/util/NameIdPool.c	/^NameIdPool<TElem>::NameIdPool( const XMLSize_t      hashModulus$/;"	f	class:TElem
NameIdPool	include/xercesc/util/NameIdPool.hpp	/^template <class TElem> class NameIdPool : public XMemory$/;"	c
NameIdPoolEnumerator	include/xercesc/util/NameIdPool.c	/^NameIdPoolEnumerator(NameIdPool<TElem>* const toEnum$/;"	f	class:TElem
NameIdPoolEnumerator	include/xercesc/util/NameIdPool.c	/^NameIdPoolEnumerator(const NameIdPoolEnumerator<TElem>& toCopy) :$/;"	f	class:TElem
NameIdPoolEnumerator	include/xercesc/util/NameIdPool.hpp	/^template <class TElem> class NameIdPoolEnumerator : public XMLEnumerator<TElem>, public XMemory$/;"	c
NamespaceScope	include/xercesc/validators/schema/NamespaceScope.hpp	/^class VALIDATORS_EXPORT NamespaceScope : public XMemory,$/;"	c
NegINF	include/xercesc/util/XMLAbstractDoubleFloat.hpp	/^        NegINF,$/;"	e	enum:XMLAbstractDoubleFloat::LiteralType
NestedCDATA	include/xercesc/framework/XMLErrorCodes.hpp	/^      , NestedCDATA                        = 247$/;"	e	enum:XMLErrs::Codes
NetAcc_ConnSocket	include/xercesc/util/XMLExceptMsgs.hpp	/^      , NetAcc_ConnSocket                  = 53$/;"	e	enum:XMLExcepts::Codes
NetAcc_CreateSocket	include/xercesc/util/XMLExceptMsgs.hpp	/^      , NetAcc_CreateSocket                = 52$/;"	e	enum:XMLExcepts::Codes
NetAcc_InitFailed	include/xercesc/util/XMLExceptMsgs.hpp	/^      , NetAcc_InitFailed                  = 50$/;"	e	enum:XMLExcepts::Codes
NetAcc_InternalError	include/xercesc/util/XMLExceptMsgs.hpp	/^      , NetAcc_InternalError               = 48$/;"	e	enum:XMLExcepts::Codes
NetAcc_LengthError	include/xercesc/util/XMLExceptMsgs.hpp	/^      , NetAcc_LengthError                 = 49$/;"	e	enum:XMLExcepts::Codes
NetAcc_ReadSocket	include/xercesc/util/XMLExceptMsgs.hpp	/^      , NetAcc_ReadSocket                  = 55$/;"	e	enum:XMLExcepts::Codes
NetAcc_TargetResolution	include/xercesc/util/XMLExceptMsgs.hpp	/^      , NetAcc_TargetResolution            = 51$/;"	e	enum:XMLExcepts::Codes
NetAcc_UnsupportedMethod	include/xercesc/util/XMLExceptMsgs.hpp	/^      , NetAcc_UnsupportedMethod           = 56$/;"	e	enum:XMLExcepts::Codes
NetAcc_WriteSocket	include/xercesc/util/XMLExceptMsgs.hpp	/^      , NetAcc_WriteSocket                 = 54$/;"	e	enum:XMLExcepts::Codes
NilAttrNotEmpty	include/xercesc/framework/XMLValidityCodes.hpp	/^      , NilAttrNotEmpty                    = 41$/;"	e	enum:XMLValid::Codes
NillNotAllowed	include/xercesc/framework/XMLValidityCodes.hpp	/^      , NillNotAllowed                     = 40$/;"	e	enum:XMLValid::Codes
NmToken	include/xercesc/framework/XMLAttDef.hpp	/^        , NmToken           = 6$/;"	e	enum:XMLAttDef::AttTypes
NmTokens	include/xercesc/framework/XMLAttDef.hpp	/^        , NmTokens          = 7$/;"	e	enum:XMLAttDef::AttTypes
NoAbstractInXsiType	include/xercesc/framework/XMLValidityCodes.hpp	/^      , NoAbstractInXsiType                = 55$/;"	e	enum:XMLValid::Codes
NoAttNormForStandalone	include/xercesc/framework/XMLValidityCodes.hpp	/^      , NoAttNormForStandalone             = 49$/;"	e	enum:XMLValid::Codes
NoCharData	include/xercesc/framework/XMLElementDecl.hpp	/^        NoCharData$/;"	e	enum:XMLElementDecl::CharDataOpts
NoCharDataInCM	include/xercesc/framework/XMLValidityCodes.hpp	/^      , NoCharDataInCM                     = 22$/;"	e	enum:XMLValid::Codes
NoCircularDefinition	include/xercesc/framework/XMLErrorCodes.hpp	/^      , NoCircularDefinition               = 86$/;"	e	enum:XMLErrs::Codes
NoContentForRef	include/xercesc/framework/XMLValidityCodes.hpp	/^      , NoContentForRef                    = 31$/;"	e	enum:XMLValid::Codes
NoDatatypeValidatorForAttribute	include/xercesc/framework/XMLValidityCodes.hpp	/^      , NoDatatypeValidatorForAttribute    = 43$/;"	e	enum:XMLValid::Codes
NoDatatypeValidatorForSimpleType	include/xercesc/framework/XMLValidityCodes.hpp	/^      , NoDatatypeValidatorForSimpleType   = 37$/;"	e	enum:XMLValid::Codes
NoDefAttForStandalone	include/xercesc/framework/XMLValidityCodes.hpp	/^      , NoDefAttForStandalone              = 48$/;"	e	enum:XMLValid::Codes
NoDirectUseAbstractElement	include/xercesc/framework/XMLValidityCodes.hpp	/^      , NoDirectUseAbstractElement         = 56$/;"	e	enum:XMLValid::Codes
NoEmptyStrNamespace	include/xercesc/framework/XMLErrorCodes.hpp	/^      , NoEmptyStrNamespace                = 264$/;"	e	enum:XMLErrs::Codes
NoError	include/xercesc/framework/XMLErrorCodes.hpp	/^        NoError                            = 0$/;"	e	enum:XMLErrs::Codes
NoError	include/xercesc/framework/XMLValidityCodes.hpp	/^        NoError                            = 0$/;"	e	enum:XMLValid::Codes
NoError	include/xercesc/util/XMLDOMMsg.hpp	/^        NoError                            = 0$/;"	e	enum:XMLDOMMsg::Codes
NoError	include/xercesc/util/XMLExceptMsgs.hpp	/^        NoError                            = 0$/;"	e	enum:XMLExcepts::Codes
NoEscapes	include/xercesc/framework/XMLFormatter.hpp	/^        NoEscapes$/;"	e	enum:XMLFormatter::EscapeFlags
NoException	include/xercesc/validators/schema/TraverseSchema.hpp	/^        NoException = 0,$/;"	e	enum:TraverseSchema::ExceptionCodes
NoExtRefsInAttValue	include/xercesc/framework/XMLErrorCodes.hpp	/^      , NoExtRefsInAttValue                = 242$/;"	e	enum:XMLErrs::Codes
NoMultipleValues	include/xercesc/framework/XMLValidityCodes.hpp	/^      , NoMultipleValues                   = 25$/;"	e	enum:XMLValid::Codes
NoNameGlobalElement	include/xercesc/framework/XMLErrorCodes.hpp	/^      , NoNameGlobalElement                = 85$/;"	e	enum:XMLErrs::Codes
NoNameRefAttGroup	include/xercesc/framework/XMLErrorCodes.hpp	/^      , NoNameRefAttGroup                  = 19$/;"	e	enum:XMLErrs::Codes
NoNameRefAttribute	include/xercesc/framework/XMLErrorCodes.hpp	/^      , NoNameRefAttribute                 = 16$/;"	e	enum:XMLErrs::Codes
NoNameRefElement	include/xercesc/framework/XMLErrorCodes.hpp	/^      , NoNameRefElement                   = 17$/;"	e	enum:XMLErrs::Codes
NoNameRefGroup	include/xercesc/framework/XMLErrorCodes.hpp	/^      , NoNameRefGroup                     = 18$/;"	e	enum:XMLErrs::Codes
NoNotationType	include/xercesc/framework/XMLErrorCodes.hpp	/^      , NoNotationType                     = 93$/;"	e	enum:XMLErrs::Codes
NoPIStartsWithXML	include/xercesc/framework/XMLErrorCodes.hpp	/^      , NoPIStartsWithXML                  = 253$/;"	e	enum:XMLErrs::Codes
NoReason	include/xercesc/framework/XMLAttDef.hpp	/^        NoReason$/;"	e	enum:XMLAttDef::CreateReasons
NoReason	include/xercesc/framework/XMLElementDecl.hpp	/^        NoReason$/;"	e	enum:XMLElementDecl::CreateReasons
NoRepInMixed	include/xercesc/framework/XMLErrorCodes.hpp	/^      , NoRepInMixed                       = 160$/;"	e	enum:XMLErrs::Codes
NoRootElemInDOCTYPE	include/xercesc/framework/XMLErrorCodes.hpp	/^      , NoRootElemInDOCTYPE                = 186$/;"	e	enum:XMLErrs::Codes
NoUnparsedEntityRefs	include/xercesc/framework/XMLErrorCodes.hpp	/^      , NoUnparsedEntityRefs               = 203$/;"	e	enum:XMLErrs::Codes
NoUseAbstractType	include/xercesc/framework/XMLValidityCodes.hpp	/^      , NoUseAbstractType                  = 57$/;"	e	enum:XMLValid::Codes
NoUseOfxmlnsAsPrefix	include/xercesc/framework/XMLErrorCodes.hpp	/^      , NoUseOfxmlnsAsPrefix               = 265$/;"	e	enum:XMLErrs::Codes
NoUseOfxmlnsURI	include/xercesc/framework/XMLErrorCodes.hpp	/^      , NoUseOfxmlnsURI                    = 266$/;"	e	enum:XMLErrs::Codes
NoWSForStandalone	include/xercesc/framework/XMLValidityCodes.hpp	/^      , NoWSForStandalone                  = 50$/;"	e	enum:XMLValid::Codes
NoXMLNSAsElementPrefix	include/xercesc/framework/XMLErrorCodes.hpp	/^      , NoXMLNSAsElementPrefix             = 269$/;"	e	enum:XMLErrs::Codes
NodeIDMap_GrowErr	include/xercesc/util/XMLExceptMsgs.hpp	/^      , NodeIDMap_GrowErr                  = 343$/;"	e	enum:XMLExcepts::Codes
NodeIterators	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^typedef RefVectorOf<DOMNodeIteratorImpl>     NodeIterators;$/;"	t
NodeObjectType	include/xercesc/dom/DOMMemoryManager.hpp	/^    enum NodeObjectType {$/;"	g	class:DOMMemoryManager
NodeType	include/xercesc/dom/DOMNode.hpp	/^    enum NodeType {$/;"	g	class:DOMNode
NodeType	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    enum NodeType {$/;"	g	class:XercesNodeTest
NodeType_NAMESPACE	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        NodeType_NAMESPACE= 4,$/;"	e	enum:XercesNodeTest::NodeType
NodeType_NODE	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        NodeType_NODE = 3,$/;"	e	enum:XercesNodeTest::NodeType
NodeType_QNAME	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        NodeType_QNAME = 1,$/;"	e	enum:XercesNodeTest::NodeType
NodeType_UNKNOWN	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        NodeType_UNKNOWN$/;"	e	enum:XercesNodeTest::NodeType
NodeType_WILDCARD	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^        NodeType_WILDCARD = 2,$/;"	e	enum:XercesNodeTest::NodeType
NodeTypes	include/xercesc/validators/common/ContentSpecNode.hpp	/^    enum NodeTypes$/;"	g	class:ContentSpecNode
NonDerivedXsiType	include/xercesc/framework/XMLValidityCodes.hpp	/^      , NonDerivedXsiType                  = 59$/;"	e	enum:XMLValid::Codes
NonWSContent	include/xercesc/framework/XMLValidityCodes.hpp	/^      , NonWSContent                       = 73$/;"	e	enum:XMLValid::Codes
Normal	include/xercesc/util/XMLAbstractDoubleFloat.hpp	/^        Normal$/;"	e	enum:XMLAbstractDoubleFloat::LiteralType
NotAllContent	include/xercesc/framework/XMLErrorCodes.hpp	/^      , NotAllContent                      = 143$/;"	e	enum:XMLErrs::Codes
NotEnoughElemsForCM	include/xercesc/framework/XMLValidityCodes.hpp	/^      , NotEnoughElemsForCM                = 21$/;"	e	enum:XMLValid::Codes
NotExpressibleWildCardIntersection	include/xercesc/framework/XMLErrorCodes.hpp	/^      , NotExpressibleWildCardIntersection   = 108$/;"	e	enum:XMLErrs::Codes
NotOptionalDefaultAttValue	include/xercesc/framework/XMLErrorCodes.hpp	/^      , NotOptionalDefaultAttValue         = 48$/;"	e	enum:XMLErrs::Codes
NotSameAsFixedValue	include/xercesc/framework/XMLValidityCodes.hpp	/^      , NotSameAsFixedValue                = 26$/;"	e	enum:XMLValid::Codes
NotSimpleOrMixedElement	include/xercesc/framework/XMLErrorCodes.hpp	/^      , NotSimpleOrMixedElement            = 55$/;"	e	enum:XMLErrs::Codes
NotValidAfterContent	include/xercesc/framework/XMLErrorCodes.hpp	/^      , NotValidAfterContent               = 182$/;"	e	enum:XMLErrs::Codes
Not_All_Context	include/xercesc/validators/schema/TraverseSchema.hpp	/^        Not_All_Context = 0$/;"	e	enum:TraverseSchema::<anonymous>
Notation	include/xercesc/framework/XMLAttDef.hpp	/^        , Notation          = 8$/;"	e	enum:XMLAttDef::AttTypes
NotationAlreadyExists	include/xercesc/framework/XMLErrorCodes.hpp	/^      , NotationAlreadyExists              = 2$/;"	e	enum:XMLErrs::Codes
NotationNotDeclared	include/xercesc/framework/XMLValidityCodes.hpp	/^      , NotationNotDeclared                = 4$/;"	e	enum:XMLValid::Codes
Notation_DeclNotFound	include/xercesc/framework/XMLErrorCodes.hpp	/^      , Notation_DeclNotFound              = 129$/;"	e	enum:XMLErrs::Codes
NumberType	include/xercesc/util/XMLNumber.hpp	/^    enum NumberType {$/;"	g	class:XMLNumber
ORDERED_FALSE	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^	    ORDERED_FALSE             = 0,$/;"	e	enum:XSSimpleTypeDefinition::ORDERING
ORDERED_NODE_ITERATOR_TYPE	include/xercesc/dom/DOMXPathResult.hpp	/^                ORDERED_NODE_ITERATOR_TYPE = 5,$/;"	e	enum:DOMXPathResult::ResultType
ORDERED_NODE_SNAPSHOT_TYPE	include/xercesc/dom/DOMXPathResult.hpp	/^                ORDERED_NODE_SNAPSHOT_TYPE = 7,$/;"	e	enum:DOMXPathResult::ResultType
ORDERED_PARTIAL	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^	    ORDERED_PARTIAL           = 1,$/;"	e	enum:XSSimpleTypeDefinition::ORDERING
ORDERED_TOTAL	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^        ORDERED_TOTAL             = 2$/;"	e	enum:XSSimpleTypeDefinition::ORDERING
ORDERING	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^    enum ORDERING {$/;"	g	class:XSSimpleTypeDefinition
OTHER_LETTER	include/xercesc/util/regx/XMLUniCharacter.hpp	/^        OTHER_LETTER            = 5,$/;"	e	enum:XMLUniCharacter::<anonymous>
OTHER_NUMBER	include/xercesc/util/regx/XMLUniCharacter.hpp	/^        OTHER_NUMBER            = 11,$/;"	e	enum:XMLUniCharacter::<anonymous>
OTHER_PUNCTUATION	include/xercesc/util/regx/XMLUniCharacter.hpp	/^        OTHER_PUNCTUATION       = 23,$/;"	e	enum:XMLUniCharacter::<anonymous>
OTHER_SYMBOL	include/xercesc/util/regx/XMLUniCharacter.hpp	/^        OTHER_SYMBOL            = 27,$/;"	e	enum:XMLUniCharacter::<anonymous>
OWNED	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    static const unsigned short OWNED;$/;"	m	class:DOMNodeImpl
O_ANCHOR	include/xercesc/util/regx/Op.hpp	/^        O_ANCHOR                    = 5,$/;"	e	enum:Op::<anonymous>
O_BACKREFERENCE	include/xercesc/util/regx/Op.hpp	/^        O_BACKREFERENCE             = 16$/;"	e	enum:Op::<anonymous>
O_CAPTURE	include/xercesc/util/regx/Op.hpp	/^        O_CAPTURE                   = 15,$/;"	e	enum:Op::<anonymous>
O_CHAR	include/xercesc/util/regx/Op.hpp	/^        O_CHAR                      = 1,$/;"	e	enum:Op::<anonymous>
O_CLOSURE	include/xercesc/util/regx/Op.hpp	/^        O_CLOSURE                   = 7,$/;"	e	enum:Op::<anonymous>
O_DOT	include/xercesc/util/regx/Op.hpp	/^        O_DOT                       = 0,$/;"	e	enum:Op::<anonymous>
O_FINITE_CLOSURE	include/xercesc/util/regx/Op.hpp	/^        O_FINITE_CLOSURE            = 9,$/;"	e	enum:Op::<anonymous>
O_FINITE_NONGREEDYCLOSURE	include/xercesc/util/regx/Op.hpp	/^        O_FINITE_NONGREEDYCLOSURE   = 10,$/;"	e	enum:Op::<anonymous>
O_NONGREEDYCLOSURE	include/xercesc/util/regx/Op.hpp	/^        O_NONGREEDYCLOSURE          = 8,$/;"	e	enum:Op::<anonymous>
O_NONGREEDYQUESTION	include/xercesc/util/regx/Op.hpp	/^        O_NONGREEDYQUESTION         = 12,$/;"	e	enum:Op::<anonymous>
O_NRANGE	include/xercesc/util/regx/Op.hpp	/^        O_NRANGE                    = 4,$/;"	e	enum:Op::<anonymous>
O_QUESTION	include/xercesc/util/regx/Op.hpp	/^        O_QUESTION                  = 11,$/;"	e	enum:Op::<anonymous>
O_RANGE	include/xercesc/util/regx/Op.hpp	/^        O_RANGE                     = 3,$/;"	e	enum:Op::<anonymous>
O_STRING	include/xercesc/util/regx/Op.hpp	/^        O_STRING                    = 6,$/;"	e	enum:Op::<anonymous>
O_UNION	include/xercesc/util/regx/Op.hpp	/^        O_UNION                     = 13,$/;"	e	enum:Op::<anonymous>
Occurence	include/xercesc/validators/common/DFAContentModel.hpp	/^    class Occurence : public XMemory$/;"	c	class:DFAContentModel
Occurence	include/xercesc/validators/common/DFAContentModel.hpp	/^DFAContentModel::Occurence::Occurence(int minOcc, int maxOcc, int eltIndex)$/;"	f	class:DFAContentModel::Occurence
Ok	include/xercesc/util/TransService.hpp	/^        Ok$/;"	e	enum:XMLTransService::Codes
OneOrMore	include/xercesc/validators/common/ContentSpecNode.hpp	/^        , OneOrMore$/;"	e	enum:ContentSpecNode::NodeTypes
OnlyAnnotationExpected	include/xercesc/framework/XMLErrorCodes.hpp	/^      , OnlyAnnotationExpected             = 77$/;"	e	enum:XMLErrs::Codes
Op	include/xercesc/util/regx/Op.hpp	/^class XMLUTIL_EXPORT Op : public XMemory$/;"	c
OpFactory	include/xercesc/util/regx/OpFactory.hpp	/^class XMLUTIL_EXPORT OpFactory : public XMemory$/;"	c
OtherEncoding	include/xercesc/framework/XMLRecognizer.hpp	/^        , OtherEncoding = 999$/;"	e	enum:XMLRecognizer::Encodings
OutOfMemoryException	include/xercesc/util/OutOfMemoryException.hpp	/^class XMLUTIL_EXPORT OutOfMemoryException : public XMemory$/;"	c
OutOfMemoryException	include/xercesc/util/OutOfMemoryException.hpp	/^inline OutOfMemoryException::OutOfMemoryException() {}$/;"	f	class:OutOfMemoryException
OutOfMemoryException	include/xercesc/util/OutOfMemoryException.hpp	/^inline OutOfMemoryException::OutOfMemoryException(const OutOfMemoryException& other) : XMemory(other) {}$/;"	f	class:OutOfMemoryException
Out_Of_Memory	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Out_Of_Memory                      = 266$/;"	e	enum:XMLExcepts::Codes
PARAGRAPH_SEPARATOR	include/xercesc/util/regx/XMLUniCharacter.hpp	/^        PARAGRAPH_SEPARATOR     = 14,$/;"	e	enum:XMLUniCharacter::<anonymous>
PARSERS_EXPORT	include/xercesc/util/XercesDefs.hpp	143;"	d
PARSERS_EXPORT	include/xercesc/util/XercesDefs.hpp	152;"	d
PARSERS_EXPORT	include/xercesc/util/XercesDefs.hpp	168;"	d
PARSE_ERR	include/xercesc/dom/DOMLSException.hpp	/^         PARSE_ERR        = 81,$/;"	e	enum:DOMLSException::LSExceptionCode
PARSE_ERR	include/xercesc/util/XMLDOMMsg.hpp	/^      , PARSE_ERR                          = 24$/;"	e	enum:XMLDOMMsg::Codes
PARTICLE	include/xercesc/framework/psvi/XSConstants.hpp	/^	      PARTICLE                  = 8,$/;"	e	enum:XSConstants::COMPONENT_TYPE
PATH_CHARACTERS	include/xercesc/util/XMLUri.hpp	/^    static const XMLCh PATH_CHARACTERS[];$/;"	m	class:XMLUri
PC_LAX	include/xercesc/framework/psvi/XSWildcard.hpp	/^	    PC_LAX                    = 3$/;"	e	enum:XSWildcard::PROCESS_CONTENTS
PC_SKIP	include/xercesc/framework/psvi/XSWildcard.hpp	/^	    PC_SKIP                   = 2,$/;"	e	enum:XSWildcard::PROCESS_CONTENTS
PC_STRICT	include/xercesc/framework/psvi/XSWildcard.hpp	/^	    PC_STRICT                 = 1,$/;"	e	enum:XSWildcard::PROCESS_CONTENTS
PD_EmptyBase	include/xercesc/util/XMLExceptMsgs.hpp	/^      , PD_EmptyBase                       = 321$/;"	e	enum:XMLExcepts::Codes
PD_ForbiddenRes1	include/xercesc/util/XMLExceptMsgs.hpp	/^      , PD_ForbiddenRes1                   = 333$/;"	e	enum:XMLExcepts::Codes
PD_ForbiddenRes2	include/xercesc/util/XMLExceptMsgs.hpp	/^      , PD_ForbiddenRes2                   = 334$/;"	e	enum:XMLExcepts::Codes
PD_ForbiddenRes3	include/xercesc/util/XMLExceptMsgs.hpp	/^      , PD_ForbiddenRes3                   = 335$/;"	e	enum:XMLExcepts::Codes
PD_ForbiddenRes4	include/xercesc/util/XMLExceptMsgs.hpp	/^      , PD_ForbiddenRes4                   = 336$/;"	e	enum:XMLExcepts::Codes
PD_InvalidContentType	include/xercesc/util/XMLExceptMsgs.hpp	/^      , PD_InvalidContentType              = 342$/;"	e	enum:XMLExcepts::Codes
PD_MapAndSum	include/xercesc/util/XMLExceptMsgs.hpp	/^      , PD_MapAndSum                       = 341$/;"	e	enum:XMLExcepts::Codes
PD_NSCompat1	include/xercesc/util/XMLExceptMsgs.hpp	/^      , PD_NSCompat1                       = 322$/;"	e	enum:XMLExcepts::Codes
PD_NSRecurseCheckCardinality1	include/xercesc/util/XMLExceptMsgs.hpp	/^      , PD_NSRecurseCheckCardinality1      = 339$/;"	e	enum:XMLExcepts::Codes
PD_NSSubset1	include/xercesc/util/XMLExceptMsgs.hpp	/^      , PD_NSSubset1                       = 337$/;"	e	enum:XMLExcepts::Codes
PD_NSSubset2	include/xercesc/util/XMLExceptMsgs.hpp	/^      , PD_NSSubset2                       = 338$/;"	e	enum:XMLExcepts::Codes
PD_NameTypeOK1	include/xercesc/util/XMLExceptMsgs.hpp	/^      , PD_NameTypeOK1                     = 324$/;"	e	enum:XMLExcepts::Codes
PD_NameTypeOK2	include/xercesc/util/XMLExceptMsgs.hpp	/^      , PD_NameTypeOK2                     = 325$/;"	e	enum:XMLExcepts::Codes
PD_NameTypeOK3	include/xercesc/util/XMLExceptMsgs.hpp	/^      , PD_NameTypeOK3                     = 326$/;"	e	enum:XMLExcepts::Codes
PD_NameTypeOK4	include/xercesc/util/XMLExceptMsgs.hpp	/^      , PD_NameTypeOK4                     = 327$/;"	e	enum:XMLExcepts::Codes
PD_NameTypeOK5	include/xercesc/util/XMLExceptMsgs.hpp	/^      , PD_NameTypeOK5                     = 328$/;"	e	enum:XMLExcepts::Codes
PD_NameTypeOK6	include/xercesc/util/XMLExceptMsgs.hpp	/^      , PD_NameTypeOK6                     = 329$/;"	e	enum:XMLExcepts::Codes
PD_NameTypeOK7	include/xercesc/util/XMLExceptMsgs.hpp	/^      , PD_NameTypeOK7                     = 330$/;"	e	enum:XMLExcepts::Codes
PD_OccurRangeE	include/xercesc/util/XMLExceptMsgs.hpp	/^      , PD_OccurRangeE                     = 323$/;"	e	enum:XMLExcepts::Codes
PD_Recurse1	include/xercesc/util/XMLExceptMsgs.hpp	/^      , PD_Recurse1                        = 331$/;"	e	enum:XMLExcepts::Codes
PD_Recurse2	include/xercesc/util/XMLExceptMsgs.hpp	/^      , PD_Recurse2                        = 332$/;"	e	enum:XMLExcepts::Codes
PD_RecurseUnordered	include/xercesc/util/XMLExceptMsgs.hpp	/^      , PD_RecurseUnordered                = 340$/;"	e	enum:XMLExcepts::Codes
PEBetweenDecl	include/xercesc/framework/XMLErrorCodes.hpp	/^      , PEBetweenDecl                      = 263$/;"	e	enum:XMLErrs::Codes
PEPropogated	include/xercesc/framework/XMLErrorCodes.hpp	/^      , PEPropogated                       = 228$/;"	e	enum:XMLErrs::Codes
PERefInMarkupInIntSubset	include/xercesc/framework/XMLErrorCodes.hpp	/^      , PERefInMarkupInIntSubset           = 230$/;"	e	enum:XMLErrs::Codes
PINameExpected	include/xercesc/framework/XMLErrorCodes.hpp	/^      , PINameExpected                     = 173$/;"	e	enum:XMLErrs::Codes
POST	include/xercesc/util/XMLNetAccessor.hpp	/^        POST$/;"	e	enum:XMLNetHTTPInfo::<anonymous>
PRESERVE	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        PRESERVE = 0,$/;"	e	enum:DatatypeValidator::<anonymous>
PRIVATE_USE	include/xercesc/util/regx/XMLUniCharacter.hpp	/^        PRIVATE_USE             = 17,$/;"	e	enum:XMLUniCharacter::<anonymous>
PROCESSING_INSTRUCTION_NODE	include/xercesc/dom/DOMNode.hpp	/^        PROCESSING_INSTRUCTION_NODE = 7,$/;"	e	enum:DOMNode::NodeType
PROCESSING_INSTRUCTION_OBJECT	include/xercesc/dom/DOMMemoryManager.hpp	/^        PROCESSING_INSTRUCTION_OBJECT = 11,$/;"	e	enum:DOMMemoryManager::NodeObjectType
PROCESS_CONTENTS	include/xercesc/framework/psvi/XSWildcard.hpp	/^    enum PROCESS_CONTENTS {$/;"	g	class:XSWildcard
PROHIBIT_FIXED_STRING_OPTIMIZATION	include/xercesc/util/regx/RegularExpression.hpp	/^    static const unsigned int   PROHIBIT_FIXED_STRING_OPTIMIZATION;$/;"	m	class:RegularExpression
PROHIBIT_HEAD_CHARACTER_OPTIMIZATION	include/xercesc/util/regx/RegularExpression.hpp	/^    static const unsigned int   PROHIBIT_HEAD_CHARACTER_OPTIMIZATION;$/;"	m	class:RegularExpression
PSVIAttribute	include/xercesc/framework/psvi/PSVIAttribute.hpp	/^class XMLPARSER_EXPORT PSVIAttribute : public PSVIItem  $/;"	c
PSVIAttributeList	include/xercesc/framework/psvi/PSVIAttributeList.hpp	/^class XMLPARSER_EXPORT PSVIAttributeList : public XMemory$/;"	c
PSVIAttributeStorage	include/xercesc/framework/psvi/PSVIAttributeList.hpp	/^    PSVIAttributeStorage() :$/;"	f	class:PSVIAttributeStorage
PSVIAttributeStorage	include/xercesc/framework/psvi/PSVIAttributeList.hpp	/^class XMLPARSER_EXPORT PSVIAttributeStorage : public XMemory$/;"	c
PSVIDefs	include/xercesc/validators/schema/PSVIDefs.hpp	/^class VALIDATORS_EXPORT PSVIDefs$/;"	c
PSVIElemContext	include/xercesc/internal/XMLScanner.hpp	/^struct PSVIElemContext$/;"	s
PSVIElement	include/xercesc/framework/psvi/PSVIElement.hpp	/^class XMLPARSER_EXPORT PSVIElement : public PSVIItem  $/;"	c
PSVIHandler	include/xercesc/framework/psvi/PSVIHandler.hpp	/^    PSVIHandler()$/;"	f	class:PSVIHandler
PSVIHandler	include/xercesc/framework/psvi/PSVIHandler.hpp	/^class XMLPARSER_EXPORT PSVIHandler$/;"	c
PSVIItem	include/xercesc/framework/psvi/PSVIItem.hpp	/^class XMLPARSER_EXPORT PSVIItem : public XMemory$/;"	c
PSVIProperty	include/xercesc/dom/DOMPSVITypeInfo.hpp	/^    enum PSVIProperty$/;"	g	class:DOMPSVITypeInfo
PSVIScope	include/xercesc/validators/schema/PSVIDefs.hpp	/^    enum PSVIScope$/;"	g	class:PSVIDefs
PSVIUni	include/xercesc/util/PSVIUni.hpp	/^class XMLUTIL_EXPORT PSVIUni$/;"	c
PSVI_Member_Type_Definition_Anonymous	include/xercesc/dom/DOMPSVITypeInfo.hpp	/^        , PSVI_Member_Type_Definition_Anonymous$/;"	e	enum:DOMPSVITypeInfo::PSVIProperty
PSVI_Member_Type_Definition_Name	include/xercesc/dom/DOMPSVITypeInfo.hpp	/^        , PSVI_Member_Type_Definition_Name$/;"	e	enum:DOMPSVITypeInfo::PSVIProperty
PSVI_Member_Type_Definition_Namespace	include/xercesc/dom/DOMPSVITypeInfo.hpp	/^        , PSVI_Member_Type_Definition_Namespace$/;"	e	enum:DOMPSVITypeInfo::PSVIProperty
PSVI_Nil	include/xercesc/dom/DOMPSVITypeInfo.hpp	/^        , PSVI_Nil$/;"	e	enum:DOMPSVITypeInfo::PSVIProperty
PSVI_Schema_Default	include/xercesc/dom/DOMPSVITypeInfo.hpp	/^        , PSVI_Schema_Default$/;"	e	enum:DOMPSVITypeInfo::PSVIProperty
PSVI_Schema_Normalized_Value	include/xercesc/dom/DOMPSVITypeInfo.hpp	/^        , PSVI_Schema_Normalized_Value$/;"	e	enum:DOMPSVITypeInfo::PSVIProperty
PSVI_Schema_Specified	include/xercesc/dom/DOMPSVITypeInfo.hpp	/^        , PSVI_Schema_Specified$/;"	e	enum:DOMPSVITypeInfo::PSVIProperty
PSVI_Type_Definition_Anonymous	include/xercesc/dom/DOMPSVITypeInfo.hpp	/^        , PSVI_Type_Definition_Anonymous$/;"	e	enum:DOMPSVITypeInfo::PSVIProperty
PSVI_Type_Definition_Name	include/xercesc/dom/DOMPSVITypeInfo.hpp	/^        , PSVI_Type_Definition_Name$/;"	e	enum:DOMPSVITypeInfo::PSVIProperty
PSVI_Type_Definition_Namespace	include/xercesc/dom/DOMPSVITypeInfo.hpp	/^        , PSVI_Type_Definition_Namespace$/;"	e	enum:DOMPSVITypeInfo::PSVIProperty
PSVI_Type_Definition_Type	include/xercesc/dom/DOMPSVITypeInfo.hpp	/^        , PSVI_Type_Definition_Type$/;"	e	enum:DOMPSVITypeInfo::PSVIProperty
PSVI_Validation_Attempted	include/xercesc/dom/DOMPSVITypeInfo.hpp	/^        , PSVI_Validation_Attempted$/;"	e	enum:DOMPSVITypeInfo::PSVIProperty
PSVI_Validity	include/xercesc/dom/DOMPSVITypeInfo.hpp	/^        PSVI_Validity$/;"	e	enum:DOMPSVITypeInfo::PSVIProperty
PUT	include/xercesc/util/XMLNetAccessor.hpp	/^        PUT,$/;"	e	enum:XMLNetHTTPInfo::<anonymous>
PanicHandler	include/xercesc/util/PanicHandler.hpp	/^    PanicHandler(){};$/;"	f	class:PanicHandler
PanicHandler	include/xercesc/util/PanicHandler.hpp	/^class XMLUTIL_EXPORT PanicHandler$/;"	c
PanicReasons	include/xercesc/util/PanicHandler.hpp	/^    enum PanicReasons$/;"	g	class:PanicHandler
PanicReasons_Count	include/xercesc/util/PanicHandler.hpp	/^        , PanicReasons_Count$/;"	e	enum:PanicHandler::PanicReasons
Panic_AllStaticInitErr	include/xercesc/util/PanicHandler.hpp	/^        , Panic_AllStaticInitErr$/;"	e	enum:PanicHandler::PanicReasons
Panic_CantFindLib	include/xercesc/util/PanicHandler.hpp	/^        , Panic_CantFindLib$/;"	e	enum:PanicHandler::PanicReasons
Panic_CantLoadMsgDomain	include/xercesc/util/PanicHandler.hpp	/^        , Panic_CantLoadMsgDomain$/;"	e	enum:PanicHandler::PanicReasons
Panic_MutexErr	include/xercesc/util/PanicHandler.hpp	/^        , Panic_MutexErr$/;"	e	enum:PanicHandler::PanicReasons
Panic_NoDefTranscoder	include/xercesc/util/PanicHandler.hpp	/^        , Panic_NoDefTranscoder$/;"	e	enum:PanicHandler::PanicReasons
Panic_NoTransService	include/xercesc/util/PanicHandler.hpp	/^          Panic_NoTransService$/;"	e	enum:PanicHandler::PanicReasons
Panic_SynchronizationErr	include/xercesc/util/PanicHandler.hpp	/^        , Panic_SynchronizationErr$/;"	e	enum:PanicHandler::PanicReasons
Panic_SystemInit	include/xercesc/util/PanicHandler.hpp	/^        , Panic_SystemInit$/;"	e	enum:PanicHandler::PanicReasons
Panic_UnknownMsgDomain	include/xercesc/util/PanicHandler.hpp	/^        , Panic_UnknownMsgDomain$/;"	e	enum:PanicHandler::PanicReasons
ParenToken	include/xercesc/util/regx/ParenToken.hpp	/^class XMLUTIL_EXPORT ParenToken : public Token {$/;"	c
Parser	include/xercesc/sax/Parser.hpp	/^    Parser()$/;"	f	class:Parser
Parser	include/xercesc/sax/Parser.hpp	/^class SAX_EXPORT Parser$/;"	c
ParserForXMLSchema	include/xercesc/util/regx/ParserForXMLSchema.hpp	/^class XMLUTIL_EXPORT ParserForXMLSchema : public RegxParser {$/;"	c
Parser_Atom1	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Parser_Atom1                       = 110$/;"	e	enum:XMLExcepts::Codes
Parser_Atom2	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Parser_Atom2                       = 111$/;"	e	enum:XMLExcepts::Codes
Parser_Atom3	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Parser_Atom3                       = 112$/;"	e	enum:XMLExcepts::Codes
Parser_Atom4	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Parser_Atom4                       = 113$/;"	e	enum:XMLExcepts::Codes
Parser_Atom5	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Parser_Atom5                       = 114$/;"	e	enum:XMLExcepts::Codes
Parser_CC1	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Parser_CC1                         = 115$/;"	e	enum:XMLExcepts::Codes
Parser_CC2	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Parser_CC2                         = 116$/;"	e	enum:XMLExcepts::Codes
Parser_CC3	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Parser_CC3                         = 117$/;"	e	enum:XMLExcepts::Codes
Parser_CC5	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Parser_CC5                         = 118$/;"	e	enum:XMLExcepts::Codes
Parser_CC6	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Parser_CC6                         = 119$/;"	e	enum:XMLExcepts::Codes
Parser_Descape1	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Parser_Descape1                    = 123$/;"	e	enum:XMLExcepts::Codes
Parser_Descape3	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Parser_Descape3                    = 124$/;"	e	enum:XMLExcepts::Codes
Parser_Descape4	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Parser_Descape4                    = 125$/;"	e	enum:XMLExcepts::Codes
Parser_Descape5	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Parser_Descape5                    = 126$/;"	e	enum:XMLExcepts::Codes
Parser_Factor1	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Parser_Factor1                     = 104$/;"	e	enum:XMLExcepts::Codes
Parser_Factor2	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Parser_Factor2                     = 105$/;"	e	enum:XMLExcepts::Codes
Parser_Factor3	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Parser_Factor3                     = 106$/;"	e	enum:XMLExcepts::Codes
Parser_Factor4	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Parser_Factor4                     = 107$/;"	e	enum:XMLExcepts::Codes
Parser_Factor5	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Parser_Factor5                     = 108$/;"	e	enum:XMLExcepts::Codes
Parser_Factor6	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Parser_Factor6                     = 109$/;"	e	enum:XMLExcepts::Codes
Parser_Next1	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Parser_Next1                       = 100$/;"	e	enum:XMLExcepts::Codes
Parser_Next2	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Parser_Next2                       = 101$/;"	e	enum:XMLExcepts::Codes
Parser_Next3	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Parser_Next3                       = 102$/;"	e	enum:XMLExcepts::Codes
Parser_Next4	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Parser_Next4                       = 103$/;"	e	enum:XMLExcepts::Codes
Parser_Ope1	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Parser_Ope1                        = 120$/;"	e	enum:XMLExcepts::Codes
Parser_Ope2	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Parser_Ope2                        = 121$/;"	e	enum:XMLExcepts::Codes
Parser_Ope3	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Parser_Ope3                        = 122$/;"	e	enum:XMLExcepts::Codes
Parser_Parse1	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Parser_Parse1                      = 98$/;"	e	enum:XMLExcepts::Codes
Parser_Parse2	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Parser_Parse2                      = 99$/;"	e	enum:XMLExcepts::Codes
Parser_Process2	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Parser_Process2                    = 127$/;"	e	enum:XMLExcepts::Codes
Parser_Quantifier1	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Parser_Quantifier1                 = 128$/;"	e	enum:XMLExcepts::Codes
Parser_Quantifier2	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Parser_Quantifier2                 = 129$/;"	e	enum:XMLExcepts::Codes
Parser_Quantifier3	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Parser_Quantifier3                 = 130$/;"	e	enum:XMLExcepts::Codes
Parser_Quantifier4	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Parser_Quantifier4                 = 131$/;"	e	enum:XMLExcepts::Codes
Parser_Quantifier5	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Parser_Quantifier5                 = 132$/;"	e	enum:XMLExcepts::Codes
PartialMarkupInEntity	include/xercesc/framework/XMLErrorCodes.hpp	/^      , PartialMarkupInEntity              = 206$/;"	e	enum:XMLErrs::Codes
PartialMarkupInPE	include/xercesc/framework/XMLValidityCodes.hpp	/^      , PartialMarkupInPE                  = 52$/;"	e	enum:XMLValid::Codes
PartialTagMarkupError	include/xercesc/framework/XMLErrorCodes.hpp	/^      , PartialTagMarkupError              = 249$/;"	e	enum:XMLErrs::Codes
PoolElem	include/xercesc/util/StringPool.hpp	/^    struct PoolElem$/;"	s	class:XMLStringPool
Pool_ElemAlreadyExists	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Pool_ElemAlreadyExists             = 57$/;"	e	enum:XMLExcepts::Codes
Pool_InvalidId	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Pool_InvalidId                     = 58$/;"	e	enum:XMLExcepts::Codes
Pool_ZeroModulus	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Pool_ZeroModulus                   = 59$/;"	e	enum:XMLExcepts::Codes
PosINF	include/xercesc/util/XMLAbstractDoubleFloat.hpp	/^        PosINF,$/;"	e	enum:XMLAbstractDoubleFloat::LiteralType
PosixFileMgr	include/xercesc/util/FileManagers/PosixFileMgr.hpp	/^class PosixFileMgr : public XMLFileMgr$/;"	c
PosixMutexMgr	include/xercesc/util/MutexManagers/PosixMutexMgr.hpp	/^class PosixMutexMgr : public XMLMutexMgr$/;"	c
PrefMapElem	include/xercesc/internal/ElemStack.hpp	/^struct PrefMapElem : public XMemory$/;"	s
PrefMapElem	include/xercesc/validators/schema/NamespaceScope.hpp	/^    struct PrefMapElem : public XMemory$/;"	s	class:NamespaceScope
PrefixXMLNotMatchXMLURI	include/xercesc/framework/XMLErrorCodes.hpp	/^      , PrefixXMLNotMatchXMLURI            = 267$/;"	e	enum:XMLErrs::Codes
ProcessContents_Lax	include/xercesc/framework/XMLAttDef.hpp	/^        , ProcessContents_Lax    = 6$/;"	e	enum:XMLAttDef::DefAttTypes
ProcessContents_Skip	include/xercesc/framework/XMLAttDef.hpp	/^        , ProcessContents_Skip   = 5$/;"	e	enum:XMLAttDef::DefAttTypes
ProcessContents_Strict	include/xercesc/framework/XMLAttDef.hpp	/^        , ProcessContents_Strict = 7$/;"	e	enum:XMLAttDef::DefAttTypes
Prohibited	include/xercesc/framework/XMLAttDef.hpp	/^        , Prohibited             = 8$/;"	e	enum:XMLAttDef::DefAttTypes
ProhibitedAttributePresent	include/xercesc/framework/XMLValidityCodes.hpp	/^      , ProhibitedAttributePresent         = 33$/;"	e	enum:XMLValid::Codes
Protocols	include/xercesc/util/XMLURL.hpp	/^    enum Protocols$/;"	g	class:XMLURL
Protocols_Count	include/xercesc/util/XMLURL.hpp	/^        , Protocols_Count$/;"	e	enum:XMLURL::Protocols
PtrHasher	include/xercesc/util/Hashers.hpp	/^struct PtrHasher$/;"	s
QName	include/xercesc/util/QName.hpp	/^class XMLUTIL_EXPORT QName : public XSerializable, public XMemory$/;"	c
QName	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        QName,$/;"	e	enum:DatatypeValidator::ValidatorType
QNameDatatypeValidator	include/xercesc/validators/datatype/QNameDatatypeValidator.hpp	/^class VALIDATORS_EXPORT QNameDatatypeValidator : public AbstractStringValidator$/;"	c
READONLY	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    static const unsigned short READONLY;$/;"	m	class:DOMNodeImpl
REGX_T_BACKSOLIDUS	include/xercesc/util/regx/RegxParser.hpp	/^        REGX_T_BACKSOLIDUS              = 10,$/;"	e	enum:RegxParser::<anonymous>
REGX_T_CARET	include/xercesc/util/regx/RegxParser.hpp	/^        REGX_T_CARET                    = 11,$/;"	e	enum:RegxParser::<anonymous>
REGX_T_CHAR	include/xercesc/util/regx/RegxParser.hpp	/^        REGX_T_CHAR                     = 0,$/;"	e	enum:RegxParser::<anonymous>
REGX_T_DOLLAR	include/xercesc/util/regx/RegxParser.hpp	/^        REGX_T_DOLLAR                   = 12,$/;"	e	enum:RegxParser::<anonymous>
REGX_T_DOT	include/xercesc/util/regx/RegxParser.hpp	/^        REGX_T_DOT                      = 8,$/;"	e	enum:RegxParser::<anonymous>
REGX_T_EOF	include/xercesc/util/regx/RegxParser.hpp	/^        REGX_T_EOF                      = 1,$/;"	e	enum:RegxParser::<anonymous>
REGX_T_LBRACKET	include/xercesc/util/regx/RegxParser.hpp	/^        REGX_T_LBRACKET                 = 9,$/;"	e	enum:RegxParser::<anonymous>
REGX_T_LPAREN	include/xercesc/util/regx/RegxParser.hpp	/^        REGX_T_LPAREN                   = 6,$/;"	e	enum:RegxParser::<anonymous>
REGX_T_OR	include/xercesc/util/regx/RegxParser.hpp	/^        REGX_T_OR                       = 2,$/;"	e	enum:RegxParser::<anonymous>
REGX_T_PLUS	include/xercesc/util/regx/RegxParser.hpp	/^        REGX_T_PLUS                     = 4,$/;"	e	enum:RegxParser::<anonymous>
REGX_T_QUESTION	include/xercesc/util/regx/RegxParser.hpp	/^        REGX_T_QUESTION                 = 5,$/;"	e	enum:RegxParser::<anonymous>
REGX_T_RPAREN	include/xercesc/util/regx/RegxParser.hpp	/^        REGX_T_RPAREN                   = 7,$/;"	e	enum:RegxParser::<anonymous>
REGX_T_STAR	include/xercesc/util/regx/RegxParser.hpp	/^        REGX_T_STAR                     = 3,$/;"	e	enum:RegxParser::<anonymous>
REGX_T_XMLSCHEMA_CC_SUBTRACTION	include/xercesc/util/regx/RegxParser.hpp	/^        REGX_T_XMLSCHEMA_CC_SUBTRACTION    = 13$/;"	e	enum:RegxParser::<anonymous>
REG_NAME_CHARACTERS	include/xercesc/util/XMLUri.hpp	/^    static const XMLCh REG_NAME_CHARACTERS[];$/;"	m	class:XMLUri
REPLACE	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        REPLACE  = 1,$/;"	e	enum:DatatypeValidator::<anonymous>
RESERVED_CHARACTERS	include/xercesc/util/XMLUri.hpp	/^    static const XMLCh RESERVED_CHARACTERS[];$/;"	m	class:XMLUri
RangeExceptionCode	include/xercesc/dom/DOMRangeException.hpp	/^        enum RangeExceptionCode {$/;"	g	class:DOMRangeException
RangeFactory	include/xercesc/util/regx/RangeFactory.hpp	/^class XMLUTIL_EXPORT RangeFactory : public XMemory$/;"	c
RangeOp	include/xercesc/util/regx/Op.hpp	/^class XMLUTIL_EXPORT RangeOp: public Op {$/;"	c
RangeToken	include/xercesc/util/regx/RangeToken.hpp	/^class XMLUTIL_EXPORT RangeToken : public Token {$/;"	c
RangeTokenElemMap	include/xercesc/util/regx/RangeTokenMap.hpp	/^class XMLUTIL_EXPORT RangeTokenElemMap : public XMemory$/;"	c
RangeTokenMap	include/xercesc/util/regx/RangeTokenMap.hpp	/^class XMLUTIL_EXPORT RangeTokenMap : public XMemory$/;"	c
Ranges	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^typedef RefVectorOf<DOMRangeImpl>        Ranges;$/;"	t
RdrMgr_ReaderIdNotFound	include/xercesc/util/XMLExceptMsgs.hpp	/^      , RdrMgr_ReaderIdNotFound            = 60$/;"	e	enum:XMLExcepts::Codes
ReaderMgr	include/xercesc/internal/ReaderMgr.hpp	/^class XMLPARSER_EXPORT ReaderMgr :   public XMemory$/;"	c
Reader_BadAutoEncoding	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Reader_BadAutoEncoding             = 61$/;"	e	enum:XMLExcepts::Codes
Reader_CouldNotDecodeFirstLine	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Reader_CouldNotDecodeFirstLine     = 62$/;"	e	enum:XMLExcepts::Codes
Reader_EncodingStrRequired	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Reader_EncodingStrRequired         = 65$/;"	e	enum:XMLExcepts::Codes
Reader_NelLsepinDecl	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Reader_NelLsepinDecl               = 63$/;"	e	enum:XMLExcepts::Codes
Reader_SrcOfsNotSupported	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Reader_SrcOfsNotSupported          = 64$/;"	e	enum:XMLExcepts::Codes
RecursingElement	include/xercesc/validators/schema/TraverseSchema.hpp	/^        RecursingElement = 2$/;"	e	enum:TraverseSchema::ExceptionCodes
RecursiveEntity	include/xercesc/framework/XMLErrorCodes.hpp	/^      , RecursiveEntity                    = 205$/;"	e	enum:XMLErrs::Codes
RedefineNamespaceDifference	include/xercesc/framework/XMLErrorCodes.hpp	/^      , RedefineNamespaceDifference        = 119$/;"	e	enum:XMLErrs::Codes
Redefine_AttGroupRefCount	include/xercesc/framework/XMLErrorCodes.hpp	/^      , Redefine_AttGroupRefCount          = 127$/;"	e	enum:XMLErrs::Codes
Redefine_DeclarationNotFound	include/xercesc/framework/XMLErrorCodes.hpp	/^      , Redefine_DeclarationNotFound       = 125$/;"	e	enum:XMLErrs::Codes
Redefine_GroupRefCount	include/xercesc/framework/XMLErrorCodes.hpp	/^      , Redefine_GroupRefCount             = 126$/;"	e	enum:XMLErrs::Codes
Redefine_InvalidChild	include/xercesc/framework/XMLErrorCodes.hpp	/^      , Redefine_InvalidChild              = 128$/;"	e	enum:XMLErrs::Codes
Redefine_InvalidComplexType	include/xercesc/framework/XMLErrorCodes.hpp	/^      , Redefine_InvalidComplexType        = 122$/;"	e	enum:XMLErrs::Codes
Redefine_InvalidComplexTypeBase	include/xercesc/framework/XMLErrorCodes.hpp	/^      , Redefine_InvalidComplexTypeBase    = 123$/;"	e	enum:XMLErrs::Codes
Redefine_InvalidGroupMinMax	include/xercesc/framework/XMLErrorCodes.hpp	/^      , Redefine_InvalidGroupMinMax        = 124$/;"	e	enum:XMLErrs::Codes
Redefine_InvalidSimpleType	include/xercesc/framework/XMLErrorCodes.hpp	/^      , Redefine_InvalidSimpleType         = 120$/;"	e	enum:XMLErrs::Codes
Redefine_InvalidSimpleTypeBase	include/xercesc/framework/XMLErrorCodes.hpp	/^      , Redefine_InvalidSimpleTypeBase     = 121$/;"	e	enum:XMLErrs::Codes
RefArrayEnumerator	include/xercesc/util/RefArrayOf.hpp	/^template <class TElem> class RefArrayEnumerator : public XMLEnumerator<TElem>, public XMemory$/;"	c
RefArrayOf	include/xercesc/util/RefArrayOf.c	/^RefArrayOf(const RefArrayOf<TElem>& source) :$/;"	f	class:TElem
RefArrayOf	include/xercesc/util/RefArrayOf.c	/^RefArrayOf<TElem>::RefArrayOf(TElem* values[],$/;"	f	class:TElem
RefArrayOf	include/xercesc/util/RefArrayOf.c	/^RefArrayOf<TElem>::RefArrayOf(const XMLSize_t size,$/;"	f	class:TElem
RefArrayOf	include/xercesc/util/RefArrayOf.hpp	/^template <class TElem> class RefArrayOf : public XMemory$/;"	c
RefArrayVectorOf	include/xercesc/util/RefArrayVectorOf.c	/^RefArrayVectorOf<TElem>::RefArrayVectorOf( const XMLSize_t maxElems$/;"	f	class:TElem
RefArrayVectorOf	include/xercesc/util/RefArrayVectorOf.hpp	/^template <class TElem> class RefArrayVectorOf : public BaseRefVectorOf<TElem> $/;"	c
RefElementNotFound	include/xercesc/framework/XMLErrorCodes.hpp	/^      , RefElementNotFound                 = 39$/;"	e	enum:XMLErrs::Codes
RefFrom	include/xercesc/internal/XMLReader.hpp	/^    enum RefFrom$/;"	g	class:XMLReader
RefFrom_Literal	include/xercesc/internal/XMLReader.hpp	/^        RefFrom_Literal$/;"	e	enum:XMLReader::RefFrom
RefFrom_NonLiteral	include/xercesc/internal/XMLReader.hpp	/^        , RefFrom_NonLiteral$/;"	e	enum:XMLReader::RefFrom
RefHash2KeysTableBucketElem	include/xercesc/util/RefHash2KeysTableOf.hpp	/^    RefHash2KeysTableBucketElem(void* key1, int key2, TVal* const value, RefHash2KeysTableBucketElem<TVal>* next)$/;"	f	struct:RefHash2KeysTableBucketElem
RefHash2KeysTableBucketElem	include/xercesc/util/RefHash2KeysTableOf.hpp	/^struct RefHash2KeysTableBucketElem$/;"	s
RefHash2KeysTableOf	include/xercesc/util/RefHash2KeysTableOf.c	/^RefHash2KeysTableOf<TVal, THasher>::RefHash2KeysTableOf($/;"	f	class:THasher
RefHash2KeysTableOf	include/xercesc/util/RefHash2KeysTableOf.hpp	/^class RefHash2KeysTableOf : public XMemory$/;"	c
RefHash2KeysTableOfEnumerator	include/xercesc/util/RefHash2KeysTableOf.c	/^RefHash2KeysTableOfEnumerator(RefHash2KeysTableOf<TVal, THasher>* const toEnum$/;"	f	class:THasher
RefHash2KeysTableOfEnumerator	include/xercesc/util/RefHash2KeysTableOf.hpp	/^class RefHash2KeysTableOfEnumerator : public XMLEnumerator<TVal>, public XMemory$/;"	c
RefHash3KeysIdPool	include/xercesc/util/RefHash3KeysIdPool.c	/^RefHash3KeysIdPool<TVal, THasher>::RefHash3KeysIdPool($/;"	f	class:THasher
RefHash3KeysIdPool	include/xercesc/util/RefHash3KeysIdPool.hpp	/^class RefHash3KeysIdPool : public XMemory$/;"	c
RefHash3KeysIdPoolEnumerator	include/xercesc/util/RefHash3KeysIdPool.c	/^RefHash3KeysIdPoolEnumerator(RefHash3KeysIdPool<TVal, THasher>* const toEnum$/;"	f	class:THasher
RefHash3KeysIdPoolEnumerator	include/xercesc/util/RefHash3KeysIdPool.c	/^RefHash3KeysIdPoolEnumerator(const RefHash3KeysIdPoolEnumerator<TVal, THasher>& toCopy) :$/;"	f	class:THasher
RefHash3KeysIdPoolEnumerator	include/xercesc/util/RefHash3KeysIdPool.hpp	/^class RefHash3KeysIdPoolEnumerator : public XMLEnumerator<TVal>, public XMemory$/;"	c
RefHash3KeysTableBucketElem	include/xercesc/util/RefHash3KeysIdPool.hpp	/^    RefHash3KeysTableBucketElem($/;"	f	struct:RefHash3KeysTableBucketElem
RefHash3KeysTableBucketElem	include/xercesc/util/RefHash3KeysIdPool.hpp	/^    RefHash3KeysTableBucketElem() {};$/;"	f	struct:RefHash3KeysTableBucketElem
RefHash3KeysTableBucketElem	include/xercesc/util/RefHash3KeysIdPool.hpp	/^struct RefHash3KeysTableBucketElem$/;"	s
RefHashTableBucketElem	include/xercesc/util/RefHashTableOf.hpp	/^  RefHashTableBucketElem(){};$/;"	f	struct:RefHashTableBucketElem
RefHashTableBucketElem	include/xercesc/util/RefHashTableOf.hpp	/^  RefHashTableBucketElem(void* key, TVal* const value, RefHashTableBucketElem<TVal>* next)$/;"	f	struct:RefHashTableBucketElem
RefHashTableBucketElem	include/xercesc/util/RefHashTableOf.hpp	/^struct RefHashTableBucketElem$/;"	s
RefHashTableOf	include/xercesc/util/RefHashTableOf.c	/^RefHashTableOf<TVal, THasher>::RefHashTableOf($/;"	f	class:THasher
RefHashTableOf	include/xercesc/util/RefHashTableOf.hpp	/^class RefHashTableOf : public XMemory$/;"	c
RefHashTableOfEnumerator	include/xercesc/util/RefHashTableOf.c	/^RefHashTableOfEnumerator(RefHashTableOf<TVal, THasher>* const toEnum$/;"	f	class:THasher
RefHashTableOfEnumerator	include/xercesc/util/RefHashTableOf.c	/^RefHashTableOfEnumerator(const RefHashTableOfEnumerator<TVal, THasher>& toCopy) :$/;"	f	class:THasher
RefHashTableOfEnumerator	include/xercesc/util/RefHashTableOf.hpp	/^class RefHashTableOfEnumerator : public XMLEnumerator<TVal>, public XMemory$/;"	c
RefStackEnumerator	include/xercesc/util/RefStackOf.c	/^RefStackEnumerator(         RefStackOf<TElem>* const    toEnum$/;"	f	class:TElem
RefStackEnumerator	include/xercesc/util/RefStackOf.hpp	/^template <class TElem> class RefStackEnumerator : public XMLEnumerator<TElem>, public XMemory$/;"	c
RefStackOf	include/xercesc/util/RefStackOf.c	/^RefStackOf<TElem>::RefStackOf(const XMLSize_t initElems,$/;"	f	class:TElem
RefStackOf	include/xercesc/util/RefStackOf.hpp	/^template <class TElem> class RefStackOf : public XMemory$/;"	c
RefVectorOf	include/xercesc/util/RefVectorOf.c	/^RefVectorOf<TElem>::RefVectorOf(const XMLSize_t maxElems,$/;"	f	class:TElem
RefVectorOf	include/xercesc/util/RefVectorOf.hpp	/^template <class TElem> class RefVectorOf : public BaseRefVectorOf<TElem>$/;"	c
ReferencePosition	include/xercesc/util/regx/RegxParser.hpp	/^    class ReferencePosition : public XMemory$/;"	c	class:RegxParser
Regex_BadRefNo	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Regex_BadRefNo                     = 257$/;"	e	enum:XMLExcepts::Codes
Regex_CompactRangesError	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Regex_CompactRangesError           = 250$/;"	e	enum:XMLExcepts::Codes
Regex_ComplementRangesInvalidArg	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Regex_ComplementRangesInvalidArg   = 254$/;"	e	enum:XMLExcepts::Codes
Regex_IntersectRangesError	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Regex_IntersectRangesError         = 253$/;"	e	enum:XMLExcepts::Codes
Regex_InvalidCategoryName	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Regex_InvalidCategoryName          = 255$/;"	e	enum:XMLExcepts::Codes
Regex_InvalidChildIndex	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Regex_InvalidChildIndex            = 262$/;"	e	enum:XMLExcepts::Codes
Regex_InvalidRepPattern	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Regex_InvalidRepPattern            = 264$/;"	e	enum:XMLExcepts::Codes
Regex_KeywordNotFound	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Regex_KeywordNotFound              = 256$/;"	e	enum:XMLExcepts::Codes
Regex_MergeRangesTypeMismatch	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Regex_MergeRangesTypeMismatch      = 251$/;"	e	enum:XMLExcepts::Codes
Regex_NotSupported	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Regex_NotSupported                 = 261$/;"	e	enum:XMLExcepts::Codes
Regex_RangeTokenGetError	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Regex_RangeTokenGetError           = 260$/;"	e	enum:XMLExcepts::Codes
Regex_RepPatMatchesZeroString	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Regex_RepPatMatchesZeroString      = 263$/;"	e	enum:XMLExcepts::Codes
Regex_Result_Not_Set	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Regex_Result_Not_Set               = 249$/;"	e	enum:XMLExcepts::Codes
Regex_SubtractRangesError	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Regex_SubtractRangesError          = 252$/;"	e	enum:XMLExcepts::Codes
Regex_UnknownOption	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Regex_UnknownOption                = 258$/;"	e	enum:XMLExcepts::Codes
Regex_UnknownTokenType	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Regex_UnknownTokenType             = 259$/;"	e	enum:XMLExcepts::Codes
RegularExpression	include/xercesc/util/regx/RegularExpression.hpp	/^class XMLUTIL_EXPORT RegularExpression : public XMemory$/;"	c
RegxParser	include/xercesc/util/regx/RegxParser.hpp	/^class XMLUTIL_EXPORT RegxParser : public XMemory$/;"	c
RegxUtil	include/xercesc/util/regx/RegxUtil.hpp	/^class XMLUTIL_EXPORT RegxUtil {$/;"	c
RepElemInMixed	include/xercesc/framework/XMLValidityCodes.hpp	/^      , RepElemInMixed                     = 27$/;"	e	enum:XMLValid::Codes
Required	include/xercesc/framework/XMLAttDef.hpp	/^        , Required               = 2$/;"	e	enum:XMLAttDef::DefAttTypes
RequiredAttrNotProvided	include/xercesc/framework/XMLValidityCodes.hpp	/^      , RequiredAttrNotProvided            = 6$/;"	e	enum:XMLValid::Codes
Required_And_Fixed	include/xercesc/framework/XMLAttDef.hpp	/^        , Required_And_Fixed     = 3$/;"	e	enum:XMLAttDef::DefAttTypes
Reset	include/xercesc/util/BaseRefVectorOf.c	/^template <class TElem> void BaseRefVectorEnumerator<TElem>::Reset()$/;"	f	class:TElem
Reset	include/xercesc/util/Hash2KeysSetOf.c	/^void Hash2KeysSetOfEnumerator<THasher>::Reset()$/;"	f	class:THasher
Reset	include/xercesc/util/RefArrayOf.c	/^template <class TElem> void RefArrayEnumerator<TElem>::Reset()$/;"	f	class:TElem
Reset	include/xercesc/util/RefHash2KeysTableOf.c	/^void RefHash2KeysTableOfEnumerator<TVal, THasher>::Reset()$/;"	f	class:THasher
Reset	include/xercesc/util/RefHash3KeysIdPool.c	/^void RefHash3KeysIdPoolEnumerator<TVal, THasher>::Reset()$/;"	f	class:THasher
Reset	include/xercesc/util/RefHashTableOf.c	/^void RefHashTableOfEnumerator<TVal, THasher>::Reset()$/;"	f	class:THasher
Reset	include/xercesc/util/RefStackOf.c	/^template <class TElem> void RefStackEnumerator<TElem>::Reset()$/;"	f	class:TElem
Reset	include/xercesc/util/ValueArrayOf.c	/^template <class TElem> void ValueArrayEnumerator<TElem>::Reset()$/;"	f	class:TElem
Reset	include/xercesc/util/ValueHashTableOf.c	/^void ValueHashTableOfEnumerator<TVal, THasher>::Reset()$/;"	f	class:THasher
Reset	include/xercesc/util/ValueStackOf.c	/^template <class TElem> void ValueStackEnumerator<TElem>::Reset()$/;"	f	class:TElem
Reset	include/xercesc/util/ValueVectorOf.c	/^template <class TElem> void ValueVectorEnumerator<TElem>::Reset()$/;"	f	class:TElem
ResourceIdentifierType	include/xercesc/util/XMLResourceIdentifier.hpp	/^    enum ResourceIdentifierType {$/;"	g	class:XMLResourceIdentifier
ResultType	include/xercesc/dom/DOMXPathResult.hpp	/^    enum ResultType {$/;"	g	class:DOMXPathResult
ReusedIDValue	include/xercesc/framework/XMLValidityCodes.hpp	/^      , ReusedIDValue                      = 12$/;"	e	enum:XMLValid::Codes
RootElemNotLikeDocType	include/xercesc/framework/XMLValidityCodes.hpp	/^      , RootElemNotLikeDocType             = 5$/;"	e	enum:XMLValid::Codes
SAX2XMLFilter	include/xercesc/sax2/SAX2XMLFilter.hpp	/^    SAX2XMLFilter()$/;"	f	class:SAX2XMLFilter
SAX2XMLFilter	include/xercesc/sax2/SAX2XMLFilter.hpp	/^class SAX2_EXPORT SAX2XMLFilter : public SAX2XMLReader$/;"	c
SAX2XMLFilterImpl	include/xercesc/parsers/SAX2XMLFilterImpl.hpp	/^class PARSERS_EXPORT SAX2XMLFilterImpl :$/;"	c
SAX2XMLReader	include/xercesc/sax2/SAX2XMLReader.hpp	/^    SAX2XMLReader()$/;"	f	class:SAX2XMLReader
SAX2XMLReader	include/xercesc/sax2/SAX2XMLReader.hpp	/^class SAX2_EXPORT SAX2XMLReader$/;"	c
SAX2XMLReaderImpl	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^class PARSERS_EXPORT SAX2XMLReaderImpl :$/;"	c
SAX2_EXPORT	include/xercesc/util/XercesDefs.hpp	141;"	d
SAX2_EXPORT	include/xercesc/util/XercesDefs.hpp	150;"	d
SAX2_EXPORT	include/xercesc/util/XercesDefs.hpp	165;"	d
SAXException	include/xercesc/sax/SAXException.hpp	/^    SAXException(MemoryManager* const manager = XMLPlatformUtils::fgMemoryManager) :$/;"	f	class:SAXException
SAXException	include/xercesc/sax/SAXException.hpp	/^    SAXException(const SAXException& toCopy) :$/;"	f	class:SAXException
SAXException	include/xercesc/sax/SAXException.hpp	/^    SAXException(const XMLCh* const msg,$/;"	f	class:SAXException
SAXException	include/xercesc/sax/SAXException.hpp	/^    SAXException(const char* const msg,$/;"	f	class:SAXException
SAXException	include/xercesc/sax/SAXException.hpp	/^class SAX_EXPORT SAXException : public XMemory$/;"	c
SAXNotRecognizedException	include/xercesc/sax/SAXException.hpp	/^class SAX_EXPORT SAXNotRecognizedException : public SAXException$/;"	c
SAXNotSupportedException	include/xercesc/sax/SAXException.hpp	/^class SAX_EXPORT SAXNotSupportedException : public SAXException$/;"	c
SAXParseException	include/xercesc/sax/SAXParseException.hpp	/^class SAX_EXPORT SAXParseException : public SAXException$/;"	c
SAXParser	include/xercesc/parsers/SAXParser.hpp	/^class PARSERS_EXPORT SAXParser :$/;"	c
SAX_EXPORT	include/xercesc/util/XercesDefs.hpp	140;"	d
SAX_EXPORT	include/xercesc/util/XercesDefs.hpp	149;"	d
SAX_EXPORT	include/xercesc/util/XercesDefs.hpp	164;"	d
SCHEMA_DATETIME_EXCEPTION_HPP	include/xercesc/util/SchemaDateTimeException.hpp	24;"	d
SCHEME_CHARACTERS	include/xercesc/util/XMLUri.hpp	/^    static const XMLCh SCHEME_CHARACTERS[];$/;"	m	class:XMLUri
SCOPE	include/xercesc/framework/psvi/XSConstants.hpp	/^    enum SCOPE {$/;"	g	class:XSConstants
SCOPE_ABSENT	include/xercesc/framework/psvi/XSConstants.hpp	/^	     SCOPE_ABSENT              = 0,$/;"	e	enum:XSConstants::SCOPE
SCOPE_GLOBAL	include/xercesc/framework/psvi/XSConstants.hpp	/^	     SCOPE_GLOBAL              = 1,$/;"	e	enum:XSConstants::SCOPE
SCOPE_LOCAL	include/xercesc/framework/psvi/XSConstants.hpp	/^	     SCOPE_LOCAL               = 2$/;"	e	enum:XSConstants::SCOPE
SCP_ABSENT	include/xercesc/validators/schema/PSVIDefs.hpp	/^        SCP_ABSENT    \/\/ declared in group\/attribute group$/;"	e	enum:PSVIDefs::PSVIScope
SCP_GLOBAL	include/xercesc/validators/schema/PSVIDefs.hpp	/^	    , SCP_GLOBAL  \/\/ global declaration or ref$/;"	e	enum:PSVIDefs::PSVIScope
SCP_LOCAL	include/xercesc/validators/schema/PSVIDefs.hpp	/^	    , SCP_LOCAL   \/\/ local declaration$/;"	e	enum:PSVIDefs::PSVIScope
SERIALIZE_ERR	include/xercesc/dom/DOMLSException.hpp	/^         SERIALIZE_ERR    = 82$/;"	e	enum:DOMLSException::LSExceptionCode
SERIALIZE_ERR	include/xercesc/util/XMLDOMMsg.hpp	/^      , SERIALIZE_ERR                      = 25$/;"	e	enum:XMLDOMMsg::Codes
SETVALUE	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    static const unsigned short SETVALUE;$/;"	m	class:DOMNodeImpl
SGXMLScanner	include/xercesc/internal/SGXMLScanner.hpp	/^class XMLPARSER_EXPORT SGXMLScanner : public XMLScanner$/;"	c
SHOW_ALL	include/xercesc/dom/DOMNodeFilter.hpp	/^        SHOW_ALL                       = 0x0000FFFF,$/;"	e	enum:DOMNodeFilter::ShowTypeMasks
SHOW_ATTRIBUTE	include/xercesc/dom/DOMNodeFilter.hpp	/^        SHOW_ATTRIBUTE                 = 0x00000002,$/;"	e	enum:DOMNodeFilter::ShowTypeMasks
SHOW_CDATA_SECTION	include/xercesc/dom/DOMNodeFilter.hpp	/^        SHOW_CDATA_SECTION             = 0x00000008,$/;"	e	enum:DOMNodeFilter::ShowTypeMasks
SHOW_COMMENT	include/xercesc/dom/DOMNodeFilter.hpp	/^        SHOW_COMMENT                   = 0x00000080,$/;"	e	enum:DOMNodeFilter::ShowTypeMasks
SHOW_DOCUMENT	include/xercesc/dom/DOMNodeFilter.hpp	/^        SHOW_DOCUMENT                  = 0x00000100,$/;"	e	enum:DOMNodeFilter::ShowTypeMasks
SHOW_DOCUMENT_FRAGMENT	include/xercesc/dom/DOMNodeFilter.hpp	/^        SHOW_DOCUMENT_FRAGMENT         = 0x00000400,$/;"	e	enum:DOMNodeFilter::ShowTypeMasks
SHOW_DOCUMENT_TYPE	include/xercesc/dom/DOMNodeFilter.hpp	/^        SHOW_DOCUMENT_TYPE             = 0x00000200,$/;"	e	enum:DOMNodeFilter::ShowTypeMasks
SHOW_ELEMENT	include/xercesc/dom/DOMNodeFilter.hpp	/^        SHOW_ELEMENT                   = 0x00000001,$/;"	e	enum:DOMNodeFilter::ShowTypeMasks
SHOW_ENTITY	include/xercesc/dom/DOMNodeFilter.hpp	/^        SHOW_ENTITY                    = 0x00000020,$/;"	e	enum:DOMNodeFilter::ShowTypeMasks
SHOW_ENTITY_REFERENCE	include/xercesc/dom/DOMNodeFilter.hpp	/^        SHOW_ENTITY_REFERENCE          = 0x00000010,$/;"	e	enum:DOMNodeFilter::ShowTypeMasks
SHOW_NOTATION	include/xercesc/dom/DOMNodeFilter.hpp	/^        SHOW_NOTATION                  = 0x00000800$/;"	e	enum:DOMNodeFilter::ShowTypeMasks
SHOW_PROCESSING_INSTRUCTION	include/xercesc/dom/DOMNodeFilter.hpp	/^        SHOW_PROCESSING_INSTRUCTION    = 0x00000040,$/;"	e	enum:DOMNodeFilter::ShowTypeMasks
SHOW_TEXT	include/xercesc/dom/DOMNodeFilter.hpp	/^        SHOW_TEXT                      = 0x00000004,$/;"	e	enum:DOMNodeFilter::ShowTypeMasks
SIMPLE_TYPE	include/xercesc/framework/psvi/XSTypeDefinition.hpp	/^	    SIMPLE_TYPE               = 16$/;"	e	enum:XSTypeDefinition::TYPE_CATEGORY
SINGLE_LINE	include/xercesc/util/regx/RegularExpression.hpp	/^    static const unsigned int   SINGLE_LINE;$/;"	m	class:RegularExpression
SNAPSHOT_RESULT_TYPE	include/xercesc/dom/DOMXPathResult.hpp	/^                SNAPSHOT_RESULT_TYPE = 102$/;"	e	enum:DOMXPathResult::ResultType
SPACE_SEPARATOR	include/xercesc/util/regx/XMLUniCharacter.hpp	/^        SPACE_SEPARATOR         = 12,$/;"	e	enum:XMLUniCharacter::<anonymous>
SPECIFIED	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    static const unsigned short SPECIFIED;$/;"	m	class:DOMNodeImpl
START	include/xercesc/dom/impl/DOMRangeImpl.hpp	/^        START   = 0,$/;"	e	enum:DOMRangeImpl::TraversePoint
START_PUNCTUATION	include/xercesc/util/regx/XMLUniCharacter.hpp	/^        START_PUNCTUATION       = 20,$/;"	e	enum:XMLUniCharacter::<anonymous>
START_TO_END	include/xercesc/dom/DOMRange.hpp	/^        START_TO_END    = 1,$/;"	e	enum:DOMRange::CompareHow
START_TO_START	include/xercesc/dom/DOMRange.hpp	/^        START_TO_START  = 0,$/;"	e	enum:DOMRange::CompareHow
STRING_TYPE	include/xercesc/dom/DOMXPathResult.hpp	/^                STRING_TYPE = 2,$/;"	e	enum:DOMXPathResult::ResultType
SURROGATE	include/xercesc/util/regx/XMLUniCharacter.hpp	/^        SURROGATE               = 18,$/;"	e	enum:XMLUniCharacter::<anonymous>
SYNCCHILDREN	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    static const unsigned short SYNCCHILDREN;$/;"	m	class:DOMNodeImpl
SYNCDATA	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    static const unsigned short SYNCDATA;$/;"	m	class:DOMNodeImpl
SYNTAX_ERR	include/xercesc/dom/DOMException.hpp	/^         SYNTAX_ERR                     = 12,$/;"	e	enum:DOMException::ExceptionCode
SYNTAX_ERR	include/xercesc/util/XMLDOMMsg.hpp	/^      , SYNTAX_ERR                         = 14$/;"	e	enum:XMLDOMMsg::Codes
S_Final	include/xercesc/validators/schema/TraverseSchema.hpp	/^        , S_Final$/;"	e	enum:TraverseSchema::<anonymous>
Scan_BadPScanToken	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Scan_BadPScanToken                 = 68$/;"	e	enum:XMLExcepts::Codes
Scan_CouldNotOpenSource	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Scan_CouldNotOpenSource            = 66$/;"	e	enum:XMLExcepts::Codes
Scan_CouldNotOpenSource_Warning	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Scan_CouldNotOpenSource_Warning    = 2$/;"	e	enum:XMLExcepts::Codes
Scan_UnbalancedStartEnd	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Scan_UnbalancedStartEnd            = 67$/;"	e	enum:XMLExcepts::Codes
Schema	include/xercesc/framework/XMLElementDecl.hpp	/^        Schema$/;"	e	enum:XMLElementDecl::objectType
SchemaAttDef	include/xercesc/validators/schema/SchemaAttDef.hpp	/^class VALIDATORS_EXPORT SchemaAttDef : public XMLAttDef$/;"	c
SchemaAttDefList	include/xercesc/validators/schema/SchemaAttDefList.hpp	/^class VALIDATORS_EXPORT SchemaAttDefList : public XMLAttDefList$/;"	c
SchemaElementContentError	include/xercesc/framework/XMLErrorCodes.hpp	/^      , SchemaElementContentError          = 34$/;"	e	enum:XMLErrs::Codes
SchemaElementDecl	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^class VALIDATORS_EXPORT SchemaElementDecl : public XMLElementDecl$/;"	c
SchemaGrammar	include/xercesc/util/XMLResourceIdentifier.hpp	/^        SchemaGrammar = 0,$/;"	e	enum:XMLResourceIdentifier::ResourceIdentifierType
SchemaGrammar	include/xercesc/validators/schema/SchemaGrammar.hpp	/^class VALIDATORS_EXPORT SchemaGrammar : public Grammar$/;"	c
SchemaGrammarType	include/xercesc/validators/common/Grammar.hpp	/^      , SchemaGrammarType$/;"	e	enum:Grammar::GrammarType
SchemaImport	include/xercesc/util/XMLResourceIdentifier.hpp	/^        SchemaImport,$/;"	e	enum:XMLResourceIdentifier::ResourceIdentifierType
SchemaInclude	include/xercesc/util/XMLResourceIdentifier.hpp	/^        SchemaInclude,$/;"	e	enum:XMLResourceIdentifier::ResourceIdentifierType
SchemaInfo	include/xercesc/validators/schema/SchemaInfo.hpp	/^class VALIDATORS_EXPORT SchemaInfo : public XMemory$/;"	c
SchemaRedefine	include/xercesc/util/XMLResourceIdentifier.hpp	/^        SchemaRedefine ,$/;"	e	enum:XMLResourceIdentifier::ResourceIdentifierType
SchemaScanFatalError	include/xercesc/framework/XMLErrorCodes.hpp	/^      , SchemaScanFatalError               = 261$/;"	e	enum:XMLErrs::Codes
SchemaSymbols	include/xercesc/validators/schema/SchemaSymbols.hpp	/^class VALIDATORS_EXPORT SchemaSymbols$/;"	c
SchemaValidator	include/xercesc/validators/schema/SchemaValidator.hpp	/^class VALIDATORS_EXPORT SchemaValidator : public XMLValidator$/;"	c
Scope	include/xercesc/dom/impl/DOMNormalizer.hpp	/^        class Scope : public XMemory {$/;"	c	class:DOMNormalizer::InScopeNamespaces
Second	include/xercesc/util/XMLDateTime.hpp	/^        Second     ,$/;"	e	enum:XMLDateTime::valueIndex
SecurityManager	include/xercesc/util/SecurityManager.hpp	/^    SecurityManager()$/;"	f	class:SecurityManager
SecurityManager	include/xercesc/util/SecurityManager.hpp	/^class XMLUTIL_EXPORT SecurityManager$/;"	c
SelectorMatcher	include/xercesc/validators/schema/identity/IC_Selector.hpp	/^class VALIDATORS_EXPORT SelectorMatcher : public XPathMatcher$/;"	c
Sequence	include/xercesc/validators/common/ContentSpecNode.hpp	/^        , Sequence$/;"	e	enum:ContentSpecNode::NodeTypes
ShowType	include/xercesc/dom/DOMNodeFilter.hpp	/^    typedef unsigned long ShowType;$/;"	t	class:DOMNodeFilter
ShowTypeMasks	include/xercesc/dom/DOMNodeFilter.hpp	/^    enum ShowTypeMasks {$/;"	g	class:DOMNodeFilter
Simple	include/xercesc/framework/XMLAttDef.hpp	/^        , Simple            = 10$/;"	e	enum:XMLAttDef::AttTypes
Simple	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^        , Simple$/;"	e	enum:SchemaElementDecl::ModelTypes
SimpleContentModel	include/xercesc/validators/common/SimpleContentModel.hpp	/^class SimpleContentModel : public XMLContentModel$/;"	c
SimpleContentModel	include/xercesc/validators/common/SimpleContentModel.hpp	/^inline SimpleContentModel::SimpleContentModel$/;"	f	class:SimpleContentModel
SimpleTypeContentError	include/xercesc/framework/XMLErrorCodes.hpp	/^      , SimpleTypeContentError             = 23$/;"	e	enum:XMLErrs::Codes
SimpleTypeDerivationByListError	include/xercesc/framework/XMLErrorCodes.hpp	/^      , SimpleTypeDerivationByListError    = 26$/;"	e	enum:XMLErrs::Codes
SimpleTypeHasChild	include/xercesc/framework/XMLValidityCodes.hpp	/^      , SimpleTypeHasChild                 = 36$/;"	e	enum:XMLValid::Codes
Source_External	include/xercesc/internal/XMLReader.hpp	/^        , Source_External$/;"	e	enum:XMLReader::Sources
Source_Internal	include/xercesc/internal/XMLReader.hpp	/^        Source_Internal$/;"	e	enum:XMLReader::Sources
Sources	include/xercesc/internal/XMLReader.hpp	/^    enum Sources$/;"	g	class:XMLReader
SpacesOk	include/xercesc/framework/XMLElementDecl.hpp	/^        , SpacesOk$/;"	e	enum:XMLElementDecl::CharDataOpts
SpecialTypeNum	include/xercesc/util/XMLAbstractDoubleFloat.hpp	/^        SpecialTypeNum,$/;"	e	enum:XMLAbstractDoubleFloat::LiteralType
StDOMNode	include/xercesc/dom/StDOMNode.hpp	/^	inline StDOMNode(T* node = (T*)0) : m_node(node) { INCREFCOUNT(m_node); }$/;"	f	class:StDOMNode
StDOMNode	include/xercesc/dom/StDOMNode.hpp	/^	inline StDOMNode(const StDOMNode& stNode) : m_node(stNode.m_node) { INCREFCOUNT(m_node); }$/;"	f	class:StDOMNode
StDOMNode	include/xercesc/dom/StDOMNode.hpp	/^template <class T> class StDOMNode {$/;"	c
StackElem	include/xercesc/internal/ElemStack.hpp	/^    struct StackElem : public XMemory$/;"	s	class:ElemStack
StackElem	include/xercesc/internal/ElemStack.hpp	/^    struct StackElem : public XMemory$/;"	s	class:WFElemStack
StackElem	include/xercesc/validators/schema/NamespaceScope.hpp	/^    struct StackElem : public XMemory$/;"	s	class:NamespaceScope
Stack_BadIndex	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Stack_BadIndex                     = 69$/;"	e	enum:XMLExcepts::Codes
Stack_EmptyStack	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Stack_EmptyStack                   = 70$/;"	e	enum:XMLExcepts::Codes
StandaloneNotLegal	include/xercesc/framework/XMLErrorCodes.hpp	/^      , StandaloneNotLegal                 = 256$/;"	e	enum:XMLErrs::Codes
Status	include/xercesc/framework/psvi/XSValue.hpp	/^    enum Status {$/;"	g	class:XSValue
StdEscapes	include/xercesc/framework/XMLFormatter.hpp	/^        , StdEscapes$/;"	e	enum:XMLFormatter::EscapeFlags
StdInInputSource	include/xercesc/framework/StdInInputSource.hpp	/^class XMLPARSER_EXPORT StdInInputSource : public InputSource$/;"	c
StdInInputSource	include/xercesc/framework/StdInInputSource.hpp	/^inline StdInInputSource::StdInInputSource(MemoryManager* const manager) :$/;"	f	class:StdInInputSource
StdOutFormatTarget	include/xercesc/framework/StdOutFormatTarget.hpp	/^class XMLPARSER_EXPORT StdOutFormatTarget : public XMLFormatTarget {$/;"	c
StrPool_IllegalId	include/xercesc/util/XMLExceptMsgs.hpp	/^      , StrPool_IllegalId                  = 76$/;"	e	enum:XMLExcepts::Codes
Str_ConvertOverflow	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Str_ConvertOverflow                = 75$/;"	e	enum:XMLExcepts::Codes
Str_StartIndexPastEnd	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Str_StartIndexPastEnd              = 74$/;"	e	enum:XMLExcepts::Codes
Str_TargetBufTooSmall	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Str_TargetBufTooSmall              = 73$/;"	e	enum:XMLExcepts::Codes
Str_UnknownRadix	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Str_UnknownRadix                   = 72$/;"	e	enum:XMLExcepts::Codes
Str_ZeroSizedTargetBuf	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Str_ZeroSizedTargetBuf             = 71$/;"	e	enum:XMLExcepts::Codes
String	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        String,$/;"	e	enum:DatatypeValidator::ValidatorType
String	include/xercesc/validators/datatype/XMLCanRepGroup.hpp	/^        String$/;"	e	enum:XMLCanRepGroup::CanRepGroup
StringDatatypeValidator	include/xercesc/validators/datatype/StringDatatypeValidator.hpp	/^class VALIDATORS_EXPORT StringDatatypeValidator : public AbstractStringValidator$/;"	c
StringHasher	include/xercesc/util/Hashers.hpp	/^struct StringHasher$/;"	s
StringList	include/xercesc/framework/psvi/XSConstants.hpp	/^typedef RefArrayVectorOf <XMLCh> StringList;$/;"	t
StringOp	include/xercesc/util/regx/Op.hpp	/^class XMLUTIL_EXPORT StringOp: public Op {$/;"	c
StringToken	include/xercesc/util/regx/StringToken.hpp	/^class XMLUTIL_EXPORT StringToken : public Token {$/;"	c
SubGrpComparator_NGR	include/xercesc/util/XMLExceptMsgs.hpp	/^      , SubGrpComparator_NGR               = 134$/;"	e	enum:XMLExcepts::Codes
SubstitutionGroupComparator	include/xercesc/validators/schema/SubstitutionGroupComparator.hpp	/^class VALIDATORS_EXPORT SubstitutionGroupComparator : public XMemory$/;"	c
SubstitutionGroupComparator	include/xercesc/validators/schema/SubstitutionGroupComparator.hpp	/^inline SubstitutionGroupComparator::SubstitutionGroupComparator(GrammarResolver*  const pGrammarResolver$/;"	f	class:SubstitutionGroupComparator
SubstitutionGroupTypeMismatch	include/xercesc/framework/XMLErrorCodes.hpp	/^      , SubstitutionGroupTypeMismatch      = 66$/;"	e	enum:XMLErrs::Codes
SupportFilesNotFound	include/xercesc/util/TransService.hpp	/^        , SupportFilesNotFound$/;"	e	enum:XMLTransService::Codes
TERM_ELEMENT	include/xercesc/framework/psvi/XSParticle.hpp	/^        TERM_ELEMENT        = XSConstants::ELEMENT_DECLARATION,$/;"	e	enum:XSParticle::TERM_TYPE
TERM_EMPTY	include/xercesc/framework/psvi/XSParticle.hpp	/^        TERM_EMPTY          = 0,$/;"	e	enum:XSParticle::TERM_TYPE
TERM_MODELGROUP	include/xercesc/framework/psvi/XSParticle.hpp	/^        TERM_MODELGROUP     = XSConstants::MODEL_GROUP_DEFINITION,$/;"	e	enum:XSParticle::TERM_TYPE
TERM_TYPE	include/xercesc/framework/psvi/XSParticle.hpp	/^    enum TERM_TYPE {$/;"	g	class:XSParticle
TERM_WILDCARD	include/xercesc/framework/psvi/XSParticle.hpp	/^        TERM_WILDCARD       = XSConstants::WILDCARD$/;"	e	enum:XSParticle::TERM_TYPE
TEXT_NODE	include/xercesc/dom/DOMNode.hpp	/^        TEXT_NODE                   = 3,$/;"	e	enum:DOMNode::NodeType
TEXT_OBJECT	include/xercesc/dom/DOMMemoryManager.hpp	/^        TEXT_OBJECT                   = 12$/;"	e	enum:DOMMemoryManager::NodeObjectType
TIMEZONE_ARRAYSIZE	include/xercesc/util/XMLDateTime.hpp	/^        TIMEZONE_ARRAYSIZE$/;"	e	enum:XMLDateTime::timezoneIndex
TITLECASE_LETTER	include/xercesc/util/regx/XMLUniCharacter.hpp	/^        TITLECASE_LETTER        = 3,$/;"	e	enum:XMLUniCharacter::<anonymous>
TKey	include/xercesc/util/KeyRefPair.c	/^KeyRefPair<TKey,TValue>::getKey() const$/;"	v
TKey	include/xercesc/util/KeyRefPair.c	/^KeyRefPair<TKey,TValue>::getValue() const$/;"	v
TKey	include/xercesc/util/KeyRefPair.c	/^KeyRefPair<TKey,TValue>::setKey(TKey* newKey)$/;"	v
TKey	include/xercesc/util/KeyRefPair.c	/^KeyRefPair<TKey,TValue>::setValue(TValue* newValue)$/;"	v
TKey	include/xercesc/util/KeyRefPair.c	/^template <class TKey, class TValue> KeyRefPair<TKey,TValue>::$/;"	v
TKey	include/xercesc/util/KeyRefPair.c	/^template <class TKey, class TValue> KeyRefPair<TKey,TValue>::KeyRefPair()$/;"	v
TKey	include/xercesc/util/KeyRefPair.c	/^template <class TKey, class TValue> KeyRefPair<TKey,TValue>::~KeyRefPair()$/;"	v
TKey	include/xercesc/util/KeyRefPair.c	/^template <class TKey, class TValue> TKey* KeyRefPair<TKey,TValue>::getKey()$/;"	v
TKey	include/xercesc/util/KeyRefPair.c	/^template <class TKey, class TValue> TKey*$/;"	v
TKey	include/xercesc/util/KeyRefPair.c	/^template <class TKey, class TValue> TValue* KeyRefPair<TKey,TValue>::getValue()$/;"	v
TKey	include/xercesc/util/KeyRefPair.c	/^template <class TKey, class TValue> TValue*$/;"	v
TKey	include/xercesc/util/KeyRefPair.c	/^template <class TKey, class TValue> const TKey*$/;"	v
TKey	include/xercesc/util/KeyRefPair.c	/^template <class TKey, class TValue> const TValue*$/;"	v
TKey	include/xercesc/util/KeyValuePair.c	/^KeyValuePair<TKey,TValue>::getKey() const$/;"	v
TKey	include/xercesc/util/KeyValuePair.c	/^KeyValuePair<TKey,TValue>::getValue() const$/;"	v
TKey	include/xercesc/util/KeyValuePair.c	/^KeyValuePair<TKey,TValue>::setKey(const TKey& newKey)$/;"	v
TKey	include/xercesc/util/KeyValuePair.c	/^KeyValuePair<TKey,TValue>::setValue(const TValue& newValue)$/;"	v
TKey	include/xercesc/util/KeyValuePair.c	/^template <class TKey, class TValue> KeyValuePair<TKey,TValue>::$/;"	v
TKey	include/xercesc/util/KeyValuePair.c	/^template <class TKey, class TValue> KeyValuePair<TKey,TValue>::KeyValuePair()$/;"	v
TKey	include/xercesc/util/KeyValuePair.c	/^template <class TKey, class TValue> KeyValuePair<TKey,TValue>::~KeyValuePair()$/;"	v
TKey	include/xercesc/util/KeyValuePair.c	/^template <class TKey, class TValue> TKey& KeyValuePair<TKey,TValue>::getKey()$/;"	v
TKey	include/xercesc/util/KeyValuePair.c	/^template <class TKey, class TValue> TKey&$/;"	v
TKey	include/xercesc/util/KeyValuePair.c	/^template <class TKey, class TValue> TValue& KeyValuePair<TKey,TValue>::getValue()$/;"	v
TKey	include/xercesc/util/KeyValuePair.c	/^template <class TKey, class TValue> TValue&$/;"	v
TKey	include/xercesc/util/KeyValuePair.c	/^template <class TKey, class TValue> const TKey&$/;"	v
TKey	include/xercesc/util/KeyValuePair.c	/^template <class TKey, class TValue> const TValue&$/;"	v
TOBERELEASED	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    static const unsigned short TOBERELEASED;$/;"	m	class:DOMNodeImpl
TOP_LEVEL_SCOPE	include/xercesc/validators/common/Grammar.hpp	/^	   , TOP_LEVEL_SCOPE	= UINT_MAX - 1$/;"	e	enum:Grammar::<anonymous>
TOTAL_SIZE	include/xercesc/util/XMLDateTime.hpp	/^        TOTAL_SIZE$/;"	e	enum:XMLDateTime::valueIndex
TVal	include/xercesc/dom/impl/DOMDeepNodeListPool.c	/^DOMDeepNodeListPool<TVal, THasher>::DOMDeepNodeListPool( const XMLSize_t modulus$/;"	v
TVal	include/xercesc/dom/impl/DOMDeepNodeListPool.c	/^DOMDeepNodeListPool<TVal, THasher>::getById(const XMLSize_t elemId) const$/;"	v
TVal	include/xercesc/dom/impl/DOMDeepNodeListPool.c	/^DOMDeepNodeListPool<TVal, THasher>::getById(const XMLSize_t elemId)$/;"	v
TVal	include/xercesc/dom/impl/DOMDeepNodeListPool.c	/^DOMDeepNodeListPool<TVal, THasher>::getByKey(const void* const key1, const XMLCh* const key2, const XMLCh* const key3) const$/;"	v
TVal	include/xercesc/dom/impl/DOMDeepNodeListPool.c	/^DOMDeepNodeListPool<TVal, THasher>::getByKey(const void* const key1, const XMLCh* const key2, const XMLCh* const key3)$/;"	v
TVal	include/xercesc/dom/impl/DOMDeepNodeListPool.c	/^DOMDeepNodeListPool<TVal, THasher>::put(void* key1, XMLCh* key2, XMLCh* key3, TVal* const valueToAdopt)$/;"	v
TVal	include/xercesc/dom/impl/DOMDeepNodeListPool.c	/^DOMDeepNodeListPool<TVal, THasher>::~DOMDeepNodeListPool()$/;"	v
TVal	include/xercesc/dom/impl/DOMDeepNodeListPool.c	/^DOMDeepNodeListPoolTableBucketElem<TVal>* DOMDeepNodeListPool<TVal, THasher>::$/;"	v
TVal	include/xercesc/dom/impl/DOMDeepNodeListPool.c	/^bool DOMDeepNodeListPool<TVal, THasher>::containsKey( const void* const key1$/;"	v
TVal	include/xercesc/dom/impl/DOMDeepNodeListPool.c	/^bool DOMDeepNodeListPool<TVal, THasher>::isEmpty() const$/;"	v
TVal	include/xercesc/dom/impl/DOMDeepNodeListPool.c	/^const DOMDeepNodeListPoolTableBucketElem<TVal>* DOMDeepNodeListPool<TVal, THasher>::$/;"	v
TVal	include/xercesc/dom/impl/DOMDeepNodeListPool.c	/^template <class TVal, class THasher>$/;"	v
TVal	include/xercesc/dom/impl/DOMDeepNodeListPool.c	/^void DOMDeepNodeListPool<TVal, THasher>::cleanup()$/;"	v
TVal	include/xercesc/dom/impl/DOMDeepNodeListPool.c	/^void DOMDeepNodeListPool<TVal, THasher>::initialize(const XMLSize_t modulus)$/;"	v
TVal	include/xercesc/dom/impl/DOMDeepNodeListPool.c	/^void DOMDeepNodeListPool<TVal, THasher>::removeAll()$/;"	v
TVal	include/xercesc/util/RefHash2KeysTableOf.c	/^MemoryManager* RefHash2KeysTableOf<TVal, THasher>::getMemoryManager() const$/;"	v
TVal	include/xercesc/util/RefHash2KeysTableOf.c	/^RefHash2KeysTableOf<TVal, THasher>::RefHash2KeysTableOf($/;"	v
TVal	include/xercesc/util/RefHash2KeysTableOf.c	/^RefHash2KeysTableOf<TVal, THasher>::~RefHash2KeysTableOf()$/;"	v
TVal	include/xercesc/util/RefHash2KeysTableOf.c	/^RefHash2KeysTableOfEnumerator<TVal, THasher>::$/;"	v
TVal	include/xercesc/util/RefHash2KeysTableOf.c	/^RefHash2KeysTableOfEnumerator<TVal, THasher>::~RefHash2KeysTableOfEnumerator()$/;"	v
TVal	include/xercesc/util/RefHash2KeysTableOf.c	/^TVal& RefHash2KeysTableOfEnumerator<TVal, THasher>::nextElement()$/;"	v
TVal	include/xercesc/util/RefHash2KeysTableOf.c	/^TVal* RefHash2KeysTableOf<TVal, THasher>::get(const void* const key1, const int key2)$/;"	v
TVal	include/xercesc/util/RefHash2KeysTableOf.c	/^XMLSize_t RefHash2KeysTableOf<TVal, THasher>::getHashModulus() const$/;"	v
TVal	include/xercesc/util/RefHash2KeysTableOf.c	/^bool RefHash2KeysTableOf<TVal, THasher>::$/;"	v
TVal	include/xercesc/util/RefHash2KeysTableOf.c	/^bool RefHash2KeysTableOf<TVal, THasher>::isEmpty() const$/;"	v
TVal	include/xercesc/util/RefHash2KeysTableOf.c	/^bool RefHash2KeysTableOfEnumerator<TVal, THasher>::hasMoreElements() const$/;"	v
TVal	include/xercesc/util/RefHash2KeysTableOf.c	/^const TVal* RefHash2KeysTableOf<TVal, THasher>::$/;"	v
TVal	include/xercesc/util/RefHash2KeysTableOf.c	/^inline RefHash2KeysTableBucketElem<TVal>* RefHash2KeysTableOf<TVal, THasher>::$/;"	v
TVal	include/xercesc/util/RefHash2KeysTableOf.c	/^inline const RefHash2KeysTableBucketElem<TVal>* RefHash2KeysTableOf<TVal, THasher>::$/;"	v
TVal	include/xercesc/util/RefHash2KeysTableOf.c	/^template <class TVal, class THasher>$/;"	v
TVal	include/xercesc/util/RefHash2KeysTableOf.c	/^void RefHash2KeysTableOf<TVal, THasher>::$/;"	v
TVal	include/xercesc/util/RefHash2KeysTableOf.c	/^void RefHash2KeysTableOf<TVal, THasher>::initialize(const XMLSize_t modulus)$/;"	v
TVal	include/xercesc/util/RefHash2KeysTableOf.c	/^void RefHash2KeysTableOf<TVal, THasher>::put(void* key1, int key2, TVal* const valueToAdopt)$/;"	v
TVal	include/xercesc/util/RefHash2KeysTableOf.c	/^void RefHash2KeysTableOf<TVal, THasher>::removeAll()$/;"	v
TVal	include/xercesc/util/RefHash2KeysTableOf.c	/^void RefHash2KeysTableOf<TVal, THasher>::transferElement(const void* const key1, void* key2)$/;"	v
TVal	include/xercesc/util/RefHash2KeysTableOf.c	/^void RefHash2KeysTableOfEnumerator<TVal, THasher>::Reset()$/;"	v
TVal	include/xercesc/util/RefHash2KeysTableOf.c	/^void RefHash2KeysTableOfEnumerator<TVal, THasher>::findNext()$/;"	v
TVal	include/xercesc/util/RefHash2KeysTableOf.c	/^void RefHash2KeysTableOfEnumerator<TVal, THasher>::nextElementKey(void*& retKey1, int& retKey2)$/;"	v
TVal	include/xercesc/util/RefHash2KeysTableOf.c	/^void RefHash2KeysTableOfEnumerator<TVal, THasher>::setPrimaryKey(const void* key)$/;"	v
TVal	include/xercesc/util/RefHash3KeysIdPool.c	/^MemoryManager* RefHash3KeysIdPool<TVal, THasher>::getMemoryManager() const$/;"	v
TVal	include/xercesc/util/RefHash3KeysIdPool.c	/^RefHash3KeysIdPool<TVal, THasher>::RefHash3KeysIdPool($/;"	v
TVal	include/xercesc/util/RefHash3KeysIdPool.c	/^RefHash3KeysIdPool<TVal, THasher>::getById(const unsigned int elemId) const$/;"	v
TVal	include/xercesc/util/RefHash3KeysIdPool.c	/^RefHash3KeysIdPool<TVal, THasher>::getById(const unsigned int elemId)$/;"	v
TVal	include/xercesc/util/RefHash3KeysIdPool.c	/^RefHash3KeysIdPool<TVal, THasher>::getByKey(const void* const key1, const int key2, const int key3) const$/;"	v
TVal	include/xercesc/util/RefHash3KeysIdPool.c	/^RefHash3KeysIdPool<TVal, THasher>::getByKey(const void* const key1, const int key2, const int key3)$/;"	v
TVal	include/xercesc/util/RefHash3KeysIdPool.c	/^RefHash3KeysIdPool<TVal, THasher>::put(void* key1, int key2, int key3, TVal* const valueToAdopt)$/;"	v
TVal	include/xercesc/util/RefHash3KeysIdPool.c	/^RefHash3KeysIdPool<TVal, THasher>::~RefHash3KeysIdPool()$/;"	v
TVal	include/xercesc/util/RefHash3KeysIdPool.c	/^RefHash3KeysIdPoolEnumerator<TVal, THasher>::$/;"	v
TVal	include/xercesc/util/RefHash3KeysIdPool.c	/^RefHash3KeysIdPoolEnumerator<TVal, THasher>::~RefHash3KeysIdPoolEnumerator()$/;"	v
TVal	include/xercesc/util/RefHash3KeysIdPool.c	/^TVal& RefHash3KeysIdPoolEnumerator<TVal, THasher>::nextElement()$/;"	v
TVal	include/xercesc/util/RefHash3KeysIdPool.c	/^XMLSize_t RefHash3KeysIdPool<TVal, THasher>::getHashModulus() const$/;"	v
TVal	include/xercesc/util/RefHash3KeysIdPool.c	/^XMLSize_t RefHash3KeysIdPoolEnumerator<TVal, THasher>::size() const$/;"	v
TVal	include/xercesc/util/RefHash3KeysIdPool.c	/^bool RefHash3KeysIdPool<TVal, THasher>::$/;"	v
TVal	include/xercesc/util/RefHash3KeysIdPool.c	/^bool RefHash3KeysIdPool<TVal, THasher>::isEmpty() const$/;"	v
TVal	include/xercesc/util/RefHash3KeysIdPool.c	/^bool RefHash3KeysIdPoolEnumerator<TVal, THasher>::hasMoreElements() const$/;"	v
TVal	include/xercesc/util/RefHash3KeysIdPool.c	/^bool RefHash3KeysIdPoolEnumerator<TVal, THasher>::hasMoreKeys() const$/;"	v
TVal	include/xercesc/util/RefHash3KeysIdPool.c	/^inline RefHash3KeysTableBucketElem<TVal>* RefHash3KeysIdPool<TVal, THasher>::$/;"	v
TVal	include/xercesc/util/RefHash3KeysIdPool.c	/^inline const RefHash3KeysTableBucketElem<TVal>* RefHash3KeysIdPool<TVal, THasher>::$/;"	v
TVal	include/xercesc/util/RefHash3KeysIdPool.c	/^template <class TVal, class THasher>$/;"	v
TVal	include/xercesc/util/RefHash3KeysIdPool.c	/^void RefHash3KeysIdPool<TVal, THasher>::initialize(const XMLSize_t modulus)$/;"	v
TVal	include/xercesc/util/RefHash3KeysIdPool.c	/^void RefHash3KeysIdPool<TVal, THasher>::removeAll()$/;"	v
TVal	include/xercesc/util/RefHash3KeysIdPool.c	/^void RefHash3KeysIdPoolEnumerator<TVal, THasher>::Reset()$/;"	v
TVal	include/xercesc/util/RefHash3KeysIdPool.c	/^void RefHash3KeysIdPoolEnumerator<TVal, THasher>::findNext()$/;"	v
TVal	include/xercesc/util/RefHash3KeysIdPool.c	/^void RefHash3KeysIdPoolEnumerator<TVal, THasher>::nextElementKey(void*& retKey1, int& retKey2, int& retKey3)$/;"	v
TVal	include/xercesc/util/RefHash3KeysIdPool.c	/^void RefHash3KeysIdPoolEnumerator<TVal, THasher>::resetKey()$/;"	v
TVal	include/xercesc/util/RefHashTableOf.c	/^RefHashTableOf<TVal, THasher>::RefHashTableOf($/;"	v
TVal	include/xercesc/util/RefHashTableOf.c	/^RefHashTableOf<TVal, THasher>::~RefHashTableOf()$/;"	v
TVal	include/xercesc/util/RefHashTableOf.c	/^RefHashTableOfEnumerator<TVal, THasher>::~RefHashTableOfEnumerator()$/;"	v
TVal	include/xercesc/util/RefHashTableOf.c	/^TVal& RefHashTableOfEnumerator<TVal, THasher>::nextElement()$/;"	v
TVal	include/xercesc/util/RefHashTableOf.c	/^bool RefHashTableOfEnumerator<TVal, THasher>::hasMoreElements() const$/;"	v
TVal	include/xercesc/util/RefHashTableOf.c	/^inline MemoryManager* RefHashTableOf<TVal, THasher>::getMemoryManager() const$/;"	v
TVal	include/xercesc/util/RefHashTableOf.c	/^inline RefHashTableBucketElem<TVal>* RefHashTableOf<TVal, THasher>::$/;"	v
TVal	include/xercesc/util/RefHashTableOf.c	/^inline TVal* RefHashTableOf<TVal, THasher>::get(const void* const key)$/;"	v
TVal	include/xercesc/util/RefHashTableOf.c	/^inline XMLSize_t RefHashTableOf<TVal, THasher>::getCount() const$/;"	v
TVal	include/xercesc/util/RefHashTableOf.c	/^inline XMLSize_t RefHashTableOf<TVal, THasher>::getHashModulus() const$/;"	v
TVal	include/xercesc/util/RefHashTableOf.c	/^inline bool RefHashTableOf<TVal, THasher>::containsKey(const void* const key) const$/;"	v
TVal	include/xercesc/util/RefHashTableOf.c	/^inline bool RefHashTableOf<TVal, THasher>::isEmpty() const$/;"	v
TVal	include/xercesc/util/RefHashTableOf.c	/^inline const RefHashTableBucketElem<TVal>* RefHashTableOf<TVal, THasher>::$/;"	v
TVal	include/xercesc/util/RefHashTableOf.c	/^inline const TVal* RefHashTableOf<TVal, THasher>::$/;"	v
TVal	include/xercesc/util/RefHashTableOf.c	/^inline void RefHashTableOf<TVal, THasher>::setAdoptElements(const bool aValue)$/;"	v
TVal	include/xercesc/util/RefHashTableOf.c	/^inline void RefHashTableOf<TVal, THasher>::transferElement(const void* const key1, void* key2)$/;"	v
TVal	include/xercesc/util/RefHashTableOf.c	/^template <class TVal, class THasher> RefHashTableOfEnumerator<TVal, THasher>::$/;"	v
TVal	include/xercesc/util/RefHashTableOf.c	/^template <class TVal, class THasher> TVal* RefHashTableOf<TVal, THasher>::$/;"	v
TVal	include/xercesc/util/RefHashTableOf.c	/^template <class TVal, class THasher>$/;"	v
TVal	include/xercesc/util/RefHashTableOf.c	/^void RefHashTableOf<TVal, THasher>::$/;"	v
TVal	include/xercesc/util/RefHashTableOf.c	/^void RefHashTableOf<TVal, THasher>::cleanup()$/;"	v
TVal	include/xercesc/util/RefHashTableOf.c	/^void RefHashTableOf<TVal, THasher>::initialize(const XMLSize_t modulus)$/;"	v
TVal	include/xercesc/util/RefHashTableOf.c	/^void RefHashTableOf<TVal, THasher>::put(void* key, TVal* const valueToAdopt)$/;"	v
TVal	include/xercesc/util/RefHashTableOf.c	/^void RefHashTableOf<TVal, THasher>::rehash()$/;"	v
TVal	include/xercesc/util/RefHashTableOf.c	/^void RefHashTableOf<TVal, THasher>::reinitialize(const THasher& hasher)$/;"	v
TVal	include/xercesc/util/RefHashTableOf.c	/^void RefHashTableOf<TVal, THasher>::removeAll()$/;"	v
TVal	include/xercesc/util/RefHashTableOf.c	/^void RefHashTableOfEnumerator<TVal, THasher>::Reset()$/;"	v
TVal	include/xercesc/util/RefHashTableOf.c	/^void RefHashTableOfEnumerator<TVal, THasher>::findNext()$/;"	v
TVal	include/xercesc/util/RefHashTableOf.c	/^void* RefHashTableOfEnumerator<TVal, THasher>::nextElementKey()$/;"	v
TVal	include/xercesc/util/ValueHashTableOf.c	/^TVal& ValueHashTableOf<TVal, THasher>::get(const void* const key, MemoryManager* const manager)$/;"	v
TVal	include/xercesc/util/ValueHashTableOf.c	/^TVal& ValueHashTableOfEnumerator<TVal, THasher>::nextElement()$/;"	v
TVal	include/xercesc/util/ValueHashTableOf.c	/^ValueHashTableOf<TVal, THasher>::ValueHashTableOf( const XMLSize_t modulus$/;"	v
TVal	include/xercesc/util/ValueHashTableOf.c	/^ValueHashTableOf<TVal, THasher>::~ValueHashTableOf()$/;"	v
TVal	include/xercesc/util/ValueHashTableOf.c	/^ValueHashTableOfEnumerator<TVal, THasher>::$/;"	v
TVal	include/xercesc/util/ValueHashTableOf.c	/^ValueHashTableOfEnumerator<TVal, THasher>::~ValueHashTableOfEnumerator()$/;"	v
TVal	include/xercesc/util/ValueHashTableOf.c	/^bool ValueHashTableOf<TVal, THasher>::$/;"	v
TVal	include/xercesc/util/ValueHashTableOf.c	/^bool ValueHashTableOf<TVal, THasher>::isEmpty() const$/;"	v
TVal	include/xercesc/util/ValueHashTableOf.c	/^bool ValueHashTableOfEnumerator<TVal, THasher>::hasMoreElements() const$/;"	v
TVal	include/xercesc/util/ValueHashTableOf.c	/^const TVal& ValueHashTableOf<TVal, THasher>::$/;"	v
TVal	include/xercesc/util/ValueHashTableOf.c	/^inline ValueHashTableBucketElem<TVal>* ValueHashTableOf<TVal, THasher>::$/;"	v
TVal	include/xercesc/util/ValueHashTableOf.c	/^inline const ValueHashTableBucketElem<TVal>* ValueHashTableOf<TVal, THasher>::$/;"	v
TVal	include/xercesc/util/ValueHashTableOf.c	/^template <class TVal, class THasher>$/;"	v
TVal	include/xercesc/util/ValueHashTableOf.c	/^void ValueHashTableOf<TVal, THasher>::$/;"	v
TVal	include/xercesc/util/ValueHashTableOf.c	/^void ValueHashTableOf<TVal, THasher>::initialize(const XMLSize_t modulus)$/;"	v
TVal	include/xercesc/util/ValueHashTableOf.c	/^void ValueHashTableOf<TVal, THasher>::put(void* key, const TVal& valueToAdopt)$/;"	v
TVal	include/xercesc/util/ValueHashTableOf.c	/^void ValueHashTableOf<TVal, THasher>::rehash()$/;"	v
TVal	include/xercesc/util/ValueHashTableOf.c	/^void ValueHashTableOf<TVal, THasher>::removeAll()$/;"	v
TVal	include/xercesc/util/ValueHashTableOf.c	/^void ValueHashTableOfEnumerator<TVal, THasher>::Reset()$/;"	v
TVal	include/xercesc/util/ValueHashTableOf.c	/^void ValueHashTableOfEnumerator<TVal, THasher>::findNext()$/;"	v
TVal	include/xercesc/util/ValueHashTableOf.c	/^void* ValueHashTableOfEnumerator<TVal, THasher>::nextElementKey()$/;"	v
TYPE_CATEGORY	include/xercesc/framework/psvi/XSTypeDefinition.hpp	/^    enum TYPE_CATEGORY {$/;"	g	class:XSTypeDefinition
TYPE_DEFINITION	include/xercesc/framework/psvi/XSConstants.hpp	/^	      TYPE_DEFINITION           = 3,$/;"	e	enum:XSConstants::COMPONENT_TYPE
TYPE_ERR	include/xercesc/dom/DOMXPathException.hpp	/^		TYPE_ERR = 52,$/;"	e	enum:DOMXPathException::ExceptionCode
TYPE_ERR	include/xercesc/util/XMLDOMMsg.hpp	/^      , TYPE_ERR                           = 28$/;"	e	enum:XMLDOMMsg::Codes
TYPE_MISMATCH_ERR	include/xercesc/dom/DOMException.hpp	/^         TYPE_MISMATCH_ERR              = 17$/;"	e	enum:DOMException::ExceptionCode
TYPE_MISMATCH_ERR	include/xercesc/util/XMLDOMMsg.hpp	/^      , TYPE_MISMATCH_ERR                  = 19$/;"	e	enum:XMLDOMMsg::Codes
T_ANCHOR	include/xercesc/util/regx/Token.hpp	/^        T_ANCHOR = 8,$/;"	e	enum:Token::<anonymous>
T_BACKREFERENCE	include/xercesc/util/regx/Token.hpp	/^        T_BACKREFERENCE = 12$/;"	e	enum:Token::<anonymous>
T_CHAR	include/xercesc/util/regx/Token.hpp	/^        T_CHAR = 0,$/;"	e	enum:Token::<anonymous>
T_CLOSURE	include/xercesc/util/regx/Token.hpp	/^        T_CLOSURE = 3,$/;"	e	enum:Token::<anonymous>
T_CONCAT	include/xercesc/util/regx/Token.hpp	/^        T_CONCAT = 1,$/;"	e	enum:Token::<anonymous>
T_DOT	include/xercesc/util/regx/Token.hpp	/^        T_DOT = 11,$/;"	e	enum:Token::<anonymous>
T_EMPTY	include/xercesc/util/regx/Token.hpp	/^        T_EMPTY = 7,$/;"	e	enum:Token::<anonymous>
T_NONGREEDYCLOSURE	include/xercesc/util/regx/Token.hpp	/^        T_NONGREEDYCLOSURE = 9,$/;"	e	enum:Token::<anonymous>
T_NRANGE	include/xercesc/util/regx/Token.hpp	/^        T_NRANGE = 5,$/;"	e	enum:Token::<anonymous>
T_PAREN	include/xercesc/util/regx/Token.hpp	/^        T_PAREN = 6,$/;"	e	enum:Token::<anonymous>
T_RANGE	include/xercesc/util/regx/Token.hpp	/^        T_RANGE = 4,$/;"	e	enum:Token::<anonymous>
T_STRING	include/xercesc/util/regx/Token.hpp	/^        T_STRING = 10,$/;"	e	enum:Token::<anonymous>
T_UNION	include/xercesc/util/regx/Token.hpp	/^        T_UNION = 2,$/;"	e	enum:Token::<anonymous>
TextDeclNotLegalHere	include/xercesc/framework/XMLErrorCodes.hpp	/^      , TextDeclNotLegalHere               = 195$/;"	e	enum:XMLErrs::Codes
ThrowEOEJanitor	include/xercesc/internal/ReaderMgr.hpp	/^    ThrowEOEJanitor(ReaderMgr* mgrTarget, const bool newValue) :$/;"	f	class:ThrowEOEJanitor
ThrowEOEJanitor	include/xercesc/internal/ReaderMgr.hpp	/^class XMLPARSER_EXPORT ThrowEOEJanitor$/;"	c
ThrowXML	include/xercesc/util/XMLException.hpp	254;"	d
ThrowXML1	include/xercesc/util/XMLException.hpp	256;"	d
ThrowXML2	include/xercesc/util/XMLException.hpp	258;"	d
ThrowXML3	include/xercesc/util/XMLException.hpp	260;"	d
ThrowXML4	include/xercesc/util/XMLException.hpp	262;"	d
ThrowXMLwithMemMgr	include/xercesc/util/XMLException.hpp	264;"	d
ThrowXMLwithMemMgr1	include/xercesc/util/XMLException.hpp	266;"	d
ThrowXMLwithMemMgr2	include/xercesc/util/XMLException.hpp	268;"	d
ThrowXMLwithMemMgr3	include/xercesc/util/XMLException.hpp	270;"	d
ThrowXMLwithMemMgr4	include/xercesc/util/XMLException.hpp	272;"	d
Time	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        Time,$/;"	e	enum:DatatypeValidator::ValidatorType
Time	include/xercesc/validators/datatype/XMLCanRepGroup.hpp	/^        Time,$/;"	e	enum:XMLCanRepGroup::CanRepGroup
TimeDatatypeValidator	include/xercesc/validators/datatype/TimeDatatypeValidator.hpp	/^class VALIDATORS_EXPORT TimeDatatypeValidator : public DateTimeValidator$/;"	c
Token	include/xercesc/util/regx/Token.hpp	/^class XMLUTIL_EXPORT Token : public XMemory$/;"	c
TokenFactory	include/xercesc/util/regx/TokenFactory.hpp	/^class XMLUTIL_EXPORT TokenFactory : public XMemory$/;"	c
Token_CData	include/xercesc/internal/XMLScanner.hpp	/^        Token_CData$/;"	e	enum:XMLScanner::XMLTokens
Token_CharData	include/xercesc/internal/XMLScanner.hpp	/^        , Token_CharData$/;"	e	enum:XMLScanner::XMLTokens
Token_Comment	include/xercesc/internal/XMLScanner.hpp	/^        , Token_Comment$/;"	e	enum:XMLScanner::XMLTokens
Token_EOF	include/xercesc/internal/XMLScanner.hpp	/^        , Token_EOF$/;"	e	enum:XMLScanner::XMLTokens
Token_EndTag	include/xercesc/internal/XMLScanner.hpp	/^        , Token_EndTag$/;"	e	enum:XMLScanner::XMLTokens
Token_PI	include/xercesc/internal/XMLScanner.hpp	/^        , Token_PI$/;"	e	enum:XMLScanner::XMLTokens
Token_StartTag	include/xercesc/internal/XMLScanner.hpp	/^        , Token_StartTag$/;"	e	enum:XMLScanner::XMLTokens
Token_Unknown	include/xercesc/internal/XMLScanner.hpp	/^        , Token_Unknown$/;"	e	enum:XMLScanner::XMLTokens
TopLevelAttributeNotFound	include/xercesc/framework/XMLErrorCodes.hpp	/^      , TopLevelAttributeNotFound          = 41$/;"	e	enum:XMLErrs::Codes
TopLevelNoNameAttribute	include/xercesc/framework/XMLErrorCodes.hpp	/^      , TopLevelNoNameAttribute            = 15$/;"	e	enum:XMLErrs::Codes
TopLevelNoNameComplexType	include/xercesc/framework/XMLErrorCodes.hpp	/^      , TopLevelNoNameComplexType          = 14$/;"	e	enum:XMLErrs::Codes
TransRec	include/xercesc/util/TransService.hpp	/^    struct TransRec$/;"	s	class:XMLTransService
Trans_BadSrcCP	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Trans_BadSrcCP                     = 79$/;"	e	enum:XMLExcepts::Codes
Trans_BadSrcSeq	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Trans_BadSrcSeq                    = 78$/;"	e	enum:XMLExcepts::Codes
Trans_BadTrailingSurrogate	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Trans_BadTrailingSurrogate         = 80$/;"	e	enum:XMLExcepts::Codes
Trans_CantCreateCvtrFor	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Trans_CantCreateCvtrFor            = 81$/;"	e	enum:XMLExcepts::Codes
Trans_Unrepresentable	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Trans_Unrepresentable              = 77$/;"	e	enum:XMLExcepts::Codes
TranscodeFromStr	include/xercesc/util/TransService.hpp	/^class XMLUTIL_EXPORT TranscodeFromStr$/;"	c
TranscodeToStr	include/xercesc/util/TransService.hpp	/^class XMLUTIL_EXPORT TranscodeToStr$/;"	c
TraversalType	include/xercesc/dom/impl/DOMRangeImpl.hpp	/^    enum TraversalType {$/;"	g	class:DOMRangeImpl
TraversePoint	include/xercesc/dom/impl/DOMRangeImpl.hpp	/^    enum TraversePoint {$/;"	g	class:DOMRangeImpl
TraverseSchema	include/xercesc/validators/schema/TraverseSchema.hpp	/^class VALIDATORS_EXPORT TraverseSchema : public XMemory$/;"	c
TypeNoSubforBlock	include/xercesc/framework/XMLValidityCodes.hpp	/^      , TypeNoSubforBlock                  = 61$/;"	e	enum:XMLValid::Codes
TypeNotFound	include/xercesc/framework/XMLErrorCodes.hpp	/^      , TypeNotFound                       = 40$/;"	e	enum:XMLErrs::Codes
Type_General	include/xercesc/internal/XMLReader.hpp	/^        , Type_General$/;"	e	enum:XMLReader::Types
Type_PE	include/xercesc/internal/XMLReader.hpp	/^        Type_PE$/;"	e	enum:XMLReader::Types
Types	include/xercesc/internal/XMLReader.hpp	/^    enum Types$/;"	g	class:XMLReader
UBO	include/xercesc/util/Transcoders/IconvGNU/IconvGNUTransService.hpp	/^    inline unsigned int	UBO () const { return fUBO; }$/;"	f	class:IconvGNUWrapper
UCS4Ch	include/xercesc/util/XercesDefs.hpp	/^typedef XMLUInt32           UCS4Ch;$/;"	t
UCS_4B	include/xercesc/framework/XMLRecognizer.hpp	/^        , UCS_4B        = 1$/;"	e	enum:XMLRecognizer::Encodings
UCS_4L	include/xercesc/framework/XMLRecognizer.hpp	/^        , UCS_4L        = 2$/;"	e	enum:XMLRecognizer::Encodings
UNASSIGNED	include/xercesc/util/regx/XMLUniCharacter.hpp	/^        UNASSIGNED              = 0,$/;"	e	enum:XMLUniCharacter::<anonymous>
UNICATEGSIZE	include/xercesc/util/regx/UnicodeRangeFactory.hpp	/^        UNICATEGSIZE$/;"	e	enum:UnicodeRangeFactory::<anonymous>
UNKNOWN_SCOPE	include/xercesc/validators/common/Grammar.hpp	/^		 UNKNOWN_SCOPE		= UINT_MAX - 0$/;"	e	enum:Grammar::<anonymous>
UNORDERED_NODE_ITERATOR_TYPE	include/xercesc/dom/DOMXPathResult.hpp	/^                UNORDERED_NODE_ITERATOR_TYPE = 4,$/;"	e	enum:DOMXPathResult::ResultType
UNORDERED_NODE_SNAPSHOT_TYPE	include/xercesc/dom/DOMXPathResult.hpp	/^                UNORDERED_NODE_SNAPSHOT_TYPE = 6,$/;"	e	enum:DOMXPathResult::ResultType
UPPERCASE_LETTER	include/xercesc/util/regx/XMLUniCharacter.hpp	/^        UPPERCASE_LETTER        = 1,$/;"	e	enum:XMLUniCharacter::<anonymous>
URI	include/xercesc/xinclude/XIncludeUtils.hpp	/^    XMLCh *URI;$/;"	m	struct:XIncludeHistoryNode
URLInputSource	include/xercesc/framework/URLInputSource.hpp	/^class XMLPARSER_EXPORT URLInputSource : public InputSource$/;"	c
URL_BadPortField	include/xercesc/util/XMLExceptMsgs.hpp	/^      , URL_BadPortField                   = 88$/;"	e	enum:XMLExcepts::Codes
URL_ExpectingTwoSlashes	include/xercesc/util/XMLExceptMsgs.hpp	/^      , URL_ExpectingTwoSlashes            = 86$/;"	e	enum:XMLExcepts::Codes
URL_MalformedURL	include/xercesc/util/XMLExceptMsgs.hpp	/^      , URL_MalformedURL                   = 82$/;"	e	enum:XMLExcepts::Codes
URL_NoProtocolPresent	include/xercesc/util/XMLExceptMsgs.hpp	/^      , URL_NoProtocolPresent              = 85$/;"	e	enum:XMLExcepts::Codes
URL_RelativeBaseURL	include/xercesc/util/XMLExceptMsgs.hpp	/^      , URL_RelativeBaseURL                = 87$/;"	e	enum:XMLExcepts::Codes
URL_UnsupportedProto	include/xercesc/util/XMLExceptMsgs.hpp	/^      , URL_UnsupportedProto               = 83$/;"	e	enum:XMLExcepts::Codes
URL_UnsupportedProto1	include/xercesc/util/XMLExceptMsgs.hpp	/^      , URL_UnsupportedProto1              = 84$/;"	e	enum:XMLExcepts::Codes
USERDATA	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    static const unsigned short USERDATA;$/;"	m	class:DOMNodeImpl
USERINFO_CHARACTERS	include/xercesc/util/XMLUri.hpp	/^    static const XMLCh USERINFO_CHARACTERS[];$/;"	m	class:XMLUri
US_ASCII	include/xercesc/framework/XMLRecognizer.hpp	/^        , US_ASCII      = 3$/;"	e	enum:XMLRecognizer::Encodings
UTC_NEG	include/xercesc/util/XMLDateTime.hpp	/^        UTC_NEG                   \/\/ set in parse()$/;"	e	enum:XMLDateTime::utcType
UTC_POS	include/xercesc/util/XMLDateTime.hpp	/^        UTC_POS        ,          \/\/ set in parse()$/;"	e	enum:XMLDateTime::utcType
UTC_STD	include/xercesc/util/XMLDateTime.hpp	/^        UTC_STD        ,          \/\/ set in parse() or normalize()$/;"	e	enum:XMLDateTime::utcType
UTC_UNKNOWN	include/xercesc/util/XMLDateTime.hpp	/^        UTC_UNKNOWN = 0,$/;"	e	enum:XMLDateTime::utcType
UTF16Ch	include/xercesc/util/XercesDefs.hpp	/^typedef XMLUInt16           UTF16Ch;$/;"	t
UTF16_MAX	include/xercesc/util/regx/Token.hpp	/^    static const XMLInt32        UTF16_MAX;$/;"	m	class:Token
UTF8_Exceeds_BytesLimit	include/xercesc/util/XMLExceptMsgs.hpp	/^      , UTF8_Exceeds_BytesLimit            = 93$/;"	e	enum:XMLExcepts::Codes
UTF8_FormatError	include/xercesc/util/XMLExceptMsgs.hpp	/^      , UTF8_FormatError                   = 89$/;"	e	enum:XMLExcepts::Codes
UTF8_Invalid_3BytesSeq	include/xercesc/util/XMLExceptMsgs.hpp	/^      , UTF8_Invalid_3BytesSeq             = 90$/;"	e	enum:XMLExcepts::Codes
UTF8_Invalid_4BytesSeq	include/xercesc/util/XMLExceptMsgs.hpp	/^      , UTF8_Invalid_4BytesSeq             = 92$/;"	e	enum:XMLExcepts::Codes
UTF8_Irregular_3BytesSeq	include/xercesc/util/XMLExceptMsgs.hpp	/^      , UTF8_Irregular_3BytesSeq           = 91$/;"	e	enum:XMLExcepts::Codes
UTF_16B	include/xercesc/framework/XMLRecognizer.hpp	/^        , UTF_16B       = 5$/;"	e	enum:XMLRecognizer::Encodings
UTF_16L	include/xercesc/framework/XMLRecognizer.hpp	/^        , UTF_16L       = 6$/;"	e	enum:XMLRecognizer::Encodings
UTF_8	include/xercesc/framework/XMLRecognizer.hpp	/^        , UTF_8         = 4$/;"	e	enum:XMLRecognizer::Encodings
UnKnown	include/xercesc/framework/XMLElementDecl.hpp	/^      , UnKnown$/;"	e	enum:XMLElementDecl::objectType
UnKnown	include/xercesc/util/XMLNumber.hpp	/^        UnKnown$/;"	e	enum:XMLNumber::NumberType
UnKnown	include/xercesc/util/XMLResourceIdentifier.hpp	/^        UnKnown = 255    $/;"	e	enum:XMLResourceIdentifier::ResourceIdentifierType
UnKnown	include/xercesc/validators/common/Grammar.hpp	/^      , UnKnown$/;"	e	enum:Grammar::GrammarType
UnKnown	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        UnKnown$/;"	e	enum:DatatypeValidator::ValidatorType
UnRepFlags	include/xercesc/framework/XMLFormatter.hpp	/^    enum UnRepFlags$/;"	g	class:XMLFormatter
UnRepOpts	include/xercesc/util/TransService.hpp	/^    enum UnRepOpts$/;"	g	class:XMLTranscoder
UnRep_CharRef	include/xercesc/framework/XMLFormatter.hpp	/^        , UnRep_CharRef$/;"	e	enum:XMLFormatter::UnRepFlags
UnRep_Fail	include/xercesc/framework/XMLFormatter.hpp	/^        UnRep_Fail$/;"	e	enum:XMLFormatter::UnRepFlags
UnRep_RepChar	include/xercesc/util/TransService.hpp	/^        , UnRep_RepChar		\/**< Use the replacement char *\/$/;"	e	enum:XMLTranscoder::UnRepOpts
UnRep_Replace	include/xercesc/framework/XMLFormatter.hpp	/^        , UnRep_Replace$/;"	e	enum:XMLFormatter::UnRepFlags
UnRep_Throw	include/xercesc/util/TransService.hpp	/^        UnRep_Throw		\/**< Throw an exception *\/$/;"	e	enum:XMLTranscoder::UnRepOpts
UndeclaredElemInAttList	include/xercesc/framework/XMLErrorCodes.hpp	/^      , UndeclaredElemInAttList            = 6$/;"	e	enum:XMLErrs::Codes
UndeclaredElemInCM	include/xercesc/framework/XMLErrorCodes.hpp	/^      , UndeclaredElemInCM                 = 5$/;"	e	enum:XMLErrs::Codes
UndeclaredElemInDocType	include/xercesc/framework/XMLValidityCodes.hpp	/^      , UndeclaredElemInDocType            = 15$/;"	e	enum:XMLValid::Codes
Unexpected2ndSurrogateChar	include/xercesc/framework/XMLErrorCodes.hpp	/^      , Unexpected2ndSurrogateChar         = 252$/;"	e	enum:XMLErrs::Codes
UnexpectedEOE	include/xercesc/framework/XMLErrorCodes.hpp	/^      , UnexpectedEOE                      = 227$/;"	e	enum:XMLErrs::Codes
UnexpectedWhitespace	include/xercesc/framework/XMLErrorCodes.hpp	/^      , UnexpectedWhitespace               = 192$/;"	e	enum:XMLErrs::Codes
UnicodeRangeFactory	include/xercesc/util/regx/UnicodeRangeFactory.hpp	/^class XMLUTIL_EXPORT UnicodeRangeFactory: public RangeFactory {$/;"	c
Union	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        Union,$/;"	e	enum:DatatypeValidator::ValidatorType
UnionDatatypeValidator	include/xercesc/validators/datatype/UnionDatatypeValidator.hpp	/^class VALIDATORS_EXPORT UnionDatatypeValidator : public DatatypeValidator$/;"	c
UnionOp	include/xercesc/util/regx/Op.hpp	/^class XMLUTIL_EXPORT UnionOp : public Op {$/;"	c
UnionToken	include/xercesc/util/regx/UnionToken.hpp	/^class XMLUTIL_EXPORT UnionToken : public Token {$/;"	c
UniqueParticleAttributionFail	include/xercesc/framework/XMLValidityCodes.hpp	/^      , UniqueParticleAttributionFail      = 54$/;"	e	enum:XMLValid::Codes
Unknown	include/xercesc/util/XMLURL.hpp	/^        , Unknown$/;"	e	enum:XMLURL::Protocols
UnknownBaseDatatype	include/xercesc/framework/XMLValidityCodes.hpp	/^      , UnknownBaseDatatype                = 30$/;"	e	enum:XMLValid::Codes
UnknownComplexType	include/xercesc/framework/XMLErrorCodes.hpp	/^      , UnknownComplexType                 = 37$/;"	e	enum:XMLErrs::Codes
UnknownEntityRefAttr	include/xercesc/framework/XMLValidityCodes.hpp	/^      , UnknownEntityRefAttr               = 19$/;"	e	enum:XMLValid::Codes
UnknownNotRefAttr	include/xercesc/framework/XMLValidityCodes.hpp	/^      , UnknownNotRefAttr                  = 14$/;"	e	enum:XMLValid::Codes
UnknownPrefix	include/xercesc/framework/XMLErrorCodes.hpp	/^      , UnknownPrefix                      = 248$/;"	e	enum:XMLErrs::Codes
UnknownSimpleType	include/xercesc/framework/XMLErrorCodes.hpp	/^      , UnknownSimpleType                  = 36$/;"	e	enum:XMLErrs::Codes
UnknownType	include/xercesc/validators/common/ContentSpecNode.hpp	/^        , UnknownType = -1$/;"	e	enum:ContentSpecNode::NodeTypes
UnresolvedPrefix	include/xercesc/framework/XMLErrorCodes.hpp	/^      , UnresolvedPrefix                   = 38$/;"	e	enum:XMLErrs::Codes
UnspecifiedBase	include/xercesc/framework/XMLErrorCodes.hpp	/^      , UnspecifiedBase                    = 32$/;"	e	enum:XMLErrs::Codes
UnsupportedEncoding	include/xercesc/util/TransService.hpp	/^        , UnsupportedEncoding$/;"	e	enum:XMLTransService::Codes
UnsupportedXMLVersion	include/xercesc/framework/XMLErrorCodes.hpp	/^      , UnsupportedXMLVersion              = 168$/;"	e	enum:XMLErrs::Codes
UnterminatedCDATASection	include/xercesc/framework/XMLErrorCodes.hpp	/^      , UnterminatedCDATASection           = 236$/;"	e	enum:XMLErrs::Codes
UnterminatedCharRef	include/xercesc/framework/XMLErrorCodes.hpp	/^      , UnterminatedCharRef                = 200$/;"	e	enum:XMLErrs::Codes
UnterminatedComment	include/xercesc/framework/XMLErrorCodes.hpp	/^      , UnterminatedComment                = 172$/;"	e	enum:XMLErrs::Codes
UnterminatedContentModel	include/xercesc/framework/XMLErrorCodes.hpp	/^      , UnterminatedContentModel           = 210$/;"	e	enum:XMLErrs::Codes
UnterminatedDOCTYPE	include/xercesc/framework/XMLErrorCodes.hpp	/^      , UnterminatedDOCTYPE                = 190$/;"	e	enum:XMLErrs::Codes
UnterminatedElementDecl	include/xercesc/framework/XMLErrorCodes.hpp	/^      , UnterminatedElementDecl            = 207$/;"	e	enum:XMLErrs::Codes
UnterminatedEndTag	include/xercesc/framework/XMLErrorCodes.hpp	/^      , UnterminatedEndTag                 = 178$/;"	e	enum:XMLErrs::Codes
UnterminatedEntityDecl	include/xercesc/framework/XMLErrorCodes.hpp	/^      , UnterminatedEntityDecl             = 198$/;"	e	enum:XMLErrs::Codes
UnterminatedEntityLiteral	include/xercesc/framework/XMLErrorCodes.hpp	/^      , UnterminatedEntityLiteral          = 218$/;"	e	enum:XMLErrs::Codes
UnterminatedEntityRef	include/xercesc/framework/XMLErrorCodes.hpp	/^      , UnterminatedEntityRef              = 204$/;"	e	enum:XMLErrs::Codes
UnterminatedNotationDecl	include/xercesc/framework/XMLErrorCodes.hpp	/^      , UnterminatedNotationDecl           = 212$/;"	e	enum:XMLErrs::Codes
UnterminatedPI	include/xercesc/framework/XMLErrorCodes.hpp	/^      , UnterminatedPI                     = 174$/;"	e	enum:XMLErrs::Codes
UnterminatedStartTag	include/xercesc/framework/XMLErrorCodes.hpp	/^      , UnterminatedStartTag               = 176$/;"	e	enum:XMLErrs::Codes
UnterminatedXMLDecl	include/xercesc/framework/XMLErrorCodes.hpp	/^      , UnterminatedXMLDecl                = 169$/;"	e	enum:XMLErrs::Codes
VALIDATION_ERR	include/xercesc/dom/DOMException.hpp	/^         VALIDATION_ERR                 = 16,$/;"	e	enum:DOMException::ExceptionCode
VALIDATION_ERR	include/xercesc/util/XMLDOMMsg.hpp	/^      , VALIDATION_ERR                     = 18$/;"	e	enum:XMLDOMMsg::Codes
VALIDATION_FULL	include/xercesc/framework/psvi/PSVIItem.hpp	/^	    VALIDATION_FULL                = 2$/;"	e	enum:PSVIItem::ASSESSMENT_TYPE
VALIDATION_NONE	include/xercesc/framework/psvi/PSVIItem.hpp	/^	    VALIDATION_NONE                = 0,$/;"	e	enum:PSVIItem::ASSESSMENT_TYPE
VALIDATION_PARTIAL	include/xercesc/framework/psvi/PSVIItem.hpp	/^	    VALIDATION_PARTIAL             = 1,$/;"	e	enum:PSVIItem::ASSESSMENT_TYPE
VALIDATORS_EXPORT	include/xercesc/util/XercesDefs.hpp	144;"	d
VALIDATORS_EXPORT	include/xercesc/util/XercesDefs.hpp	153;"	d
VALIDATORS_EXPORT	include/xercesc/util/XercesDefs.hpp	169;"	d
VALIDITY_INVALID	include/xercesc/framework/psvi/PSVIItem.hpp	/^	    VALIDITY_INVALID               = 1,$/;"	e	enum:PSVIItem::VALIDITY_STATE
VALIDITY_NOTKNOWN	include/xercesc/framework/psvi/PSVIItem.hpp	/^	    VALIDITY_NOTKNOWN               = 0,$/;"	e	enum:PSVIItem::VALIDITY_STATE
VALIDITY_STATE	include/xercesc/framework/psvi/PSVIItem.hpp	/^    enum VALIDITY_STATE {$/;"	g	class:PSVIItem
VALIDITY_VALID	include/xercesc/framework/psvi/PSVIItem.hpp	/^	    VALIDITY_VALID                 = 2$/;"	e	enum:PSVIItem::VALIDITY_STATE
VALUE_CONSTRAINT	include/xercesc/framework/psvi/XSConstants.hpp	/^    enum VALUE_CONSTRAINT {$/;"	g	class:XSConstants
VALUE_CONSTRAINT_DEFAULT	include/xercesc/framework/psvi/XSConstants.hpp	/^	     VALUE_CONSTRAINT_DEFAULT       = 1,$/;"	e	enum:XSConstants::VALUE_CONSTRAINT
VALUE_CONSTRAINT_FIXED	include/xercesc/framework/psvi/XSConstants.hpp	/^	     VALUE_CONSTRAINT_FIXED         = 2$/;"	e	enum:XSConstants::VALUE_CONSTRAINT
VALUE_CONSTRAINT_NONE	include/xercesc/framework/psvi/XSConstants.hpp	/^	     VALUE_CONSTRAINT_NONE          = 0,$/;"	e	enum:XSConstants::VALUE_CONSTRAINT
VALUE_ENTITY_Invalid	include/xercesc/util/XMLExceptMsgs.hpp	/^      , VALUE_ENTITY_Invalid               = 228$/;"	e	enum:XMLExcepts::Codes
VALUE_GT_maxLen	include/xercesc/util/XMLExceptMsgs.hpp	/^      , VALUE_GT_maxLen                    = 213$/;"	e	enum:XMLExcepts::Codes
VALUE_ID_Not_Unique	include/xercesc/util/XMLExceptMsgs.hpp	/^      , VALUE_ID_Not_Unique                = 227$/;"	e	enum:XMLExcepts::Codes
VALUE_Invalid_NCName	include/xercesc/util/XMLExceptMsgs.hpp	/^      , VALUE_Invalid_NCName               = 225$/;"	e	enum:XMLExcepts::Codes
VALUE_Invalid_Name	include/xercesc/util/XMLExceptMsgs.hpp	/^      , VALUE_Invalid_Name                 = 226$/;"	e	enum:XMLExcepts::Codes
VALUE_LT_minLen	include/xercesc/util/XMLExceptMsgs.hpp	/^      , VALUE_LT_minLen                    = 214$/;"	e	enum:XMLExcepts::Codes
VALUE_NE_Len	include/xercesc/util/XMLExceptMsgs.hpp	/^      , VALUE_NE_Len                       = 215$/;"	e	enum:XMLExcepts::Codes
VALUE_NOTATION_Invalid	include/xercesc/util/XMLExceptMsgs.hpp	/^      , VALUE_NOTATION_Invalid             = 230$/;"	e	enum:XMLExcepts::Codes
VALUE_NotIn_Enumeration	include/xercesc/util/XMLExceptMsgs.hpp	/^      , VALUE_NotIn_Enumeration            = 216$/;"	e	enum:XMLExcepts::Codes
VALUE_NotMatch_Pattern	include/xercesc/util/XMLExceptMsgs.hpp	/^      , VALUE_NotMatch_Pattern             = 210$/;"	e	enum:XMLExcepts::Codes
VALUE_Not_Base64	include/xercesc/util/XMLExceptMsgs.hpp	/^      , VALUE_Not_Base64                   = 211$/;"	e	enum:XMLExcepts::Codes
VALUE_Not_HexBin	include/xercesc/util/XMLExceptMsgs.hpp	/^      , VALUE_Not_HexBin                   = 212$/;"	e	enum:XMLExcepts::Codes
VALUE_QName_Invalid	include/xercesc/util/XMLExceptMsgs.hpp	/^      , VALUE_QName_Invalid                = 229$/;"	e	enum:XMLExcepts::Codes
VALUE_QName_Invalid2	include/xercesc/util/XMLExceptMsgs.hpp	/^      , VALUE_QName_Invalid2               = 365$/;"	e	enum:XMLExcepts::Codes
VALUE_URI_Malformed	include/xercesc/util/XMLExceptMsgs.hpp	/^      , VALUE_URI_Malformed                = 232$/;"	e	enum:XMLExcepts::Codes
VALUE_WS_collapsed	include/xercesc/util/XMLExceptMsgs.hpp	/^      , VALUE_WS_collapsed                 = 224$/;"	e	enum:XMLExcepts::Codes
VALUE_WS_replaced	include/xercesc/util/XMLExceptMsgs.hpp	/^      , VALUE_WS_replaced                  = 223$/;"	e	enum:XMLExcepts::Codes
VALUE_exceed_fractDigit	include/xercesc/util/XMLExceptMsgs.hpp	/^      , VALUE_exceed_fractDigit            = 218$/;"	e	enum:XMLExcepts::Codes
VALUE_exceed_maxExcl	include/xercesc/util/XMLExceptMsgs.hpp	/^      , VALUE_exceed_maxExcl               = 220$/;"	e	enum:XMLExcepts::Codes
VALUE_exceed_maxIncl	include/xercesc/util/XMLExceptMsgs.hpp	/^      , VALUE_exceed_maxIncl               = 219$/;"	e	enum:XMLExcepts::Codes
VALUE_exceed_minExcl	include/xercesc/util/XMLExceptMsgs.hpp	/^      , VALUE_exceed_minExcl               = 222$/;"	e	enum:XMLExcepts::Codes
VALUE_exceed_minIncl	include/xercesc/util/XMLExceptMsgs.hpp	/^      , VALUE_exceed_minIncl               = 221$/;"	e	enum:XMLExcepts::Codes
VALUE_exceed_totalDigit	include/xercesc/util/XMLExceptMsgs.hpp	/^      , VALUE_exceed_totalDigit            = 217$/;"	e	enum:XMLExcepts::Codes
VALUE_no_match_memberType	include/xercesc/util/XMLExceptMsgs.hpp	/^      , VALUE_no_match_memberType          = 231$/;"	e	enum:XMLExcepts::Codes
VARIETY	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^    enum VARIETY {$/;"	g	class:XSSimpleTypeDefinition
VARIETY_ABSENT	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^	    VARIETY_ABSENT            = 0,$/;"	e	enum:XSSimpleTypeDefinition::VARIETY
VARIETY_ATOMIC	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^	    VARIETY_ATOMIC            = 1,$/;"	e	enum:XSSimpleTypeDefinition::VARIETY
VARIETY_LIST	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^	    VARIETY_LIST              = 2,$/;"	e	enum:XSSimpleTypeDefinition::VARIETY
VARIETY_UNION	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^	    VARIETY_UNION             = 3$/;"	e	enum:XSSimpleTypeDefinition::VARIETY
VC_EntityNotFound	include/xercesc/framework/XMLValidityCodes.hpp	/^      , VC_EntityNotFound                  = 51$/;"	e	enum:XMLValid::Codes
VC_IllegalRefInStandalone	include/xercesc/framework/XMLValidityCodes.hpp	/^      , VC_IllegalRefInStandalone          = 47$/;"	e	enum:XMLValid::Codes
ValSchemes	include/xercesc/internal/XMLScanner.hpp	/^    enum ValSchemes$/;"	g	class:XMLScanner
ValSchemes	include/xercesc/parsers/AbstractDOMParser.hpp	/^    enum ValSchemes$/;"	g	class:AbstractDOMParser
ValSchemes	include/xercesc/parsers/SAXParser.hpp	/^    enum ValSchemes$/;"	g	class:SAXParser
ValSchemes	include/xercesc/sax2/SAX2XMLReader.hpp	/^    enum ValSchemes$/;"	g	class:SAX2XMLReader
Val_Always	include/xercesc/internal/XMLScanner.hpp	/^        , Val_Always$/;"	e	enum:XMLScanner::ValSchemes
Val_Always	include/xercesc/parsers/AbstractDOMParser.hpp	/^        , Val_Always$/;"	e	enum:AbstractDOMParser::ValSchemes
Val_Always	include/xercesc/parsers/SAXParser.hpp	/^        , Val_Always$/;"	e	enum:SAXParser::ValSchemes
Val_Always	include/xercesc/sax2/SAX2XMLReader.hpp	/^        , Val_Always$/;"	e	enum:SAX2XMLReader::ValSchemes
Val_Auto	include/xercesc/internal/XMLScanner.hpp	/^        , Val_Auto$/;"	e	enum:XMLScanner::ValSchemes
Val_Auto	include/xercesc/parsers/AbstractDOMParser.hpp	/^        , Val_Auto$/;"	e	enum:AbstractDOMParser::ValSchemes
Val_Auto	include/xercesc/parsers/SAXParser.hpp	/^        , Val_Auto$/;"	e	enum:SAXParser::ValSchemes
Val_Auto	include/xercesc/sax2/SAX2XMLReader.hpp	/^        , Val_Auto$/;"	e	enum:SAX2XMLReader::ValSchemes
Val_CantHaveIntSS	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Val_CantHaveIntSS                  = 96$/;"	e	enum:XMLExcepts::Codes
Val_InvalidElemId	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Val_InvalidElemId                  = 95$/;"	e	enum:XMLExcepts::Codes
Val_Never	include/xercesc/internal/XMLScanner.hpp	/^        Val_Never$/;"	e	enum:XMLScanner::ValSchemes
Val_Never	include/xercesc/parsers/AbstractDOMParser.hpp	/^        Val_Never$/;"	e	enum:AbstractDOMParser::ValSchemes
Val_Never	include/xercesc/parsers/SAXParser.hpp	/^        Val_Never$/;"	e	enum:SAXParser::ValSchemes
Val_Never	include/xercesc/sax2/SAX2XMLReader.hpp	/^        Val_Never$/;"	e	enum:SAX2XMLReader::ValSchemes
ValidationContext	include/xercesc/framework/ValidationContext.hpp	/^    ValidationContext(MemoryManager* const memMgr = XMLPlatformUtils::fgMemoryManager)$/;"	f	class:ValidationContext
ValidationContext	include/xercesc/framework/ValidationContext.hpp	/^class XMLPARSER_EXPORT ValidationContext : public XMemory$/;"	c
ValidationContextImpl	include/xercesc/internal/ValidationContextImpl.hpp	/^class XMLPARSER_EXPORT ValidationContextImpl : public ValidationContext$/;"	c
ValidatorType	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^    enum ValidatorType {$/;"	g	class:DatatypeValidator
ValueArrayEnumerator	include/xercesc/util/ValueArrayOf.hpp	/^template <class TElem> class ValueArrayEnumerator : public XMLEnumerator<TElem>, public XMemory$/;"	c
ValueArrayOf	include/xercesc/util/ValueArrayOf.c	/^ValueArrayOf<TElem>::ValueArrayOf( const TElem* values$/;"	f	class:TElem
ValueArrayOf	include/xercesc/util/ValueArrayOf.c	/^ValueArrayOf<TElem>::ValueArrayOf(const ValueArrayOf<TElem>& source) :$/;"	f	class:TElem
ValueArrayOf	include/xercesc/util/ValueArrayOf.c	/^ValueArrayOf<TElem>::ValueArrayOf(const XMLSize_t size,$/;"	f	class:TElem
ValueArrayOf	include/xercesc/util/ValueArrayOf.hpp	/^template <class TElem> class ValueArrayOf : public XMemory$/;"	c
ValueHashTableBucketElem	include/xercesc/util/ValueHashTableOf.hpp	/^    ValueHashTableBucketElem(){};$/;"	f	struct:ValueHashTableBucketElem
ValueHashTableBucketElem	include/xercesc/util/ValueHashTableOf.hpp	/^    ValueHashTableBucketElem(void* key, const TVal& value, ValueHashTableBucketElem<TVal>* next)$/;"	f	struct:ValueHashTableBucketElem
ValueHashTableBucketElem	include/xercesc/util/ValueHashTableOf.hpp	/^struct ValueHashTableBucketElem$/;"	s
ValueHashTableOf	include/xercesc/util/ValueHashTableOf.c	/^ValueHashTableOf<TVal, THasher>::ValueHashTableOf( const XMLSize_t modulus$/;"	f	class:THasher
ValueHashTableOf	include/xercesc/util/ValueHashTableOf.hpp	/^class ValueHashTableOf : public XMemory$/;"	c
ValueHashTableOfEnumerator	include/xercesc/util/ValueHashTableOf.c	/^ValueHashTableOfEnumerator(ValueHashTableOf<TVal, THasher>* const toEnum$/;"	f	class:THasher
ValueHashTableOfEnumerator	include/xercesc/util/ValueHashTableOf.hpp	/^class ValueHashTableOfEnumerator : public XMLEnumerator<TVal>, public XMemory$/;"	c
ValueStackEnumerator	include/xercesc/util/ValueStackOf.c	/^ValueStackEnumerator(       ValueStackOf<TElem>* const  toEnum$/;"	f	class:TElem
ValueStackEnumerator	include/xercesc/util/ValueStackOf.hpp	/^template <class TElem> class ValueStackEnumerator : public XMLEnumerator<TElem>, public XMemory$/;"	c
ValueStackOf	include/xercesc/util/ValueStackOf.c	/^ValueStackOf<TElem>::ValueStackOf(const XMLSize_t fInitCapacity,$/;"	f	class:TElem
ValueStackOf	include/xercesc/util/ValueStackOf.hpp	/^template <class TElem> class ValueStackOf : public XMemory$/;"	c
ValueStore	include/xercesc/validators/schema/identity/ValueStore.hpp	/^class VALIDATORS_EXPORT ValueStore : public XMemory$/;"	c
ValueStoreCache	include/xercesc/validators/schema/identity/ValueStoreCache.hpp	/^class VALIDATORS_EXPORT ValueStoreCache : public XMemory$/;"	c
ValueVectorEnumerator	include/xercesc/util/ValueVectorOf.hpp	/^template <class TElem> class ValueVectorEnumerator : public XMLEnumerator<TElem>, public XMemory$/;"	c
ValueVectorOf	include/xercesc/util/ValueVectorOf.c	/^ValueVectorOf<TElem>::ValueVectorOf(const ValueVectorOf<TElem>& toCopy) :$/;"	f	class:TElem
ValueVectorOf	include/xercesc/util/ValueVectorOf.c	/^ValueVectorOf<TElem>::ValueVectorOf(const XMLSize_t maxElems,$/;"	f	class:TElem
ValueVectorOf	include/xercesc/util/ValueVectorOf.hpp	/^template <class TElem> class ValueVectorOf : public XMemory$/;"	c
VecAttrListImpl	include/xercesc/internal/VecAttrListImpl.hpp	/^class XMLPARSER_EXPORT VecAttrListImpl : public XMemory, public AttributeList$/;"	c
VecAttributesImpl	include/xercesc/internal/VecAttributesImpl.hpp	/^class XMLPARSER_EXPORT VecAttributesImpl : public Attributes$/;"	c
Vector_BadIndex	include/xercesc/util/XMLExceptMsgs.hpp	/^      , Vector_BadIndex                    = 94$/;"	e	enum:XMLExcepts::Codes
W3C_DOM_DOCUMENT	include/xercesc/framework/psvi/XSAnnotation.hpp	/^	    W3C_DOM_DOCUMENT          = 2$/;"	e	enum:XSAnnotation::ANNOTATION_TARGET
W3C_DOM_ELEMENT	include/xercesc/framework/psvi/XSAnnotation.hpp	/^	    W3C_DOM_ELEMENT           = 1,$/;"	e	enum:XSAnnotation::ANNOTATION_TARGET
WFElemStack	include/xercesc/internal/ElemStack.hpp	/^class XMLPARSER_EXPORT WFElemStack : public XMemory$/;"	c
WFXMLScanner	include/xercesc/internal/WFXMLScanner.hpp	/^class XMLPARSER_EXPORT WFXMLScanner : public XMLScanner$/;"	c
WILDCARD	include/xercesc/framework/psvi/XSConstants.hpp	/^	      WILDCARD                  = 9,$/;"	e	enum:XSConstants::COMPONENT_TYPE
WRONG_DOCUMENT_ERR	include/xercesc/dom/DOMException.hpp	/^         WRONG_DOCUMENT_ERR             = 4,$/;"	e	enum:DOMException::ExceptionCode
WRONG_DOCUMENT_ERR	include/xercesc/util/XMLDOMMsg.hpp	/^      , WRONG_DOCUMENT_ERR                 = 6$/;"	e	enum:XMLDOMMsg::Codes
WS_CollapseExpected	include/xercesc/framework/XMLErrorCodes.hpp	/^      , WS_CollapseExpected                = 89$/;"	e	enum:XMLErrs::Codes
W_HighBounds	include/xercesc/framework/XMLErrorCodes.hpp	/^      , W_HighBounds                       = 11$/;"	e	enum:XMLErrs::Codes
W_HighBounds	include/xercesc/framework/XMLValidityCodes.hpp	/^      , W_HighBounds                       = 81$/;"	e	enum:XMLValid::Codes
W_HighBounds	include/xercesc/util/XMLDOMMsg.hpp	/^      , W_HighBounds                       = 38$/;"	e	enum:XMLDOMMsg::Codes
W_HighBounds	include/xercesc/util/XMLExceptMsgs.hpp	/^      , W_HighBounds                       = 3$/;"	e	enum:XMLExcepts::Codes
W_LowBounds	include/xercesc/framework/XMLErrorCodes.hpp	/^      , W_LowBounds                        = 1$/;"	e	enum:XMLErrs::Codes
W_LowBounds	include/xercesc/framework/XMLValidityCodes.hpp	/^      , W_LowBounds                        = 80$/;"	e	enum:XMLValid::Codes
W_LowBounds	include/xercesc/util/XMLDOMMsg.hpp	/^      , W_LowBounds                        = 37$/;"	e	enum:XMLDOMMsg::Codes
W_LowBounds	include/xercesc/util/XMLExceptMsgs.hpp	/^      , W_LowBounds                        = 1$/;"	e	enum:XMLExcepts::Codes
Wrapper4DOMLSInput	include/xercesc/framework/Wrapper4DOMLSInput.hpp	/^class XMLPARSER_EXPORT Wrapper4DOMLSInput: public InputSource$/;"	c
Wrapper4InputSource	include/xercesc/framework/Wrapper4InputSource.hpp	/^class XMLPARSER_EXPORT Wrapper4InputSource: public DOMLSInput$/;"	c
Writer_NestedCDATA	include/xercesc/util/XMLDOMMsg.hpp	/^      , Writer_NestedCDATA                 = 30$/;"	e	enum:XMLDOMMsg::Codes
Writer_NotRecognizedType	include/xercesc/util/XMLDOMMsg.hpp	/^      , Writer_NotRecognizedType           = 32$/;"	e	enum:XMLDOMMsg::Codes
Writer_NotRepresentChar	include/xercesc/util/XMLDOMMsg.hpp	/^      , Writer_NotRepresentChar            = 31$/;"	e	enum:XMLDOMMsg::Codes
WrongTargetNamespace	include/xercesc/framework/XMLValidityCodes.hpp	/^      , WrongTargetNamespace               = 35$/;"	e	enum:XMLValid::Codes
XERCESC_INCLUDE_GUARD_ABSTRACTDOMPARSER_HPP	include/xercesc/parsers/AbstractDOMParser.hpp	23;"	d
XERCESC_INCLUDE_GUARD_ABSTRACTVECTOROF_HPP	include/xercesc/util/BaseRefVectorOf.hpp	23;"	d
XERCESC_INCLUDE_GUARD_ABSTRACT_NUMERIC_FACET_VALIDATOR_HPP	include/xercesc/validators/datatype/AbstractNumericFacetValidator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_ABSTRACT_NUMERIC_VALIDATOR_HPP	include/xercesc/validators/datatype/AbstractNumericValidator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_ABSTRACT_STRING_VALIDATOR_HPP	include/xercesc/validators/datatype/AbstractStringValidator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_ALLCONTENTMODEL_HPP	include/xercesc/validators/common/AllContentModel.hpp	23;"	d
XERCESC_INCLUDE_GUARD_ANYSIMPLETYPEDATATYPEVALIDATOR_HPP	include/xercesc/validators/datatype/AnySimpleTypeDatatypeValidator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_ANYURI_DATATYPEVALIDATOR_HPP	include/xercesc/validators/datatype/AnyURIDatatypeValidator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_ARRAYINDEXOUTOFBOUNDSEXCEPTION_HPP	include/xercesc/util/ArrayIndexOutOfBoundsException.hpp	23;"	d
XERCESC_INCLUDE_GUARD_ASCIIRANGEFACTORY_HPP	include/xercesc/util/regx/ASCIIRangeFactory.hpp	23;"	d
XERCESC_INCLUDE_GUARD_ATTRIBUTELIST_HPP	include/xercesc/sax/AttributeList.hpp	23;"	d
XERCESC_INCLUDE_GUARD_ATTRIBUTES_HPP	include/xercesc/sax2/Attributes.hpp	23;"	d
XERCESC_INCLUDE_GUARD_BASE64BINARY_DATATYPEVALIDATOR_HPP	include/xercesc/validators/datatype/Base64BinaryDatatypeValidator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_BASE64_HPP	include/xercesc/util/Base64.hpp	23;"	d
XERCESC_INCLUDE_GUARD_BINFILEINPUTSTREAM_HPP	include/xercesc/util/BinFileInputStream.hpp	23;"	d
XERCESC_INCLUDE_GUARD_BINFILEOUTPUTSTREAM_HPP	include/xercesc/internal/BinFileOutputStream.hpp	23;"	d
XERCESC_INCLUDE_GUARD_BININPUTSTREAM_HPP	include/xercesc/util/BinInputStream.hpp	23;"	d
XERCESC_INCLUDE_GUARD_BINMEMINPUTSTREAM_HPP	include/xercesc/util/BinMemInputStream.hpp	23;"	d
XERCESC_INCLUDE_GUARD_BINMEMOUTPUTSTREAM_HPP	include/xercesc/internal/BinMemOutputStream.hpp	23;"	d
XERCESC_INCLUDE_GUARD_BIN_OUTPUT_STREAM_HPP	include/xercesc/framework/BinOutputStream.hpp	23;"	d
XERCESC_INCLUDE_GUARD_BITOPS_HPP	include/xercesc/util/BitOps.hpp	23;"	d
XERCESC_INCLUDE_GUARD_BITSET_HPP	include/xercesc/util/BitSet.hpp	23;"	d
XERCESC_INCLUDE_GUARD_BLOCKRANGEFACTORY_HPP	include/xercesc/util/regx/BlockRangeFactory.hpp	23;"	d
XERCESC_INCLUDE_GUARD_BMPATTERN_HPP	include/xercesc/util/regx/BMPattern.hpp	23;"	d
XERCESC_INCLUDE_GUARD_BOOLEAN_DATATYPEVALIDATOR_HPP	include/xercesc/validators/datatype/BooleanDatatypeValidator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_CHARTOKEN_HPP	include/xercesc/util/regx/CharToken.hpp	23;"	d
XERCESC_INCLUDE_GUARD_CHARTYPETABLES_HPP	include/xercesc/internal/CharTypeTables.hpp	23;"	d
XERCESC_INCLUDE_GUARD_CLOSURETOKEN_HPP	include/xercesc/util/regx/ClosureToken.hpp	23;"	d
XERCESC_INCLUDE_GUARD_CMANY_HPP	include/xercesc/validators/common/CMAny.hpp	23;"	d
XERCESC_INCLUDE_GUARD_CMBINARYOP_HPP	include/xercesc/validators/common/CMBinaryOp.hpp	23;"	d
XERCESC_INCLUDE_GUARD_CMLEAF_HPP	include/xercesc/validators/common/CMLeaf.hpp	23;"	d
XERCESC_INCLUDE_GUARD_CMNODE_HPP	include/xercesc/validators/common/CMNode.hpp	23;"	d
XERCESC_INCLUDE_GUARD_CMREPEATINGLEAF_HPP	include/xercesc/validators/common/CMRepeatingLeaf.hpp	23;"	d
XERCESC_INCLUDE_GUARD_CMSTATESET_HPP	include/xercesc/validators/common/CMStateSet.hpp	23;"	d
XERCESC_INCLUDE_GUARD_CMUNARYOP_HPP	include/xercesc/validators/common/CMUnaryOp.hpp	23;"	d
XERCESC_INCLUDE_GUARD_COMPLEXTYPEINFO_HPP	include/xercesc/validators/schema/ComplexTypeInfo.hpp	23;"	d
XERCESC_INCLUDE_GUARD_CONCATTOKEN_HPP	include/xercesc/util/regx/ConcatToken.hpp	23;"	d
XERCESC_INCLUDE_GUARD_CONTENTHANDLER_HPP	include/xercesc/sax2/ContentHandler.hpp	23;"	d
XERCESC_INCLUDE_GUARD_CONTENTLEAFNAMETYPEVECTOR_HPP	include/xercesc/validators/common/ContentLeafNameTypeVector.hpp	23;"	d
XERCESC_INCLUDE_GUARD_CONTENTSPECNODE_HPP	include/xercesc/validators/common/ContentSpecNode.hpp	23;"	d
XERCESC_INCLUDE_GUARD_COUNTEDPOINTERTO_HPP	include/xercesc/util/CountedPointer.hpp	23;"	d
XERCESC_INCLUDE_GUARD_CURLNETACCESSOR_HPP	include/xercesc/util/NetAccessors/Curl/CurlNetAccessor.hpp	23;"	d
XERCESC_INCLUDE_GUARD_CURLURLINPUTSTREAM_HPP	include/xercesc/util/NetAccessors/Curl/CurlURLInputStream.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DATATYPEVALIDATORFACTORY_HPP	include/xercesc/validators/datatype/DatatypeValidatorFactory.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DATATYPEVALIDATOR_HPP	include/xercesc/validators/datatype/DatatypeValidator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DATETIME_DATATYPE_VALIDATOR_HPP	include/xercesc/validators/datatype/DateTimeDatatypeValidator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DATETIME_VALIDATOR_HPP	include/xercesc/validators/datatype/DateTimeValidator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DATE_DATATYPE_VALIDATOR_HPP	include/xercesc/validators/datatype/DateDatatypeValidator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DAY_DATATYPE_VALIDATOR_HPP	include/xercesc/validators/datatype/DayDatatypeValidator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DECIMAL_DATATYPEVALIDATOR_HPP	include/xercesc/validators/datatype/DecimalDatatypeValidator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DECLHANDLER_HPP	include/xercesc/sax2/DeclHandler.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DEFAULTHANDLER_HPP	include/xercesc/sax2/DefaultHandler.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DEFAULT_PANICHANDLER_HPP	include/xercesc/util/DefaultPanicHandler.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DFACONTENTMODEL_HPP	include/xercesc/validators/common/DFAContentModel.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DGXMLSCANNER_HPP	include/xercesc/internal/DGXMLScanner.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOCTYPEHANDLER_HPP	include/xercesc/validators/DTD/DocTypeHandler.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOCUMENTHANDLER_HPP	include/xercesc/sax/DocumentHandler.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMATTRIMPL_HPP	include/xercesc/dom/impl/DOMAttrImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMATTRMAPIMPL_HPP	include/xercesc/dom/impl/DOMAttrMapImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMATTRNSIMPL_HPP	include/xercesc/dom/impl/DOMAttrNSImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMATTR_HPP	include/xercesc/dom/DOMAttr.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMBUILDERIMPL_HPP	include/xercesc/parsers/DOMLSParserImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMCASTS_HPP	include/xercesc/dom/impl/DOMCasts.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMCDATASECTIONIMPL_HPP	include/xercesc/dom/impl/DOMCDATASectionImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMCDATASECTION_HPP	include/xercesc/dom/DOMCDATASection.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMCHARACTERDATAIMPL_HPP	include/xercesc/dom/impl/DOMCharacterDataImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMCHARACTERDATA_HPP	include/xercesc/dom/DOMCharacterData.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMCHILDNODE_HPP	include/xercesc/dom/impl/DOMChildNode.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMCOMMENTIMPL_HPP	include/xercesc/dom/impl/DOMCommentImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMCOMMENT_HPP	include/xercesc/dom/DOMComment.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMCONFIGURATIONIMPL_HPP	include/xercesc/dom/impl/DOMConfigurationImpl.hpp	28;"	d
XERCESC_INCLUDE_GUARD_DOMCONFIGURATION_HPP	include/xercesc/dom/DOMConfiguration.hpp	19;"	d
XERCESC_INCLUDE_GUARD_DOMDEEPNODELISTIMPL_HPP	include/xercesc/dom/impl/DOMDeepNodeListImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMDEEPNODELISTPOOL_HPP	include/xercesc/dom/impl/DOMDeepNodeListPool.hpp	32;"	d
XERCESC_INCLUDE_GUARD_DOMDOCUMENTFRAGMENTIMPL_HPP	include/xercesc/dom/impl/DOMDocumentFragmentImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMDOCUMENTFRAGMENT_HPP	include/xercesc/dom/DOMDocumentFragment.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMDOCUMENTIMPL_HPP	include/xercesc/dom/impl/DOMDocumentImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMDOCUMENTRANGE_HPP	include/xercesc/dom/DOMDocumentRange.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMDOCUMENTTRAVERSAL_HPP	include/xercesc/dom/DOMDocumentTraversal.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMDOCUMENTTYPEIMPL_HPP	include/xercesc/dom/impl/DOMDocumentTypeImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMDOCUMENTTYPE_HPP	include/xercesc/dom/DOMDocumentType.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMDOCUMENT_HPP	include/xercesc/dom/DOMDocument.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMELEMENTIMPL_HPP	include/xercesc/dom/impl/DOMElementImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMELEMENTNSIMPL_HPP	include/xercesc/dom/impl/DOMElementNSImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMELEMENT_HPP	include/xercesc/dom/DOMElement.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMENTITYIMPL_HPP	include/xercesc/dom/impl/DOMEntityImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMENTITYREFERENCEIMPL_HPP	include/xercesc/dom/impl/DOMEntityReferenceImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMENTITYREFERENCE_HPP	include/xercesc/dom/DOMEntityReference.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMENTITY_HPP	include/xercesc/dom/DOMEntity.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMERRORHANDLER_HPP	include/xercesc/dom/DOMErrorHandler.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMERRORIMPL_HPP	include/xercesc/dom/impl/DOMErrorImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMERROR_HPP	include/xercesc/dom/DOMError.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMEXCEPTION_HPP	include/xercesc/dom/DOMException.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMIMPLEMENTATIONIMPL_HPP	include/xercesc/dom/impl/DOMImplementationImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMIMPLEMENTATIONLISTIMPL_HPP	include/xercesc/dom/impl/DOMImplementationListImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMIMPLEMENTATIONLIST_HPP	include/xercesc/dom/DOMImplementationList.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMIMPLEMENTATIONLS_HPP	include/xercesc/dom/DOMImplementationLS.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMIMPLEMENTATIONREGISTRY_HPP	include/xercesc/dom/DOMImplementationRegistry.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMIMPLEMENTATIONSOURCE_HPP	include/xercesc/dom/DOMImplementationSource.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMIMPLEMENTATION_HPP	include/xercesc/dom/DOMImplementation.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMLOCATORIMPL_HPP	include/xercesc/dom/impl/DOMLocatorImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMLOCATOR_HPP	include/xercesc/dom/DOMLocator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMLSEXCEPTION_HPP	include/xercesc/dom/DOMLSException.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMLSINPUTIMPL_HPP	include/xercesc/dom/impl/DOMLSInputImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMLSINPUT_HPP	include/xercesc/dom/DOMLSInput.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMLSOUTPUTIMPL_HPP	include/xercesc/dom/impl/DOMLSOutputImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMLSOUTPUT_HPP	include/xercesc/dom/DOMLSOutput.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMLSPARSERFILTER_HPP	include/xercesc/dom/DOMLSParserFilter.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMLSPARSER_HPP	include/xercesc/dom/DOMLSParser.hpp	24;"	d
XERCESC_INCLUDE_GUARD_DOMLSRESOURCERESOLVER_HPP	include/xercesc/dom/DOMLSResourceResolver.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMLSSERIALIZERFILTER_HPP	include/xercesc/dom/DOMLSSerializerFilter.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMLSSERIALIZERMPL_HPP	include/xercesc/dom/impl/DOMLSSerializerImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMLSSERIALIZER_HPP	include/xercesc/dom/DOMLSSerializer.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMMEMORYMANAGER_HPP	include/xercesc/dom/DOMMemoryManager.hpp	19;"	d
XERCESC_INCLUDE_GUARD_DOMNAMEDNODEMAPIMPL_HPP	include/xercesc/dom/impl/DOMNamedNodeMapImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMNAMEDNODEMAP_HPP	include/xercesc/dom/DOMNamedNodeMap.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMNODEFILTER_HPP	include/xercesc/dom/DOMNodeFilter.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMNODEIDMAP_HPP	include/xercesc/dom/impl/DOMNodeIDMap.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMNODEIMPL_HPP	include/xercesc/dom/impl/DOMNodeImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMNODEITERATORIMPL_HPP	include/xercesc/dom/impl/DOMNodeIteratorImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMNODEITERATOR_HPP	include/xercesc/dom/DOMNodeIterator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMNODELISTIMPL_HPP	include/xercesc/dom/impl/DOMNodeListImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMNODELIST_HPP	include/xercesc/dom/DOMNodeList.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMNODEVECTOR_HPP	include/xercesc/dom/impl/DOMNodeVector.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMNODE_HPP	include/xercesc/dom/DOMNode.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMNORMALIZER_HPP	include/xercesc/dom/impl/DOMNormalizer.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMNOTATIONIMPL_HPP	include/xercesc/dom/impl/DOMNotationImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMNOTATION_HPP	include/xercesc/dom/DOMNotation.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMPARENTNODE_HPP	include/xercesc/dom/impl/DOMParentNode.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMPROCESSINGINSTRUCTIONIMPL_HPP	include/xercesc/dom/impl/DOMProcessingInstructionImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMPROCESSINGINSTRUCTION_HPP	include/xercesc/dom/DOMProcessingInstruction.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMPSVITYPEINFO_HPP	include/xercesc/dom/DOMPSVITypeInfo.hpp	19;"	d
XERCESC_INCLUDE_GUARD_DOMRANGEEXCEPTION_HPP	include/xercesc/dom/DOMRangeException.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMRANGEIMPL_HPP	include/xercesc/dom/impl/DOMRangeImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMRANGE_HPP	include/xercesc/dom/DOMRange.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMSTRINGLISTIMPL_HPP	include/xercesc/dom/impl/DOMStringListImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMSTRINGLIST_HPP	include/xercesc/dom/DOMStringList.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMSTRINGPOOL_HPP	include/xercesc/dom/impl/DOMStringPool.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMTEXTIMPL_HPP	include/xercesc/dom/impl/DOMTextImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMTEXT_HPP	include/xercesc/dom/DOMText.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMTREEWALKERIMPL_HPP	include/xercesc/dom/impl/DOMTreeWalkerImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMTREEWALKER_HPP	include/xercesc/dom/DOMTreeWalker.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMTYPEINFOIMPL_HPP	include/xercesc/dom/impl/DOMTypeInfoImpl.hpp	29;"	d
XERCESC_INCLUDE_GUARD_DOMTYPEINFO_HPP	include/xercesc/dom/DOMTypeInfo.hpp	19;"	d
XERCESC_INCLUDE_GUARD_DOMUSERDATAHANDLER_HPP	include/xercesc/dom/DOMUserDataHandler.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMXPATHEVALUATOR_HPP	include/xercesc/dom/DOMXPathEvaluator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMXPATHEXCEPTION_HPP	include/xercesc/dom/DOMXPathException.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMXPATHEXPRESSIONIMPL_HPP	include/xercesc/dom/impl/DOMXPathExpressionImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMXPATHEXPRESSION_HPP	include/xercesc/dom/DOMXPathExpression.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMXPATHNAMESPACE_HPP	include/xercesc/dom/DOMXPathNamespace.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMXPATHNSRESOLVERIMPL_HPP	include/xercesc/dom/impl/DOMXPathNSResolverImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMXPATHNSRESOLVER_HPP	include/xercesc/dom/DOMXPathNSResolver.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMXPATHRESULTIMPL_HPP	include/xercesc/dom/impl/DOMXPathResultImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOMXPATHRESULT_HPP	include/xercesc/dom/DOMXPathResult.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOM_HPP	include/xercesc/dom/DOM.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DOUBLE_DATATYPEVALIDATOR_HPP	include/xercesc/validators/datatype/DoubleDatatypeValidator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DTDATTDEFLIST_HPP	include/xercesc/validators/DTD/DTDAttDefList.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DTDATTDEF_HPP	include/xercesc/validators/DTD/DTDAttDef.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DTDELEMENTDECL_HPP	include/xercesc/validators/DTD/DTDElementDecl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DTDENTITYDECL_HPP	include/xercesc/validators/DTD/DTDEntityDecl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DTDGRAMMAR_HPP	include/xercesc/validators/DTD/DTDGrammar.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DTDHANDLER_HPP	include/xercesc/sax/DTDHandler.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DTDSCANNER_HPP	include/xercesc/validators/DTD/DTDScanner.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DTDVALIDATOR_HPP	include/xercesc/validators/DTD/DTDValidator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_DURATION_DATATYPE_VALIDATOR_HPP	include/xercesc/validators/datatype/DurationDatatypeValidator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_ELEMSTACK_HPP	include/xercesc/internal/ElemStack.hpp	23;"	d
XERCESC_INCLUDE_GUARD_EMPTYSTACKEXCEPTION_HPP	include/xercesc/util/EmptyStackException.hpp	23;"	d
XERCESC_INCLUDE_GUARD_ENCODINGVALIDATOR_HPP	include/xercesc/util/EncodingValidator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_ENDOFENTITYEXCEPTION_HPP	include/xercesc/internal/EndOfEntityException.hpp	23;"	d
XERCESC_INCLUDE_GUARD_ENTITYRESOLVER_HPP	include/xercesc/sax/EntityResolver.hpp	23;"	d
XERCESC_INCLUDE_GUARD_ENTITY_DATATYPEVALIDATOR_HPP	include/xercesc/validators/datatype/ENTITYDatatypeValidator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_ERRHEADER_XMLDOMMsg	include/xercesc/util/XMLDOMMsg.hpp	4;"	d
XERCESC_INCLUDE_GUARD_ERRHEADER_XMLErrs	include/xercesc/framework/XMLErrorCodes.hpp	4;"	d
XERCESC_INCLUDE_GUARD_ERRHEADER_XMLExcepts	include/xercesc/util/XMLExceptMsgs.hpp	4;"	d
XERCESC_INCLUDE_GUARD_ERRHEADER_XMLValid	include/xercesc/framework/XMLValidityCodes.hpp	4;"	d
XERCESC_INCLUDE_GUARD_ERRORHANDLER_HPP	include/xercesc/sax/ErrorHandler.hpp	23;"	d
XERCESC_INCLUDE_GUARD_FIELDACTIVATOR_HPP	include/xercesc/validators/schema/identity/FieldActivator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_FIELDVALUEMAP_HPP	include/xercesc/validators/schema/identity/FieldValueMap.hpp	23;"	d
XERCESC_INCLUDE_GUARD_FLAGJANITOR_HPP	include/xercesc/util/FlagJanitor.hpp	23;"	d
XERCESC_INCLUDE_GUARD_FLOAT_DATATYPEVALIDATOR_HPP	include/xercesc/validators/datatype/FloatDatatypeValidator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_GENERALATTRIBUTECHECK_HPP	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	23;"	d
XERCESC_INCLUDE_GUARD_GRAMMARRESOLVER_HPP	include/xercesc/validators/common/GrammarResolver.hpp	23;"	d
XERCESC_INCLUDE_GUARD_GRAMMAR_HPP	include/xercesc/validators/common/Grammar.hpp	23;"	d
XERCESC_INCLUDE_GUARD_HANDLERBASE_HPP	include/xercesc/sax/HandlerBase.hpp	23;"	d
XERCESC_INCLUDE_GUARD_HASH2KEYSSETOF_HPP	include/xercesc/util/Hash2KeysSetOf.hpp	23;"	d
XERCESC_INCLUDE_GUARD_HASHERS_HPP	include/xercesc/util/Hashers.hpp	23;"	d
XERCESC_INCLUDE_GUARD_HEXBINARY_DATATYPEVALIDATOR_HPP	include/xercesc/validators/datatype/HexBinaryDatatypeValidator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_HEXBIN_HPP	include/xercesc/util/HexBin.hpp	23;"	d
XERCESC_INCLUDE_GUARD_IANAENCODINGS_HPP	include/xercesc/internal/IANAEncodings.hpp	23;"	d
XERCESC_INCLUDE_GUARD_ICONVGNUTRANSSERVICE_HPP	include/xercesc/util/Transcoders/IconvGNU/IconvGNUTransService.hpp	23;"	d
XERCESC_INCLUDE_GUARD_IC_FIELD_HPP	include/xercesc/validators/schema/identity/IC_Field.hpp	23;"	d
XERCESC_INCLUDE_GUARD_IC_KEYREF_HPP	include/xercesc/validators/schema/identity/IC_KeyRef.hpp	23;"	d
XERCESC_INCLUDE_GUARD_IC_KEY_HPP	include/xercesc/validators/schema/identity/IC_Key.hpp	23;"	d
XERCESC_INCLUDE_GUARD_IC_SELECTOR_HPP	include/xercesc/validators/schema/identity/IC_Selector.hpp	23;"	d
XERCESC_INCLUDE_GUARD_IC_UNIQUE_HPP	include/xercesc/validators/schema/identity/IC_Unique.hpp	23;"	d
XERCESC_INCLUDE_GUARD_IDENTITYCONSTRAINT_HANDLER_HPP	include/xercesc/validators/schema/identity/IdentityConstraintHandler.hpp	23;"	d
XERCESC_INCLUDE_GUARD_IDENTITYCONSTRAINT_HPP	include/xercesc/validators/schema/identity/IdentityConstraint.hpp	23;"	d
XERCESC_INCLUDE_GUARD_IDREF_DATATYPEVALIDATOR_HPP	include/xercesc/validators/datatype/IDREFDatatypeValidator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_ID_DATATYPEVALIDATOR_HPP	include/xercesc/validators/datatype/IDDatatypeValidator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_IGXMLSCANNER_HPP	include/xercesc/internal/IGXMLScanner.hpp	23;"	d
XERCESC_INCLUDE_GUARD_ILLEGALARGUMENTEXCEPTION_HPP	include/xercesc/util/IllegalArgumentException.hpp	23;"	d
XERCESC_INCLUDE_GUARD_INMEMMSGLOADER_HPP	include/xercesc/util/MsgLoaders/InMemory/InMemMsgLoader.hpp	23;"	d
XERCESC_INCLUDE_GUARD_INPUTSOURCE_HPP	include/xercesc/sax/InputSource.hpp	23;"	d
XERCESC_INCLUDE_GUARD_INVALIDCASTEXCEPTION_HPP	include/xercesc/util/InvalidCastException.hpp	23;"	d
XERCESC_INCLUDE_GUARD_INVALIDDATATYPEFACETEXCEPTION_HPP	include/xercesc/validators/datatype/InvalidDatatypeFacetException.hpp	23;"	d
XERCESC_INCLUDE_GUARD_INVALIDDATATYPEVALUEEXCEPTION_HPP	include/xercesc/validators/datatype/InvalidDatatypeValueException.hpp	23;"	d
XERCESC_INCLUDE_GUARD_IOEXCEPTION_HPP	include/xercesc/util/IOException.hpp	23;"	d
XERCESC_INCLUDE_GUARD_JANITOR_HPP	include/xercesc/util/Janitor.hpp	23;"	d
XERCESC_INCLUDE_GUARD_KEYREFPAIR_HPP	include/xercesc/util/KeyRefPair.hpp	23;"	d
XERCESC_INCLUDE_GUARD_KEYVALUEPAIR_HPP	include/xercesc/util/KeyValuePair.hpp	23;"	d
XERCESC_INCLUDE_GUARD_KVSTRINGPAIR_HPP	include/xercesc/util/KVStringPair.hpp	23;"	d
XERCESC_INCLUDE_GUARD_LEXICALHANDLER_HPP	include/xercesc/sax2/LexicalHandler.hpp	23;"	d
XERCESC_INCLUDE_GUARD_LIST_DATATYPEVALIDATOR_HPP	include/xercesc/validators/datatype/ListDatatypeValidator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_LOCALFILEFORMATTARGET_HPP	include/xercesc/framework/LocalFileFormatTarget.hpp	23;"	d
XERCESC_INCLUDE_GUARD_LOCALFILEINPUTSOURCE_HPP	include/xercesc/framework/LocalFileInputSource.hpp	24;"	d
XERCESC_INCLUDE_GUARD_LOCATOR_HPP	include/xercesc/sax/Locator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_MATCH_HPP	include/xercesc/util/regx/Match.hpp	23;"	d
XERCESC_INCLUDE_GUARD_MEMBUFFORMATTARGET_HPP	include/xercesc/framework/MemBufFormatTarget.hpp	23;"	d
XERCESC_INCLUDE_GUARD_MEMBUFINPUTSOURCE_HPP	include/xercesc/framework/MemBufInputSource.hpp	24;"	d
XERCESC_INCLUDE_GUARD_MEMORYMANAGERIMPL_HPP	include/xercesc/internal/MemoryManagerImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_MEMORYMANAGER_HPP	include/xercesc/framework/MemoryManager.hpp	24;"	d
XERCESC_INCLUDE_GUARD_MIXEDCONTENTMODEL_HPP	include/xercesc/validators/common/MixedContentModel.hpp	23;"	d
XERCESC_INCLUDE_GUARD_MONTHDAY_DATATYPE_VALIDATOR_HPP	include/xercesc/validators/datatype/MonthDayDatatypeValidator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_MONTH_DATATYPE_VALIDATOR_HPP	include/xercesc/validators/datatype/MonthDatatypeValidator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_MUTEXES_HPP	include/xercesc/util/Mutexes.hpp	23;"	d
XERCESC_INCLUDE_GUARD_NAMEIDPOOL_HPP	include/xercesc/util/NameIdPool.hpp	23;"	d
XERCESC_INCLUDE_GUARD_NAMESPACESCOPE_HPP	include/xercesc/validators/schema/NamespaceScope.hpp	23;"	d
XERCESC_INCLUDE_GUARD_NAME_DATATYPEVALIDATOR_HPP	include/xercesc/validators/datatype/NameDatatypeValidator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_NCNAME_DATATYPEVALIDATOR_HPP	include/xercesc/validators/datatype/NCNameDatatypeValidator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_NOSUCHELEMENTEXCEPTION_HPP	include/xercesc/util/NoSuchElementException.hpp	23;"	d
XERCESC_INCLUDE_GUARD_NOTATION_DATATYPEVALIDATOR_HPP	include/xercesc/validators/datatype/NOTATIONDatatypeValidator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_NULLPOINTEREXCEPTION_HPP	include/xercesc/util/NullPointerException.hpp	23;"	d
XERCESC_INCLUDE_GUARD_NUMBERFORMATEXCEPTION_HPP	include/xercesc/util/NumberFormatException.hpp	23;"	d
XERCESC_INCLUDE_GUARD_OPFACTORY_HPP	include/xercesc/util/regx/OpFactory.hpp	23;"	d
XERCESC_INCLUDE_GUARD_OP_HPP	include/xercesc/util/regx/Op.hpp	23;"	d
XERCESC_INCLUDE_GUARD_OUT_OF_MEMORY_EXCEPTION_HPP	include/xercesc/util/OutOfMemoryException.hpp	23;"	d
XERCESC_INCLUDE_GUARD_PANICHANDLER_HPP	include/xercesc/util/PanicHandler.hpp	23;"	d
XERCESC_INCLUDE_GUARD_PARENTOKEN_HPP	include/xercesc/util/regx/ParenToken.hpp	23;"	d
XERCESC_INCLUDE_GUARD_PARSEEXCEPTION_HPP	include/xercesc/util/ParseException.hpp	23;"	d
XERCESC_INCLUDE_GUARD_PARSERFORXMLSCHEMA_HPP	include/xercesc/util/regx/ParserForXMLSchema.hpp	23;"	d
XERCESC_INCLUDE_GUARD_PARSER_HPP	include/xercesc/sax/Parser.hpp	23;"	d
XERCESC_INCLUDE_GUARD_PLATFORMUTILS_HPP	include/xercesc/util/PlatformUtils.hpp	23;"	d
XERCESC_INCLUDE_GUARD_POSIXFILEMGR_HPP	include/xercesc/util/FileManagers/PosixFileMgr.hpp	23;"	d
XERCESC_INCLUDE_GUARD_POSIXMUTEXMGR_HPP	include/xercesc/util/MutexManagers/PosixMutexMgr.hpp	23;"	d
XERCESC_INCLUDE_GUARD_PSVIATTRIBUTE_HPP	include/xercesc/framework/psvi/PSVIAttribute.hpp	23;"	d
XERCESC_INCLUDE_GUARD_PSVIATTRIBUTE_LIST_HPP	include/xercesc/framework/psvi/PSVIAttributeList.hpp	23;"	d
XERCESC_INCLUDE_GUARD_PSVIDEFS_HPP	include/xercesc/validators/schema/PSVIDefs.hpp	23;"	d
XERCESC_INCLUDE_GUARD_PSVIELEMENT_HPP	include/xercesc/framework/psvi/PSVIElement.hpp	23;"	d
XERCESC_INCLUDE_GUARD_PSVIHANDLER_HPP	include/xercesc/framework/psvi/PSVIHandler.hpp	23;"	d
XERCESC_INCLUDE_GUARD_PSVIITEM_HPP	include/xercesc/framework/psvi/PSVIItem.hpp	23;"	d
XERCESC_INCLUDE_GUARD_PSVIUNI_HPP	include/xercesc/util/PSVIUni.hpp	23;"	d
XERCESC_INCLUDE_GUARD_QNAME_DATATYPEVALIDATOR_HPP	include/xercesc/validators/datatype/QNameDatatypeValidator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_QNAME_HPP	include/xercesc/util/QName.hpp	23;"	d
XERCESC_INCLUDE_GUARD_RANGEFACTORY_HPP	include/xercesc/util/regx/RangeFactory.hpp	23;"	d
XERCESC_INCLUDE_GUARD_RANGETOKENMAP_HPP	include/xercesc/util/regx/RangeTokenMap.hpp	23;"	d
XERCESC_INCLUDE_GUARD_RANGETOKEN_HPP	include/xercesc/util/regx/RangeToken.hpp	23;"	d
XERCESC_INCLUDE_GUARD_READERMGR_HPP	include/xercesc/internal/ReaderMgr.hpp	23;"	d
XERCESC_INCLUDE_GUARD_REFARRAYVECTOROF_HPP	include/xercesc/util/RefArrayVectorOf.hpp	23;"	d
XERCESC_INCLUDE_GUARD_REFARRAY_HPP	include/xercesc/util/RefArrayOf.hpp	23;"	d
XERCESC_INCLUDE_GUARD_REFHASH2KEYSTABLEOF_HPP	include/xercesc/util/RefHash2KeysTableOf.hpp	23;"	d
XERCESC_INCLUDE_GUARD_REFHASH3KEYSIDPOOL_HPP	include/xercesc/util/RefHash3KeysIdPool.hpp	23;"	d
XERCESC_INCLUDE_GUARD_REFHASHTABLEOF_HPP	include/xercesc/util/RefHashTableOf.hpp	23;"	d
XERCESC_INCLUDE_GUARD_REFSTACKOF_HPP	include/xercesc/util/RefStackOf.hpp	23;"	d
XERCESC_INCLUDE_GUARD_REFVECTOROF_HPP	include/xercesc/util/RefVectorOf.hpp	23;"	d
XERCESC_INCLUDE_GUARD_REGULAREXPRESSION_HPP	include/xercesc/util/regx/RegularExpression.hpp	23;"	d
XERCESC_INCLUDE_GUARD_REGXDEFS_HPP	include/xercesc/util/regx/RegxDefs.hpp	23;"	d
XERCESC_INCLUDE_GUARD_REGXPARSER_HPP	include/xercesc/util/regx/RegxParser.hpp	23;"	d
XERCESC_INCLUDE_GUARD_REGXUTIL_HPP	include/xercesc/util/regx/RegxUtil.hpp	23;"	d
XERCESC_INCLUDE_GUARD_RUNTIMEEXCEPTION_HPP	include/xercesc/util/RuntimeException.hpp	23;"	d
XERCESC_INCLUDE_GUARD_SAX2XMLFILTERIMPL_HPP	include/xercesc/parsers/SAX2XMLFilterImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_SAX2XMLFILTER_HPP	include/xercesc/sax2/SAX2XMLFilter.hpp	23;"	d
XERCESC_INCLUDE_GUARD_SAX2XMLREADERIMPL_HPP	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_SAX2XMLREADER_HPP	include/xercesc/sax2/SAX2XMLReader.hpp	23;"	d
XERCESC_INCLUDE_GUARD_SAXEXCEPTION_HPP	include/xercesc/sax/SAXException.hpp	23;"	d
XERCESC_INCLUDE_GUARD_SAXPARSEEXCEPTION_HPP	include/xercesc/sax/SAXParseException.hpp	23;"	d
XERCESC_INCLUDE_GUARD_SAXPARSER_HPP	include/xercesc/parsers/SAXParser.hpp	23;"	d
XERCESC_INCLUDE_GUARD_SCHEMAATTDEFLIST_HPP	include/xercesc/validators/schema/SchemaAttDefList.hpp	23;"	d
XERCESC_INCLUDE_GUARD_SCHEMAATTDEF_HPP	include/xercesc/validators/schema/SchemaAttDef.hpp	23;"	d
XERCESC_INCLUDE_GUARD_SCHEMAELEMENTDECL_HPP	include/xercesc/validators/schema/SchemaElementDecl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_SCHEMAGRAMMAR_HPP	include/xercesc/validators/schema/SchemaGrammar.hpp	23;"	d
XERCESC_INCLUDE_GUARD_SCHEMAINFO_HPP	include/xercesc/validators/schema/SchemaInfo.hpp	23;"	d
XERCESC_INCLUDE_GUARD_SCHEMASYMBOLS_HPP	include/xercesc/validators/schema/SchemaSymbols.hpp	23;"	d
XERCESC_INCLUDE_GUARD_SCHEMAVALIDATOR_HPP	include/xercesc/validators/schema/SchemaValidator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_SECURITYMANAGER_HPP	include/xercesc/util/SecurityManager.hpp	23;"	d
XERCESC_INCLUDE_GUARD_SGXMLSCANNER_HPP	include/xercesc/internal/SGXMLScanner.hpp	23;"	d
XERCESC_INCLUDE_GUARD_SIMPLECONTENTMODEL_HPP	include/xercesc/validators/common/SimpleContentModel.hpp	23;"	d
XERCESC_INCLUDE_GUARD_STDININPUTSOURCE_HPP	include/xercesc/framework/StdInInputSource.hpp	24;"	d
XERCESC_INCLUDE_GUARD_STDOMNODE_HPP	include/xercesc/dom/StDOMNode.hpp	23;"	d
XERCESC_INCLUDE_GUARD_STDOUTFORMATTARGET_HPP	include/xercesc/framework/StdOutFormatTarget.hpp	23;"	d
XERCESC_INCLUDE_GUARD_STRINGPOOL_HPP	include/xercesc/util/StringPool.hpp	23;"	d
XERCESC_INCLUDE_GUARD_STRINGTOKEN_HPP	include/xercesc/util/regx/StringToken.hpp	23;"	d
XERCESC_INCLUDE_GUARD_STRING_DATATYPEVALIDATOR_HPP	include/xercesc/validators/datatype/StringDatatypeValidator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_SUBSTITUTIONGROUPCOMPARATOR_HPP	include/xercesc/validators/schema/SubstitutionGroupComparator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_SYNCHRONIZEDSTRINGPOOL_HPP	include/xercesc/util/SynchronizedStringPool.hpp	23;"	d
XERCESC_INCLUDE_GUARD_TIME_DATATYPE_VALIDATOR_HPP	include/xercesc/validators/datatype/TimeDatatypeValidator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_TOKENFACTORY_HPP	include/xercesc/util/regx/TokenFactory.hpp	23;"	d
XERCESC_INCLUDE_GUARD_TOKENINC_HPP	include/xercesc/util/regx/TokenInc.hpp	23;"	d
XERCESC_INCLUDE_GUARD_TOKEN_HPP	include/xercesc/util/regx/Token.hpp	23;"	d
XERCESC_INCLUDE_GUARD_TRANSCODINGEXCEPTION_HPP	include/xercesc/util/TranscodingException.hpp	23;"	d
XERCESC_INCLUDE_GUARD_TRANSENAMEMAP_HPP	include/xercesc/util/TransENameMap.hpp	23;"	d
XERCESC_INCLUDE_GUARD_TRANSSERVICE_HPP	include/xercesc/util/TransService.hpp	23;"	d
XERCESC_INCLUDE_GUARD_TRAVERSESCHEMA_HPP	include/xercesc/validators/schema/TraverseSchema.hpp	23;"	d
XERCESC_INCLUDE_GUARD_UNEXPECTEDEOFEXCEPTION_HPP	include/xercesc/util/UnexpectedEOFException.hpp	23;"	d
XERCESC_INCLUDE_GUARD_UNICODERANGEFACTORY_HPP	include/xercesc/util/regx/UnicodeRangeFactory.hpp	23;"	d
XERCESC_INCLUDE_GUARD_UNIONTOKEN_HPP	include/xercesc/util/regx/UnionToken.hpp	23;"	d
XERCESC_INCLUDE_GUARD_UNION_DATATYPEVALIDATOR_HPP	include/xercesc/validators/datatype/UnionDatatypeValidator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_UNSUPPORTEDENCODINGEXCEPTION_HPP	include/xercesc/util/UnsupportedEncodingException.hpp	23;"	d
XERCESC_INCLUDE_GUARD_URLINPUTSOURCE_HPP	include/xercesc/framework/URLInputSource.hpp	23;"	d
XERCESC_INCLUDE_GUARD_UTFDATAFORMATEXCEPTION_HPP	include/xercesc/util/UTFDataFormatException.hpp	23;"	d
XERCESC_INCLUDE_GUARD_VALIDATION_CONTEXTIMPL_HPP	include/xercesc/internal/ValidationContextImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_VALIDATION_CONTEXT_HPP	include/xercesc/framework/ValidationContext.hpp	23;"	d
XERCESC_INCLUDE_GUARD_VALUEARRAY_HPP	include/xercesc/util/ValueArrayOf.hpp	23;"	d
XERCESC_INCLUDE_GUARD_VALUEHASHTABLEOF_HPP	include/xercesc/util/ValueHashTableOf.hpp	23;"	d
XERCESC_INCLUDE_GUARD_VALUESTACKOF_HPP	include/xercesc/util/ValueStackOf.hpp	23;"	d
XERCESC_INCLUDE_GUARD_VALUESTORECACHE_HPP	include/xercesc/validators/schema/identity/ValueStoreCache.hpp	23;"	d
XERCESC_INCLUDE_GUARD_VALUESTORE_HPP	include/xercesc/validators/schema/identity/ValueStore.hpp	23;"	d
XERCESC_INCLUDE_GUARD_VALUEVECTOROF_HPP	include/xercesc/util/ValueVectorOf.hpp	23;"	d
XERCESC_INCLUDE_GUARD_VECATTRIBUTESIMPL_HPP	include/xercesc/internal/VecAttributesImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_VECATTRLISTIMPL_HPP	include/xercesc/internal/VecAttrListImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_WEAVEPATH_CPP	include/xercesc/util/LogicalPath.c	23;"	d	file:
XERCESC_INCLUDE_GUARD_WFXMLSCANNER_HPP	include/xercesc/internal/WFXMLScanner.hpp	23;"	d
XERCESC_INCLUDE_GUARD_WRAPPER4DOMLSINPUT_HPP	include/xercesc/framework/Wrapper4DOMLSInput.hpp	23;"	d
XERCESC_INCLUDE_GUARD_WRAPPER4INPUTSOURCE_HPP	include/xercesc/framework/Wrapper4InputSource.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XERCESATTGROUPINFO_HPP	include/xercesc/validators/schema/XercesAttGroupInfo.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XERCESDEFS_HPP	include/xercesc/util/XercesDefs.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XERCESDOMPARSER_HPP	include/xercesc/parsers/XercesDOMParser.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XERCESELEMENTWILDCARD_HPP	include/xercesc/validators/schema/XercesElementWildcard.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XERCESGROUPINFO_HPP	include/xercesc/validators/schema/XercesGroupInfo.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XERCESVERSION_HPP	include/xercesc/util/XercesVersion.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XERCESXPATH_HPP	include/xercesc/validators/schema/identity/XercesXPath.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XINCLUDEDOMDOCUMENTPROCESSOR_HPP	include/xercesc/xinclude/XIncludeDOMDocumentProcessor.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XINCLUDELOCATION_HPP	include/xercesc/xinclude/XIncludeLocation.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XINCLUDEUTILS_HPP	include/xercesc/xinclude/XIncludeUtils.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMEMORY_HPP	include/xercesc/util/XMemory.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XML256TABLETRANSCODER_HPP	include/xercesc/util/XML256TableTranscoder.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XML88591TRANSCODER_HPP	include/xercesc/util/XML88591Transcoder.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLASCIITRANSCODER_HPP	include/xercesc/util/XMLASCIITranscoder.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLATTDEFLIST_HPP	include/xercesc/framework/XMLAttDefList.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLATTDEF_HPP	include/xercesc/framework/XMLAttDef.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLATTR_HPP	include/xercesc/framework/XMLAttr.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLBUFFERMGR_HPP	include/xercesc/framework/XMLBufferMgr.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLBUFFER_HPP	include/xercesc/framework/XMLBuffer.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLCANREPGROUP_HPP	include/xercesc/validators/datatype/XMLCanRepGroup.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLCHAR_HPP	include/xercesc/util/XMLChar.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLCHTRANSCODER_HPP	include/xercesc/util/XMLChTranscoder.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLCONTENTMODEL_HPP	include/xercesc/framework/XMLContentModel.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLDOCUMENTHANDLER_HPP	include/xercesc/framework/XMLDocumentHandler.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLDTDDESCRIPTIONIMPL_HPP	include/xercesc/validators/DTD/XMLDTDDescriptionImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLDTDDESCRIPTION_HPP	include/xercesc/framework/XMLDTDDescription.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLEBCDICTRANSCODER_HPP	include/xercesc/util/XMLEBCDICTranscoder.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLELEMENTDECL_HPP	include/xercesc/framework/XMLElementDecl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLENTITYDECL_HPP	include/xercesc/framework/XMLEntityDecl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLENTITYHANDLER_HPP	include/xercesc/framework/XMLEntityHandler.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLENTITYRESOLVER_HPP	include/xercesc/util/XMLEntityResolver.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLENUMERATOR_HPP	include/xercesc/util/XMLEnumerator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLERRORREPORTER_HPP	include/xercesc/framework/XMLErrorReporter.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLEXCEPTION_HPP	include/xercesc/util/XMLException.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLFILEMGR_HPP	include/xercesc/util/XMLFileMgr.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLFORMATTER_HPP	include/xercesc/framework/XMLFormatter.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLGRAMMARDESCRIPTION_HPP	include/xercesc/framework/XMLGrammarDescription.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLGRAMMARPOOLIMPL_HPP	include/xercesc/framework/XMLGrammarPoolImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLGRAMMARPOOL_HPP	include/xercesc/framework/XMLGrammarPool.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLIBM1047TRANSCODER_HPP	include/xercesc/util/XMLIBM1047Transcoder.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLIBM1140TRANSCODER_HPP	include/xercesc/util/XMLIBM1140Transcoder.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLINITIALIZER_HPP	include/xercesc/util/XMLInitializer.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLINTERNALERRORHANDLER_HPP	include/xercesc/internal/XMLInternalErrorHandler.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLMSGLOADER_HPP	include/xercesc/util/XMLMsgLoader.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLMUTEXMGR_HPP	include/xercesc/util/XMLMutexMgr.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLNETACCESSOR_HPP	include/xercesc/util/XMLNetAccessor.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLNOTATIONDECL_HPP	include/xercesc/framework/XMLNotationDecl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLNUMBER_HPP	include/xercesc/util/XMLNumber.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLPSCANTOKEN_HPP	include/xercesc/framework/XMLPScanToken.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLRANGEFACTORY_HPP	include/xercesc/util/regx/XMLRangeFactory.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLREADERFACTORY_HPP	include/xercesc/sax2/XMLReaderFactory.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLREADER_HPP	include/xercesc/internal/XMLReader.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLRECOGNIZER_HPP	include/xercesc/framework/XMLRecognizer.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLREFINFO_HPP	include/xercesc/framework/XMLRefInfo.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLRESOURCEIDENTIFIER_HPP	include/xercesc/util/XMLResourceIdentifier.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLSCANNERRESOLVER_HPP	include/xercesc/internal/XMLScannerResolver.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLSCANNER_HPP	include/xercesc/internal/XMLScanner.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLSCHEMADESCRIPTIONIMPL_HPP	include/xercesc/validators/schema/XMLSchemaDescriptionImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLSCHEMADESCRIPTION_HPP	include/xercesc/framework/XMLSchemaDescription.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLSTRINGTOKENIZER_HPP	include/xercesc/util/XMLStringTokenizer.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLSTRING_HPP	include/xercesc/util/XMLString.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLUCS4TRANSCODER_HPP	include/xercesc/util/XMLUCS4Transcoder.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLUNICHARACTER_HPP	include/xercesc/util/regx/XMLUniCharacter.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLUNIDEFS_HPP	include/xercesc/util/XMLUniDefs.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLUNI_HPP	include/xercesc/util/XMLUni.hpp	32;"	d
XERCESC_INCLUDE_GUARD_XMLURI_HPP	include/xercesc/util/XMLUri.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLURL_HPP	include/xercesc/util/XMLURL.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLUTF16TRANSCODER_HPP	include/xercesc/util/XMLUTF16Transcoder.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLUTF8TRANSCODER_HPP	include/xercesc/util/XMLUTF8Transcoder.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLVALIDATOR_HPP	include/xercesc/framework/XMLValidator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XMLWIN1252TRANSCODER_HPP	include/xercesc/util/XMLWin1252Transcoder.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XML_ABSTRACT_DOUBLE_FLOAT_HPP	include/xercesc/util/XMLAbstractDoubleFloat.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XML_BIGDECIMAL_HPP	include/xercesc/util/XMLBigDecimal.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XML_BIGINTEGER_HPP	include/xercesc/util/XMLBigInteger.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XML_DATETIME_HPP	include/xercesc/util/XMLDateTime.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XML_DOUBLE_HPP	include/xercesc/util/XMLDouble.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XML_FLOAT_HPP	include/xercesc/util/XMLFloat.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XML_INTEGER_HPP	include/xercesc/util/XMLInteger.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XPATHEXCEPTION_HPP	include/xercesc/validators/schema/identity/XPathException.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XPATHMATCHERSTACK_HPP	include/xercesc/validators/schema/identity/XPathMatcherStack.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XPATHMATCHER_HPP	include/xercesc/validators/schema/identity/XPathMatcher.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XPATHSYMBOLS_HPP	include/xercesc/validators/schema/identity/XPathSymbols.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XPROTOTYPE_HPP	include/xercesc/internal/XProtoType.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XSANNOTATION_HPP	include/xercesc/framework/psvi/XSAnnotation.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XSATTRIBUTEDECLARATION_HPP	include/xercesc/framework/psvi/XSAttributeDeclaration.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XSATTRIBUTEGROUPDEFINITION_HPP	include/xercesc/framework/psvi/XSAttributeGroupDefinition.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XSATTRIBUTEUSE_HPP	include/xercesc/framework/psvi/XSAttributeUse.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XSAXMLSCANNER_HPP	include/xercesc/internal/XSAXMLScanner.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XSCOMPLEXTYPEDEFINITION_HPP	include/xercesc/framework/psvi/XSComplexTypeDefinition.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XSCONSTANTS_HPP	include/xercesc/framework/psvi/XSConstants.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XSDDOMPARSER_HPP	include/xercesc/validators/schema/XSDDOMParser.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XSDELEMENTNSIMPL_HPP	include/xercesc/dom/impl/XSDElementNSImpl.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XSDERRORREPORTER_HPP	include/xercesc/validators/schema/XSDErrorReporter.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XSDLOCATOR_HPP	include/xercesc/validators/schema/XSDLocator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XSELEMENTDECLARATION_HPP	include/xercesc/framework/psvi/XSElementDeclaration.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XSERIALIZABLE_HPP	include/xercesc/internal/XSerializable.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XSERIALIZATION_EXCEPTION_HPP	include/xercesc/internal/XSerializationException.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XSERIALIZE_ENGINE_HPP	include/xercesc/internal/XSerializeEngine.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XSFACET_HPP	include/xercesc/framework/psvi/XSFacet.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XSIDCDEFINITION_HPP	include/xercesc/framework/psvi/XSIDCDefinition.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XSMODELGROUPDEFINITION_HPP	include/xercesc/framework/psvi/XSModelGroupDefinition.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XSMODELGROUP_HPP	include/xercesc/framework/psvi/XSModelGroup.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XSMODEL_HPP	include/xercesc/framework/psvi/XSModel.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XSMULTIVALUEFACET_HPP	include/xercesc/framework/psvi/XSMultiValueFacet.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XSNAMEDMAP_HPP	include/xercesc/framework/psvi/XSNamedMap.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XSNAMESPACEITEM_HPP	include/xercesc/framework/psvi/XSNamespaceItem.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XSNOTATIONDECLARATION_HPP	include/xercesc/framework/psvi/XSNotationDeclaration.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XSOBJECTFACTORY_HPP	include/xercesc/internal/XSObjectFactory.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XSOBJECT_HPP	include/xercesc/framework/psvi/XSObject.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XSPARTICLE_HPP	include/xercesc/framework/psvi/XSParticle.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XSSIMPLETYPEDEFINITION_HPP	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XSTYPEDEFINITION_HPP	include/xercesc/framework/psvi/XSTypeDefinition.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XSVALUE_HPP	include/xercesc/framework/psvi/XSValue.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XSWILDCARD_HPP	include/xercesc/framework/psvi/XSWildcard.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XTEMPLATE_SERIALIZER_HPP	include/xercesc/internal/XTemplateSerializer.hpp	23;"	d
XERCESC_INCLUDE_GUARD_XUTIL_HPP	include/xercesc/validators/schema/XUtil.hpp	23;"	d
XERCESC_INCLUDE_GUARD_YEARMONTH_DATATYPE_VALIDATOR_HPP	include/xercesc/validators/datatype/YearMonthDatatypeValidator.hpp	23;"	d
XERCESC_INCLUDE_GUARD_YEAR_DATATYPE_VALIDATOR_HPP	include/xercesc/validators/datatype/YearDatatypeValidator.hpp	23;"	d
XERCES_AUTOCONF	include/xercesc/util/Xerces_autoconf_config.hpp	52;"	d
XERCES_AUTOCONFIG_CONFIG_HPP	include/xercesc/util/Xerces_autoconf_config.hpp	47;"	d
XERCES_CPP_NAMESPACE	include/xercesc/util/XercesDefs.hpp	/^    namespace XERCES_CPP_NAMESPACE { }$/;"	n
XERCES_CPP_NAMESPACE	include/xercesc/util/XercesVersion.hpp	203;"	d
XERCES_CPP_NAMESPACE_BEGIN	include/xercesc/util/XercesDefs.hpp	104;"	d
XERCES_CPP_NAMESPACE_BEGIN	include/xercesc/util/XercesDefs.hpp	112;"	d
XERCES_CPP_NAMESPACE_END	include/xercesc/util/XercesDefs.hpp	105;"	d
XERCES_CPP_NAMESPACE_END	include/xercesc/util/XercesDefs.hpp	113;"	d
XERCES_CPP_NAMESPACE_QUALIFIER	include/xercesc/util/XercesDefs.hpp	107;"	d
XERCES_CPP_NAMESPACE_QUALIFIER	include/xercesc/util/XercesDefs.hpp	115;"	d
XERCES_CPP_NAMESPACE_USE	include/xercesc/util/XercesDefs.hpp	106;"	d
XERCES_CPP_NAMESPACE_USE	include/xercesc/util/XercesDefs.hpp	114;"	d
XERCES_DEBUG	include/xercesc/util/Xerces_autoconf_config.hpp	136;"	d
XERCES_FULLVERSIONDOT	include/xercesc/util/XercesVersion.hpp	197;"	d
XERCES_FULLVERSIONNUM	include/xercesc/util/XercesVersion.hpp	198;"	d
XERCES_FULLVERSIONSTR	include/xercesc/util/XercesVersion.hpp	196;"	d
XERCES_GRAMMAR_SERIALIZATION_LEVEL	include/xercesc/util/XercesVersion.hpp	141;"	d
XERCES_HAS_CPP_NAMESPACE	include/xercesc/util/Xerces_autoconf_config.hpp	69;"	d
XERCES_HAVE_EMMINTRIN_H	include/xercesc/util/Xerces_autoconf_config.hpp	56;"	d
XERCES_HAVE_INTTYPES_H	include/xercesc/util/Xerces_autoconf_config.hpp	54;"	d
XERCES_HAVE_SSE2_INTRINSIC	include/xercesc/util/Xerces_autoconf_config.hpp	76;"	d
XERCES_HAVE_SYS_TYPES_H	include/xercesc/util/Xerces_autoconf_config.hpp	53;"	d
XERCES_Invalid_File_Handle	include/xercesc/util/XMLFileMgr.hpp	31;"	d
XERCES_LSTRSUPPORT	include/xercesc/util/Xerces_autoconf_config.hpp	73;"	d
XERCES_NEW_IOSTREAMS	include/xercesc/util/Xerces_autoconf_config.hpp	71;"	d
XERCES_PLATFORM_EXPORT	include/xercesc/util/Xerces_autoconf_config.hpp	79;"	d
XERCES_PLATFORM_IMPORT	include/xercesc/util/Xerces_autoconf_config.hpp	80;"	d
XERCES_PRODUCT	include/xercesc/util/XercesVersion.hpp	202;"	d
XERCES_S16BIT_INT	include/xercesc/util/Xerces_autoconf_config.hpp	59;"	d
XERCES_S32BIT_INT	include/xercesc/util/Xerces_autoconf_config.hpp	60;"	d
XERCES_S64BIT_INT	include/xercesc/util/Xerces_autoconf_config.hpp	61;"	d
XERCES_SIZE_T	include/xercesc/util/Xerces_autoconf_config.hpp	66;"	d
XERCES_SSIZE_T	include/xercesc/util/Xerces_autoconf_config.hpp	67;"	d
XERCES_STD_NAMESPACE	include/xercesc/util/Xerces_autoconf_config.hpp	70;"	d
XERCES_STD_QUALIFIER	include/xercesc/util/XercesDefs.hpp	120;"	d
XERCES_STD_QUALIFIER	include/xercesc/util/XercesDefs.hpp	123;"	d
XERCES_U16BIT_INT	include/xercesc/util/Xerces_autoconf_config.hpp	62;"	d
XERCES_U32BIT_INT	include/xercesc/util/Xerces_autoconf_config.hpp	63;"	d
XERCES_U64BIT_INT	include/xercesc/util/Xerces_autoconf_config.hpp	64;"	d
XERCES_USING_STD	include/xercesc/util/XercesDefs.hpp	119;"	d
XERCES_USING_STD	include/xercesc/util/XercesDefs.hpp	122;"	d
XERCES_VERSIONSTR	include/xercesc/util/XercesVersion.hpp	199;"	d
XERCES_VERSION_MAJOR	include/xercesc/util/XercesVersion.hpp	129;"	d
XERCES_VERSION_MINOR	include/xercesc/util/XercesVersion.hpp	130;"	d
XERCES_VERSION_REVISION	include/xercesc/util/XercesVersion.hpp	131;"	d
XERCES_XMLCH	include/xercesc/framework/XMLRecognizer.hpp	/^        , XERCES_XMLCH  = 7$/;"	e	enum:XMLRecognizer::Encodings
XERCES_XMLCH_T	include/xercesc/util/Xerces_autoconf_config.hpp	65;"	d
XINCLUDE_EXPORT	include/xercesc/util/XercesDefs.hpp	145;"	d
XINCLUDE_EXPORT	include/xercesc/util/XercesDefs.hpp	154;"	d
XINCLUDE_EXPORT	include/xercesc/util/XercesDefs.hpp	170;"	d
XIncludeCannotOpenFile	include/xercesc/framework/XMLErrorCodes.hpp	/^      , XIncludeCannotOpenFile             = 9$/;"	e	enum:XMLErrs::Codes
XIncludeCircularInclusionDocIncludesSelf	include/xercesc/framework/XMLErrorCodes.hpp	/^      , XIncludeCircularInclusionDocIncludesSelf   = 283$/;"	e	enum:XMLErrs::Codes
XIncludeCircularInclusionLoop	include/xercesc/framework/XMLErrorCodes.hpp	/^      , XIncludeCircularInclusionLoop      = 282$/;"	e	enum:XMLErrs::Codes
XIncludeConflictingEntity	include/xercesc/framework/XMLErrorCodes.hpp	/^      , XIncludeConflictingEntity          = 286$/;"	e	enum:XMLErrs::Codes
XIncludeConflictingNotation	include/xercesc/framework/XMLErrorCodes.hpp	/^      , XIncludeConflictingNotation        = 285$/;"	e	enum:XMLErrs::Codes
XIncludeDOMDocumentProcessor	include/xercesc/xinclude/XIncludeDOMDocumentProcessor.hpp	/^class XINCLUDE_EXPORT XIncludeDOMDocumentProcessor$/;"	c
XIncludeDisallowedChild	include/xercesc/framework/XMLErrorCodes.hpp	/^      , XIncludeDisallowedChild            = 284$/;"	e	enum:XMLErrs::Codes
XIncludeHistoryNode	include/xercesc/xinclude/XIncludeUtils.hpp	/^typedef struct XIncludeHistoryNode{$/;"	s
XIncludeHistoryNode	include/xercesc/xinclude/XIncludeUtils.hpp	/^}XIncludeHistoryNode;$/;"	t
XIncludeIncludeFailedNoFallback	include/xercesc/framework/XMLErrorCodes.hpp	/^      , XIncludeIncludeFailedNoFallback    = 281$/;"	e	enum:XMLErrs::Codes
XIncludeIncludeFailedResourceError	include/xercesc/framework/XMLErrorCodes.hpp	/^      , XIncludeIncludeFailedResourceError   = 10$/;"	e	enum:XMLErrs::Codes
XIncludeInvalidParseVal	include/xercesc/framework/XMLErrorCodes.hpp	/^      , XIncludeInvalidParseVal            = 279$/;"	e	enum:XMLErrs::Codes
XIncludeLocation	include/xercesc/xinclude/XIncludeLocation.hpp	/^class XINCLUDE_EXPORT XIncludeLocation$/;"	c
XIncludeMultipleFallbackElems	include/xercesc/framework/XMLErrorCodes.hpp	/^      , XIncludeMultipleFallbackElems      = 280$/;"	e	enum:XMLErrs::Codes
XIncludeNoHref	include/xercesc/framework/XMLErrorCodes.hpp	/^      , XIncludeNoHref                     = 277$/;"	e	enum:XMLErrs::Codes
XIncludeOrphanFallback	include/xercesc/framework/XMLErrorCodes.hpp	/^      , XIncludeOrphanFallback             = 276$/;"	e	enum:XMLErrs::Codes
XIncludeResourceErrorWarning	include/xercesc/framework/XMLErrorCodes.hpp	/^      , XIncludeResourceErrorWarning       = 8$/;"	e	enum:XMLErrs::Codes
XIncludeUtils	include/xercesc/xinclude/XIncludeUtils.hpp	/^class XINCLUDE_EXPORT XIncludeUtils$/;"	c
XIncludeXPointerNotSupported	include/xercesc/framework/XMLErrorCodes.hpp	/^      , XIncludeXPointerNotSupported       = 278$/;"	e	enum:XMLErrs::Codes
XML256TableTranscoder	include/xercesc/util/XML256TableTranscoder.hpp	/^class XMLUTIL_EXPORT XML256TableTranscoder : public XMLTranscoder$/;"	c
XML88591Transcoder	include/xercesc/util/XML88591Transcoder.hpp	/^class XMLUTIL_EXPORT XML88591Transcoder : public XMLTranscoder$/;"	c
XMLASCIITranscoder	include/xercesc/util/XMLASCIITranscoder.hpp	/^class XMLUTIL_EXPORT XMLASCIITranscoder : public XMLTranscoder$/;"	c
XMLAbstractDoubleFloat	include/xercesc/util/XMLAbstractDoubleFloat.hpp	/^class XMLUTIL_EXPORT XMLAbstractDoubleFloat : public XMLNumber$/;"	c
XMLAttDef	include/xercesc/framework/XMLAttDef.hpp	/^class XMLPARSER_EXPORT XMLAttDef : public XSerializable, public XMemory$/;"	c
XMLAttDefList	include/xercesc/framework/XMLAttDefList.hpp	/^class XMLPARSER_EXPORT XMLAttDefList : public XSerializable, public XMemory$/;"	c
XMLAttDefList	include/xercesc/framework/XMLAttDefList.hpp	/^inline XMLAttDefList::XMLAttDefList(MemoryManager* const manager):$/;"	f	class:XMLAttDefList
XMLAttr	include/xercesc/framework/XMLAttr.hpp	/^class XMLPARSER_EXPORT XMLAttr : public XMemory$/;"	c
XMLBigDecimal	include/xercesc/util/XMLBigDecimal.hpp	/^class XMLUTIL_EXPORT XMLBigDecimal : public XMLNumber$/;"	c
XMLBigInteger	include/xercesc/util/XMLBigInteger.hpp	/^class XMLUTIL_EXPORT XMLBigInteger : public XMemory$/;"	c
XMLBufBid	include/xercesc/framework/XMLBufferMgr.hpp	/^    XMLBufBid(XMLBufferMgr* const srcMgr) :$/;"	f	class:XMLBufBid
XMLBufBid	include/xercesc/framework/XMLBufferMgr.hpp	/^class XMLBufBid : public XMemory$/;"	c
XMLBuffer	include/xercesc/framework/XMLBuffer.hpp	/^    XMLBuffer(const XMLSize_t capacity = 1023$/;"	f	class:XMLBuffer
XMLBuffer	include/xercesc/framework/XMLBuffer.hpp	/^class XMLPARSER_EXPORT XMLBuffer : public XMemory$/;"	c
XMLBufferFullHandler	include/xercesc/framework/XMLBuffer.hpp	/^class XMLPARSER_EXPORT XMLBufferFullHandler$/;"	c
XMLBufferMgr	include/xercesc/framework/XMLBufferMgr.hpp	/^class XMLPARSER_EXPORT XMLBufferMgr : public XMemory$/;"	c
XMLByte	include/xercesc/util/XercesDefs.hpp	/^typedef unsigned char       XMLByte;$/;"	t
XMLCanRepGroup	include/xercesc/validators/datatype/XMLCanRepGroup.hpp	/^class VALIDATORS_EXPORT XMLCanRepGroup : public XMemory$/;"	c
XMLCh	include/xercesc/util/Xerces_autoconf_config.hpp	/^typedef XERCES_XMLCH_T				XMLCh;$/;"	t
XMLChRefVector	include/xercesc/validators/datatype/DatatypeValidatorFactory.hpp	/^typedef RefArrayVectorOf<XMLCh> XMLChRefVector;$/;"	t
XMLChTranscoder	include/xercesc/util/XMLChTranscoder.hpp	/^class XMLUTIL_EXPORT XMLChTranscoder : public XMLTranscoder$/;"	c
XMLChar1_0	include/xercesc/util/XMLChar.hpp	/^class XMLUTIL_EXPORT XMLChar1_0$/;"	c
XMLChar1_1	include/xercesc/util/XMLChar.hpp	/^class XMLUTIL_EXPORT XMLChar1_1$/;"	c
XMLContentModel	include/xercesc/framework/XMLContentModel.hpp	/^    XMLContentModel()$/;"	f	class:XMLContentModel
XMLContentModel	include/xercesc/framework/XMLContentModel.hpp	/^class XMLPARSER_EXPORT XMLContentModel : public XMemory$/;"	c
XMLDOMMsg	include/xercesc/util/XMLDOMMsg.hpp	/^class XMLDOMMsg$/;"	c
XMLDTDDescription	include/xercesc/framework/XMLDTDDescription.hpp	/^class XMLPARSER_EXPORT XMLDTDDescription : public XMLGrammarDescription$/;"	c
XMLDTDDescriptionImpl	include/xercesc/validators/DTD/XMLDTDDescriptionImpl.hpp	/^class XMLPARSER_EXPORT XMLDTDDescriptionImpl : public XMLDTDDescription$/;"	c
XMLDateTime	include/xercesc/util/XMLDateTime.hpp	/^class XMLUTIL_EXPORT XMLDateTime : public XMLNumber$/;"	c
XMLDeclMustBeFirst	include/xercesc/framework/XMLErrorCodes.hpp	/^      , XMLDeclMustBeFirst                 = 254$/;"	e	enum:XMLErrs::Codes
XMLDeclMustBeLowerCase	include/xercesc/framework/XMLErrorCodes.hpp	/^      , XMLDeclMustBeLowerCase             = 243$/;"	e	enum:XMLErrs::Codes
XMLDeleter	include/xercesc/util/PlatformUtils.hpp	/^class XMLUTIL_EXPORT XMLDeleter$/;"	c
XMLDeleter	include/xercesc/util/PlatformUtils.hpp	/^inline XMLDeleter::XMLDeleter()$/;"	f	class:XMLDeleter
XMLDocumentHandler	include/xercesc/framework/XMLDocumentHandler.hpp	/^    XMLDocumentHandler()$/;"	f	class:XMLDocumentHandler
XMLDocumentHandler	include/xercesc/framework/XMLDocumentHandler.hpp	/^class XMLPARSER_EXPORT XMLDocumentHandler$/;"	c
XMLDouble	include/xercesc/util/XMLDouble.hpp	/^class XMLUTIL_EXPORT XMLDouble : public XMLAbstractDoubleFloat$/;"	c
XMLEBCDICTranscoder	include/xercesc/util/XMLEBCDICTranscoder.hpp	/^class XMLUTIL_EXPORT XMLEBCDICTranscoder : public XML256TableTranscoder$/;"	c
XMLElementDecl	include/xercesc/framework/XMLElementDecl.hpp	/^class XMLPARSER_EXPORT XMLElementDecl : public XSerializable, public XMemory$/;"	c
XMLEntityDecl	include/xercesc/framework/XMLEntityDecl.hpp	/^class XMLPARSER_EXPORT XMLEntityDecl : public XSerializable, public XMemory$/;"	c
XMLEntityHandler	include/xercesc/framework/XMLEntityHandler.hpp	/^    XMLEntityHandler()$/;"	f	class:XMLEntityHandler
XMLEntityHandler	include/xercesc/framework/XMLEntityHandler.hpp	/^class XMLPARSER_EXPORT XMLEntityHandler$/;"	c
XMLEntityResolver	include/xercesc/util/XMLEntityResolver.hpp	/^    XMLEntityResolver()$/;"	f	class:XMLEntityResolver
XMLEntityResolver	include/xercesc/util/XMLEntityResolver.hpp	/^class XMLUTIL_EXPORT XMLEntityResolver$/;"	c
XMLEnumerator	include/xercesc/util/XMLEnumerator.hpp	/^    XMLEnumerator() {}$/;"	f	class:XMLEnumerator
XMLEnumerator	include/xercesc/util/XMLEnumerator.hpp	/^    XMLEnumerator(const XMLEnumerator<TElem>&) {}$/;"	f	class:XMLEnumerator
XMLEnumerator	include/xercesc/util/XMLEnumerator.hpp	/^template <class TElem> class XMLEnumerator$/;"	c
XMLErrorReporter	include/xercesc/framework/XMLErrorReporter.hpp	/^    XMLErrorReporter()$/;"	f	class:XMLErrorReporter
XMLErrorReporter	include/xercesc/framework/XMLErrorReporter.hpp	/^class XMLPARSER_EXPORT XMLErrorReporter$/;"	c
XMLErrs	include/xercesc/framework/XMLErrorCodes.hpp	/^class XMLErrs$/;"	c
XMLException	include/xercesc/util/XMLException.hpp	/^class XMLUTIL_EXPORT XMLException : public XMemory$/;"	c
XMLException_Error	include/xercesc/framework/XMLErrorCodes.hpp	/^      , XMLException_Error                 = 140$/;"	e	enum:XMLErrs::Codes
XMLException_Fatal	include/xercesc/framework/XMLErrorCodes.hpp	/^      , XMLException_Fatal                 = 259$/;"	e	enum:XMLErrs::Codes
XMLException_Warning	include/xercesc/framework/XMLErrorCodes.hpp	/^      , XMLException_Warning               = 7$/;"	e	enum:XMLErrs::Codes
XMLExcepts	include/xercesc/util/XMLExceptMsgs.hpp	/^class XMLExcepts$/;"	c
XMLFileLoc	include/xercesc/util/Xerces_autoconf_config.hpp	/^typedef XMLUInt64			        XMLFileLoc;$/;"	t
XMLFileMgr	include/xercesc/util/XMLFileMgr.hpp	/^        XMLFileMgr() {}$/;"	f	class:XMLFileMgr
XMLFileMgr	include/xercesc/util/XMLFileMgr.hpp	/^class XMLFileMgr : public XMemory$/;"	c
XMLFilePos	include/xercesc/util/Xerces_autoconf_config.hpp	/^typedef XMLUInt64			        XMLFilePos;$/;"	t
XMLFloat	include/xercesc/util/XMLFloat.hpp	/^class XMLUTIL_EXPORT XMLFloat : public XMLAbstractDoubleFloat$/;"	c
XMLFormatTarget	include/xercesc/framework/XMLFormatter.hpp	/^    XMLFormatTarget() {};$/;"	f	class:XMLFormatTarget
XMLFormatTarget	include/xercesc/framework/XMLFormatter.hpp	/^class XMLPARSER_EXPORT XMLFormatTarget : public XMemory$/;"	c
XMLFormatter	include/xercesc/framework/XMLFormatter.hpp	/^class XMLPARSER_EXPORT XMLFormatter : public XMemory$/;"	c
XMLGrammarDescription	include/xercesc/framework/XMLGrammarDescription.hpp	/^class XMLPARSER_EXPORT XMLGrammarDescription : public XSerializable, public XMemory$/;"	c
XMLGrammarPool	include/xercesc/framework/XMLGrammarPool.hpp	/^    XMLGrammarPool(MemoryManager* const memMgr = XMLPlatformUtils::fgMemoryManager)$/;"	f	class:XMLGrammarPool
XMLGrammarPool	include/xercesc/framework/XMLGrammarPool.hpp	/^class XMLPARSER_EXPORT XMLGrammarPool : public XMemory$/;"	c
XMLGrammarPoolImpl	include/xercesc/framework/XMLGrammarPoolImpl.hpp	/^class XMLUTIL_EXPORT XMLGrammarPoolImpl : public XMLGrammarPool$/;"	c
XMLIBM1047Transcoder	include/xercesc/util/XMLIBM1047Transcoder.hpp	/^class XMLUTIL_EXPORT XMLIBM1047Transcoder : public XML256TableTranscoder$/;"	c
XMLIBM1140Transcoder	include/xercesc/util/XMLIBM1140Transcoder.hpp	/^class XMLUTIL_EXPORT XMLIBM1140Transcoder : public XML256TableTranscoder$/;"	c
XMLInitializer	include/xercesc/util/XMLInitializer.hpp	/^class XMLUTIL_EXPORT XMLInitializer$/;"	c
XMLInt16	include/xercesc/util/Xerces_autoconf_config.hpp	/^typedef XERCES_S16BIT_INT			XMLInt16;$/;"	t
XMLInt32	include/xercesc/util/Xerces_autoconf_config.hpp	/^typedef XERCES_S32BIT_INT			XMLInt32;$/;"	t
XMLInt64	include/xercesc/util/Xerces_autoconf_config.hpp	/^typedef XERCES_S64BIT_INT			XMLInt64;$/;"	t
XMLInteger	include/xercesc/util/XMLInteger.hpp	/^class XMLUTIL_EXPORT XMLInteger : public XMemory$/;"	c
XMLInteger	include/xercesc/util/XMLInteger.hpp	/^inline XMLInteger::XMLInteger(const int intVal)$/;"	f	class:XMLInteger
XMLInternalErrorHandler	include/xercesc/internal/XMLInternalErrorHandler.hpp	/^    XMLInternalErrorHandler(ErrorHandler* userHandler = 0) :$/;"	f	class:XMLInternalErrorHandler
XMLInternalErrorHandler	include/xercesc/internal/XMLInternalErrorHandler.hpp	/^class XMLInternalErrorHandler : public ErrorHandler$/;"	c
XMLLCPTranscoder	include/xercesc/util/TransService.hpp	/^class XMLUTIL_EXPORT XMLLCPTranscoder : public XMemory$/;"	c
XMLMsgId	include/xercesc/util/XMLMsgLoader.hpp	/^    typedef unsigned int    XMLMsgId;$/;"	t	class:XMLMsgLoader
XMLMsgLoader	include/xercesc/util/XMLMsgLoader.hpp	/^class XMLUTIL_EXPORT XMLMsgLoader : public XMemory$/;"	c
XMLMsgLoader	include/xercesc/util/XMLMsgLoader.hpp	/^inline XMLMsgLoader::XMLMsgLoader()$/;"	f	class:XMLMsgLoader
XMLMutex	include/xercesc/util/Mutexes.hpp	/^class XMLUTIL_EXPORT XMLMutex : public XMemory$/;"	c
XMLMutexHandle	include/xercesc/util/XMLMutexMgr.hpp	/^typedef void* XMLMutexHandle;$/;"	t
XMLMutexLock	include/xercesc/util/Mutexes.hpp	/^class XMLUTIL_EXPORT XMLMutexLock : public XMemory$/;"	c
XMLMutexMgr	include/xercesc/util/XMLMutexMgr.hpp	/^        XMLMutexMgr() {}$/;"	f	class:XMLMutexMgr
XMLMutexMgr	include/xercesc/util/XMLMutexMgr.hpp	/^class XMLMutexMgr : public XMemory$/;"	c
XMLNUM_2ManyDecPoint	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XMLNUM_2ManyDecPoint               = 235$/;"	e	enum:XMLExcepts::Codes
XMLNUM_DBL_FLT_InvalidType	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XMLNUM_DBL_FLT_InvalidType         = 248$/;"	e	enum:XMLExcepts::Codes
XMLNUM_Inv_chars	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XMLNUM_Inv_chars                   = 236$/;"	e	enum:XMLExcepts::Codes
XMLNUM_URI_Component_Empty	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XMLNUM_URI_Component_Empty         = 238$/;"	e	enum:XMLExcepts::Codes
XMLNUM_URI_Component_Invalid_Char	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XMLNUM_URI_Component_Invalid_Char   = 241$/;"	e	enum:XMLExcepts::Codes
XMLNUM_URI_Component_Invalid_EscapeSequence	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XMLNUM_URI_Component_Invalid_EscapeSequence   = 240$/;"	e	enum:XMLExcepts::Codes
XMLNUM_URI_Component_Not_Conformant	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XMLNUM_URI_Component_Not_Conformant   = 243$/;"	e	enum:XMLExcepts::Codes
XMLNUM_URI_Component_Set_Null	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XMLNUM_URI_Component_Set_Null      = 242$/;"	e	enum:XMLExcepts::Codes
XMLNUM_URI_Component_for_GenURI_Only	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XMLNUM_URI_Component_for_GenURI_Only   = 239$/;"	e	enum:XMLExcepts::Codes
XMLNUM_URI_No_Scheme	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XMLNUM_URI_No_Scheme               = 244$/;"	e	enum:XMLExcepts::Codes
XMLNUM_URI_NullHost	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XMLNUM_URI_NullHost                = 245$/;"	e	enum:XMLExcepts::Codes
XMLNUM_URI_NullPath	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XMLNUM_URI_NullPath                = 246$/;"	e	enum:XMLExcepts::Codes
XMLNUM_URI_PortNo_Invalid	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XMLNUM_URI_PortNo_Invalid          = 247$/;"	e	enum:XMLExcepts::Codes
XMLNUM_WSString	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XMLNUM_WSString                    = 234$/;"	e	enum:XMLExcepts::Codes
XMLNUM_emptyString	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XMLNUM_emptyString                 = 233$/;"	e	enum:XMLExcepts::Codes
XMLNUM_null_ptr	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XMLNUM_null_ptr                    = 237$/;"	e	enum:XMLExcepts::Codes
XMLNetAccessor	include/xercesc/util/XMLNetAccessor.hpp	/^    XMLNetAccessor()$/;"	f	class:XMLNetAccessor
XMLNetAccessor	include/xercesc/util/XMLNetAccessor.hpp	/^class XMLUTIL_EXPORT XMLNetAccessor : public XMemory$/;"	c
XMLNetHTTPInfo	include/xercesc/util/XMLNetAccessor.hpp	/^class XMLUTIL_EXPORT XMLNetHTTPInfo$/;"	c
XMLNetHTTPInfo	include/xercesc/util/XMLNetAccessor.hpp	/^inline XMLNetHTTPInfo::XMLNetHTTPInfo()$/;"	f	class:XMLNetHTTPInfo
XMLNotationDecl	include/xercesc/framework/XMLNotationDecl.hpp	/^class XMLPARSER_EXPORT XMLNotationDecl : public XSerializable, public XMemory$/;"	c
XMLNumber	include/xercesc/util/XMLNumber.hpp	/^class XMLUTIL_EXPORT XMLNumber : public XSerializable, public XMemory$/;"	c
XMLPARSER_EXPORT	include/xercesc/util/XercesDefs.hpp	139;"	d
XMLPARSER_EXPORT	include/xercesc/util/XercesDefs.hpp	148;"	d
XMLPARSER_EXPORT	include/xercesc/util/XercesDefs.hpp	163;"	d
XMLPScanToken	include/xercesc/framework/XMLPScanToken.hpp	/^class XMLPARSER_EXPORT XMLPScanToken : public XMemory$/;"	c
XMLPScanToken	include/xercesc/framework/XMLPScanToken.hpp	/^inline XMLPScanToken::XMLPScanToken() :$/;"	f	class:XMLPScanToken
XMLPScanToken	include/xercesc/framework/XMLPScanToken.hpp	/^inline XMLPScanToken::XMLPScanToken(const XMLPScanToken& toCopy) :$/;"	f	class:XMLPScanToken
XMLPlatformUtils	include/xercesc/util/PlatformUtils.hpp	/^class XMLUTIL_EXPORT XMLPlatformUtils$/;"	c
XMLRangeFactory	include/xercesc/util/regx/XMLRangeFactory.hpp	/^class XMLUTIL_EXPORT XMLRangeFactory: public RangeFactory {$/;"	c
XMLReader	include/xercesc/internal/XMLReader.hpp	/^class XMLPARSER_EXPORT XMLReader : public XMemory$/;"	c
XMLReaderFactory	include/xercesc/sax2/XMLReaderFactory.hpp	/^class SAX2_EXPORT XMLReaderFactory$/;"	c
XMLRec_UnknownEncoding	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XMLRec_UnknownEncoding             = 97$/;"	e	enum:XMLExcepts::Codes
XMLRecognizer	include/xercesc/framework/XMLRecognizer.hpp	/^class XMLPARSER_EXPORT XMLRecognizer$/;"	c
XMLRefInfo	include/xercesc/framework/XMLRefInfo.hpp	/^class XMLPARSER_EXPORT XMLRefInfo : public XSerializable, public XMemory$/;"	c
XMLRefInfo	include/xercesc/framework/XMLRefInfo.hpp	/^inline XMLRefInfo::XMLRefInfo( const XMLCh* const   refName$/;"	f	class:XMLRefInfo
XMLResourceIdentifier	include/xercesc/util/XMLResourceIdentifier.hpp	/^class XMLUTIL_EXPORT XMLResourceIdentifier$/;"	c
XMLResourceIdentifier	include/xercesc/util/XMLResourceIdentifier.hpp	/^inline XMLResourceIdentifier::XMLResourceIdentifier(const ResourceIdentifierType resourceIdentifierType$/;"	f	class:XMLResourceIdentifier
XMLSCHEMA_MODE	include/xercesc/util/regx/RegularExpression.hpp	/^    static const unsigned int   XMLSCHEMA_MODE;$/;"	m	class:RegularExpression
XMLSSize_t	include/xercesc/util/Xerces_autoconf_config.hpp	/^typedef XERCES_SSIZE_T				XMLSSize_t;$/;"	t
XMLScanner	include/xercesc/internal/XMLScanner.hpp	/^class XMLPARSER_EXPORT XMLScanner : public XMemory, public XMLBufferFullHandler$/;"	c
XMLScannerResolver	include/xercesc/internal/XMLScannerResolver.hpp	/^class XMLPARSER_EXPORT XMLScannerResolver$/;"	c
XMLSchemaDescription	include/xercesc/framework/XMLSchemaDescription.hpp	/^class XMLPARSER_EXPORT XMLSchemaDescription : public XMLGrammarDescription$/;"	c
XMLSchemaDescriptionImpl	include/xercesc/validators/schema/XMLSchemaDescriptionImpl.hpp	/^class XMLPARSER_EXPORT XMLSchemaDescriptionImpl : public XMLSchemaDescription$/;"	c
XMLSize_t	include/xercesc/util/Xerces_autoconf_config.hpp	/^typedef XERCES_SIZE_T				XMLSize_t;$/;"	t
XMLStrL	include/xercesc/util/XercesDefs.hpp	94;"	d
XMLStrL	include/xercesc/util/XercesDefs.hpp	96;"	d
XMLString	include/xercesc/util/XMLString.hpp	/^class XMLUTIL_EXPORT XMLString$/;"	c
XMLStringPool	include/xercesc/util/StringPool.hpp	/^class XMLUTIL_EXPORT XMLStringPool : public XSerializable, public XMemory$/;"	c
XMLStringTokenizer	include/xercesc/util/XMLStringTokenizer.hpp	/^  class XMLUTIL_EXPORT XMLStringTokenizer :public XMemory$/;"	c
XMLSynchronizedStringPool	include/xercesc/util/SynchronizedStringPool.hpp	/^class XMLUTIL_EXPORT XMLSynchronizedStringPool : public XMLStringPool$/;"	c
XMLTokens	include/xercesc/internal/XMLScanner.hpp	/^    enum XMLTokens$/;"	g	class:XMLScanner
XMLTransService	include/xercesc/util/TransService.hpp	/^class XMLUTIL_EXPORT XMLTransService : public XMemory$/;"	c
XMLTranscoder	include/xercesc/util/TransService.hpp	/^class XMLUTIL_EXPORT XMLTranscoder : public XMemory$/;"	c
XMLUCS4Transcoder	include/xercesc/util/XMLUCS4Transcoder.hpp	/^class XMLUTIL_EXPORT XMLUCS4Transcoder : public XMLTranscoder$/;"	c
XMLUInt16	include/xercesc/util/Xerces_autoconf_config.hpp	/^typedef XERCES_U16BIT_INT			XMLUInt16;$/;"	t
XMLUInt32	include/xercesc/util/Xerces_autoconf_config.hpp	/^typedef XERCES_U32BIT_INT			XMLUInt32;$/;"	t
XMLUInt64	include/xercesc/util/Xerces_autoconf_config.hpp	/^typedef XERCES_U64BIT_INT			XMLUInt64;$/;"	t
XMLURINotMatchXMLPrefix	include/xercesc/framework/XMLErrorCodes.hpp	/^      , XMLURINotMatchXMLPrefix            = 268$/;"	e	enum:XMLErrs::Codes
XMLURL	include/xercesc/util/XMLURL.hpp	/^class XMLUTIL_EXPORT XMLURL : public XMemory$/;"	c
XMLUTF16Transcoder	include/xercesc/util/XMLUTF16Transcoder.hpp	/^class XMLUTIL_EXPORT XMLUTF16Transcoder : public XMLTranscoder$/;"	c
XMLUTF8Transcoder	include/xercesc/util/XMLUTF8Transcoder.hpp	/^class XMLUTIL_EXPORT XMLUTF8Transcoder : public XMLTranscoder$/;"	c
XMLUTIL_EXPORT	include/xercesc/util/XercesDefs.hpp	138;"	d
XMLUTIL_EXPORT	include/xercesc/util/XercesDefs.hpp	147;"	d
XMLUTIL_EXPORT	include/xercesc/util/XercesDefs.hpp	162;"	d
XMLUni	include/xercesc/util/XMLUni.hpp	/^class XMLUTIL_EXPORT XMLUni$/;"	c
XMLUniCharacter	include/xercesc/util/regx/XMLUniCharacter.hpp	/^class XMLUTIL_EXPORT XMLUniCharacter$/;"	c
XMLUri	include/xercesc/util/XMLUri.hpp	/^class XMLUTIL_EXPORT XMLUri : public XSerializable, public XMemory$/;"	c
XMLV1_0	include/xercesc/internal/XMLReader.hpp	/^        XMLV1_0$/;"	e	enum:XMLReader::XMLVersion
XMLV1_1	include/xercesc/internal/XMLReader.hpp	/^        , XMLV1_1$/;"	e	enum:XMLReader::XMLVersion
XMLV_Unknown	include/xercesc/internal/XMLReader.hpp	/^        , XMLV_Unknown$/;"	e	enum:XMLReader::XMLVersion
XMLValid	include/xercesc/framework/XMLValidityCodes.hpp	/^class XMLValid$/;"	c
XMLValidator	include/xercesc/framework/XMLValidator.hpp	/^class XMLPARSER_EXPORT XMLValidator : public XMemory$/;"	c
XMLVersion	include/xercesc/framework/psvi/XSValue.hpp	/^    enum XMLVersion {$/;"	g	class:XSValue
XMLVersion	include/xercesc/internal/XMLReader.hpp	/^    enum XMLVersion$/;"	g	class:XMLReader
XMLVersionRequired	include/xercesc/framework/XMLErrorCodes.hpp	/^      , XMLVersionRequired                 = 255$/;"	e	enum:XMLErrs::Codes
XMLWin1252Transcoder	include/xercesc/util/XMLWin1252Transcoder.hpp	/^class XMLUTIL_EXPORT XMLWin1252Transcoder : public XML256TableTranscoder$/;"	c
XMemory	include/xercesc/util/XMemory.hpp	/^    XMemory()$/;"	f	class:XMemory
XMemory	include/xercesc/util/XMemory.hpp	/^class XMLUTIL_EXPORT XMemory$/;"	c
XPATH_NAMESPACE_NODE	include/xercesc/dom/DOMXPathNamespace.hpp	/^        XPATH_NAMESPACE_NODE = 13$/;"	e	enum:DOMXPathNamespace::XPathNodeType
XPROTOTYPE_CLASS	include/xercesc/internal/XProtoType.hpp	85;"	d
XP_MATCHED	include/xercesc/validators/schema/identity/XPathMatcher.hpp	/^        XP_MATCHED = 1        \/\/ matched any way$/;"	e	enum:XPathMatcher::<anonymous>
XP_MATCHED_A	include/xercesc/validators/schema/identity/XPathMatcher.hpp	/^        , XP_MATCHED_A = 3    \/\/ matched on the attribute axis$/;"	e	enum:XPathMatcher::<anonymous>
XP_MATCHED_D	include/xercesc/validators/schema/identity/XPathMatcher.hpp	/^        , XP_MATCHED_D = 5    \/\/ matched on the descendant-or-self axixs$/;"	e	enum:XPathMatcher::<anonymous>
XP_MATCHED_DP	include/xercesc/validators/schema/identity/XPathMatcher.hpp	/^        , XP_MATCHED_DP = 13  \/\/ matched some previous (ancestor) node on the$/;"	e	enum:XPathMatcher::<anonymous>
XPathMatcher	include/xercesc/validators/schema/identity/XPathMatcher.hpp	/^class VALIDATORS_EXPORT XPathMatcher : public XMemory$/;"	c
XPathMatcherStack	include/xercesc/validators/schema/identity/XPathMatcherStack.hpp	/^class VALIDATORS_EXPORT XPathMatcherStack : public XMemory$/;"	c
XPathNodeType	include/xercesc/dom/DOMXPathNamespace.hpp	/^    enum XPathNodeType {$/;"	g	class:DOMXPathNamespace
XPathScanner	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^class VALIDATORS_EXPORT XPathScanner : public XMemory$/;"	c
XPathScannerForSchema	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^class VALIDATORS_EXPORT XPathScannerForSchema: public XPathScanner$/;"	c
XPathSymbols	include/xercesc/validators/schema/identity/XPathSymbols.hpp	/^class VALIDATORS_EXPORT XPathSymbols$/;"	c
XPath_EmptyExpr	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XPath_EmptyExpr                    = 282$/;"	e	enum:XMLExcepts::Codes
XPath_ExpectedStep1	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XPath_ExpectedStep1                = 275$/;"	e	enum:XMLExcepts::Codes
XPath_ExpectedStep2	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XPath_ExpectedStep2                = 276$/;"	e	enum:XMLExcepts::Codes
XPath_ExpectedStep3	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XPath_ExpectedStep3                = 277$/;"	e	enum:XMLExcepts::Codes
XPath_ExpectedToken1	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XPath_ExpectedToken1               = 272$/;"	e	enum:XMLExcepts::Codes
XPath_FindSolution	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XPath_FindSolution                 = 286$/;"	e	enum:XMLExcepts::Codes
XPath_InvalidChar	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XPath_InvalidChar                  = 284$/;"	e	enum:XMLExcepts::Codes
XPath_MissingAttr	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XPath_MissingAttr                  = 271$/;"	e	enum:XMLExcepts::Codes
XPath_NoAttrSelector	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XPath_NoAttrSelector               = 268$/;"	e	enum:XMLExcepts::Codes
XPath_NoDoubleColon	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XPath_NoDoubleColon                = 274$/;"	e	enum:XMLExcepts::Codes
XPath_NoDoubleForwardSlash	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XPath_NoDoubleForwardSlash         = 279$/;"	e	enum:XMLExcepts::Codes
XPath_NoForwardSlash	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XPath_NoForwardSlash               = 278$/;"	e	enum:XMLExcepts::Codes
XPath_NoForwardSlashAtStart	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XPath_NoForwardSlashAtStart        = 280$/;"	e	enum:XMLExcepts::Codes
XPath_NoMultipleUnion	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XPath_NoMultipleUnion              = 270$/;"	e	enum:XMLExcepts::Codes
XPath_NoSelectionOfRoot	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XPath_NoSelectionOfRoot            = 281$/;"	e	enum:XMLExcepts::Codes
XPath_NoUnionAtEnd	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XPath_NoUnionAtEnd                 = 283$/;"	e	enum:XMLExcepts::Codes
XPath_NoUnionAtStart	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XPath_NoUnionAtStart               = 269$/;"	e	enum:XMLExcepts::Codes
XPath_PrefixNoURI	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XPath_PrefixNoURI                  = 273$/;"	e	enum:XMLExcepts::Codes
XPath_TokenNotSupported	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XPath_TokenNotSupported            = 285$/;"	e	enum:XMLExcepts::Codes
XProtoType	include/xercesc/internal/XProtoType.hpp	/^class XMLUTIL_EXPORT XProtoType$/;"	c
XSAXMLScanner	include/xercesc/internal/XSAXMLScanner.hpp	/^class XMLPARSER_EXPORT XSAXMLScanner : public SGXMLScanner$/;"	c
XSAnnotation	include/xercesc/framework/psvi/XSAnnotation.hpp	/^class XMLPARSER_EXPORT XSAnnotation : public XSerializable, public XSObject$/;"	c
XSAnnotationList	include/xercesc/framework/psvi/XSConstants.hpp	/^typedef RefVectorOf <XSAnnotation> XSAnnotationList;$/;"	t
XSAttributeDeclaration	include/xercesc/framework/psvi/XSAttributeDeclaration.hpp	/^class XMLPARSER_EXPORT XSAttributeDeclaration : public XSObject$/;"	c
XSAttributeGroupDefinition	include/xercesc/framework/psvi/XSAttributeGroupDefinition.hpp	/^class XMLPARSER_EXPORT XSAttributeGroupDefinition : public XSObject$/;"	c
XSAttributeUse	include/xercesc/framework/psvi/XSAttributeUse.hpp	/^class XMLPARSER_EXPORT XSAttributeUse : public XSObject$/;"	c
XSAttributeUseList	include/xercesc/framework/psvi/XSConstants.hpp	/^typedef RefVectorOf <XSAttributeUse> XSAttributeUseList;$/;"	t
XSComplexTypeDefinition	include/xercesc/framework/psvi/XSComplexTypeDefinition.hpp	/^class XMLPARSER_EXPORT XSComplexTypeDefinition : public XSTypeDefinition$/;"	c
XSConstants	include/xercesc/framework/psvi/XSConstants.hpp	/^class XMLPARSER_EXPORT XSConstants $/;"	c
XSDDOMParser	include/xercesc/validators/schema/XSDDOMParser.hpp	/^class PARSERS_EXPORT XSDDOMParser : public XercesDOMParser$/;"	c
XSDElementNSImpl	include/xercesc/dom/impl/XSDElementNSImpl.hpp	/^class CDOM_EXPORT XSDElementNSImpl: public DOMElementNSImpl {$/;"	c
XSDErrorReporter	include/xercesc/validators/schema/XSDErrorReporter.hpp	/^class VALIDATORS_EXPORT XSDErrorReporter : public XMemory$/;"	c
XSDLocator	include/xercesc/validators/schema/XSDLocator.hpp	/^class VALIDATORS_EXPORT XSDLocator: public XMemory, public Locator$/;"	c
XSD_ABSTRACT	include/xercesc/validators/schema/SchemaSymbols.hpp	/^        XSD_ABSTRACT = 2,$/;"	e	enum:SchemaSymbols::<anonymous>
XSD_ALL	include/xercesc/validators/schema/SchemaSymbols.hpp	/^        XSD_ALL = 2$/;"	e	enum:SchemaSymbols::<anonymous>
XSD_CHOICE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^        XSD_CHOICE = 0,$/;"	e	enum:SchemaSymbols::<anonymous>
XSD_EMPTYSET	include/xercesc/validators/schema/SchemaSymbols.hpp	/^        XSD_EMPTYSET = 0,$/;"	e	enum:SchemaSymbols::<anonymous>
XSD_ENUMERATION	include/xercesc/validators/schema/SchemaSymbols.hpp	/^        XSD_ENUMERATION = 32$/;"	e	enum:SchemaSymbols::<anonymous>
XSD_EXTENSION	include/xercesc/validators/schema/SchemaSymbols.hpp	/^        XSD_EXTENSION = 2,$/;"	e	enum:SchemaSymbols::<anonymous>
XSD_FIXED	include/xercesc/validators/schema/SchemaSymbols.hpp	/^        XSD_FIXED = 4$/;"	e	enum:SchemaSymbols::<anonymous>
XSD_LIST	include/xercesc/validators/schema/SchemaSymbols.hpp	/^        XSD_LIST = 8,$/;"	e	enum:SchemaSymbols::<anonymous>
XSD_NILLABLE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^        XSD_NILLABLE = 1,$/;"	e	enum:SchemaSymbols::<anonymous>
XSD_RESTRICTION	include/xercesc/validators/schema/SchemaSymbols.hpp	/^        XSD_RESTRICTION = 4,$/;"	e	enum:SchemaSymbols::<anonymous>
XSD_SEQUENCE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^        XSD_SEQUENCE= 1,$/;"	e	enum:SchemaSymbols::<anonymous>
XSD_SUBSTITUTION	include/xercesc/validators/schema/SchemaSymbols.hpp	/^        XSD_SUBSTITUTION = 1,$/;"	e	enum:SchemaSymbols::<anonymous>
XSD_UNBOUNDED	include/xercesc/validators/schema/SchemaSymbols.hpp	/^        XSD_UNBOUNDED = -1,$/;"	e	enum:SchemaSymbols::<anonymous>
XSD_UNION	include/xercesc/validators/schema/SchemaSymbols.hpp	/^        XSD_UNION = 16,$/;"	e	enum:SchemaSymbols::<anonymous>
XSElementDeclaration	include/xercesc/framework/psvi/XSElementDeclaration.hpp	/^class XMLPARSER_EXPORT XSElementDeclaration : public XSObject$/;"	c
XSFacet	include/xercesc/framework/psvi/XSFacet.hpp	/^class XMLPARSER_EXPORT XSFacet : public XSObject$/;"	c
XSFacetList	include/xercesc/framework/psvi/XSConstants.hpp	/^typedef RefVectorOf <XSFacet> XSFacetList;$/;"	t
XSIDCDefinition	include/xercesc/framework/psvi/XSIDCDefinition.hpp	/^class XMLPARSER_EXPORT XSIDCDefinition : public XSObject$/;"	c
XSModel	include/xercesc/framework/psvi/XSModel.hpp	/^class XMLPARSER_EXPORT XSModel : public XMemory$/;"	c
XSModelGroup	include/xercesc/framework/psvi/XSModelGroup.hpp	/^class XMLPARSER_EXPORT XSModelGroup : public XSObject$/;"	c
XSModelGroupDefinition	include/xercesc/framework/psvi/XSModelGroupDefinition.hpp	/^class XMLPARSER_EXPORT XSModelGroupDefinition : public XSObject$/;"	c
XSMultiValueFacet	include/xercesc/framework/psvi/XSMultiValueFacet.hpp	/^class XMLPARSER_EXPORT XSMultiValueFacet : public XSObject$/;"	c
XSMultiValueFacetList	include/xercesc/framework/psvi/XSConstants.hpp	/^typedef RefVectorOf <XSMultiValueFacet> XSMultiValueFacetList;$/;"	t
XSNamedMap	include/xercesc/framework/psvi/XSNamedMap.c	/^XSNamedMap<TVal>::XSNamedMap(const XMLSize_t maxElems,$/;"	f	class:TVal
XSNamedMap	include/xercesc/framework/psvi/XSNamedMap.hpp	/^template <class TVal> class XSNamedMap: public XMemory$/;"	c
XSNamespaceItem	include/xercesc/framework/psvi/XSNamespaceItem.hpp	/^class XMLPARSER_EXPORT XSNamespaceItem : public XMemory$/;"	c
XSNamespaceItemList	include/xercesc/framework/psvi/XSConstants.hpp	/^typedef RefVectorOf <XSNamespaceItem> XSNamespaceItemList;$/;"	t
XSNotationDeclaration	include/xercesc/framework/psvi/XSNotationDeclaration.hpp	/^class XMLPARSER_EXPORT XSNotationDeclaration : public XSObject$/;"	c
XSObject	include/xercesc/framework/psvi/XSObject.hpp	/^class XMLPARSER_EXPORT XSObject : public XMemory$/;"	c
XSObjectFactory	include/xercesc/internal/XSObjectFactory.hpp	/^class XMLPARSER_EXPORT XSObjectFactory : public XMemory$/;"	c
XSParticle	include/xercesc/framework/psvi/XSParticle.hpp	/^class XMLPARSER_EXPORT XSParticle : public XSObject$/;"	c
XSParticleList	include/xercesc/framework/psvi/XSConstants.hpp	/^typedef RefVectorOf <XSParticle> XSParticleList;$/;"	t
XSSimpleTypeDefinition	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^class XMLPARSER_EXPORT XSSimpleTypeDefinition : public XSTypeDefinition$/;"	c
XSSimpleTypeDefinitionList	include/xercesc/framework/psvi/XSConstants.hpp	/^typedef RefVectorOf <XSSimpleTypeDefinition> XSSimpleTypeDefinitionList;$/;"	t
XSTypeDefinition	include/xercesc/framework/psvi/XSTypeDefinition.hpp	/^class XMLPARSER_EXPORT XSTypeDefinition : public XSObject$/;"	c
XSValue	include/xercesc/framework/psvi/XSValue.hpp	/^class XMLPARSER_EXPORT XSValue : public XMemory$/;"	c
XSValue_Data	include/xercesc/framework/psvi/XSValue.hpp	/^    struct XSValue_Data {$/;"	s	class:XSValue
XSWildcard	include/xercesc/framework/psvi/XSWildcard.hpp	/^class XMLPARSER_EXPORT XSWildcard : public XSObject$/;"	c
XSer_CreateObject_Fail	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XSer_CreateObject_Fail             = 359$/;"	e	enum:XMLExcepts::Codes
XSer_GrammarPool_Empty	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XSer_GrammarPool_Empty             = 361$/;"	e	enum:XMLExcepts::Codes
XSer_GrammarPool_NotEmpty	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XSer_GrammarPool_NotEmpty          = 362$/;"	e	enum:XMLExcepts::Codes
XSer_InStream_Read_LT_Req	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XSer_InStream_Read_LT_Req          = 347$/;"	e	enum:XMLExcepts::Codes
XSer_InStream_Read_OverFlow	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XSer_InStream_Read_OverFlow        = 348$/;"	e	enum:XMLExcepts::Codes
XSer_Inv_ClassIndex	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XSer_Inv_ClassIndex                = 355$/;"	e	enum:XMLExcepts::Codes
XSer_Inv_Null_Pointer	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XSer_Inv_Null_Pointer              = 358$/;"	e	enum:XMLExcepts::Codes
XSer_Inv_checkFillBuffer_Size	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XSer_Inv_checkFillBuffer_Size      = 356$/;"	e	enum:XMLExcepts::Codes
XSer_Inv_checkFlushBuffer_Size	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XSer_Inv_checkFlushBuffer_Size     = 357$/;"	e	enum:XMLExcepts::Codes
XSer_LoadBuffer_Violation	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XSer_LoadBuffer_Violation          = 354$/;"	e	enum:XMLExcepts::Codes
XSer_LoadPool_NoTally_ObjCnt	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XSer_LoadPool_NoTally_ObjCnt       = 352$/;"	e	enum:XMLExcepts::Codes
XSer_LoadPool_UppBnd_Exceed	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XSer_LoadPool_UppBnd_Exceed        = 351$/;"	e	enum:XMLExcepts::Codes
XSer_Loading_Violation	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XSer_Loading_Violation             = 353$/;"	e	enum:XMLExcepts::Codes
XSer_ObjCount_UppBnd_Exceed	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XSer_ObjCount_UppBnd_Exceed        = 360$/;"	e	enum:XMLExcepts::Codes
XSer_ProtoType_NameLen_Dif	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XSer_ProtoType_NameLen_Dif         = 345$/;"	e	enum:XMLExcepts::Codes
XSer_ProtoType_Name_Dif	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XSer_ProtoType_Name_Dif            = 346$/;"	e	enum:XMLExcepts::Codes
XSer_ProtoType_Null_ClassName	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XSer_ProtoType_Null_ClassName      = 344$/;"	e	enum:XMLExcepts::Codes
XSer_StoreBuffer_Violation	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XSer_StoreBuffer_Violation         = 350$/;"	e	enum:XMLExcepts::Codes
XSer_Storer_Loader_Mismatch	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XSer_Storer_Loader_Mismatch        = 364$/;"	e	enum:XMLExcepts::Codes
XSer_Storing_Violation	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XSer_Storing_Violation             = 349$/;"	e	enum:XMLExcepts::Codes
XSer_StringPool_NotEmpty	include/xercesc/util/XMLExceptMsgs.hpp	/^      , XSer_StringPool_NotEmpty           = 363$/;"	e	enum:XMLExcepts::Codes
XSerializable	include/xercesc/internal/XSerializable.hpp	/^    XSerializable() {}$/;"	f	class:XSerializable
XSerializable	include/xercesc/internal/XSerializable.hpp	/^    XSerializable(const XSerializable& ) {}             $/;"	f	class:XSerializable
XSerializable	include/xercesc/internal/XSerializable.hpp	/^class XMLUTIL_EXPORT XSerializable$/;"	c
XSerializeEngine	include/xercesc/internal/XSerializeEngine.hpp	/^class XMLUTIL_EXPORT XSerializeEngine$/;"	c
XSerializedObjectId	include/xercesc/internal/XSerializeEngine.hpp	/^    inline XSerializedObjectId(XSerializeEngine::XSerializedObjectId_t val):$/;"	f	class:XSerializedObjectId
XSerializedObjectId	include/xercesc/internal/XSerializeEngine.hpp	/^class XSerializedObjectId : public XMemory$/;"	c
XSerializedObjectId_t	include/xercesc/internal/XSerializeEngine.hpp	/^    typedef unsigned int   XSerializedObjectId_t;$/;"	t	class:XSerializeEngine
XTemplateSerializer	include/xercesc/internal/XTemplateSerializer.hpp	/^class XMLUTIL_EXPORT XTemplateSerializer$/;"	c
XUtil	include/xercesc/validators/schema/XUtil.hpp	/^     XUtil() {};$/;"	f	class:XUtil
XUtil	include/xercesc/validators/schema/XUtil.hpp	/^class VALIDATORS_EXPORT XUtil$/;"	c
XercesAttGroupInfo	include/xercesc/validators/schema/XercesAttGroupInfo.hpp	/^class VALIDATORS_EXPORT XercesAttGroupInfo : public XSerializable, public XMemory$/;"	c
XercesDOMParser	include/xercesc/parsers/XercesDOMParser.hpp	/^class PARSERS_EXPORT XercesDOMParser : public AbstractDOMParser$/;"	c
XercesElementWildcard	include/xercesc/validators/schema/XercesElementWildcard.hpp	/^class VALIDATORS_EXPORT XercesElementWildcard$/;"	c
XercesGroupInfo	include/xercesc/validators/schema/XercesGroupInfo.hpp	/^class VALIDATORS_EXPORT XercesGroupInfo : public XSerializable, public XMemory$/;"	c
XercesLocationPath	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^class VALIDATORS_EXPORT XercesLocationPath : public XSerializable, public XMemory$/;"	c
XercesNamespaceResolver	include/xercesc/validators/schema/NamespaceScope.hpp	/^class VALIDATORS_EXPORT XercesNamespaceResolver$/;"	c
XercesNodeTest	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^class VALIDATORS_EXPORT XercesNodeTest : public XSerializable, public XMemory$/;"	c
XercesStep	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^class VALIDATORS_EXPORT XercesStep : public XSerializable, public XMemory$/;"	c
XercesXPath	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^class VALIDATORS_EXPORT XercesXPath : public XSerializable, public XMemory$/;"	c
Xerces_DLLVersionStr	include/xercesc/util/XercesVersion.hpp	206;"	d
Year	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        Year,$/;"	e	enum:DatatypeValidator::ValidatorType
YearDatatypeValidator	include/xercesc/validators/datatype/YearDatatypeValidator.hpp	/^class VALIDATORS_EXPORT YearDatatypeValidator : public DateTimeValidator$/;"	c
YearMonth	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^        YearMonth,$/;"	e	enum:DatatypeValidator::ValidatorType
YearMonthDatatypeValidator	include/xercesc/validators/datatype/YearMonthDatatypeValidator.hpp	/^class VALIDATORS_EXPORT YearMonthDatatypeValidator : public DateTimeValidator$/;"	c
ZeroOrMore	include/xercesc/validators/common/ContentSpecNode.hpp	/^        , ZeroOrMore$/;"	e	enum:ContentSpecNode::NodeTypes
ZeroOrOne	include/xercesc/validators/common/ContentSpecNode.hpp	/^        , ZeroOrOne$/;"	e	enum:ContentSpecNode::NodeTypes
_XERCES_VERSION	include/xercesc/util/XercesVersion.hpp	217;"	d
addAnyAttDef	include/xercesc/validators/schema/XercesAttGroupInfo.hpp	/^inline void XercesAttGroupInfo::addAnyAttDef(SchemaAttDef* const toAdd,$/;"	f	class:XercesAttGroupInfo
addAttDef	include/xercesc/validators/DTD/DTDAttDefList.hpp	/^inline void DTDAttDefList::addAttDef(DTDAttDef *toAdd)$/;"	f	class:DTDAttDefList
addAttDef	include/xercesc/validators/schema/SchemaAttDefList.hpp	/^inline void SchemaAttDefList::addAttDef(SchemaAttDef *toAdd)$/;"	f	class:SchemaAttDefList
addAttDef	include/xercesc/validators/schema/XercesAttGroupInfo.hpp	/^inline void XercesAttGroupInfo::addAttDef(SchemaAttDef* const toAdd,$/;"	f	class:XercesAttGroupInfo
addAttrToIDNodeMap	include/xercesc/dom/impl/DOMAttrImpl.hpp	/^inline void DOMAttrImpl::addAttrToIDNodeMap()$/;"	f	class:DOMAttrImpl
addChild	include/xercesc/util/regx/Token.hpp	/^inline void Token::addChild(Token* const, TokenFactory* const) {$/;"	f	class:Token
addElement	include/xercesc/framework/psvi/XSNamedMap.c	/^void XSNamedMap<TVal>::addElement(TVal* const toAdd, const XMLCh* key1, const XMLCh* key2)$/;"	f	class:TVal
addElement	include/xercesc/util/BaseRefVectorOf.c	/^template <class TElem> void BaseRefVectorOf<TElem>::addElement(TElem* const toAdd)$/;"	f	class:TElem
addElement	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline void ComplexTypeInfo::addElement(SchemaElementDecl* const elem) {$/;"	f	class:ComplexTypeInfo
addElement	include/xercesc/validators/schema/XercesGroupInfo.hpp	/^inline void XercesGroupInfo::addElement(SchemaElementDecl* const elem) {$/;"	f	class:XercesGroupInfo
addFailedRedefine	include/xercesc/validators/schema/SchemaInfo.hpp	/^inline void SchemaInfo::addFailedRedefine(const DOMElement* const anElem) {$/;"	f	class:SchemaInfo
addField	include/xercesc/validators/schema/identity/IdentityConstraint.hpp	/^inline void IdentityConstraint::addField(IC_Field* const field) {$/;"	f	class:IdentityConstraint
addGlobalPrefix	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::addGlobalPrefix(const XMLCh* const prefix, const unsigned int uriId)$/;"	f	class:XMLScanner
addIdentityConstraint	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^SchemaElementDecl::addIdentityConstraint(IdentityConstraint* const ic) {$/;"	f	class:SchemaElementDecl
addImportedNS	include/xercesc/validators/schema/TraverseSchema.hpp	/^inline void TraverseSchema::addImportedNS(const int namespaceURI) {$/;"	f	class:TraverseSchema
addMatcher	include/xercesc/validators/schema/identity/XPathMatcherStack.hpp	/^inline void XPathMatcherStack::addMatcher(XPathMatcher* const matcher) {$/;"	f	class:XPathMatcherStack
addOrFind	include/xercesc/util/StringPool.hpp	/^inline unsigned int XMLStringPool::addOrFind(const XMLCh* const newString)$/;"	f	class:XMLStringPool
addRange	include/xercesc/util/regx/Token.hpp	/^inline void Token::addRange(const XMLInt32, const XMLInt32) {$/;"	f	class:Token
addRecursingType	include/xercesc/validators/schema/SchemaInfo.hpp	/^inline void SchemaInfo::addRecursingType(const DOMElement* const elem,$/;"	f	class:SchemaInfo
addSchemaInfo	include/xercesc/validators/schema/SchemaInfo.hpp	/^inline void SchemaInfo::addSchemaInfo(SchemaInfo* const toAdd,$/;"	f	class:SchemaInfo
addStep	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^inline void XercesLocationPath::addStep(XercesStep* const aStep) {$/;"	f	class:XercesLocationPath
addToken	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^inline void XPathScanner::addToken(ValueVectorOf<int>* const tokens,$/;"	f	class:XPathScanner
adopt	include/xercesc/util/TransService.hpp	/^inline XMLByte *TranscodeToStr::adopt()$/;"	f	class:TranscodeToStr
adopt	include/xercesc/util/TransService.hpp	/^inline XMLCh *TranscodeFromStr::adopt()$/;"	f	class:TranscodeFromStr
alignPointerForNewBlockAllocation	include/xercesc/util/PlatformUtils.hpp	/^XMLPlatformUtils::alignPointerForNewBlockAllocation(XMLSize_t ptrSize)$/;"	f	class:XMLPlatformUtils
allocateChunk	include/xercesc/validators/common/CMStateSet.hpp	/^    void allocateChunk(const XMLSize_t index)$/;"	f	class:CMStateSet
allocatedSize	include/xercesc/dom/impl/DOMNodeVector.hpp	/^    XMLSize_t       allocatedSize;$/;"	m	class:DOMNodeVector
anyAttributeAt	include/xercesc/validators/schema/XercesAttGroupInfo.hpp	/^XercesAttGroupInfo::anyAttributeAt(const XMLSize_t index) const {$/;"	f	class:XercesAttGroupInfo
anyAttributeAt	include/xercesc/validators/schema/XercesAttGroupInfo.hpp	/^XercesAttGroupInfo::anyAttributeAt(const XMLSize_t index) {$/;"	f	class:XercesAttGroupInfo
anyAttributeCount	include/xercesc/validators/schema/XercesAttGroupInfo.hpp	/^inline XMLSize_t XercesAttGroupInfo::anyAttributeCount() const {$/;"	f	class:XercesAttGroupInfo
append	include/xercesc/dom/impl/DOMStringPool.hpp	/^append (const XMLCh* const chars)$/;"	f	class:DOMBuffer
append	include/xercesc/dom/impl/DOMStringPool.hpp	/^append (const XMLCh* const chars, const XMLSize_t count)$/;"	f	class:DOMBuffer
append	include/xercesc/framework/XMLBuffer.hpp	/^    void append (const XMLCh* const chars)$/;"	f	class:XMLBuffer
append	include/xercesc/framework/XMLBuffer.hpp	/^    void append (const XMLCh* const chars, const XMLSize_t count)$/;"	f	class:XMLBuffer
append	include/xercesc/framework/XMLBuffer.hpp	/^    void append(const XMLCh toAppend)$/;"	f	class:XMLBuffer
append	include/xercesc/framework/XMLBufferMgr.hpp	/^    void append(const XMLCh toAppend)$/;"	f	class:XMLBufBid
append	include/xercesc/framework/XMLBufferMgr.hpp	/^    void append(const XMLCh* const toAppend, const XMLSize_t count = 0)$/;"	f	class:XMLBufBid
attrDefaults	include/xercesc/dom/impl/DOMAttrMapImpl.hpp	/^    bool              attrDefaults;$/;"	m	class:DOMAttrMapImpl
attributeAt	include/xercesc/validators/schema/XercesAttGroupInfo.hpp	/^XercesAttGroupInfo::attributeAt(const XMLSize_t index) const {$/;"	f	class:XercesAttGroupInfo
attributeAt	include/xercesc/validators/schema/XercesAttGroupInfo.hpp	/^XercesAttGroupInfo::attributeAt(const XMLSize_t index) {$/;"	f	class:XercesAttGroupInfo
attributeCount	include/xercesc/validators/schema/XercesAttGroupInfo.hpp	/^inline XMLSize_t XercesAttGroupInfo::attributeCount() const {$/;"	f	class:XercesAttGroupInfo
attributeDecl	include/xercesc/sax2/DefaultHandler.hpp	/^inline void DefaultHandler::attributeDecl(const XMLCh* const,$/;"	f	class:DefaultHandler
base64Alphabet	include/xercesc/util/Base64.hpp	/^    static const XMLByte  base64Alphabet[];$/;"	m	class:Base64
base64Inverse	include/xercesc/util/Base64.hpp	/^    static const XMLByte  base64Inverse[];$/;"	m	class:Base64
base64Padding	include/xercesc/util/Base64.hpp	/^    static const XMLByte  base64Padding;$/;"	m	class:Base64
bool	include/xercesc/util/XercesDefs.hpp	/^    typedef int     bool;$/;"	t
bufferFull	include/xercesc/internal/XMLScanner.hpp	/^    virtual bool bufferFull(XMLBuffer& toSend)$/;"	f	class:XMLScanner
cacheGrammarFromParse	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::cacheGrammarFromParse(const bool newValue)$/;"	f	class:XMLScanner
calcFirstPos	include/xercesc/validators/common/CMLeaf.hpp	/^inline void CMLeaf::calcFirstPos(CMStateSet& toSet) const$/;"	f	class:CMLeaf
calcLastPos	include/xercesc/validators/common/CMLeaf.hpp	/^inline void CMLeaf::calcLastPos(CMStateSet& toSet) const$/;"	f	class:CMLeaf
castToChildImpl	include/xercesc/dom/impl/DOMCasts.hpp	/^static inline DOMChildNode *castToChildImpl(const DOMNode *p) {$/;"	f
castToNode	include/xercesc/dom/impl/DOMCasts.hpp	/^static inline DOMNode *castToNode(const DOMNodeImpl *p) {$/;"	f
castToNode	include/xercesc/dom/impl/DOMCasts.hpp	/^static inline DOMNode *castToNode(const DOMParentNode *p ) {$/;"	f
castToNodeImpl	include/xercesc/dom/impl/DOMCasts.hpp	/^static inline DOMNodeImpl *castToNodeImpl(const DOMNode *p)$/;"	f
castToNodeImpl	include/xercesc/dom/impl/DOMCasts.hpp	/^static inline DOMNodeImpl *castToNodeImpl(const DOMParentNode *p)$/;"	f
castToParentImpl	include/xercesc/dom/impl/DOMCasts.hpp	/^static inline DOMParentNode *castToParentImpl(const DOMNode *p) {$/;"	f
cdFrom	include/xercesc/util/Transcoders/IconvGNU/IconvGNUTransService.hpp	/^    inline iconv_t	cdFrom () const { return fCDFrom; }$/;"	f	class:IconvGNUWrapper
cdTo	include/xercesc/util/Transcoders/IconvGNU/IconvGNUTransService.hpp	/^    inline iconv_t	cdTo () const { return fCDTo; }$/;"	f	class:IconvGNUWrapper
chAmpersand	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chAmpersand             = 0x26;$/;"	v
chAsterisk	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chAsterisk              = 0x2A;$/;"	v
chAt	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chAt                    = 0x40;$/;"	v
chBackSlash	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chBackSlash             = 0x5C;$/;"	v
chBang	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chBang                  = 0x21;$/;"	v
chCR	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chCR                    = 0x0D;$/;"	v
chCaret	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chCaret                 = 0x5E;$/;"	v
chCloseAngle	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chCloseAngle            = 0x3E;$/;"	v
chCloseCurly	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chCloseCurly            = 0x7D;$/;"	v
chCloseParen	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chCloseParen            = 0x29;$/;"	v
chCloseSquare	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chCloseSquare           = 0x5D;$/;"	v
chColon	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chColon                 = 0x3A;$/;"	v
chComma	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chComma                 = 0x2C;$/;"	v
chDash	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chDash                  = 0x2D;$/;"	v
chDigit_0	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chDigit_0               = 0x30;$/;"	v
chDigit_1	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chDigit_1               = 0x31;$/;"	v
chDigit_2	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chDigit_2               = 0x32;$/;"	v
chDigit_3	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chDigit_3               = 0x33;$/;"	v
chDigit_4	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chDigit_4               = 0x34;$/;"	v
chDigit_5	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chDigit_5               = 0x35;$/;"	v
chDigit_6	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chDigit_6               = 0x36;$/;"	v
chDigit_7	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chDigit_7               = 0x37;$/;"	v
chDigit_8	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chDigit_8               = 0x38;$/;"	v
chDigit_9	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chDigit_9               = 0x39;$/;"	v
chDollarSign	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chDollarSign            = 0x24;$/;"	v
chDoubleQuote	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chDoubleQuote           = 0x22;$/;"	v
chEqual	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chEqual                 = 0x3D;$/;"	v
chFF	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chFF                    = 0x0C;$/;"	v
chForwardSlash	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chForwardSlash          = 0x2F;$/;"	v
chGrave	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chGrave                 = 0x60;$/;"	v
chHTab	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chHTab                  = 0x09;$/;"	v
chLF	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLF                    = 0x0A;$/;"	v
chLatin_A	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_A               = 0x41;$/;"	v
chLatin_B	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_B               = 0x42;$/;"	v
chLatin_C	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_C               = 0x43;$/;"	v
chLatin_D	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_D               = 0x44;$/;"	v
chLatin_E	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_E               = 0x45;$/;"	v
chLatin_F	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_F               = 0x46;$/;"	v
chLatin_G	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_G               = 0x47;$/;"	v
chLatin_H	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_H               = 0x48;$/;"	v
chLatin_I	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_I               = 0x49;$/;"	v
chLatin_J	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_J               = 0x4A;$/;"	v
chLatin_K	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_K               = 0x4B;$/;"	v
chLatin_L	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_L               = 0x4C;$/;"	v
chLatin_M	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_M               = 0x4D;$/;"	v
chLatin_N	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_N               = 0x4E;$/;"	v
chLatin_O	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_O               = 0x4F;$/;"	v
chLatin_P	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_P               = 0x50;$/;"	v
chLatin_Q	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_Q               = 0x51;$/;"	v
chLatin_R	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_R               = 0x52;$/;"	v
chLatin_S	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_S               = 0x53;$/;"	v
chLatin_T	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_T               = 0x54;$/;"	v
chLatin_U	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_U               = 0x55;$/;"	v
chLatin_V	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_V               = 0x56;$/;"	v
chLatin_W	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_W               = 0x57;$/;"	v
chLatin_X	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_X               = 0x58;$/;"	v
chLatin_Y	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_Y               = 0x59;$/;"	v
chLatin_Z	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_Z               = 0x5A;$/;"	v
chLatin_a	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_a               = 0x61;$/;"	v
chLatin_b	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_b               = 0x62;$/;"	v
chLatin_c	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_c               = 0x63;$/;"	v
chLatin_d	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_d               = 0x64;$/;"	v
chLatin_e	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_e               = 0x65;$/;"	v
chLatin_f	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_f               = 0x66;$/;"	v
chLatin_g	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_g               = 0x67;$/;"	v
chLatin_h	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_h               = 0x68;$/;"	v
chLatin_i	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_i               = 0x69;$/;"	v
chLatin_j	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_j               = 0x6A;$/;"	v
chLatin_k	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_k               = 0x6B;$/;"	v
chLatin_l	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_l               = 0x6C;$/;"	v
chLatin_m	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_m               = 0x6D;$/;"	v
chLatin_n	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_n               = 0x6E;$/;"	v
chLatin_o	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_o               = 0x6F;$/;"	v
chLatin_p	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_p               = 0x70;$/;"	v
chLatin_q	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_q               = 0x71;$/;"	v
chLatin_r	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_r               = 0x72;$/;"	v
chLatin_s	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_s               = 0x73;$/;"	v
chLatin_t	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_t               = 0x74;$/;"	v
chLatin_u	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_u               = 0x75;$/;"	v
chLatin_v	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_v               = 0x76;$/;"	v
chLatin_w	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_w               = 0x77;$/;"	v
chLatin_x	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_x               = 0x78;$/;"	v
chLatin_y	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_y               = 0x79;$/;"	v
chLatin_z	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLatin_z               = 0x7A;$/;"	v
chLineSeparator	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chLineSeparator         = 0x2028;$/;"	v
chNEL	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chNEL                   = 0x85;$/;"	v
chNull	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chNull                  = 0x00;$/;"	v
chOpenAngle	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chOpenAngle             = 0x3C;$/;"	v
chOpenCurly	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chOpenCurly             = 0x7B;$/;"	v
chOpenParen	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chOpenParen             = 0x28;$/;"	v
chOpenSquare	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chOpenSquare            = 0x5B;$/;"	v
chParagraphSeparator	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chParagraphSeparator    = 0x2029;$/;"	v
chPercent	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chPercent               = 0x25;$/;"	v
chPeriod	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chPeriod                = 0x2E;$/;"	v
chPipe	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chPipe                  = 0x7C;$/;"	v
chPlus	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chPlus                  = 0x2B;$/;"	v
chPound	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chPound                 = 0x23;$/;"	v
chQuestion	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chQuestion              = 0x3F;$/;"	v
chSemiColon	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chSemiColon             = 0x3B;$/;"	v
chSingleQuote	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chSingleQuote           = 0x27;$/;"	v
chSpace	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chSpace                 = 0x20;$/;"	v
chSwappedUnicodeMarker	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chSwappedUnicodeMarker  = XMLCh(0xFFFE);$/;"	v
chTilde	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chTilde                 = 0x7E;$/;"	v
chUnderscore	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chUnderscore            = 0x5F;$/;"	v
chUnicodeMarker	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chUnicodeMarker         = XMLCh(0xFEFF);$/;"	v
chVTab	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chVTab                  = 0x0B;$/;"	v
chWonSign	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chWonSign               = 0x20A9;$/;"	v
chYenSign	include/xercesc/util/XMLUniDefs.hpp	/^const XMLCh chYenSign               = 0xA5;$/;"	v
characters	include/xercesc/sax/HandlerBase.hpp	/^inline void HandlerBase::characters(const   XMLCh* const$/;"	f	class:HandlerBase
characters	include/xercesc/sax2/DefaultHandler.hpp	/^inline void DefaultHandler::characters(const   XMLCh* const$/;"	f	class:DefaultHandler
charsLeftInBuffer	include/xercesc/internal/XMLReader.hpp	/^inline XMLSize_t XMLReader::charsLeftInBuffer() const$/;"	f	class:XMLReader
checkForEmptyTargetNamespace	include/xercesc/validators/schema/TraverseSchema.hpp	/^TraverseSchema::checkForEmptyTargetNamespace(const DOMElement* const elem) {$/;"	f	class:TraverseSchema
checkTrailingBytes	include/xercesc/util/XMLUTF8Transcoder.hpp	/^void XMLUTF8Transcoder::checkTrailingBytes(const XMLByte      toCheck$/;"	f	class:XMLUTF8Transcoder
checkUniqueParticleAttribution	include/xercesc/validators/common/MixedContentModel.hpp	/^inline void MixedContentModel::checkUniqueParticleAttribution$/;"	f	class:MixedContentModel
chop	include/xercesc/dom/impl/DOMStringPool.hpp	/^    void chop$/;"	f	class:DOMBuffer
circularImportExist	include/xercesc/validators/schema/SchemaInfo.hpp	/^inline bool SchemaInfo::circularImportExist(const unsigned int namespaceURI) {$/;"	f	class:SchemaInfo
cleanUp	include/xercesc/util/regx/RegularExpression.hpp	/^  inline void RegularExpression::cleanUp() {$/;"	f	class:RegularExpression
cleanUp	include/xercesc/validators/common/ContentLeafNameTypeVector.hpp	/^inline void ContentLeafNameTypeVector::cleanUp()$/;"	f	class:ContentLeafNameTypeVector
cleanUp	include/xercesc/validators/datatype/DatatypeValidatorFactory.hpp	/^inline void DatatypeValidatorFactory::cleanUp() {$/;"	f	class:DatatypeValidatorFactory
cleanUp	include/xercesc/validators/datatype/UnionDatatypeValidator.hpp	/^inline void UnionDatatypeValidator::cleanUp()$/;"	f	class:UnionDatatypeValidator
cleanUp	include/xercesc/validators/schema/identity/XPathMatcher.hpp	/^inline void XPathMatcher::cleanUp() {$/;"	f	class:XPathMatcher
cleanup	include/xercesc/dom/impl/DOMDeepNodeListPool.c	/^void DOMDeepNodeListPool<TVal, THasher>::cleanup()$/;"	f	class:THasher
cleanup	include/xercesc/util/BaseRefVectorOf.c	/^template <class TElem> void BaseRefVectorOf<TElem>::cleanup()$/;"	f	class:TElem
cleanup	include/xercesc/util/RefArrayVectorOf.c	/^template <class TElem> void RefArrayVectorOf<TElem>::cleanup()$/;"	f	class:TElem
cleanup	include/xercesc/util/RefHashTableOf.c	/^void RefHashTableOf<TVal, THasher>::cleanup()$/;"	f	class:THasher
clearDatatypeBuffer	include/xercesc/validators/schema/SchemaValidator.hpp	/^inline void SchemaValidator::clearDatatypeBuffer()$/;"	f	class:SchemaValidator
clearTopLevelComponents	include/xercesc/validators/schema/SchemaInfo.hpp	/^inline void SchemaInfo::clearTopLevelComponents() {$/;"	f	class:SchemaInfo
code	include/xercesc/dom/DOMException.hpp	/^    short   code;$/;"	m	class:DOMException
colNumber	include/xercesc/internal/ReaderMgr.hpp	/^                XMLFileLoc      colNumber;$/;"	m	struct:ReaderMgr::LastExtEntityInfo
comment	include/xercesc/sax2/DefaultHandler.hpp	/^inline void DefaultHandler::comment(  const   XMLCh* const$/;"	f	class:DefaultHandler
compactRanges	include/xercesc/util/regx/Token.hpp	/^inline void Token::compactRanges() {$/;"	f	class:Token
compare	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^inline int DatatypeValidator::compare(const XMLCh* const lValue,$/;"	f	class:DatatypeValidator
compareValues	include/xercesc/util/XMLDouble.hpp	/^inline int XMLDouble::compareValues(const XMLDouble* const lValue$/;"	f	class:XMLDouble
compareValues	include/xercesc/util/XMLFloat.hpp	/^inline int XMLFloat::compareValues(const XMLFloat* const lValue$/;"	f	class:XMLFloat
compileClosure	include/xercesc/util/regx/RegularExpression.hpp	/^  inline Op* RegularExpression::compileClosure(const Token* const token,$/;"	f	class:RegularExpression
compileConcat	include/xercesc/util/regx/RegularExpression.hpp	/^  inline Op* RegularExpression::compileConcat(const Token* const token,$/;"	f	class:RegularExpression
compileParenthesis	include/xercesc/util/regx/RegularExpression.hpp	/^  inline Op* RegularExpression::compileParenthesis(const Token* const token,$/;"	f	class:RegularExpression
compileUnion	include/xercesc/util/regx/RegularExpression.hpp	/^  inline Op* RegularExpression::compileUnion(const Token* const token,$/;"	f	class:RegularExpression
composeFromSurrogate	include/xercesc/util/regx/RegxUtil.hpp	/^inline XMLInt32 RegxUtil::composeFromSurrogate(const XMLCh high, const XMLCh low) {$/;"	f	class:RegxUtil
contains	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline bool ComplexTypeInfo::contains(const XMLCh* const attName) {$/;"	f	class:ComplexTypeInfo
containsAttWithTypeId	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline bool ComplexTypeInfo::containsAttWithTypeId() const {$/;"	f	class:ComplexTypeInfo
containsElement	include/xercesc/util/BaseRefVectorOf.c	/^bool BaseRefVectorOf<TElem>::containsElement(const TElem* const toCheck) {$/;"	f	class:TElem
containsInfo	include/xercesc/validators/schema/SchemaInfo.hpp	/^inline bool SchemaInfo::containsInfo(const SchemaInfo* const toCheck,$/;"	f	class:SchemaInfo
containsKey	include/xercesc/dom/impl/DOMDeepNodeListPool.c	/^bool DOMDeepNodeListPool<TVal, THasher>::containsKey( const void* const key1$/;"	f	class:THasher
containsKey	include/xercesc/util/Hash2KeysSetOf.c	/^bool Hash2KeysSetOf<THasher>::containsKey(const void* const key1, const int key2) const$/;"	f	class:THasher
containsKey	include/xercesc/util/NameIdPool.c	/^containsKey(const XMLCh* const key) const$/;"	f	class:TElem
containsKey	include/xercesc/util/RefHash2KeysTableOf.c	/^containsKey(const void* const key1, const int key2) const$/;"	f	class:THasher
containsKey	include/xercesc/util/RefHash3KeysIdPool.c	/^containsKey(const void* const key1, const int key2, const int key3) const$/;"	f	class:THasher
containsKey	include/xercesc/util/RefHashTableOf.c	/^inline bool RefHashTableOf<TVal, THasher>::containsKey(const void* const key) const$/;"	f	class:THasher
containsKey	include/xercesc/util/ValueHashTableOf.c	/^containsKey(const void* const key) const$/;"	f	class:THasher
containsTypeWithId	include/xercesc/validators/schema/XercesAttGroupInfo.hpp	/^inline bool XercesAttGroupInfo::containsTypeWithId() const {$/;"	f	class:XercesAttGroupInfo
copy	include/xercesc/util/XMLDateTime.hpp	/^inline void XMLDateTime::copy(const XMLDateTime& rhs)$/;"	f	class:XMLDateTime
copyWildCardData	include/xercesc/validators/schema/TraverseSchema.hpp	/^TraverseSchema::copyWildCardData(const SchemaAttDef* const srcWildCard,$/;"	f	class:TraverseSchema
countTokens	include/xercesc/util/XMLStringTokenizer.hpp	/^inline unsigned int XMLStringTokenizer::countTokens() {$/;"	f	class:XMLStringTokenizer
createDocumentType	include/xercesc/dom/DOMDocument.hpp	/^    virtual DOMDocumentType* createDocumentType(const XMLCh *qName,$/;"	f	class:DOMDocument
createMap	include/xercesc/util/regx/RangeToken.hpp	/^inline void RangeToken::createMap()$/;"	f	class:RangeToken
createXMLReader	include/xercesc/sax2/XMLReaderFactory.hpp	/^inline SAX2XMLReader * XMLReaderFactory::createXMLReader(const XMLCh *)$/;"	f	class:XMLReaderFactory
curCapacity	include/xercesc/util/BaseRefVectorOf.c	/^template <class TElem> XMLSize_t BaseRefVectorOf<TElem>::curCapacity() const$/;"	f	class:TElem
curCapacity	include/xercesc/util/RefStackOf.c	/^template <class TElem> XMLSize_t RefStackOf<TElem>::curCapacity()$/;"	f	class:TElem
curCapacity	include/xercesc/util/ValueStackOf.c	/^template <class TElem> XMLSize_t ValueStackOf<TElem>::curCapacity()$/;"	f	class:TElem
curPos	include/xercesc/util/BinMemInputStream.hpp	/^inline XMLFilePos BinMemInputStream::curPos() const$/;"	f	class:BinMemInputStream
curPos	include/xercesc/util/NetAccessors/Curl/CurlURLInputStream.hpp	/^CurlURLInputStream::curPos() const$/;"	f	class:CurlURLInputStream
data	include/xercesc/dom/impl/DOMNodeVector.hpp	/^    DOMNode        **data;$/;"	m	class:DOMNodeVector
datetime	include/xercesc/framework/psvi/XSValue.hpp	/^                struct datetime {$/;"	s	union:XSValue::XSValue_Data::<anonymous>
deallocateChunk	include/xercesc/validators/common/CMStateSet.hpp	/^    void deallocateChunk(const XMLSize_t index)$/;"	f	class:CMStateSet
decRefCount	include/xercesc/dom/DOMNode.hpp	/^    virtual void decRefCount() {}$/;"	f	class:DOMNode
decimal	include/xercesc/framework/psvi/XSValue.hpp	/^                struct decimal {$/;"	s	union:XSValue::XSValue_Data::<anonymous>
decomposeToSurrogates	include/xercesc/util/regx/RegxUtil.hpp	/^inline void RegxUtil::decomposeToSurrogates(XMLInt32 ch, XMLCh& high, XMLCh& low) {$/;"	f	class:RegxUtil
dg_datetimes	include/xercesc/framework/psvi/XSValue.hpp	/^            dg_datetimes,$/;"	e	enum:XSValue::DataGroup
dg_numerics	include/xercesc/framework/psvi/XSValue.hpp	/^            dg_numerics,$/;"	e	enum:XSValue::DataGroup
dg_strings	include/xercesc/framework/psvi/XSValue.hpp	/^            dg_strings$/;"	e	enum:XSValue::DataGroup
doubletype	include/xercesc/framework/psvi/XSValue.hpp	/^                struct doubletype {$/;"	s	union:XSValue::XSValue_Data::<anonymous>
dt_ENTITIES	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_ENTITIES             = 30,$/;"	e	enum:XSValue::DataType
dt_ENTITY	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_ENTITY               = 29,$/;"	e	enum:XSValue::DataType
dt_ID	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_ID                   = 26,$/;"	e	enum:XSValue::DataType
dt_IDREF	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_IDREF                = 27,$/;"	e	enum:XSValue::DataType
dt_IDREFS	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_IDREFS               = 28,$/;"	e	enum:XSValue::DataType
dt_MAXCOUNT	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_MAXCOUNT             = 44$/;"	e	enum:XSValue::DataType
dt_NCName	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_NCName               = 25,$/;"	e	enum:XSValue::DataType
dt_NMTOKEN	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_NMTOKEN              = 22,$/;"	e	enum:XSValue::DataType
dt_NMTOKENS	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_NMTOKENS             = 23,$/;"	e	enum:XSValue::DataType
dt_NOTATION	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_NOTATION             = 18,$/;"	e	enum:XSValue::DataType
dt_Name	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_Name                 = 24,$/;"	e	enum:XSValue::DataType
dt_QName	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_QName                = 17,$/;"	e	enum:XSValue::DataType
dt_anyURI	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_anyURI               = 16,$/;"	e	enum:XSValue::DataType
dt_base64Binary	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_base64Binary         = 15,$/;"	e	enum:XSValue::DataType
dt_boolean	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_boolean              = 1,$/;"	e	enum:XSValue::DataType
dt_byte	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_byte                 = 37,$/;"	e	enum:XSValue::DataType
dt_date	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_date                 = 8,$/;"	e	enum:XSValue::DataType
dt_dateTime	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_dateTime             = 6,$/;"	e	enum:XSValue::DataType
dt_decimal	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_decimal              = 2,$/;"	e	enum:XSValue::DataType
dt_double	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_double               = 4,$/;"	e	enum:XSValue::DataType
dt_duration	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_duration             = 5,$/;"	e	enum:XSValue::DataType
dt_float	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_float                = 3,$/;"	e	enum:XSValue::DataType
dt_gDay	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_gDay                 = 12,$/;"	e	enum:XSValue::DataType
dt_gMonth	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_gMonth               = 13,$/;"	e	enum:XSValue::DataType
dt_gMonthDay	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_gMonthDay            = 11,$/;"	e	enum:XSValue::DataType
dt_gYear	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_gYear                = 10,$/;"	e	enum:XSValue::DataType
dt_gYearMonth	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_gYearMonth           = 9,$/;"	e	enum:XSValue::DataType
dt_hexBinary	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_hexBinary            = 14,$/;"	e	enum:XSValue::DataType
dt_int	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_int                  = 35,$/;"	e	enum:XSValue::DataType
dt_integer	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_integer              = 31,$/;"	e	enum:XSValue::DataType
dt_language	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_language             = 21,$/;"	e	enum:XSValue::DataType
dt_long	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_long                 = 34,$/;"	e	enum:XSValue::DataType
dt_negativeInteger	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_negativeInteger      = 33,$/;"	e	enum:XSValue::DataType
dt_nonNegativeInteger	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_nonNegativeInteger   = 38,$/;"	e	enum:XSValue::DataType
dt_nonPositiveInteger	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_nonPositiveInteger   = 32,$/;"	e	enum:XSValue::DataType
dt_normalizedString	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_normalizedString     = 19,$/;"	e	enum:XSValue::DataType
dt_positiveInteger	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_positiveInteger      = 43,$/;"	e	enum:XSValue::DataType
dt_short	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_short                = 36,$/;"	e	enum:XSValue::DataType
dt_string	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_string               = 0,$/;"	e	enum:XSValue::DataType
dt_time	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_time                 = 7,$/;"	e	enum:XSValue::DataType
dt_token	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_token                = 20,$/;"	e	enum:XSValue::DataType
dt_unsignedByte	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_unsignedByte         = 42,$/;"	e	enum:XSValue::DataType
dt_unsignedInt	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_unsignedInt          = 40,$/;"	e	enum:XSValue::DataType
dt_unsignedLong	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_unsignedLong         = 39,$/;"	e	enum:XSValue::DataType
dt_unsignedShort	include/xercesc/framework/psvi/XSValue.hpp	/^              dt_unsignedShort        = 41,$/;"	e	enum:XSValue::DataType
elemIndex	include/xercesc/validators/common/DFAContentModel.hpp	/^        int elemIndex;$/;"	m	class:DFAContentModel::Occurence
elementAt	include/xercesc/dom/impl/DOMNodeVector.hpp	/^inline DOMNode *DOMNodeVector::elementAt(XMLSize_t index) {$/;"	f	class:DOMNodeVector
elementAt	include/xercesc/util/BaseRefVectorOf.c	/^BaseRefVectorOf<TElem>::elementAt(const XMLSize_t getAt)$/;"	f	class:TElem
elementAt	include/xercesc/util/BaseRefVectorOf.c	/^elementAt(const XMLSize_t getAt) const$/;"	f	class:TElem
elementAt	include/xercesc/util/RefStackOf.c	/^elementAt(const XMLSize_t index) const$/;"	f	class:TElem
elementAt	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^ComplexTypeInfo::elementAt(const XMLSize_t index) const {$/;"	f	class:ComplexTypeInfo
elementAt	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^ComplexTypeInfo::elementAt(const XMLSize_t index) {$/;"	f	class:ComplexTypeInfo
elementAt	include/xercesc/validators/schema/XercesGroupInfo.hpp	/^XercesGroupInfo::elementAt(const XMLSize_t index) const {$/;"	f	class:XercesGroupInfo
elementAt	include/xercesc/validators/schema/XercesGroupInfo.hpp	/^XercesGroupInfo::elementAt(const XMLSize_t index) {$/;"	f	class:XercesGroupInfo
elementCount	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline XMLSize_t ComplexTypeInfo::elementCount() const {$/;"	f	class:ComplexTypeInfo
elementCount	include/xercesc/validators/schema/XercesGroupInfo.hpp	/^inline XMLSize_t XercesGroupInfo::elementCount() const {$/;"	f	class:XercesGroupInfo
elementDecl	include/xercesc/sax2/DefaultHandler.hpp	/^inline void DefaultHandler::elementDecl(const XMLCh* const,$/;"	f	class:DefaultHandler
empty	include/xercesc/util/RefStackOf.c	/^template <class TElem> bool RefStackOf<TElem>::empty()$/;"	f	class:TElem
empty	include/xercesc/util/ValueStackOf.c	/^template <class TElem> bool ValueStackOf<TElem>::empty()$/;"	f	class:TElem
empty	include/xercesc/util/regx/RangeToken.hpp	/^inline bool RangeToken::empty() const$/;"	f	class:RangeToken
enableNEL	include/xercesc/util/XMLChar.hpp	/^    static bool     enableNEL;$/;"	m	class:XMLChar1_0
endCDATA	include/xercesc/sax2/DefaultHandler.hpp	/^inline void DefaultHandler::endCDATA ()$/;"	f	class:DefaultHandler
endDTD	include/xercesc/sax2/DefaultHandler.hpp	/^inline void DefaultHandler::endDTD ()$/;"	f	class:DefaultHandler
endDocument	include/xercesc/sax/HandlerBase.hpp	/^inline void HandlerBase::endDocument()$/;"	f	class:HandlerBase
endDocument	include/xercesc/sax2/DefaultHandler.hpp	/^inline void DefaultHandler::endDocument()$/;"	f	class:DefaultHandler
endDocument	include/xercesc/validators/schema/identity/IdentityConstraintHandler.hpp	/^void  IdentityConstraintHandler::endDocument()$/;"	f	class:IdentityConstraintHandler
endDocument	include/xercesc/validators/schema/identity/ValueStoreCache.hpp	/^inline void ValueStoreCache::endDocument() {$/;"	f	class:ValueStoreCache
endElement	include/xercesc/sax/HandlerBase.hpp	/^inline void HandlerBase::endElement(const XMLCh* const)$/;"	f	class:HandlerBase
endElement	include/xercesc/sax2/DefaultHandler.hpp	/^inline void DefaultHandler::endElement(const	XMLCh* const$/;"	f	class:DefaultHandler
endEntity	include/xercesc/sax2/DefaultHandler.hpp	/^inline void DefaultHandler::endEntity (const XMLCh* const)$/;"	f	class:DefaultHandler
endInputSource	include/xercesc/parsers/DOMLSParserImpl.hpp	/^inline void DOMLSParserImpl::endInputSource(const InputSource&)$/;"	f	class:DOMLSParserImpl
endInputSource	include/xercesc/parsers/XercesDOMParser.hpp	/^inline void XercesDOMParser::endInputSource(const InputSource&)$/;"	f	class:XercesDOMParser
endPrefixMapping	include/xercesc/sax2/DefaultHandler.hpp	/^inline void DefaultHandler::endPrefixMapping ( const	XMLCh* const)$/;"	f	class:DefaultHandler
endsWith	include/xercesc/util/XMLString.hpp	/^inline bool XMLString::endsWith(const XMLCh* const toTest,$/;"	f	class:XMLString
ensureExtraCapacity	include/xercesc/util/BaseRefVectorOf.c	/^ensureExtraCapacity(const XMLSize_t length)$/;"	f	class:TElem
ensureLoading	include/xercesc/internal/XSerializeEngine.hpp	/^inline void XSerializeEngine::ensureLoading() const$/;"	f	class:XSerializeEngine
ensureStoring	include/xercesc/internal/XSerializeEngine.hpp	/^inline void XSerializeEngine::ensureStoring() const$/;"	f	class:XSerializeEngine
epsilonNode	include/xercesc/validators/common/CMNode.hpp	/^        epsilonNode = UINT_MAX - 1$/;"	e	enum:CMNode::<anonymous>
equals	include/xercesc/util/Hashers.hpp	/^  bool equals(const void *const key1, const void *const key2) const$/;"	f	struct:PtrHasher
equals	include/xercesc/util/Hashers.hpp	/^  bool equals(const void *const key1, const void *const key2) const$/;"	f	struct:StringHasher
equals	include/xercesc/util/XMLString.hpp	/^inline bool XMLString::equals(   const XMLCh* str1$/;"	f	class:XMLString
equals	include/xercesc/util/XMLString.hpp	/^inline bool XMLString::equals(   const char* str1$/;"	f	class:XMLString
equalsN	include/xercesc/util/XMLString.hpp	/^inline bool XMLString::equalsN(const XMLCh* str1,$/;"	f	class:XMLString
equalsN	include/xercesc/util/XMLString.hpp	/^inline bool XMLString::equalsN(const char* str1,$/;"	f	class:XMLString
error	include/xercesc/internal/XMLInternalErrorHandler.hpp	/^inline void XMLInternalErrorHandler::error(const SAXParseException& toCatch)$/;"	f	class:XMLInternalErrorHandler
error	include/xercesc/sax/HandlerBase.hpp	/^inline void HandlerBase::error(const SAXParseException&)$/;"	f	class:HandlerBase
error	include/xercesc/sax2/DefaultHandler.hpp	/^inline void DefaultHandler::error(const SAXParseException&)$/;"	f	class:DefaultHandler
errorChecking	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^    bool                  errorChecking;    \/\/ Bypass error checking.$/;"	m	class:DOMDocumentImpl
errorType	include/xercesc/framework/XMLErrorCodes.hpp	/^    static XMLErrorReporter::ErrTypes errorType(const XMLErrs::Codes toCheck)$/;"	f	class:XMLErrs
errorType	include/xercesc/framework/XMLValidityCodes.hpp	/^    static XMLErrorReporter::ErrTypes errorType(const XMLValid::Codes toCheck)$/;"	f	class:XMLValid
errorType	include/xercesc/util/XMLDOMMsg.hpp	/^    static XMLErrorReporter::ErrTypes errorType(const XMLDOMMsg::Codes toCheck)$/;"	f	class:XMLDOMMsg
exists	include/xercesc/util/StringPool.hpp	/^inline bool XMLStringPool::exists(const XMLCh* const newString) const$/;"	f	class:XMLStringPool
exists	include/xercesc/util/StringPool.hpp	/^inline bool XMLStringPool::exists(const unsigned int id) const$/;"	f	class:XMLStringPool
expandSystemId	include/xercesc/parsers/DOMLSParserImpl.hpp	/^inline bool DOMLSParserImpl::expandSystemId(const XMLCh* const, XMLBuffer&)$/;"	f	class:DOMLSParserImpl
expandSystemId	include/xercesc/parsers/XercesDOMParser.hpp	/^inline bool XercesDOMParser::expandSystemId(const XMLCh* const, XMLBuffer&)$/;"	f	class:XercesDOMParser
extCh	include/xercesc/util/TransService.hpp	/^        XMLByte     extCh;$/;"	m	struct:XMLTransService::TransRec
externalEntityDecl	include/xercesc/sax2/DefaultHandler.hpp	/^inline void DefaultHandler::externalEntityDecl(const XMLCh* const,$/;"	f	class:DefaultHandler
fASCIICharMap	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    static const XMLByte fASCIICharMap[128];$/;"	m	class:XPathScanner
fAbstract	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^    bool                               fAbstract;$/;"	m	class:ComplexTypeInfo
fAddedS4SGrammar	include/xercesc/framework/psvi/XSModel.hpp	/^    bool                                    fAddedS4SGrammar;$/;"	m	class:XSModel
fAdopt	include/xercesc/internal/VecAttrListImpl.hpp	/^    bool                        fAdopt;$/;"	m	class:VecAttrListImpl
fAdopt	include/xercesc/internal/VecAttributesImpl.hpp	/^    bool                        fAdopt;$/;"	m	class:VecAttributesImpl
fAdopt	include/xercesc/validators/common/CMLeaf.hpp	/^    bool            fAdopt;$/;"	m	class:CMLeaf
fAdoptContentSpec	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^    bool                               fAdoptContentSpec;$/;"	m	class:ComplexTypeInfo
fAdoptFirst	include/xercesc/validators/common/ContentSpecNode.hpp	/^    bool                fAdoptFirst;$/;"	m	class:ContentSpecNode
fAdoptInclude	include/xercesc/validators/schema/SchemaInfo.hpp	/^    bool                              fAdoptInclude;$/;"	m	class:SchemaInfo
fAdoptInputSource	include/xercesc/framework/Wrapper4DOMLSInput.hpp	/^    bool                    fAdoptInputSource,$/;"	m	class:Wrapper4DOMLSInput
fAdoptInputSource	include/xercesc/framework/Wrapper4InputSource.hpp	/^    bool         fAdoptInputSource;$/;"	m	class:Wrapper4InputSource
fAdoptLocation	include/xercesc/dom/impl/DOMErrorImpl.hpp	/^    bool          fAdoptLocation;$/;"	m	class:DOMErrorImpl
fAdoptMatch	include/xercesc/util/regx/RegularExpression.hpp	/^            bool           fAdoptMatch;$/;"	m	class:RegularExpression::Context
fAdoptSecond	include/xercesc/validators/common/ContentSpecNode.hpp	/^    bool                fAdoptSecond;$/;"	m	class:ContentSpecNode
fAdopted	include/xercesc/framework/MemBufInputSource.hpp	/^    bool            fAdopted;$/;"	m	class:MemBufInputSource
fAdopted	include/xercesc/util/BaseRefVectorOf.hpp	/^    bool                fAdopted;$/;"	m	class:BaseRefVectorEnumerator
fAdopted	include/xercesc/util/Hash2KeysSetOf.hpp	/^    bool                                    fAdopted;$/;"	m	class:Hash2KeysSetOfEnumerator
fAdopted	include/xercesc/util/RefArrayOf.hpp	/^    bool                fAdopted;$/;"	m	class:RefArrayEnumerator
fAdopted	include/xercesc/util/RefHash2KeysTableOf.hpp	/^    bool                                    fAdopted;$/;"	m	class:RefHash2KeysTableOfEnumerator
fAdopted	include/xercesc/util/RefHashTableOf.hpp	/^    bool                                  fAdopted;$/;"	m	class:RefHashTableOfEnumerator
fAdopted	include/xercesc/util/RefStackOf.hpp	/^    bool                fAdopted;$/;"	m	class:RefStackEnumerator
fAdopted	include/xercesc/util/ValueArrayOf.hpp	/^    bool                    fAdopted;$/;"	m	class:ValueArrayEnumerator
fAdopted	include/xercesc/util/ValueHashTableOf.hpp	/^    bool                             fAdopted;$/;"	m	class:ValueHashTableOfEnumerator
fAdopted	include/xercesc/util/ValueStackOf.hpp	/^    bool                    fAdopted;$/;"	m	class:ValueStackEnumerator
fAdopted	include/xercesc/util/ValueVectorOf.hpp	/^    bool                    fAdopted;$/;"	m	class:ValueVectorEnumerator
fAdoptedElems	include/xercesc/dom/impl/DOMDeepNodeListPool.hpp	/^    bool                                       fAdoptedElems;$/;"	m	class:DOMDeepNodeListPool
fAdoptedElems	include/xercesc/util/BaseRefVectorOf.hpp	/^    bool            fAdoptedElems;$/;"	m	class:BaseRefVectorOf
fAdoptedElems	include/xercesc/util/RefHash2KeysTableOf.hpp	/^    bool                                fAdoptedElems;$/;"	m	class:RefHash2KeysTableOf
fAdoptedElems	include/xercesc/util/RefHash3KeysIdPool.hpp	/^    bool                                fAdoptedElems;$/;"	m	class:RefHash3KeysIdPool
fAdoptedElems	include/xercesc/util/RefHash3KeysIdPool.hpp	/^    bool                                fAdoptedElems;$/;"	m	class:RefHash3KeysIdPoolEnumerator
fAdoptedElems	include/xercesc/util/RefHashTableOf.hpp	/^    bool                           fAdoptedElems;$/;"	m	class:RefHashTableOf
fAdvDHCount	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^    XMLSize_t                   fAdvDHCount;$/;"	m	class:SAX2XMLReaderImpl
fAdvDHCount	include/xercesc/parsers/SAXParser.hpp	/^    XMLSize_t            fAdvDHCount;$/;"	m	class:SAXParser
fAdvDHList	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^    XMLDocumentHandler**        fAdvDHList;$/;"	m	class:SAX2XMLReaderImpl
fAdvDHList	include/xercesc/parsers/SAXParser.hpp	/^    XMLDocumentHandler** fAdvDHList;$/;"	m	class:SAXParser
fAdvDHListSize	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^    XMLSize_t                   fAdvDHListSize;$/;"	m	class:SAX2XMLReaderImpl
fAdvDHListSize	include/xercesc/parsers/SAXParser.hpp	/^    XMLSize_t            fAdvDHListSize;$/;"	m	class:SAXParser
fAmpLen	include/xercesc/framework/XMLFormatter.hpp	/^    XMLSize_t                   fAmpLen;$/;"	m	class:XMLFormatter
fAmpRef	include/xercesc/framework/XMLFormatter.hpp	/^    XMLByte*                    fAmpRef;$/;"	m	class:XMLFormatter
fAncestorOrSelfSymbol	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    int fAncestorOrSelfSymbol;$/;"	m	class:XPathScanner
fAncestorSymbol	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    int fAncestorSymbol;$/;"	m	class:XPathScanner
fAndSymbol	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    int fAndSymbol;$/;"	m	class:XPathScanner
fAnnotation	include/xercesc/framework/psvi/XSAttributeDeclaration.hpp	/^    XSAnnotation*               fAnnotation;$/;"	m	class:XSAttributeDeclaration
fAnnotation	include/xercesc/framework/psvi/XSAttributeGroupDefinition.hpp	/^    XSAnnotation*           fAnnotation;$/;"	m	class:XSAttributeGroupDefinition
fAnnotation	include/xercesc/framework/psvi/XSElementDeclaration.hpp	/^    XSAnnotation*                 fAnnotation;$/;"	m	class:XSElementDeclaration
fAnnotation	include/xercesc/framework/psvi/XSFacet.hpp	/^    XSAnnotation*                 fAnnotation;$/;"	m	class:XSFacet
fAnnotation	include/xercesc/framework/psvi/XSModelGroup.hpp	/^    XSAnnotation*   fAnnotation;$/;"	m	class:XSModelGroup
fAnnotation	include/xercesc/framework/psvi/XSModelGroupDefinition.hpp	/^    XSAnnotation*    fAnnotation;$/;"	m	class:XSModelGroupDefinition
fAnnotation	include/xercesc/framework/psvi/XSNotationDeclaration.hpp	/^    XSAnnotation*    fAnnotation;$/;"	m	class:XSNotationDeclaration
fAnnotation	include/xercesc/framework/psvi/XSWildcard.hpp	/^    XSAnnotation*        fAnnotation;$/;"	m	class:XSWildcard
fAnnotation	include/xercesc/validators/schema/TraverseSchema.hpp	/^    XSAnnotation*                                  fAnnotation;$/;"	m	class:TraverseSchema
fAnnotationBuf	include/xercesc/validators/schema/XSDDOMParser.hpp	/^    XMLBuffer                    fAnnotationBuf;$/;"	m	class:XSDDOMParser
fAnnotationDepth	include/xercesc/validators/schema/XSDDOMParser.hpp	/^    int                          fAnnotationDepth;$/;"	m	class:XSDDOMParser
fAnnotations	include/xercesc/validators/schema/SchemaGrammar.hpp	/^    RefHashTableOf<XSAnnotation, PtrHasher>* fAnnotations;$/;"	m	class:SchemaGrammar
fAnonTypeCount	include/xercesc/validators/schema/SchemaGrammar.hpp	/^    unsigned int                             fAnonTypeCount;$/;"	m	class:SchemaGrammar
fAnonXSTypeCount	include/xercesc/validators/schema/TraverseSchema.hpp	/^    unsigned int                                   fAnonXSTypeCount;$/;"	m	class:TraverseSchema
fAnonymous	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^    bool                                fAnonymous;$/;"	m	class:DatatypeValidator
fAnonymous	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^    bool                               fAnonymous;$/;"	m	class:ComplexTypeInfo
fAnyAttributes	include/xercesc/validators/schema/XercesAttGroupInfo.hpp	/^    RefVectorOf<SchemaAttDef>* fAnyAttributes;$/;"	m	class:XercesAttGroupInfo
fAnyType	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^    static ComplexTypeInfo*            fAnyType;$/;"	m	class:ComplexTypeInfo
fAnyURIDV	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^    static DatatypeValidator*                fAnyURIDV;$/;"	m	class:GeneralAttributeCheck
fAposLen	include/xercesc/framework/XMLFormatter.hpp	/^    XMLSize_t                   fAposLen;$/;"	m	class:XMLFormatter
fAposRef	include/xercesc/framework/XMLFormatter.hpp	/^    XMLByte*                    fAposRef;$/;"	m	class:XMLFormatter
fArray	include/xercesc/util/RefArrayOf.hpp	/^	TElem**         fArray;$/;"	m	class:RefArrayOf
fArray	include/xercesc/util/ValueArrayOf.hpp	/^	TElem*          fArray;$/;"	m	class:ValueArrayOf
fArray	include/xercesc/validators/DTD/DTDAttDefList.hpp	/^    DTDAttDef**                             fArray;$/;"	m	class:DTDAttDefList
fArray	include/xercesc/validators/schema/SchemaAttDefList.hpp	/^    SchemaAttDef**                                  fArray;$/;"	m	class:SchemaAttDefList
fArraySize	include/xercesc/validators/common/CMStateSet.hpp	/^    XMLSize_t       fArraySize;$/;"	m	struct:CMDynamicBuffer
fAssessmentType	include/xercesc/framework/psvi/PSVIItem.hpp	/^    ASSESSMENT_TYPE             fAssessmentType;$/;"	m	class:PSVIItem
fAttDef	include/xercesc/framework/psvi/XSAttributeDeclaration.hpp	/^    SchemaAttDef*               fAttDef;$/;"	m	class:XSAttributeDeclaration
fAttDefRegistry	include/xercesc/internal/DGXMLScanner.hpp	/^    RefHashTableOf<unsigned int, PtrHasher>* fAttDefRegistry;$/;"	m	class:DGXMLScanner
fAttDefRegistry	include/xercesc/internal/IGXMLScanner.hpp	/^    RefHashTableOf<unsigned int, PtrHasher>*fAttDefRegistry;$/;"	m	class:IGXMLScanner
fAttDefRegistry	include/xercesc/internal/SGXMLScanner.hpp	/^    RefHashTableOf<unsigned int, PtrHasher>*fAttDefRegistry;$/;"	m	class:SGXMLScanner
fAttDefs	include/xercesc/validators/DTD/DTDElementDecl.hpp	/^    RefHashTableOf<DTDAttDef>*  fAttDefs;$/;"	m	class:DTDElementDecl
fAttDefs	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^    RefHash2KeysTableOf<SchemaAttDef>* fAttDefs;$/;"	m	class:ComplexTypeInfo
fAttDefs	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^    RefHash2KeysTableOf<SchemaAttDef>* fAttDefs;        	$/;"	m	class:SchemaElementDecl
fAttGroupInfoRegistry	include/xercesc/validators/schema/SchemaGrammar.hpp	/^    RefHashTableOf<XercesAttGroupInfo>*      fAttGroupInfoRegistry;$/;"	m	class:SchemaGrammar
fAttGroupRegistry	include/xercesc/validators/schema/TraverseSchema.hpp	/^    RefHashTableOf<XercesAttGroupInfo>*            fAttGroupRegistry;$/;"	m	class:TraverseSchema
fAttList	include/xercesc/validators/DTD/DTDElementDecl.hpp	/^    DTDAttDefList*              fAttList;$/;"	m	class:DTDElementDecl
fAttList	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^    SchemaAttDefList*                  fAttList;$/;"	m	class:ComplexTypeInfo
fAttMap	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^    static ValueHashTableOf<unsigned short>* fAttMap;$/;"	m	class:GeneralAttributeCheck
fAttName	include/xercesc/framework/XMLAttr.hpp	/^    QName*              fAttName;$/;"	m	class:XMLAttr
fAttName	include/xercesc/validators/schema/SchemaAttDef.hpp	/^    QName*                       fAttName;$/;"	m	class:SchemaAttDef
fAttNameBuf	include/xercesc/internal/XMLScanner.hpp	/^    XMLBuffer                   fAttNameBuf;$/;"	m	class:XMLScanner
fAttNames	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^    static const XMLCh*                      fAttNames[A_Count];$/;"	m	class:GeneralAttributeCheck
fAttValueBuf	include/xercesc/internal/XMLScanner.hpp	/^    XMLBuffer                   fAttValueBuf;$/;"	m	class:XMLScanner
fAttWildCard	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^    SchemaAttDef*                      fAttWildCard;$/;"	m	class:ComplexTypeInfo
fAttWildCard	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^    SchemaAttDef*                      fAttWildCard;$/;"	m	class:SchemaElementDecl
fAttWithTypeId	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^    bool                               fAttWithTypeId;$/;"	m	class:ComplexTypeInfo
fAttrDupChkRegistry	include/xercesc/internal/XMLScanner.hpp	/^    RefHash2KeysTableOf<XMLAttr>*  fAttrDupChkRegistry;$/;"	m	class:XMLScanner
fAttrList	include/xercesc/framework/psvi/PSVIAttributeList.hpp	/^    RefVectorOf<PSVIAttributeStorage>*  fAttrList;$/;"	m	class:PSVIAttributeList
fAttrList	include/xercesc/internal/XMLScanner.hpp	/^    RefVectorOf<XMLAttr>*       fAttrList;$/;"	m	class:XMLScanner
fAttrList	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^    VecAttributesImpl	        fAttrList ;$/;"	m	class:SAX2XMLReaderImpl
fAttrList	include/xercesc/parsers/SAXParser.hpp	/^    VecAttrListImpl      fAttrList;$/;"	m	class:SAXParser
fAttrNSList	include/xercesc/internal/DGXMLScanner.hpp	/^    ValueVectorOf<XMLAttr*>*    fAttrNSList;$/;"	m	class:DGXMLScanner
fAttrNSList	include/xercesc/internal/WFXMLScanner.hpp	/^    ValueVectorOf<XMLAttr*>*           fAttrNSList;$/;"	m	class:WFXMLScanner
fAttrNameHashList	include/xercesc/internal/WFXMLScanner.hpp	/^    ValueVectorOf<XMLSize_t>*          fAttrNameHashList;$/;"	m	class:WFXMLScanner
fAttrPos	include/xercesc/framework/psvi/PSVIAttributeList.hpp	/^    XMLSize_t                           fAttrPos;$/;"	m	class:PSVIAttributeList
fAttributeCheck	include/xercesc/validators/schema/TraverseSchema.hpp	/^    GeneralAttributeCheck                          fAttributeCheck;$/;"	m	class:TraverseSchema
fAttributeDecl	include/xercesc/framework/psvi/PSVIAttribute.hpp	/^    XSAttributeDeclaration *    fAttributeDecl;$/;"	m	class:PSVIAttribute
fAttributeDeclRegistry	include/xercesc/validators/schema/SchemaGrammar.hpp	/^    RefHashTableOf<XMLAttDef>*               fAttributeDeclRegistry;$/;"	m	class:SchemaGrammar
fAttributeDeclRegistry	include/xercesc/validators/schema/TraverseSchema.hpp	/^    RefHashTableOf<XMLAttDef>*                     fAttributeDeclRegistry;$/;"	m	class:TraverseSchema
fAttributeName	include/xercesc/framework/psvi/PSVIAttributeList.hpp	/^    const XMLCh*   fAttributeName;$/;"	m	class:PSVIAttributeStorage
fAttributeNamespace	include/xercesc/framework/psvi/PSVIAttributeList.hpp	/^    const XMLCh*   fAttributeNamespace;$/;"	m	class:PSVIAttributeStorage
fAttributeSymbol	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    int fAttributeSymbol;$/;"	m	class:XPathScanner
fAttributes	include/xercesc/dom/impl/DOMElementImpl.hpp	/^    DOMAttrMapImpl    *fAttributes;$/;"	m	class:DOMElementImpl
fAttributes	include/xercesc/validators/schema/XMLSchemaDescriptionImpl.hpp	/^    const XMLAttDef*                       fAttributes; $/;"	m	class:XMLSchemaDescriptionImpl
fAttributes	include/xercesc/validators/schema/XercesAttGroupInfo.hpp	/^    RefVectorOf<SchemaAttDef>* fAttributes;$/;"	m	class:XercesAttGroupInfo
fAutoValidation	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^    bool                        fAutoValidation;$/;"	m	class:SAX2XMLReaderImpl
fAvailable	include/xercesc/util/Hash2KeysSetOf.hpp	/^    Hash2KeysSetBucketElem*             fAvailable;$/;"	m	class:Hash2KeysSetOf
fAxisType	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    unsigned short  fAxisType;$/;"	m	class:XercesStep
fBMPattern	include/xercesc/util/regx/RegularExpression.hpp	/^    const BMPattern*   fBMPattern;$/;"	m	class:RegularExpression
fBaseAttDecl	include/xercesc/validators/schema/SchemaAttDef.hpp	/^    SchemaAttDef*                fBaseAttDecl;$/;"	m	class:SchemaAttDef
fBaseComplexTypeInfo	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^    ComplexTypeInfo*                   fBaseComplexTypeInfo;$/;"	m	class:ComplexTypeInfo
fBaseDatatypeValidator	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^    DatatypeValidator*                 fBaseDatatypeValidator;$/;"	m	class:ComplexTypeInfo
fBaseGroup	include/xercesc/validators/schema/XercesGroupInfo.hpp	/^    XercesGroupInfo*                fBaseGroup; \/\/ redefine by restriction$/;"	m	class:XercesGroupInfo
fBaseScopeWithBindings	include/xercesc/dom/impl/DOMNormalizer.hpp	/^            Scope *fBaseScopeWithBindings;$/;"	m	class:DOMNormalizer::InScopeNamespaces::Scope
fBaseType	include/xercesc/framework/psvi/XSTypeDefinition.hpp	/^    XSTypeDefinition* fBaseType; \/\/ owned by XSModel$/;"	m	class:XSTypeDefinition
fBaseURI	include/xercesc/dom/impl/DOMEntityImpl.hpp	/^    const XMLCh*          fBaseURI;$/;"	m	class:DOMEntityImpl
fBaseURI	include/xercesc/dom/impl/DOMEntityReferenceImpl.hpp	/^    const XMLCh    *fBaseURI;$/;"	m	class:DOMEntityReferenceImpl
fBaseURI	include/xercesc/dom/impl/DOMLSInputImpl.hpp	/^    XMLCh                        *fBaseURI;$/;"	m	class:DOMLSInputImpl
fBaseURI	include/xercesc/dom/impl/DOMNotationImpl.hpp	/^    const XMLCh * fBaseURI;$/;"	m	class:DOMNotationImpl
fBaseURI	include/xercesc/dom/impl/DOMProcessingInstructionImpl.hpp	/^    const XMLCh *fBaseURI;$/;"	m	class:DOMProcessingInstructionImpl
fBaseURI	include/xercesc/framework/XMLEntityDecl.hpp	/^    XMLCh*          fBaseURI;$/;"	m	class:XMLEntityDecl
fBaseURI	include/xercesc/framework/XMLNotationDecl.hpp	/^    XMLCh*          fBaseURI;$/;"	m	class:XMLNotationDecl
fBaseURI	include/xercesc/util/XMLResourceIdentifier.hpp	/^    const XMLCh*                    fBaseURI;$/;"	m	class:XMLResourceIdentifier
fBaseValidator	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^	DatatypeValidator*                  fBaseValidator;$/;"	m	class:DatatypeValidator
fBitArray	include/xercesc/validators/common/CMStateSet.hpp	/^    XMLInt32**      fBitArray;$/;"	m	struct:CMDynamicBuffer
fBitCount	include/xercesc/validators/common/CMStateSet.hpp	/^    XMLSize_t        fBitCount;$/;"	m	class:CMStateSet
fBitFields	include/xercesc/dom/impl/DOMTypeInfoImpl.hpp	/^    int             fBitFields;$/;"	m	class:DOMTypeInfoImpl
fBits	include/xercesc/util/BitSet.hpp	/^    unsigned long*  fBits;$/;"	m	class:BitSet
fBits	include/xercesc/validators/common/CMStateSet.hpp	/^    XMLInt32         fBits[CMSTATE_CACHED_INT32_SIZE];$/;"	m	class:CMStateSet
fBlockDefault	include/xercesc/validators/schema/SchemaInfo.hpp	/^    int                               fBlockDefault;$/;"	m	class:SchemaInfo
fBlockSet	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^    int                                fBlockSet;$/;"	m	class:ComplexTypeInfo
fBlockSet	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^    int                                fBlockSet;$/;"	m	class:SchemaElementDecl
fBlockSize	include/xercesc/util/TransService.hpp	/^    XMLSize_t       fBlockSize;$/;"	m	class:XMLTranscoder
fBooleanDV	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^    static DatatypeValidator*                fBooleanDV;$/;"	m	class:GeneralAttributeCheck
fBounded	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^    bool                                fBounded;$/;"	m	class:DatatypeValidator
fBranches	include/xercesc/util/regx/Op.hpp	/^    RefVectorOf<Op>* fBranches;$/;"	m	class:UnionOp
fBucketList	include/xercesc/dom/impl/DOMDeepNodeListPool.hpp	/^    DOMDeepNodeListPoolTableBucketElem<TVal>** fBucketList;$/;"	m	class:DOMDeepNodeListPool
fBucketList	include/xercesc/util/Hash2KeysSetOf.hpp	/^    Hash2KeysSetBucketElem**            fBucketList;$/;"	m	class:Hash2KeysSetOf
fBucketList	include/xercesc/util/NameIdPool.hpp	/^    RefHashTableOf<TElem>           fBucketList;$/;"	m	class:NameIdPool
fBucketList	include/xercesc/util/RefHash2KeysTableOf.hpp	/^    RefHash2KeysTableBucketElem<TVal>** fBucketList;$/;"	m	class:RefHash2KeysTableOf
fBucketList	include/xercesc/util/RefHash3KeysIdPool.hpp	/^    RefHash3KeysTableBucketElem<TVal>** fBucketList;$/;"	m	class:RefHash3KeysIdPool
fBucketList	include/xercesc/util/RefHashTableOf.hpp	/^    RefHashTableBucketElem<TVal>** fBucketList;$/;"	m	class:RefHashTableOf
fBucketList	include/xercesc/util/ValueHashTableOf.hpp	/^    ValueHashTableBucketElem<TVal>** fBucketList;$/;"	m	class:ValueHashTableOf
fBuckets	include/xercesc/dom/impl/DOMNamedNodeMapImpl.hpp	/^    DOMNodeVector*    fBuckets[MAP_SIZE];$/;"	m	class:DOMNamedNodeMapImpl
fBufCount	include/xercesc/framework/XMLBufferMgr.hpp	/^    XMLSize_t       fBufCount;$/;"	m	class:XMLBufferMgr
fBufCount	include/xercesc/internal/XSerializeEngine.hpp	/^    unsigned long                          fBufCount;$/;"	m	class:XSerializeEngine
fBufCur	include/xercesc/internal/XSerializeEngine.hpp	/^    XMLByte*                               fBufCur;$/;"	m	class:XSerializeEngine
fBufEnd	include/xercesc/internal/XSerializeEngine.hpp	/^	XMLByte* const                         fBufEnd;$/;"	m	class:XSerializeEngine
fBufList	include/xercesc/framework/XMLBufferMgr.hpp	/^    XMLBuffer**     fBufList;$/;"	m	class:XMLBufferMgr
fBufLoadMax	include/xercesc/internal/XSerializeEngine.hpp	/^    XMLByte*                               fBufLoadMax;$/;"	m	class:XSerializeEngine
fBufMgr	include/xercesc/framework/XMLValidator.hpp	/^    XMLBufferMgr*       fBufMgr;$/;"	m	class:XMLValidator
fBufMgr	include/xercesc/internal/XMLScanner.hpp	/^    XMLBufferMgr                fBufMgr;$/;"	m	class:XMLScanner
fBufMgr	include/xercesc/parsers/AbstractDOMParser.hpp	/^    XMLBufferMgr                  fBufMgr;$/;"	m	class:AbstractDOMParser
fBufMgr	include/xercesc/validators/DTD/DTDScanner.hpp	/^    XMLBufferMgr*                   fBufMgr;$/;"	m	class:DTDScanner
fBufOpt	include/xercesc/util/BinMemInputStream.hpp	/^    BufOpts         fBufOpt;$/;"	m	class:BinMemInputStream
fBufSize	include/xercesc/internal/XSerializeEngine.hpp	/^    const XMLSize_t                        fBufSize;$/;"	m	class:XSerializeEngine
fBufStart	include/xercesc/internal/XSerializeEngine.hpp	/^	XMLByte* const                         fBufStart;$/;"	m	class:XSerializeEngine
fBuffer	include/xercesc/dom/impl/DOMStringPool.hpp	/^    XMLCh*           fBuffer;$/;"	m	class:DOMBuffer
fBuffer	include/xercesc/framework/XMLBuffer.hpp	/^    XMLCh*                      fBuffer;$/;"	m	class:XMLBuffer
fBuffer	include/xercesc/framework/XMLBufferMgr.hpp	/^    XMLBuffer&          fBuffer;$/;"	m	class:XMLBufBid
fBuffer	include/xercesc/util/BinMemInputStream.hpp	/^    const XMLByte*  fBuffer;$/;"	m	class:BinMemInputStream
fBuffer	include/xercesc/util/NetAccessors/Curl/CurlURLInputStream.hpp	/^    XMLByte				fBuffer[CURL_MAX_WRITE_SIZE];$/;"	m	class:CurlURLInputStream
fBuffer	include/xercesc/util/XMLDateTime.hpp	/^    XMLCh*       fBuffer;$/;"	m	class:XMLDateTime
fBuffer	include/xercesc/validators/schema/TraverseSchema.hpp	/^    XMLBuffer                                      fBuffer;$/;"	m	class:TraverseSchema
fBufferHeadPtr	include/xercesc/util/NetAccessors/Curl/CurlURLInputStream.hpp	/^    XMLByte*			fBufferHeadPtr;$/;"	m	class:CurlURLInputStream
fBufferMaxLen	include/xercesc/util/XMLDateTime.hpp	/^    XMLSize_t    fBufferMaxLen;$/;"	m	class:XMLDateTime
fBufferSize	include/xercesc/internal/XMLScanner.hpp	/^    XMLSize_t                   fBufferSize;$/;"	m	class:XMLScanner
fBufferTailPtr	include/xercesc/util/NetAccessors/Curl/CurlURLInputStream.hpp	/^    XMLByte*			fBufferTailPtr;$/;"	m	class:CurlURLInputStream
fBuiltInRegistry	include/xercesc/validators/datatype/DatatypeValidatorFactory.hpp	/^    static XERCES_CPP_NAMESPACE_QUALIFIER RefHashTableOf<DatatypeValidator>* fBuiltInRegistry;$/;"	m	class:DatatypeValidatorFactory
fByteCount	include/xercesc/framework/MemBufInputSource.hpp	/^    XMLSize_t       fByteCount;$/;"	m	class:MemBufInputSource
fByteOffset	include/xercesc/dom/impl/DOMLocatorImpl.hpp	/^    XMLFilePos      fByteOffset;$/;"	m	class:DOMLocatorImpl
fByteStream	include/xercesc/dom/impl/DOMLSInputImpl.hpp	/^    InputSource                  *fByteStream;$/;"	m	class:DOMLSInputImpl
fByteStream	include/xercesc/dom/impl/DOMLSOutputImpl.hpp	/^    XMLFormatTarget              *fByteStream;$/;"	m	class:DOMLSOutputImpl
fBytesRead	include/xercesc/util/NetAccessors/Curl/CurlURLInputStream.hpp	/^    XMLSize_t           fBytesRead;$/;"	m	class:CurlURLInputStream
fBytesToRead	include/xercesc/util/NetAccessors/Curl/CurlURLInputStream.hpp	/^    XMLSize_t           fBytesToRead;$/;"	m	class:CurlURLInputStream
fBytesWritten	include/xercesc/util/TransService.hpp	/^    XMLSize_t fBytesWritten;$/;"	m	class:TranscodeToStr
fCDFrom	include/xercesc/util/Transcoders/IconvGNU/IconvGNUTransService.hpp	/^    iconv_t	fCDFrom;$/;"	m	class:IconvGNUWrapper
fCDTo	include/xercesc/util/Transcoders/IconvGNU/IconvGNUTransService.hpp	/^    iconv_t	fCDTo;$/;"	m	class:IconvGNUWrapper
fCDataBuf	include/xercesc/internal/XMLScanner.hpp	/^    XMLBuffer                   fCDataBuf;$/;"	m	class:XMLScanner
fCacheGrammar	include/xercesc/validators/common/GrammarResolver.hpp	/^    bool                            fCacheGrammar;$/;"	m	class:GrammarResolver
fCachedSchemaInfoList	include/xercesc/internal/IGXMLScanner.hpp	/^    RefHash2KeysTableOf<SchemaInfo>*        fCachedSchemaInfoList;$/;"	m	class:IGXMLScanner
fCachedSchemaInfoList	include/xercesc/internal/SGXMLScanner.hpp	/^    RefHash2KeysTableOf<SchemaInfo>*        fCachedSchemaInfoList;$/;"	m	class:SGXMLScanner
fCachedSchemaInfoList	include/xercesc/validators/schema/TraverseSchema.hpp	/^    RefHash2KeysTableOf<SchemaInfo>*               fCachedSchemaInfoList;$/;"	m	class:TraverseSchema
fCalculateSrcOfs	include/xercesc/internal/XMLReader.hpp	/^    bool                        fCalculateSrcOfs;$/;"	m	class:XMLReader
fCalculateSrcOfs	include/xercesc/internal/XMLScanner.hpp	/^    bool                        fCalculateSrcOfs;$/;"	m	class:XMLScanner
fCallDestructor	include/xercesc/util/ValueVectorOf.hpp	/^    bool            fCallDestructor;$/;"	m	class:ValueVectorOf
fCanRepRegistry	include/xercesc/validators/datatype/DatatypeValidatorFactory.hpp	/^    static XERCES_CPP_NAMESPACE_QUALIFIER RefHashTableOf<XMLCanRepGroup, PtrHasher>*    fCanRepRegistry;$/;"	m	class:DatatypeValidatorFactory
fCanonicalValue	include/xercesc/framework/psvi/PSVIItem.hpp	/^    XMLCh*                      fCanonicalValue;$/;"	m	class:PSVIItem
fCapacity	include/xercesc/dom/impl/DOMStringPool.hpp	/^    XMLSize_t        fCapacity;$/;"	m	class:DOMBuffer
fCapacity	include/xercesc/framework/LocalFileFormatTarget.hpp	/^    XMLSize_t       fCapacity;$/;"	m	class:LocalFileFormatTarget
fCapacity	include/xercesc/framework/MemBufFormatTarget.hpp	/^    XMLSize_t       fCapacity;$/;"	m	class:MemBufFormatTarget
fCapacity	include/xercesc/framework/XMLBuffer.hpp	/^    XMLSize_t                   fCapacity;$/;"	m	class:XMLBuffer
fCapacity	include/xercesc/internal/BinMemOutputStream.hpp	/^    XMLSize_t       fCapacity;$/;"	m	class:BinMemOutputStream
fCapacity	include/xercesc/util/BinMemInputStream.hpp	/^    XMLSize_t       fCapacity;$/;"	m	class:BinMemInputStream
fCaseIToken	include/xercesc/util/regx/RangeToken.hpp	/^    RangeToken*  fCaseIToken;$/;"	m	class:RangeToken
fCategories	include/xercesc/util/regx/RangeTokenMap.hpp	/^    XMLStringPool*                     fCategories;$/;"	m	class:RangeTokenMap
fCategoryId	include/xercesc/util/regx/RangeTokenMap.hpp	/^    unsigned int fCategoryId;$/;"	m	class:RangeTokenElemMap
fChanges	include/xercesc/dom/impl/DOMDeepNodeListImpl.hpp	/^    int              fChanges;$/;"	m	class:DOMDeepNodeListImpl
fChanges	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^    int                   fChanges;$/;"	m	class:DOMDocumentImpl
fCharBuf	include/xercesc/internal/XMLReader.hpp	/^    XMLCh                       fCharBuf[kCharBufSize];$/;"	m	class:XMLReader
fCharData	include/xercesc/util/regx/CharToken.hpp	/^    XMLInt32 fCharData;$/;"	m	class:CharToken
fCharData	include/xercesc/util/regx/Op.hpp	/^    XMLInt32 fCharData;$/;"	m	class:CharOp
fCharData	include/xercesc/util/regx/RegxParser.hpp	/^    XMLInt32                        fCharData;$/;"	m	class:RegxParser
fCharIndex	include/xercesc/internal/XMLReader.hpp	/^    XMLSize_t                   fCharIndex;$/;"	m	class:XMLReader
fCharOfsBuf	include/xercesc/internal/XMLReader.hpp	/^    unsigned int                fCharOfsBuf[kCharBufSize];$/;"	m	class:XMLReader
fCharSizeBuf	include/xercesc/internal/XMLReader.hpp	/^    unsigned char               fCharSizeBuf[kCharBufSize];$/;"	m	class:XMLReader
fCharacterData	include/xercesc/dom/impl/DOMCDATASectionImpl.hpp	/^    DOMCharacterDataImpl  fCharacterData;$/;"	m	class:DOMCDATASectionImpl
fCharacterData	include/xercesc/dom/impl/DOMCommentImpl.hpp	/^    DOMCharacterDataImpl   fCharacterData;$/;"	m	class:DOMCommentImpl
fCharacterData	include/xercesc/dom/impl/DOMProcessingInstructionImpl.hpp	/^    DOMCharacterDataImpl   fCharacterData;$/;"	m	class:DOMProcessingInstructionImpl
fCharacterData	include/xercesc/dom/impl/DOMTextImpl.hpp	/^    DOMCharacterDataImpl    fCharacterData;$/;"	m	class:DOMTextImpl
fCharsAvail	include/xercesc/internal/XMLReader.hpp	/^    XMLSize_t                   fCharsAvail;$/;"	m	class:XMLReader
fCharsWritten	include/xercesc/util/TransService.hpp	/^    XMLSize_t fCharsWritten;$/;"	m	class:TranscodeFromStr
fCharsetOverridesXMLEncoding	include/xercesc/parsers/DOMLSParserImpl.hpp	/^    bool                        fCharsetOverridesXMLEncoding;$/;"	m	class:DOMLSParserImpl
fCheckElementConsistency	include/xercesc/validators/schema/XercesGroupInfo.hpp	/^    bool                            fCheckElementConsistency;$/;"	m	class:XercesGroupInfo
fChild	include/xercesc/dom/impl/DOMCDATASectionImpl.hpp	/^    DOMChildNode          fChild;$/;"	m	class:DOMCDATASectionImpl
fChild	include/xercesc/dom/impl/DOMCommentImpl.hpp	/^    DOMChildNode           fChild;$/;"	m	class:DOMCommentImpl
fChild	include/xercesc/dom/impl/DOMDocumentTypeImpl.hpp	/^    DOMChildNode         fChild;$/;"	m	class:DOMDocumentTypeImpl
fChild	include/xercesc/dom/impl/DOMElementImpl.hpp	/^    DOMChildNode      fChild;$/;"	m	class:DOMElementImpl
fChild	include/xercesc/dom/impl/DOMEntityReferenceImpl.hpp	/^    DOMChildNode     fChild;$/;"	m	class:DOMEntityReferenceImpl
fChild	include/xercesc/dom/impl/DOMProcessingInstructionImpl.hpp	/^    DOMChildNode  fChild;$/;"	m	class:DOMProcessingInstructionImpl
fChild	include/xercesc/dom/impl/DOMTextImpl.hpp	/^    DOMChildNode            fChild;$/;"	m	class:DOMTextImpl
fChild	include/xercesc/util/regx/ClosureToken.hpp	/^    Token* fChild;$/;"	m	class:ClosureToken
fChild	include/xercesc/util/regx/Op.hpp	/^    const Op* fChild;$/;"	m	class:ChildOp
fChild	include/xercesc/util/regx/ParenToken.hpp	/^    Token* fChild;$/;"	m	class:ParenToken
fChild	include/xercesc/validators/common/CMUnaryOp.hpp	/^    CMNode*     fChild;$/;"	m	class:CMUnaryOp
fChild1	include/xercesc/util/regx/ConcatToken.hpp	/^    Token* fChild1;$/;"	m	class:ConcatToken
fChild2	include/xercesc/util/regx/ConcatToken.hpp	/^    Token* fChild2;$/;"	m	class:ConcatToken
fChildCapacity	include/xercesc/internal/ElemStack.hpp	/^        XMLSize_t           fChildCapacity;$/;"	m	struct:ElemStack::StackElem
fChildCount	include/xercesc/internal/ElemStack.hpp	/^        XMLSize_t           fChildCount;$/;"	m	struct:ElemStack::StackElem
fChildNodeList	include/xercesc/dom/impl/DOMParentNode.hpp	/^    DOMNodeListImpl            fChildNodeList;      \/\/ for GetChildNodes()$/;"	m	class:DOMParentNode
fChildOptional	include/xercesc/validators/common/AllContentModel.hpp	/^    bool*           fChildOptional;$/;"	m	class:AllContentModel
fChildSymbol	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    int fChildSymbol;$/;"	m	class:XPathScanner
fChildTypes	include/xercesc/validators/common/MixedContentModel.hpp	/^    ContentSpecNode::NodeTypes* fChildTypes;$/;"	m	class:MixedContentModel
fChildren	include/xercesc/internal/ElemStack.hpp	/^        QName**             fChildren;$/;"	m	struct:ElemStack::StackElem
fChildren	include/xercesc/util/regx/UnionToken.hpp	/^    RefVectorOf<Token>* fChildren;$/;"	m	class:UnionToken
fChildren	include/xercesc/validators/common/AllContentModel.hpp	/^    QName**         fChildren;$/;"	m	class:AllContentModel
fChildren	include/xercesc/validators/common/MixedContentModel.hpp	/^    QName**                     fChildren;$/;"	m	class:MixedContentModel
fCircularCheckIndex	include/xercesc/validators/schema/TraverseSchema.hpp	/^    XMLSize_t                                      fCircularCheckIndex;$/;"	m	class:TraverseSchema
fClassName	include/xercesc/internal/XProtoType.hpp	/^    XMLByte*          fClassName;$/;"	m	class:XProtoType
fCode	include/xercesc/util/XMLException.hpp	/^    XMLExcepts::Codes       fCode;$/;"	m	class:XMLException
fCol	include/xercesc/framework/psvi/XSAnnotation.hpp	/^    XMLFileLoc    fCol;$/;"	m	class:XSAnnotation
fCollapsed	include/xercesc/dom/impl/DOMRangeImpl.hpp	/^    bool         fCollapsed;$/;"	m	class:DOMRangeImpl
fColumnNo	include/xercesc/dom/impl/XSDElementNSImpl.hpp	/^    XMLFileLoc fColumnNo;   \/\/Column number$/;"	m	class:XSDElementNSImpl
fColumnNo	include/xercesc/validators/schema/XSDLocator.hpp	/^    XMLFileLoc fColumnNo;$/;"	m	class:XSDLocator
fColumnNum	include/xercesc/dom/impl/DOMLocatorImpl.hpp	/^    XMLFileLoc       fColumnNum;$/;"	m	class:DOMLocatorImpl
fColumnNumber	include/xercesc/sax/SAXParseException.hpp	/^    XMLFileLoc   fColumnNumber;$/;"	m	class:SAXParseException
fCommentOrPISeen	include/xercesc/internal/ElemStack.hpp	/^        bool                fCommentOrPISeen;$/;"	m	struct:ElemStack::StackElem
fCommentSymbol	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    int fCommentSymbol;$/;"	m	class:XPathScanner
fCompacted	include/xercesc/util/regx/RangeToken.hpp	/^    bool         fCompacted;$/;"	m	class:RangeToken
fCompleteWildCard	include/xercesc/validators/schema/XercesAttGroupInfo.hpp	/^    SchemaAttDef*              fCompleteWildCard;$/;"	m	class:XercesAttGroupInfo
fComplexTypeInfo	include/xercesc/framework/psvi/XSComplexTypeDefinition.hpp	/^    ComplexTypeInfo*        fComplexTypeInfo;$/;"	m	class:XSComplexTypeDefinition
fComplexTypeInfo	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^    ComplexTypeInfo*                   fComplexTypeInfo;$/;"	m	class:SchemaElementDecl
fComplexTypeRegistry	include/xercesc/validators/schema/SchemaGrammar.hpp	/^    RefHashTableOf<ComplexTypeInfo>*         fComplexTypeRegistry;$/;"	m	class:SchemaGrammar
fComplexTypeRegistry	include/xercesc/validators/schema/TraverseSchema.hpp	/^    RefHashTableOf<ComplexTypeInfo>*               fComplexTypeRegistry;$/;"	m	class:TraverseSchema
fComponentMap	include/xercesc/framework/psvi/XSModel.hpp	/^    XSNamedMap<XSObject>*                   fComponentMap[XSConstants::MULTIVALUE_FACET];$/;"	m	class:XSModel
fComponentMap	include/xercesc/framework/psvi/XSNamespaceItem.hpp	/^    XSNamedMap<XSObject>*                   fComponentMap[XSConstants::MULTIVALUE_FACET];$/;"	m	class:XSNamespaceItem
fComponentType	include/xercesc/framework/psvi/XSObject.hpp	/^    XSConstants::COMPONENT_TYPE fComponentType;$/;"	m	class:XSObject
fCompositorType	include/xercesc/framework/psvi/XSModelGroup.hpp	/^    COMPOSITOR_TYPE fCompositorType;$/;"	m	class:XSModelGroup
fConfiguration	include/xercesc/dom/impl/DOMNormalizer.hpp	/^    DOMConfigurationImpl *fConfiguration;$/;"	m	class:DOMNormalizer
fConstPool	include/xercesc/util/SynchronizedStringPool.hpp	/^    const XMLStringPool* fConstPool;$/;"	m	class:XMLSynchronizedStringPool
fConstraintType	include/xercesc/framework/psvi/XSAttributeUse.hpp	/^    XSConstants::VALUE_CONSTRAINT fConstraintType;   $/;"	m	class:XSAttributeUse
fConstraintType	include/xercesc/framework/psvi/XSWildcard.hpp	/^    NAMESPACE_CONSTRAINT fConstraintType;$/;"	m	class:XSWildcard
fConstraintValue	include/xercesc/framework/psvi/XSAttributeUse.hpp	/^    const XMLCh*                  fConstraintValue;$/;"	m	class:XSAttributeUse
fContent	include/xercesc/internal/IGXMLScanner.hpp	/^    XMLBuffer                               fContent;$/;"	m	class:IGXMLScanner
fContent	include/xercesc/internal/SGXMLScanner.hpp	/^    XMLBuffer                               fContent;$/;"	m	class:SGXMLScanner
fContent	include/xercesc/validators/datatype/ListDatatypeValidator.hpp	/^     const XMLCh*         fContent;$/;"	m	class:ListDatatypeValidator
fContentModel	include/xercesc/validators/DTD/DTDElementDecl.hpp	/^    XMLContentModel*            fContentModel;$/;"	m	class:DTDElementDecl
fContentModel	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^    XMLContentModel*                   fContentModel;$/;"	m	class:ComplexTypeInfo
fContentSpec	include/xercesc/validators/DTD/DTDElementDecl.hpp	/^    ContentSpecNode*            fContentSpec;$/;"	m	class:DTDElementDecl
fContentSpec	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^    ContentSpecNode*                   fContentSpec;$/;"	m	class:ComplexTypeInfo
fContentSpec	include/xercesc/validators/schema/XercesGroupInfo.hpp	/^    ContentSpecNode*                fContentSpec;$/;"	m	class:XercesGroupInfo
fContentSpecOrgURI	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^    unsigned int*                      fContentSpecOrgURI;$/;"	m	class:ComplexTypeInfo
fContentSpecOrgURISize	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^    unsigned int                       fContentSpecOrgURISize;$/;"	m	class:ComplexTypeInfo
fContentType	include/xercesc/util/NetAccessors/Curl/CurlURLInputStream.hpp	/^    XMLCh *             fContentType;$/;"	m	class:CurlURLInputStream
fContentType	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^    int                                fContentType;$/;"	m	class:ComplexTypeInfo
fContents	include/xercesc/framework/psvi/XSAnnotation.hpp	/^    XMLCh*        fContents;$/;"	m	class:XSAnnotation
fContextStack	include/xercesc/validators/schema/identity/XPathMatcherStack.hpp	/^    ValueStackOf<int>*          fContextStack;$/;"	m	class:XPathMatcherStack
fContextType	include/xercesc/validators/schema/XMLSchemaDescriptionImpl.hpp	/^    XMLSchemaDescription::ContextType      fContextType;$/;"	m	class:XMLSchemaDescriptionImpl
fCopyBufToStream	include/xercesc/framework/MemBufInputSource.hpp	/^    bool            fCopyBufToStream;$/;"	m	class:MemBufInputSource
fCount	include/xercesc/internal/VecAttrListImpl.hpp	/^    XMLSize_t                   fCount;$/;"	m	class:VecAttrListImpl
fCount	include/xercesc/internal/VecAttributesImpl.hpp	/^    XMLSize_t                   fCount;$/;"	m	class:VecAttributesImpl
fCount	include/xercesc/util/Hash2KeysSetOf.hpp	/^    XMLSize_t                           fCount;$/;"	m	class:Hash2KeysSetOf
fCount	include/xercesc/util/RefHash2KeysTableOf.hpp	/^    XMLSize_t                           fCount;$/;"	m	class:RefHash2KeysTableOf
fCount	include/xercesc/util/RefHashTableOf.hpp	/^    XMLSize_t                      fCount;$/;"	m	class:RefHashTableOf
fCount	include/xercesc/util/ValueHashTableOf.hpp	/^    XMLSize_t                        fCount;$/;"	m	class:ValueHashTableOf
fCount	include/xercesc/validators/DTD/DTDAttDefList.hpp	/^    XMLSize_t                               fCount;$/;"	m	class:DTDAttDefList
fCount	include/xercesc/validators/common/AllContentModel.hpp	/^    XMLSize_t       fCount;$/;"	m	class:AllContentModel
fCount	include/xercesc/validators/common/MixedContentModel.hpp	/^    XMLSize_t                   fCount;$/;"	m	class:MixedContentModel
fCount	include/xercesc/validators/schema/SchemaAttDefList.hpp	/^    XMLSize_t                                       fCount;$/;"	m	class:SchemaAttDefList
fCountingStates	include/xercesc/validators/common/DFAContentModel.hpp	/^    Occurence**                 fCountingStates;$/;"	m	class:DFAContentModel
fCreateCommentNodes	include/xercesc/parsers/AbstractDOMParser.hpp	/^    bool                          fCreateCommentNodes;$/;"	m	class:AbstractDOMParser
fCreateEntityReferenceNodes	include/xercesc/parsers/AbstractDOMParser.hpp	/^    bool                          fCreateEntityReferenceNodes;$/;"	m	class:AbstractDOMParser
fCreateObject	include/xercesc/internal/XProtoType.hpp	/^    XSerializable*    (*fCreateObject)(MemoryManager*);$/;"	m	class:XProtoType
fCreateReason	include/xercesc/framework/XMLAttDef.hpp	/^    CreateReasons   fCreateReason;   $/;"	m	class:XMLAttDef
fCreateReason	include/xercesc/framework/XMLElementDecl.hpp	/^    CreateReasons       fCreateReason;$/;"	m	class:XMLElementDecl
fCreateSchemaInfo	include/xercesc/parsers/AbstractDOMParser.hpp	/^    bool                          fCreateSchemaInfo;$/;"	m	class:AbstractDOMParser
fCurCol	include/xercesc/internal/XMLReader.hpp	/^    XMLFileLoc                  fCurCol;$/;"	m	class:XMLReader
fCurCount	include/xercesc/util/BaseRefVectorOf.hpp	/^    XMLSize_t       fCurCount;$/;"	m	class:BaseRefVectorOf
fCurCount	include/xercesc/util/ValueVectorOf.hpp	/^    XMLSize_t       fCurCount;$/;"	m	class:ValueVectorOf
fCurElem	include/xercesc/util/Hash2KeysSetOf.hpp	/^    Hash2KeysSetBucketElem*                 fCurElem;$/;"	m	class:Hash2KeysSetOfEnumerator
fCurElem	include/xercesc/util/RefHash2KeysTableOf.hpp	/^    RefHash2KeysTableBucketElem<TVal>*      fCurElem;$/;"	m	class:RefHash2KeysTableOfEnumerator
fCurElem	include/xercesc/util/RefHash3KeysIdPool.hpp	/^    RefHash3KeysTableBucketElem<TVal>*  fCurElem;$/;"	m	class:RefHash3KeysIdPoolEnumerator
fCurElem	include/xercesc/util/RefHashTableOf.hpp	/^    RefHashTableBucketElem<TVal>*         fCurElem;$/;"	m	class:RefHashTableOfEnumerator
fCurElem	include/xercesc/util/ValueHashTableOf.hpp	/^    ValueHashTableBucketElem<TVal>*  fCurElem;$/;"	m	class:ValueHashTableOfEnumerator
fCurEntity	include/xercesc/internal/ReaderMgr.hpp	/^    XMLEntityDecl*              fCurEntity;$/;"	m	class:ReaderMgr
fCurHash	include/xercesc/util/Hash2KeysSetOf.hpp	/^    XMLSize_t                               fCurHash;$/;"	m	class:Hash2KeysSetOfEnumerator
fCurHash	include/xercesc/util/RefHash2KeysTableOf.hpp	/^    XMLSize_t                               fCurHash;$/;"	m	class:RefHash2KeysTableOfEnumerator
fCurHash	include/xercesc/util/RefHash3KeysIdPool.hpp	/^    XMLSize_t                           fCurHash;$/;"	m	class:RefHash3KeysIdPoolEnumerator
fCurHash	include/xercesc/util/RefHashTableOf.hpp	/^    XMLSize_t                             fCurHash;$/;"	m	class:RefHashTableOfEnumerator
fCurHash	include/xercesc/util/ValueHashTableOf.hpp	/^    XMLSize_t                        fCurHash;$/;"	m	class:ValueHashTableOfEnumerator
fCurId	include/xercesc/util/StringPool.hpp	/^    unsigned int                fCurId;$/;"	m	class:XMLStringPool
fCurIndex	include/xercesc/util/BaseRefVectorOf.hpp	/^    XMLSize_t           fCurIndex;$/;"	m	class:BaseRefVectorEnumerator
fCurIndex	include/xercesc/util/BinMemInputStream.hpp	/^    XMLSize_t       fCurIndex;$/;"	m	class:BinMemInputStream
fCurIndex	include/xercesc/util/NameIdPool.hpp	/^    XMLSize_t               fCurIndex;$/;"	m	class:NameIdPoolEnumerator
fCurIndex	include/xercesc/util/RefArrayOf.hpp	/^    XMLSize_t           fCurIndex;$/;"	m	class:RefArrayEnumerator
fCurIndex	include/xercesc/util/RefHash3KeysIdPool.hpp	/^    XMLSize_t                           fCurIndex;$/;"	m	class:RefHash3KeysIdPoolEnumerator
fCurIndex	include/xercesc/util/RefStackOf.hpp	/^    XMLSize_t           fCurIndex;$/;"	m	class:RefStackEnumerator
fCurIndex	include/xercesc/util/ValueArrayOf.hpp	/^    XMLSize_t               fCurIndex;$/;"	m	class:ValueArrayEnumerator
fCurIndex	include/xercesc/util/ValueStackOf.hpp	/^    XMLSize_t               fCurIndex;$/;"	m	class:ValueStackEnumerator
fCurIndex	include/xercesc/util/ValueVectorOf.hpp	/^    XMLSize_t               fCurIndex;$/;"	m	class:ValueVectorEnumerator
fCurLine	include/xercesc/internal/XMLReader.hpp	/^    XMLFileLoc                  fCurLine;$/;"	m	class:XMLReader
fCurReader	include/xercesc/internal/ReaderMgr.hpp	/^    XMLReader*                  fCurReader;$/;"	m	class:ReaderMgr
fCurrentAttGroupInfo	include/xercesc/validators/schema/TraverseSchema.hpp	/^    XercesAttGroupInfo*                            fCurrentAttGroupInfo;$/;"	m	class:TraverseSchema
fCurrentBlock	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^    void*                 fCurrentBlock;$/;"	m	class:DOMDocumentImpl
fCurrentComplexType	include/xercesc/validators/schema/TraverseSchema.hpp	/^    ComplexTypeInfo*                               fCurrentComplexType;$/;"	m	class:TraverseSchema
fCurrentDV	include/xercesc/internal/XMLScanner.hpp	/^    DatatypeValidator* fCurrentDV;$/;"	m	struct:PSVIElemContext
fCurrentDatatypeValidator	include/xercesc/validators/schema/SchemaValidator.hpp	/^    DatatypeValidator*              fCurrentDatatypeValidator;$/;"	m	class:SchemaValidator
fCurrentEntity	include/xercesc/parsers/AbstractDOMParser.hpp	/^    DOMEntityImpl*                fCurrentEntity;$/;"	m	class:AbstractDOMParser
fCurrentGrammar	include/xercesc/internal/ElemStack.hpp	/^        Grammar*            fCurrentGrammar;$/;"	m	struct:ElemStack::StackElem
fCurrentGroupInfo	include/xercesc/validators/schema/TraverseSchema.hpp	/^    XercesGroupInfo*                               fCurrentGroupInfo;$/;"	m	class:TraverseSchema
fCurrentGroupStack	include/xercesc/validators/schema/TraverseSchema.hpp	/^    ValueVectorOf<unsigned int>*                   fCurrentGroupStack;$/;"	m	class:TraverseSchema
fCurrentIndexPlus1	include/xercesc/dom/impl/DOMDeepNodeListImpl.hpp	/^    XMLSize_t        fCurrentIndexPlus1;$/;"	m	class:DOMDeepNodeListImpl
fCurrentLine	include/xercesc/dom/impl/DOMLSSerializerImpl.hpp	/^    int                           fCurrentLine;$/;"	m	class:DOMLSSerializerImpl
fCurrentNode	include/xercesc/dom/impl/DOMDeepNodeListImpl.hpp	/^    DOMNode*         fCurrentNode;$/;"	m	class:DOMDeepNodeListImpl
fCurrentNode	include/xercesc/dom/impl/DOMNodeIteratorImpl.hpp	/^        DOMNode* fCurrentNode;$/;"	m	class:DOMNodeIteratorImpl
fCurrentNode	include/xercesc/dom/impl/DOMTreeWalkerImpl.hpp	/^        DOMNode* fCurrentNode;$/;"	m	class:DOMTreeWalkerImpl
fCurrentNode	include/xercesc/parsers/AbstractDOMParser.hpp	/^    DOMNode*                      fCurrentNode;$/;"	m	class:AbstractDOMParser
fCurrentParent	include/xercesc/parsers/AbstractDOMParser.hpp	/^    DOMNode*                      fCurrentParent;$/;"	m	class:AbstractDOMParser
fCurrentSchemaURL	include/xercesc/validators/schema/SchemaInfo.hpp	/^    XMLCh*                            fCurrentSchemaURL;$/;"	m	class:SchemaInfo
fCurrentScope	include/xercesc/internal/ElemStack.hpp	/^        unsigned int        fCurrentScope;$/;"	m	struct:ElemStack::StackElem
fCurrentScope	include/xercesc/validators/schema/TraverseSchema.hpp	/^    unsigned int                                   fCurrentScope;$/;"	m	class:TraverseSchema
fCurrentStep	include/xercesc/validators/schema/identity/XPathMatcher.hpp	/^    XMLSize_t*                              fCurrentStep;$/;"	m	class:XPathMatcher
fCurrentTypeInfo	include/xercesc/internal/XMLScanner.hpp	/^    ComplexTypeInfo*   fCurrentTypeInfo;$/;"	m	struct:PSVIElemContext
fCurrentTypeNameStack	include/xercesc/validators/schema/TraverseSchema.hpp	/^    ValueVectorOf<unsigned int>*                   fCurrentTypeNameStack;$/;"	m	class:TraverseSchema
fCurrentURI	include/xercesc/internal/ElemStack.hpp	/^        unsigned int        fCurrentURI;$/;"	m	struct:ElemStack::StackElem
fCurrentURI	include/xercesc/internal/ElemStack.hpp	/^        unsigned int        fCurrentURI;$/;"	m	struct:WFElemStack::StackElem
fDEFAULT_VALUES	include/xercesc/dom/impl/DOMConfigurationImpl.hpp	/^    static const unsigned short fDEFAULT_VALUES;$/;"	m	class:DOMConfigurationImpl
fDOMConfiguration	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^    DOMConfiguration*     fDOMConfiguration;$/;"	m	class:DOMDocumentImpl
fDOMImplementation	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^    DOMImplementation*    fDOMImplementation;$/;"	m	class:DOMDocumentImpl
fDTD	include/xercesc/validators/common/DFAContentModel.hpp	/^    bool                        fDTD;$/;"	m	class:DFAContentModel
fDTD	include/xercesc/validators/common/MixedContentModel.hpp	/^    bool                        fDTD;$/;"	m	class:MixedContentModel
fDTD	include/xercesc/validators/common/SimpleContentModel.hpp	/^    bool                       fDTD;$/;"	m	class:SimpleContentModel
fDTDElemNonDeclPool	include/xercesc/internal/DGXMLScanner.hpp	/^    NameIdPool<DTDElementDecl>* fDTDElemNonDeclPool;$/;"	m	class:DGXMLScanner
fDTDElemNonDeclPool	include/xercesc/internal/IGXMLScanner.hpp	/^    NameIdPool<DTDElementDecl>*             fDTDElemNonDeclPool;$/;"	m	class:IGXMLScanner
fDTDGrammar	include/xercesc/internal/DGXMLScanner.hpp	/^    DTDGrammar*                 fDTDGrammar;$/;"	m	class:DGXMLScanner
fDTDGrammar	include/xercesc/internal/IGXMLScanner.hpp	/^    DTDGrammar*                             fDTDGrammar;$/;"	m	class:IGXMLScanner
fDTDGrammar	include/xercesc/validators/DTD/DTDScanner.hpp	/^    DTDGrammar*                     fDTDGrammar;$/;"	m	class:DTDScanner
fDTDGrammar	include/xercesc/validators/DTD/DTDValidator.hpp	/^    DTDGrammar*                     fDTDGrammar;$/;"	m	class:DTDValidator
fDTDHandler	include/xercesc/parsers/SAX2XMLFilterImpl.hpp	/^    DTDHandler*                 fDTDHandler;$/;"	m	class:SAX2XMLFilterImpl
fDTDHandler	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^    DTDHandler*                 fDTDHandler;$/;"	m	class:SAX2XMLReaderImpl
fDTDHandler	include/xercesc/parsers/SAXParser.hpp	/^    DTDHandler*          fDTDHandler;$/;"	m	class:SAXParser
fDTDValidator	include/xercesc/internal/DGXMLScanner.hpp	/^    DTDValidator*               fDTDValidator;$/;"	m	class:DGXMLScanner
fDTDValidator	include/xercesc/internal/IGXMLScanner.hpp	/^    DTDValidator*                           fDTDValidator;$/;"	m	class:IGXMLScanner
fDV	include/xercesc/framework/psvi/PSVIAttribute.hpp	/^    DatatypeValidator *         fDV;$/;"	m	class:PSVIAttribute
fData	include/xercesc/dom/impl/DOMDeepNodeListPool.hpp	/^    TVal*                                     fData;$/;"	m	struct:DOMDeepNodeListPoolTableBucketElem
fData	include/xercesc/framework/psvi/XSValue.hpp	/^    } fData;$/;"	m	class:XSValue
fData	include/xercesc/internal/XSerializeEngine.hpp	/^    XSerializeEngine::XSerializedObjectId_t    fData;$/;"	m	class:XSerializedObjectId
fData	include/xercesc/util/Janitor.hpp	/^    T*  fData;$/;"	m	class:ArrayJanitor
fData	include/xercesc/util/Janitor.hpp	/^    T*  fData;$/;"	m	class:Janitor
fData	include/xercesc/util/RefHash2KeysTableOf.hpp	/^    TVal*                                fData;$/;"	m	struct:RefHash2KeysTableBucketElem
fData	include/xercesc/util/RefHash3KeysIdPool.hpp	/^    TVal*  fData;$/;"	m	struct:RefHash3KeysTableBucketElem
fData	include/xercesc/util/RefHashTableOf.hpp	/^  TVal*                           fData;$/;"	m	struct:RefHashTableBucketElem
fData	include/xercesc/util/ValueHashTableOf.hpp	/^    TVal                            fData;$/;"	m	struct:ValueHashTableBucketElem
fData	include/xercesc/util/XMLInteger.hpp	/^    int         fData;$/;"	m	class:XMLInteger
fData	include/xercesc/validators/datatype/XMLCanRepGroup.hpp	/^    CanRepGroup    fData;$/;"	m	class:XMLCanRepGroup
fDataAvailable	include/xercesc/util/NetAccessors/Curl/CurlURLInputStream.hpp	/^    bool				fDataAvailable;$/;"	m	class:CurlURLInputStream
fDataBuf	include/xercesc/dom/impl/DOMCharacterDataImpl.hpp	/^    DOMBuffer* fDataBuf;$/;"	m	class:DOMCharacterDataImpl
fDataBuf	include/xercesc/framework/LocalFileFormatTarget.hpp	/^    XMLByte*        fDataBuf;$/;"	m	class:LocalFileFormatTarget
fDataBuf	include/xercesc/framework/MemBufFormatTarget.hpp	/^    XMLByte*        fDataBuf;$/;"	m	class:MemBufFormatTarget
fDataBuf	include/xercesc/internal/BinMemOutputStream.hpp	/^    XMLByte*        fDataBuf;$/;"	m	class:BinMemOutputStream
fDataConverted	include/xercesc/util/XMLAbstractDoubleFloat.hpp	/^    bool                    fDataConverted;$/;"	m	class:XMLAbstractDoubleFloat
fDataOverflowed	include/xercesc/util/XMLAbstractDoubleFloat.hpp	/^    bool                    fDataOverflowed;$/;"	m	class:XMLAbstractDoubleFloat
fDataTypeReg	include/xercesc/validators/common/GrammarResolver.hpp	/^    DatatypeValidatorFactory*       fDataTypeReg;$/;"	m	class:GrammarResolver
fDataTypeRegistry	include/xercesc/framework/psvi/XSValue.hpp	/^    static ValueHashTableOf<DataType>*    fDataTypeRegistry;$/;"	m	class:XSValue
fDatatypeBuffer	include/xercesc/validators/schema/SchemaValidator.hpp	/^    XMLBuffer                       fDatatypeBuffer;$/;"	m	class:SchemaValidator
fDatatypeRegistry	include/xercesc/validators/schema/SchemaGrammar.hpp	/^    DatatypeValidatorFactory               fDatatypeRegistry;$/;"	m	class:SchemaGrammar
fDatatypeRegistry	include/xercesc/validators/schema/TraverseSchema.hpp	/^    DatatypeValidatorFactory*                      fDatatypeRegistry;$/;"	m	class:TraverseSchema
fDatatypeValidator	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^    DatatypeValidator*          fDatatypeValidator;$/;"	m	class:XSSimpleTypeDefinition
fDatatypeValidator	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^    DatatypeValidator*                 fDatatypeValidator;$/;"	m	class:ComplexTypeInfo
fDatatypeValidator	include/xercesc/validators/schema/SchemaAttDef.hpp	/^    DatatypeValidator*           fDatatypeValidator;    $/;"	m	class:SchemaAttDef
fDatatypeValidator	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^    DatatypeValidator*                 fDatatypeValidator; $/;"	m	class:SchemaElementDecl
fDeclHandler	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^    DeclHandler*                fDeclHandler;$/;"	m	class:SAX2XMLReaderImpl
fDeclStack	include/xercesc/validators/schema/TraverseSchema.hpp	/^    ValueVectorOf<const DOMElement*>*              fDeclStack;$/;"	m	class:TraverseSchema
fDeclared	include/xercesc/framework/XMLRefInfo.hpp	/^    bool        fDeclared;$/;"	m	class:XMLRefInfo
fDeclaredInIntSubset	include/xercesc/validators/DTD/DTDEntityDecl.hpp	/^    bool    fDeclaredInIntSubset;$/;"	m	class:DTDEntityDecl
fDefaultAttributes	include/xercesc/dom/impl/DOMElementImpl.hpp	/^    DOMAttrMapImpl    *fDefaultAttributes;$/;"	m	class:DOMElementImpl
fDefaultEntities	include/xercesc/validators/DTD/DTDGrammar.hpp	/^    static NameIdPool<DTDEntityDecl>* fDefaultEntities;$/;"	m	class:DTDGrammar
fDefaultType	include/xercesc/framework/XMLAttDef.hpp	/^    DefAttTypes     fDefaultType;$/;"	m	class:XMLAttDef
fDefaultValue	include/xercesc/dom/impl/DOMTypeInfoImpl.hpp	/^    const XMLCh*    fDefaultValue;$/;"	m	class:DOMTypeInfoImpl
fDefaultValue	include/xercesc/framework/psvi/PSVIItem.hpp	/^    const XMLCh*                fDefaultValue;$/;"	m	class:PSVIItem
fDefaultValue	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^    XMLCh*                             fDefaultValue;$/;"	m	class:SchemaElementDecl
fDefinedFacets	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^    int                         fDefinedFacets;$/;"	m	class:XSSimpleTypeDefinition
fDeleteNamespace	include/xercesc/framework/psvi/XSModel.hpp	/^    RefVectorOf<XSNamespaceItem>*           fDeleteNamespace;$/;"	m	class:XSModel
fDeleteParent	include/xercesc/framework/psvi/XSModel.hpp	/^    bool                                    fDeleteParent;$/;"	m	class:XSModel
fDeleteVector	include/xercesc/internal/XSObjectFactory.hpp	/^    RefVectorOf<XSObject>*               fDeleteVector;$/;"	m	class:XSObjectFactory
fDelimeters	include/xercesc/util/XMLStringTokenizer.hpp	/^    const XMLCh*        fDelimeters;$/;"	m	class:XMLStringTokenizer
fDepth	include/xercesc/validators/schema/XSDDOMParser.hpp	/^    int                          fDepth;$/;"	m	class:XSDDOMParser
fDerivedBy	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^    int                                fDerivedBy;$/;"	m	class:ComplexTypeInfo
fDescendantOrSelfSymbol	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    int fDescendantOrSelfSymbol;$/;"	m	class:XPathScanner
fDescendantSymbol	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    int fDescendantSymbol;$/;"	m	class:XPathScanner
fDetached	include/xercesc/dom/impl/DOMNodeIteratorImpl.hpp	/^        bool fDetached;$/;"	m	class:DOMNodeIteratorImpl
fDetached	include/xercesc/dom/impl/DOMRangeImpl.hpp	/^    bool         fDetached;$/;"	m	class:DOMRangeImpl
fDisableDefaultEntityResolution	include/xercesc/internal/XMLScanner.hpp	/^    bool                        fDisableDefaultEntityResolution;$/;"	m	class:XMLScanner
fDisallowedSubstitutions	include/xercesc/framework/psvi/XSElementDeclaration.hpp	/^    short                         fDisallowedSubstitutions;$/;"	m	class:XSElementDeclaration
fDivSymbol	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    int fDivSymbol;$/;"	m	class:XPathScanner
fDoNamespaces	include/xercesc/internal/XMLScanner.hpp	/^    bool                        fDoNamespaces;$/;"	m	class:XMLScanner
fDoReportError	include/xercesc/validators/schema/identity/ValueStore.hpp	/^    bool                        fDoReportError;$/;"	m	class:ValueStore
fDoSchema	include/xercesc/internal/XMLScanner.hpp	/^    bool                        fDoSchema;$/;"	m	class:XMLScanner
fDoXInclude	include/xercesc/parsers/AbstractDOMParser.hpp	/^    bool                          fDoXInclude;$/;"	m	class:AbstractDOMParser
fDoc	include/xercesc/dom/impl/DOMCharacterDataImpl.hpp	/^    DOMDocumentImpl* fDoc;$/;"	m	class:DOMCharacterDataImpl
fDoc	include/xercesc/dom/impl/DOMNodeIDMap.hpp	/^    DOMDocument *fDoc;                      \/\/ The owning document.$/;"	m	class:DOMNodeIDMap
fDoc	include/xercesc/dom/impl/DOMStringPool.hpp	/^    DOMDocumentImpl* fDoc;$/;"	m	class:DOMBuffer
fDocElement	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^    DOMElement*           fDocElement;$/;"	m	class:DOMDocumentImpl
fDocHandler	include/xercesc/internal/XMLScanner.hpp	/^    XMLDocumentHandler*         fDocHandler;$/;"	m	class:XMLScanner
fDocHandler	include/xercesc/parsers/SAX2XMLFilterImpl.hpp	/^    ContentHandler*		        fDocHandler;$/;"	m	class:SAX2XMLFilterImpl
fDocHandler	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^    ContentHandler*		fDocHandler ;$/;"	m	class:SAX2XMLReaderImpl
fDocHandler	include/xercesc/parsers/SAXParser.hpp	/^    DocumentHandler*     fDocHandler;$/;"	m	class:SAXParser
fDocType	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^    DOMDocumentType*      fDocType;$/;"	m	class:DOMDocumentImpl
fDocTypeHandler	include/xercesc/internal/XMLScanner.hpp	/^    DocTypeHandler*             fDocTypeHandler;$/;"	m	class:XMLScanner
fDocTypeHandler	include/xercesc/validators/DTD/DTDScanner.hpp	/^    DocTypeHandler*                 fDocTypeHandler;$/;"	m	class:DTDScanner
fDocTypeReaderId	include/xercesc/validators/DTD/DTDScanner.hpp	/^    XMLSize_t                       fDocTypeReaderId;$/;"	m	class:DTDScanner
fDocument	include/xercesc/dom/impl/DOMNodeIteratorImpl.hpp	/^        DOMDocument* fDocument;$/;"	m	class:DOMNodeIteratorImpl
fDocument	include/xercesc/dom/impl/DOMNormalizer.hpp	/^    DOMDocumentImpl *fDocument;$/;"	m	class:DOMNormalizer
fDocument	include/xercesc/dom/impl/DOMRangeImpl.hpp	/^    DOMDocument* fDocument;$/;"	m	class:DOMRangeImpl
fDocument	include/xercesc/parsers/AbstractDOMParser.hpp	/^    DOMDocumentImpl*              fDocument;$/;"	m	class:AbstractDOMParser
fDocumentAdoptedByUser	include/xercesc/parsers/AbstractDOMParser.hpp	/^    bool                          fDocumentAdoptedByUser;$/;"	m	class:AbstractDOMParser
fDocumentType	include/xercesc/parsers/AbstractDOMParser.hpp	/^    DOMDocumentTypeImpl*          fDocumentType;$/;"	m	class:AbstractDOMParser
fDocumentURI	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^    const XMLCh*          fDocumentURI;$/;"	m	class:DOMDocumentImpl
fDocumentVector	include/xercesc/parsers/AbstractDOMParser.hpp	/^    RefVectorOf<DOMDocumentImpl>* fDocumentVector;$/;"	m	class:AbstractDOMParser
fDocumentVersion	include/xercesc/dom/impl/DOMLSSerializerImpl.hpp	/^    const XMLCh                  *fDocumentVersion;$/;"	m	class:DOMLSSerializerImpl
fDot	include/xercesc/util/regx/TokenFactory.hpp	/^    Token*              fDot;$/;"	m	class:TokenFactory
fDumAttDef	include/xercesc/validators/DTD/DTDScanner.hpp	/^    DTDAttDef*                      fDumAttDef;$/;"	m	class:DTDScanner
fDumElemDecl	include/xercesc/validators/DTD/DTDScanner.hpp	/^    DTDElementDecl*                 fDumElemDecl;$/;"	m	class:DTDScanner
fDumEntityDecl	include/xercesc/validators/DTD/DTDScanner.hpp	/^    DTDEntityDecl*                  fDumEntityDecl;$/;"	m	class:DTDScanner
fDynamicBuffer	include/xercesc/validators/common/CMStateSet.hpp	/^    CMDynamicBuffer* fDynamicBuffer;$/;"	m	class:CMStateSet
fEOCPos	include/xercesc/validators/common/DFAContentModel.hpp	/^    unsigned int                fEOCPos;$/;"	m	class:DFAContentModel
fEasy	include/xercesc/util/NetAccessors/Curl/CurlURLInputStream.hpp	/^    CURL*				fEasy;$/;"	m	class:CurlURLInputStream
fElemAttrDefaultQualified	include/xercesc/validators/schema/SchemaInfo.hpp	/^    unsigned short                    fElemAttrDefaultQualified;$/;"	m	class:SchemaInfo
fElemCount	include/xercesc/internal/DGXMLScanner.hpp	/^    unsigned int                fElemCount;$/;"	m	class:DGXMLScanner
fElemCount	include/xercesc/internal/IGXMLScanner.hpp	/^    unsigned int                            fElemCount;$/;"	m	class:IGXMLScanner
fElemCount	include/xercesc/internal/SGXMLScanner.hpp	/^    unsigned int                            fElemCount;$/;"	m	class:SGXMLScanner
fElemCount	include/xercesc/util/regx/RangeToken.hpp	/^    unsigned int fElemCount;$/;"	m	class:RangeToken
fElemDeclPool	include/xercesc/validators/DTD/DTDGrammar.hpp	/^    NameIdPool<DTDElementDecl>*       fElemDeclPool;$/;"	m	class:DTDGrammar
fElemDeclPool	include/xercesc/validators/schema/SchemaGrammar.hpp	/^    RefHash3KeysIdPool<SchemaElementDecl>*   fElemDeclPool;$/;"	m	class:SchemaGrammar
fElemDepth	include/xercesc/internal/XMLScanner.hpp	/^    int                fElemDepth;$/;"	m	struct:PSVIElemContext
fElemDepth	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^    XMLSize_t                   fElemDepth;$/;"	m	class:SAX2XMLReaderImpl
fElemDepth	include/xercesc/parsers/SAXParser.hpp	/^    XMLSize_t            fElemDepth;$/;"	m	class:SAXParser
fElemId	include/xercesc/validators/DTD/DTDAttDef.hpp	/^    XMLSize_t       fElemId;$/;"	m	class:DTDAttDef
fElemId	include/xercesc/validators/schema/SchemaAttDef.hpp	/^    XMLSize_t                    fElemId;$/;"	m	class:SchemaAttDef
fElemIsSpecified	include/xercesc/validators/schema/SchemaValidator.hpp	/^    bool                            fElemIsSpecified;$/;"	m	class:SchemaValidator
fElemList	include/xercesc/util/BaseRefVectorOf.hpp	/^    TElem**         fElemList;$/;"	m	class:BaseRefVectorOf
fElemList	include/xercesc/util/ValueVectorOf.hpp	/^    TElem*          fElemList;$/;"	m	class:ValueVectorOf
fElemLoopState	include/xercesc/internal/IGXMLScanner.hpp	/^    unsigned int*                           fElemLoopState;$/;"	m	class:IGXMLScanner
fElemLoopState	include/xercesc/internal/SGXMLScanner.hpp	/^    unsigned int*                           fElemLoopState;$/;"	m	class:SGXMLScanner
fElemMap	include/xercesc/validators/common/DFAContentModel.hpp	/^    QName**                     fElemMap;$/;"	m	class:DFAContentModel
fElemMapSize	include/xercesc/validators/common/DFAContentModel.hpp	/^    unsigned int                fElemMapSize;$/;"	m	class:DFAContentModel
fElemMapType	include/xercesc/validators/common/DFAContentModel.hpp	/^    ContentSpecNode::NodeTypes* fElemMapType;$/;"	m	class:DFAContentModel
fElemMaxLength	include/xercesc/internal/ElemStack.hpp	/^        unsigned int        fElemMaxLength;$/;"	m	struct:WFElemStack::StackElem
fElemName	include/xercesc/validators/schema/identity/IdentityConstraint.hpp	/^    XMLCh*                 fElemName;$/;"	m	class:IdentityConstraint
fElemNonDeclPool	include/xercesc/internal/SGXMLScanner.hpp	/^    RefHash3KeysIdPool<SchemaElementDecl>*  fElemNonDeclPool;$/;"	m	class:SGXMLScanner
fElemNonDeclPool	include/xercesc/validators/DTD/DTDGrammar.hpp	/^    NameIdPool<DTDElementDecl>*       fElemNonDeclPool;$/;"	m	class:DTDGrammar
fElemNonDeclPool	include/xercesc/validators/schema/SchemaGrammar.hpp	/^    RefHash3KeysIdPool<SchemaElementDecl>*   fElemNonDeclPool;$/;"	m	class:SchemaGrammar
fElemQNameBuf	include/xercesc/parsers/SAXParser.hpp	/^    XMLBuffer            fElemQNameBuf;$/;"	m	class:SAXParser
fElemStack	include/xercesc/internal/ValidationContextImpl.hpp	/^    ElemStack*                          fElemStack;$/;"	m	class:ValidationContextImpl
fElemStack	include/xercesc/internal/XMLScanner.hpp	/^    ElemStack                   fElemStack;$/;"	m	class:XMLScanner
fElemState	include/xercesc/internal/IGXMLScanner.hpp	/^    unsigned int*                           fElemState;$/;"	m	class:IGXMLScanner
fElemState	include/xercesc/internal/SGXMLScanner.hpp	/^    unsigned int*                           fElemState;$/;"	m	class:SGXMLScanner
fElemStateSize	include/xercesc/internal/IGXMLScanner.hpp	/^    unsigned int                            fElemStateSize;$/;"	m	class:IGXMLScanner
fElemStateSize	include/xercesc/internal/SGXMLScanner.hpp	/^    unsigned int                            fElemStateSize;$/;"	m	class:SGXMLScanner
fElement	include/xercesc/validators/common/CMLeaf.hpp	/^    QName*          fElement;$/;"	m	class:CMLeaf
fElement	include/xercesc/validators/common/ContentSpecNode.hpp	/^    QName*              fElement;$/;"	m	class:ContentSpecNode
fElementDecl	include/xercesc/framework/psvi/PSVIElement.hpp	/^    XSElementDeclaration *fElementDecl;$/;"	m	class:PSVIElement
fElementDecl	include/xercesc/validators/common/ContentSpecNode.hpp	/^    XMLElementDecl*     fElementDecl;$/;"	m	class:ContentSpecNode
fElementDepth	include/xercesc/validators/schema/identity/IC_Selector.hpp	/^    int             fElementDepth;$/;"	m	class:SelectorMatcher
fElementId	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^    unsigned int                       fElementId;$/;"	m	class:ComplexTypeInfo
fElementIndex	include/xercesc/internal/WFXMLScanner.hpp	/^    unsigned int                       fElementIndex;$/;"	m	class:WFXMLScanner
fElementLookup	include/xercesc/internal/WFXMLScanner.hpp	/^    RefHashTableOf<XMLElementDecl>*    fElementLookup;  $/;"	m	class:WFXMLScanner
fElementName	include/xercesc/framework/XMLElementDecl.hpp	/^    QName*              fElementName;$/;"	m	class:XMLElementDecl
fElements	include/xercesc/dom/impl/DOMDocumentTypeImpl.hpp	/^    DOMNamedNodeMapImpl* fElements;$/;"	m	class:DOMDocumentTypeImpl
fElements	include/xercesc/internal/WFXMLScanner.hpp	/^    RefVectorOf<XMLElementDecl>*       fElements;$/;"	m	class:WFXMLScanner
fElements	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^    RefVectorOf<SchemaElementDecl>*    fElements;$/;"	m	class:ComplexTypeInfo
fElements	include/xercesc/validators/schema/XercesGroupInfo.hpp	/^    RefVectorOf<SchemaElementDecl>* fElements;$/;"	m	class:XercesGroupInfo
fEmpty	include/xercesc/util/regx/TokenFactory.hpp	/^    Token*              fEmpty;$/;"	m	class:TokenFactory
fEmptyNamespaceId	include/xercesc/internal/ElemStack.hpp	/^    unsigned int                 fEmptyNamespaceId;$/;"	m	class:ElemStack
fEmptyNamespaceId	include/xercesc/internal/ElemStack.hpp	/^    unsigned int    fEmptyNamespaceId;$/;"	m	class:WFElemStack
fEmptyNamespaceId	include/xercesc/internal/XMLScanner.hpp	/^    unsigned int                fEmptyNamespaceId;$/;"	m	class:XMLScanner
fEmptyNamespaceId	include/xercesc/validators/DTD/DTDScanner.hpp	/^    unsigned int                    fEmptyNamespaceId;$/;"	m	class:DTDScanner
fEmptyNamespaceId	include/xercesc/validators/schema/NamespaceScope.hpp	/^    unsigned int  fEmptyNamespaceId;$/;"	m	class:NamespaceScope
fEmptyNamespaceId	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    unsigned int                     fEmptyNamespaceId;$/;"	m	class:XercesXPath
fEmptyNamespaceURI	include/xercesc/validators/schema/TraverseSchema.hpp	/^    int                                            fEmptyNamespaceURI;$/;"	m	class:TraverseSchema
fEmptyOk	include/xercesc/validators/common/DFAContentModel.hpp	/^    bool                        fEmptyOk;$/;"	m	class:DFAContentModel
fEnclosingCTDefinition	include/xercesc/framework/psvi/XSAttributeDeclaration.hpp	/^    XSComplexTypeDefinition*    fEnclosingCTDefinition;$/;"	m	class:XSAttributeDeclaration
fEnclosingElementName	include/xercesc/validators/schema/XMLSchemaDescriptionImpl.hpp	/^    const QName*                           fEnclosingElementName;$/;"	m	class:XMLSchemaDescriptionImpl
fEnclosingScope	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^    unsigned int                       fEnclosingScope;$/;"	m	class:SchemaElementDecl
fEnclosingTypeDefinition	include/xercesc/framework/psvi/XSElementDeclaration.hpp	/^    XSComplexTypeDefinition*      fEnclosingTypeDefinition;$/;"	m	class:XSElementDeclaration
fEncoding	include/xercesc/dom/impl/DOMLSInputImpl.hpp	/^    XMLCh                        *fEncoding;$/;"	m	class:DOMLSInputImpl
fEncoding	include/xercesc/dom/impl/DOMLSOutputImpl.hpp	/^    XMLCh                        *fEncoding;$/;"	m	class:DOMLSOutputImpl
fEncoding	include/xercesc/internal/XMLReader.hpp	/^    XMLRecognizer::Encodings    fEncoding;$/;"	m	class:XMLReader
fEncoding	include/xercesc/sax/InputSource.hpp	/^    XMLCh*         fEncoding;$/;"	m	class:InputSource
fEncodingName	include/xercesc/util/TransENameMap.hpp	/^    XMLCh*  fEncodingName;$/;"	m	class:ENameMap
fEncodingName	include/xercesc/util/TransService.hpp	/^    XMLCh*          fEncodingName;$/;"	m	class:XMLTranscoder
fEncodingRegistry	include/xercesc/util/EncodingValidator.hpp	/^    ValueHashTableOf<bool>*   fEncodingRegistry;$/;"	m	class:EncodingValidator
fEncodingStr	include/xercesc/internal/XMLReader.hpp	/^    XMLCh*                      fEncodingStr;$/;"	m	class:XMLReader
fEncodingUsed	include/xercesc/dom/impl/DOMLSSerializerImpl.hpp	/^    const XMLCh                  *fEncodingUsed;$/;"	m	class:DOMLSSerializerImpl
fEnd	include/xercesc/util/XMLDateTime.hpp	/^    XMLSize_t    fEnd;$/;"	m	class:XMLDateTime
fEndContainer	include/xercesc/dom/impl/DOMRangeImpl.hpp	/^    DOMNode*     fEndContainer;$/;"	m	class:DOMRangeImpl
fEndOffset	include/xercesc/dom/impl/DOMRangeImpl.hpp	/^    XMLSize_t    fEndOffset;$/;"	m	class:DOMRangeImpl
fEndPositions	include/xercesc/util/regx/Match.hpp	/^    int* fEndPositions;$/;"	m	class:Match
fEntities	include/xercesc/dom/impl/DOMDocumentTypeImpl.hpp	/^    DOMNamedNodeMapImpl* fEntities;$/;"	m	class:DOMDocumentTypeImpl
fEntity	include/xercesc/internal/EndOfEntityException.hpp	/^    XMLEntityDecl*  fEntity;$/;"	m	class:EndOfEntityException
fEntityDeclPool	include/xercesc/internal/ValidationContextImpl.hpp	/^    const NameIdPool<DTDEntityDecl>*    fEntityDeclPool;$/;"	m	class:ValidationContextImpl
fEntityDeclPool	include/xercesc/validators/DTD/DTDGrammar.hpp	/^    NameIdPool<DTDEntityDecl>*        fEntityDeclPool;$/;"	m	class:DTDGrammar
fEntityDeclPoolRetrieved	include/xercesc/internal/XMLScanner.hpp	/^    bool                        fEntityDeclPoolRetrieved;$/;"	m	class:XMLScanner
fEntityExpansionCount	include/xercesc/internal/XMLScanner.hpp	/^    XMLSize_t                   fEntityExpansionCount;$/;"	m	class:XMLScanner
fEntityExpansionLimit	include/xercesc/internal/XMLScanner.hpp	/^    XMLSize_t                   fEntityExpansionLimit;$/;"	m	class:XMLScanner
fEntityExpansionLimit	include/xercesc/util/SecurityManager.hpp	/^    XMLSize_t fEntityExpansionLimit;$/;"	m	class:SecurityManager
fEntityHandler	include/xercesc/internal/ReaderMgr.hpp	/^    XMLEntityHandler*           fEntityHandler;$/;"	m	class:ReaderMgr
fEntityHandler	include/xercesc/internal/XMLScanner.hpp	/^    XMLEntityHandler*           fEntityHandler;$/;"	m	class:XMLScanner
fEntityHandler	include/xercesc/validators/schema/TraverseSchema.hpp	/^    XMLEntityHandler*                              fEntityHandler;$/;"	m	class:TraverseSchema
fEntityRefNodeCloned	include/xercesc/dom/impl/DOMEntityImpl.hpp	/^    bool                  fEntityRefNodeCloned;$/;"	m	class:DOMEntityImpl
fEntityResolver	include/xercesc/framework/Wrapper4DOMLSInput.hpp	/^    DOMLSResourceResolver*  fEntityResolver;$/;"	m	class:Wrapper4DOMLSInput
fEntityResolver	include/xercesc/parsers/DOMLSParserImpl.hpp	/^    DOMLSResourceResolver*      fEntityResolver;$/;"	m	class:DOMLSParserImpl
fEntityResolver	include/xercesc/parsers/SAX2XMLFilterImpl.hpp	/^    EntityResolver*             fEntityResolver;$/;"	m	class:SAX2XMLFilterImpl
fEntityResolver	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^    EntityResolver*             fEntityResolver;$/;"	m	class:SAX2XMLReaderImpl
fEntityResolver	include/xercesc/parsers/SAXParser.hpp	/^    EntityResolver*      fEntityResolver;$/;"	m	class:SAXParser
fEntityResolver	include/xercesc/parsers/XercesDOMParser.hpp	/^    EntityResolver*          fEntityResolver;$/;"	m	class:XercesDOMParser
fEntityStack	include/xercesc/internal/ReaderMgr.hpp	/^    RefStackOf<XMLEntityDecl>*  fEntityStack;$/;"	m	class:ReaderMgr
fEntityTable	include/xercesc/internal/SGXMLScanner.hpp	/^    ValueHashTableOf<XMLCh>*                fEntityTable;$/;"	m	class:SGXMLScanner
fEntityTable	include/xercesc/internal/WFXMLScanner.hpp	/^    ValueHashTableOf<XMLCh>*           fEntityTable;$/;"	m	class:WFXMLScanner
fEnum	include/xercesc/validators/DTD/DTDAttDefList.hpp	/^    RefHashTableOfEnumerator<DTDAttDef>*    fEnum;$/;"	m	class:DTDAttDefList
fEnum	include/xercesc/validators/schema/SchemaAttDefList.hpp	/^    RefHash2KeysTableOfEnumerator<SchemaAttDef>*    fEnum;$/;"	m	class:SchemaAttDefList
fEnumeration	include/xercesc/framework/XMLAttDef.hpp	/^    XMLCh*          fEnumeration;$/;"	m	class:XMLAttDef
fEnumeration	include/xercesc/validators/datatype/AbstractNumericFacetValidator.hpp	/^    RefVectorOf<XMLNumber>*  fEnumeration;    \/\/ save the actual value$/;"	m	class:AbstractNumericFacetValidator
fEnumeration	include/xercesc/validators/datatype/AbstractStringValidator.hpp	/^     RefArrayVectorOf<XMLCh>*  fEnumeration;$/;"	m	class:AbstractStringValidator
fEnumeration	include/xercesc/validators/datatype/UnionDatatypeValidator.hpp	/^     RefArrayVectorOf<XMLCh>*         fEnumeration;$/;"	m	class:UnionDatatypeValidator
fEnumerationInherited	include/xercesc/validators/datatype/AbstractNumericFacetValidator.hpp	/^    bool                     fEnumerationInherited;$/;"	m	class:AbstractNumericFacetValidator
fEnumerationInherited	include/xercesc/validators/datatype/AbstractStringValidator.hpp	/^     bool                 fEnumerationInherited;$/;"	m	class:AbstractStringValidator
fEnumerationInherited	include/xercesc/validators/datatype/UnionDatatypeValidator.hpp	/^     bool                             fEnumerationInherited;$/;"	m	class:UnionDatatypeValidator
fErrorCount	include/xercesc/dom/impl/DOMLSSerializerImpl.hpp	/^    int                           fErrorCount;$/;"	m	class:DOMLSSerializerImpl
fErrorCount	include/xercesc/internal/XMLScanner.hpp	/^    int                         fErrorCount;$/;"	m	class:XMLScanner
fErrorCount	include/xercesc/xinclude/XIncludeUtils.hpp	/^    XMLSize_t fErrorCount;$/;"	m	class:XIncludeUtils
fErrorHandler	include/xercesc/dom/impl/DOMConfigurationImpl.hpp	/^    DOMErrorHandler* fErrorHandler;$/;"	m	class:DOMConfigurationImpl
fErrorHandler	include/xercesc/dom/impl/DOMLSSerializerImpl.hpp	/^    DOMErrorHandler              *fErrorHandler;$/;"	m	class:DOMLSSerializerImpl
fErrorHandler	include/xercesc/dom/impl/DOMNormalizer.hpp	/^    DOMErrorHandler *fErrorHandler;$/;"	m	class:DOMNormalizer
fErrorHandler	include/xercesc/internal/XMLScanner.hpp	/^    ErrorHandler*               fErrorHandler;$/;"	m	class:XMLScanner
fErrorHandler	include/xercesc/parsers/DOMLSParserImpl.hpp	/^    DOMErrorHandler*            fErrorHandler;$/;"	m	class:DOMLSParserImpl
fErrorHandler	include/xercesc/parsers/SAX2XMLFilterImpl.hpp	/^    ErrorHandler*               fErrorHandler;$/;"	m	class:SAX2XMLFilterImpl
fErrorHandler	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^    ErrorHandler*               fErrorHandler;$/;"	m	class:SAX2XMLReaderImpl
fErrorHandler	include/xercesc/parsers/SAXParser.hpp	/^    ErrorHandler*        fErrorHandler;$/;"	m	class:SAXParser
fErrorHandler	include/xercesc/parsers/XercesDOMParser.hpp	/^    ErrorHandler*            fErrorHandler;$/;"	m	class:XercesDOMParser
fErrorOccurred	include/xercesc/internal/XMLScanner.hpp	/^    bool               fErrorOccurred;$/;"	m	struct:PSVIElemContext
fErrorOccurred	include/xercesc/validators/schema/SchemaValidator.hpp	/^    bool                            fErrorOccurred;$/;"	m	class:SchemaValidator
fErrorReporter	include/xercesc/framework/XMLValidator.hpp	/^    XMLErrorReporter*   fErrorReporter;$/;"	m	class:XMLValidator
fErrorReporter	include/xercesc/internal/XMLScanner.hpp	/^    XMLErrorReporter*           fErrorReporter;$/;"	m	class:XMLScanner
fErrorReporter	include/xercesc/validators/schema/TraverseSchema.hpp	/^    XMLErrorReporter*                              fErrorReporter;$/;"	m	class:TraverseSchema
fErrorReporter	include/xercesc/validators/schema/XSDErrorReporter.hpp	/^    XMLErrorReporter* fErrorReporter;$/;"	m	class:XSDErrorReporter
fErrorReporter	include/xercesc/xinclude/XIncludeUtils.hpp	/^    XMLErrorReporter *fErrorReporter;$/;"	m	class:XIncludeUtils
fErrorStack	include/xercesc/internal/IGXMLScanner.hpp	/^    ValueStackOf<bool>*                     fErrorStack;$/;"	m	class:IGXMLScanner
fErrorStack	include/xercesc/internal/SGXMLScanner.hpp	/^    ValueStackOf<bool>*                     fErrorStack;$/;"	m	class:SGXMLScanner
fEscapeFlags	include/xercesc/framework/XMLFormatter.hpp	/^    EscapeFlags                 fEscapeFlags;$/;"	m	class:XMLFormatter
fExitOnFirstFatal	include/xercesc/internal/XMLScanner.hpp	/^    bool                        fExitOnFirstFatal;$/;"	m	class:XMLScanner
fExitOnFirstFatal	include/xercesc/validators/schema/XSDErrorReporter.hpp	/^    bool              fExitOnFirstFatal;$/;"	m	class:XSDErrorReporter
fExpandEntityReferences	include/xercesc/dom/impl/DOMNodeIteratorImpl.hpp	/^        bool  fExpandEntityReferences;$/;"	m	class:DOMNodeIteratorImpl
fExpandEntityReferences	include/xercesc/dom/impl/DOMTreeWalkerImpl.hpp	/^        bool fExpandEntityReferences;$/;"	m	class:DOMTreeWalkerImpl
fExpression	include/xercesc/dom/impl/DOMXPathExpressionImpl.hpp	/^    XMLCh*                      fExpression;$/;"	m	class:DOMXPathExpressionImpl
fExpression	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    XMLCh*                           fExpression;$/;"	m	class:XercesXPath
fExternalAttribute	include/xercesc/framework/XMLAttDef.hpp	/^    bool            fExternalAttribute;$/;"	m	class:XMLAttDef
fExternalElement	include/xercesc/framework/XMLElementDecl.hpp	/^    bool                fExternalElement;$/;"	m	class:XMLElementDecl
fExternalNoNamespaceSchemaLocation	include/xercesc/internal/XMLScanner.hpp	/^    XMLCh*                      fExternalNoNamespaceSchemaLocation;$/;"	m	class:XMLScanner
fExternalSchemaLocation	include/xercesc/internal/XMLScanner.hpp	/^    XMLCh*                      fExternalSchemaLocation;$/;"	m	class:XMLScanner
fFacetKind	include/xercesc/framework/psvi/XSFacet.hpp	/^    XSSimpleTypeDefinition::FACET fFacetKind;$/;"	m	class:XSFacet
fFacetKind	include/xercesc/framework/psvi/XSMultiValueFacet.hpp	/^    XSSimpleTypeDefinition::FACET fFacetKind;$/;"	m	class:XSMultiValueFacet
fFacets	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^	RefHashTableOf<KVStringPair>*       fFacets;$/;"	m	class:DatatypeValidator
fFacetsDefined	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^    int                                 fFacetsDefined;$/;"	m	class:DatatypeValidator
fFacetsMap	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^    static ValueHashTableOf<unsigned short>* fFacetsMap;$/;"	m	class:GeneralAttributeCheck
fFailedRedefineList	include/xercesc/validators/schema/SchemaInfo.hpp	/^    ValueVectorOf<const DOMElement*>* fFailedRedefineList;$/;"	m	class:SchemaInfo
fFatalErrorIfNotFound	include/xercesc/sax/InputSource.hpp	/^    bool           fFatalErrorIfNotFound;$/;"	m	class:InputSource
fFeatures	include/xercesc/dom/impl/DOMLSSerializerImpl.hpp	/^    int                           fFeatures;$/;"	m	class:DOMLSSerializerImpl
fField	include/xercesc/validators/schema/identity/IC_Field.hpp	/^    IC_Field*       fField;$/;"	m	class:FieldMatcher
fFieldActivator	include/xercesc/validators/schema/identity/IC_Field.hpp	/^    FieldActivator* fFieldActivator;$/;"	m	class:FieldMatcher
fFieldActivator	include/xercesc/validators/schema/identity/IC_Selector.hpp	/^    FieldActivator* fFieldActivator;$/;"	m	class:SelectorMatcher
fFieldActivator	include/xercesc/validators/schema/identity/IdentityConstraintHandler.hpp	/^    FieldActivator*             fFieldActivator;$/;"	m	class:IdentityConstraintHandler
fFields	include/xercesc/validators/schema/identity/FieldValueMap.hpp	/^    ValueVectorOf<IC_Field*>*          fFields;$/;"	m	class:FieldValueMap
fFields	include/xercesc/validators/schema/identity/IdentityConstraint.hpp	/^    RefVectorOf<IC_Field>* fFields;$/;"	m	class:IdentityConstraint
fFilter	include/xercesc/dom/impl/DOMLSSerializerImpl.hpp	/^    DOMLSSerializerFilter        *fFilter;$/;"	m	class:DOMLSSerializerImpl
fFilter	include/xercesc/parsers/DOMLSParserImpl.hpp	/^    DOMLSParserFilter*          fFilter;$/;"	m	class:DOMLSParserImpl
fFilterAction	include/xercesc/parsers/DOMLSParserImpl.hpp	/^    ValueHashTableOf<DOMLSParserFilter::FilterAction, PtrHasher>*   fFilterAction;$/;"	m	class:DOMLSParserImpl
fFilterDelayedTextNodes	include/xercesc/parsers/DOMLSParserImpl.hpp	/^    ValueHashTableOf<bool, PtrHasher>*                              fFilterDelayedTextNodes;$/;"	m	class:DOMLSParserImpl
fFinal	include/xercesc/framework/psvi/XSTypeDefinition.hpp	/^    short             fFinal;$/;"	m	class:XSTypeDefinition
fFinalDefault	include/xercesc/validators/schema/SchemaInfo.hpp	/^    int                               fFinalDefault;$/;"	m	class:SchemaInfo
fFinalSet	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^    int                                 fFinalSet;$/;"	m	class:DatatypeValidator
fFinalSet	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^    int                                fFinalSet;$/;"	m	class:ComplexTypeInfo
fFinalSet	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^    int                                fFinalSet;$/;"	m	class:SchemaElementDecl
fFinalStateFlags	include/xercesc/validators/common/DFAContentModel.hpp	/^    bool*                       fFinalStateFlags;$/;"	m	class:DFAContentModel
fFinite	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^    bool                                fFinite;$/;"	m	class:DatatypeValidator
fFirst	include/xercesc/validators/common/ContentSpecNode.hpp	/^    ContentSpecNode*    fFirst;$/;"	m	class:ContentSpecNode
fFirstChar	include/xercesc/util/regx/RegularExpression.hpp	/^    RangeToken*        fFirstChar;$/;"	m	class:RegularExpression
fFirstChild	include/xercesc/dom/impl/DOMParentNode.hpp	/^    DOMNode                *fFirstChild;$/;"	m	class:DOMParentNode
fFirstChild	include/xercesc/validators/common/SimpleContentModel.hpp	/^    QName*                     fFirstChild;$/;"	m	class:SimpleContentModel
fFirstPos	include/xercesc/validators/common/CMNode.hpp	/^    CMStateSet*                fFirstPos;$/;"	m	class:CMNode
fFixed	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^    int                                 fFixed;$/;"	m	class:DatatypeValidator
fFixedFacets	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^    int                         fFixedFacets;$/;"	m	class:XSSimpleTypeDefinition
fFixedString	include/xercesc/util/regx/RegularExpression.hpp	/^    XMLCh*             fFixedString;$/;"	m	class:RegularExpression
fFixedStringOnly	include/xercesc/util/regx/RegularExpression.hpp	/^    bool               fFixedStringOnly;$/;"	m	class:RegularExpression
fFollowList	include/xercesc/validators/common/DFAContentModel.hpp	/^    CMStateSet**                fFollowList;$/;"	m	class:DFAContentModel
fFollowingSiblingSymbol	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    int fFollowingSiblingSymbol;$/;"	m	class:XPathScanner
fFollowingSymbol	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    int fFollowingSymbol;$/;"	m	class:XPathScanner
fForceXMLChEncoding	include/xercesc/framework/Wrapper4DOMLSInput.hpp	/^                            fForceXMLChEncoding;$/;"	m	class:Wrapper4DOMLSInput
fForcedEncoding	include/xercesc/internal/XMLReader.hpp	/^    bool                        fForcedEncoding;$/;"	m	class:XMLReader
fFormattedModel	include/xercesc/validators/DTD/DTDElementDecl.hpp	/^    XMLCh*                      fFormattedModel;$/;"	m	class:DTDElementDecl
fFormattedModel	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^    XMLCh*                             fFormattedModel;$/;"	m	class:ComplexTypeInfo
fFormattedString	include/xercesc/util/XMLAbstractDoubleFloat.hpp	/^    XMLCh*                  fFormattedString;$/;"	m	class:XMLAbstractDoubleFloat
fFormatter	include/xercesc/dom/impl/DOMLSSerializerImpl.hpp	/^    XMLFormatter                 *fFormatter;$/;"	m	class:DOMLSSerializerImpl
fForward	include/xercesc/dom/impl/DOMNodeIteratorImpl.hpp	/^        bool fForward;$/;"	m	class:DOMNodeIteratorImpl
fFractionDigits	include/xercesc/validators/datatype/DecimalDatatypeValidator.hpp	/^    unsigned int         fFractionDigits;$/;"	m	class:DecimalDatatypeValidator
fFragment	include/xercesc/util/XMLURL.hpp	/^    XMLCh*          fFragment;$/;"	m	class:XMLURL
fFragment	include/xercesc/util/XMLUri.hpp	/^    XMLCh*          fFragment;$/;"	m	class:XMLUri
fFreeBytesRemaining	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^    XMLSize_t             fFreeBytesRemaining,$/;"	m	class:DOMDocumentImpl
fFreePtr	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^    char*                 fFreePtr;$/;"	m	class:DOMDocumentImpl
fFromTable	include/xercesc/util/XML256TableTranscoder.hpp	/^    const XMLCh*                        fFromTable;$/;"	m	class:XML256TableTranscoder
fFullConstraintChecking	include/xercesc/validators/schema/TraverseSchema.hpp	/^    bool                                           fFullConstraintChecking;$/;"	m	class:TraverseSchema
fFullHandler	include/xercesc/framework/XMLBuffer.hpp	/^    XMLBufferFullHandler*       fFullHandler;$/;"	m	class:XMLBuffer
fFullSize	include/xercesc/framework/XMLBuffer.hpp	/^    XMLSize_t                   fFullSize;$/;"	m	class:XMLBuffer
fFullValidationDepth	include/xercesc/internal/XMLScanner.hpp	/^    int                fFullValidationDepth;$/;"	m	struct:PSVIElemContext
fGTLen	include/xercesc/framework/XMLFormatter.hpp	/^    XMLSize_t                   fGTLen;$/;"	m	class:XMLFormatter
fGTRef	include/xercesc/framework/XMLFormatter.hpp	/^    XMLByte*                    fGTRef;$/;"	m	class:XMLFormatter
fGenerateSyntheticAnnotations	include/xercesc/internal/XMLScanner.hpp	/^    bool                        fGenerateSyntheticAnnotations;$/;"	m	class:XMLScanner
fGlobalDeclarations	include/xercesc/validators/schema/TraverseSchema.hpp	/^    ValueVectorOf<unsigned int>**                  fGlobalDeclarations;$/;"	m	class:TraverseSchema
fGlobalICMap	include/xercesc/validators/schema/identity/ValueStoreCache.hpp	/^    RefHashTableOf<ValueStore, PtrHasher>*   fGlobalICMap;$/;"	m	class:ValueStoreCache
fGlobalMapStack	include/xercesc/validators/schema/identity/ValueStoreCache.hpp	/^    RefStackOf<RefHashTableOf<ValueStore, PtrHasher> >* fGlobalMapStack;$/;"	m	class:ValueStoreCache
fGlobalNamespaces	include/xercesc/internal/ElemStack.hpp	/^    StackElem*                   fGlobalNamespaces;$/;"	m	class:ElemStack
fGlobalPoolId	include/xercesc/internal/ElemStack.hpp	/^    unsigned int                 fGlobalPoolId;$/;"	m	class:ElemStack
fGlobalPoolId	include/xercesc/internal/ElemStack.hpp	/^    unsigned int    fGlobalPoolId;$/;"	m	class:WFElemStack
fGramDesc	include/xercesc/validators/DTD/DTDGrammar.hpp	/^    XMLDTDDescription*                fGramDesc;$/;"	m	class:DTDGrammar
fGramDesc	include/xercesc/validators/schema/SchemaGrammar.hpp	/^    XMLSchemaDescription*                    fGramDesc;$/;"	m	class:SchemaGrammar
fGrammar	include/xercesc/framework/psvi/XSNamespaceItem.hpp	/^    SchemaGrammar*          fGrammar;$/;"	m	class:XSNamespaceItem
fGrammar	include/xercesc/internal/XMLScanner.hpp	/^    Grammar*                    fGrammar;$/;"	m	class:XMLScanner
fGrammarBucket	include/xercesc/validators/common/GrammarResolver.hpp	/^    RefHashTableOf<Grammar>*        fGrammarBucket;$/;"	m	class:GrammarResolver
fGrammarFromPool	include/xercesc/validators/common/GrammarResolver.hpp	/^    RefHashTableOf<Grammar>*        fGrammarFromPool;$/;"	m	class:GrammarResolver
fGrammarPool	include/xercesc/internal/XSerializeEngine.hpp	/^    XMLGrammarPool*  const                 fGrammarPool;$/;"	m	class:XSerializeEngine
fGrammarPool	include/xercesc/parsers/AbstractDOMParser.hpp	/^    XMLGrammarPool*               fGrammarPool;$/;"	m	class:AbstractDOMParser
fGrammarPool	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^    XMLGrammarPool*             fGrammarPool;$/;"	m	class:SAX2XMLReaderImpl
fGrammarPool	include/xercesc/parsers/SAXParser.hpp	/^    XMLGrammarPool*      fGrammarPool;$/;"	m	class:SAXParser
fGrammarPool	include/xercesc/validators/common/GrammarResolver.hpp	/^    XMLGrammarPool*                 fGrammarPool;$/;"	m	class:GrammarResolver
fGrammarPoolFromExternalApplication	include/xercesc/validators/common/GrammarResolver.hpp	/^    bool                            fGrammarPoolFromExternalApplication;$/;"	m	class:GrammarResolver
fGrammarPoolMemoryManager	include/xercesc/internal/XMLScanner.hpp	/^    MemoryManager* const        fGrammarPoolMemoryManager;$/;"	m	class:XMLScanner
fGrammarPoolMemoryManager	include/xercesc/validators/DTD/DTDScanner.hpp	/^    MemoryManager*                  fGrammarPoolMemoryManager;$/;"	m	class:DTDScanner
fGrammarPoolMemoryManager	include/xercesc/validators/schema/TraverseSchema.hpp	/^    MemoryManager*                                 fGrammarPoolMemoryManager;$/;"	m	class:TraverseSchema
fGrammarPoolXSModel	include/xercesc/validators/common/GrammarResolver.hpp	/^    XSModel*                        fGrammarPoolXSModel;$/;"	m	class:GrammarResolver
fGrammarRegistry	include/xercesc/framework/XMLGrammarPoolImpl.hpp	/^    RefHashTableOf<Grammar>*            fGrammarRegistry;$/;"	m	class:XMLGrammarPoolImpl
fGrammarResolver	include/xercesc/internal/XMLScanner.hpp	/^    GrammarResolver* const      fGrammarResolver;$/;"	m	class:XMLScanner
fGrammarResolver	include/xercesc/parsers/AbstractDOMParser.hpp	/^    GrammarResolver*              fGrammarResolver;$/;"	m	class:AbstractDOMParser
fGrammarResolver	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^    GrammarResolver*            fGrammarResolver;$/;"	m	class:SAX2XMLReaderImpl
fGrammarResolver	include/xercesc/parsers/SAXParser.hpp	/^    GrammarResolver*     fGrammarResolver;$/;"	m	class:SAXParser
fGrammarResolver	include/xercesc/validators/schema/SchemaValidator.hpp	/^    GrammarResolver*                fGrammarResolver;$/;"	m	class:SchemaValidator
fGrammarResolver	include/xercesc/validators/schema/SubstitutionGroupComparator.hpp	/^    GrammarResolver     *fGrammarResolver;$/;"	m	class:SubstitutionGroupComparator
fGrammarResolver	include/xercesc/validators/schema/TraverseSchema.hpp	/^    GrammarResolver*                               fGrammarResolver;$/;"	m	class:TraverseSchema
fGrammarType	include/xercesc/internal/IGXMLScanner.hpp	/^    Grammar::GrammarType                    fGrammarType;$/;"	m	class:IGXMLScanner
fGrammarType	include/xercesc/internal/SGXMLScanner.hpp	/^    Grammar::GrammarType                    fGrammarType;$/;"	m	class:SGXMLScanner
fGrammarsToAddToXSModel	include/xercesc/validators/common/GrammarResolver.hpp	/^    ValueVectorOf<SchemaGrammar*>*  fGrammarsToAddToXSModel;$/;"	m	class:GrammarResolver
fGroupElemDeclPool	include/xercesc/validators/schema/SchemaGrammar.hpp	/^    RefHash3KeysIdPool<SchemaElementDecl>*   fGroupElemDeclPool;$/;"	m	class:SchemaGrammar
fGroupInfo	include/xercesc/framework/psvi/XSModelGroupDefinition.hpp	/^    XercesGroupInfo* fGroupInfo;$/;"	m	class:XSModelGroupDefinition
fGroupInfoRegistry	include/xercesc/validators/schema/SchemaGrammar.hpp	/^    RefHashTableOf<XercesGroupInfo>*         fGroupInfoRegistry;$/;"	m	class:SchemaGrammar
fGroupRegistry	include/xercesc/validators/schema/TraverseSchema.hpp	/^    RefHashTableOf<XercesGroupInfo>*               fGroupRegistry;$/;"	m	class:TraverseSchema
fHTTPMethod	include/xercesc/util/XMLNetAccessor.hpp	/^    HTTPMethod      fHTTPMethod;$/;"	m	class:XMLNetHTTPInfo
fHandle	include/xercesc/util/Mutexes.hpp	/^    void*          fHandle;$/;"	m	class:XMLMutex
fHandleMultipleImports	include/xercesc/internal/XMLScanner.hpp	/^    bool                        fHandleMultipleImports;$/;"	m	class:XMLScanner
fHasBackReferences	include/xercesc/util/regx/RegularExpression.hpp	/^    bool               fHasBackReferences;$/;"	m	class:RegularExpression
fHasBackReferences	include/xercesc/util/regx/RegxParser.hpp	/^    bool                            fHasBackReferences;$/;"	m	class:RegxParser
fHasExternalSubset	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^    bool                        fHasExternalSubset;$/;"	m	class:SAX2XMLReaderImpl
fHasInvalidChar	include/xercesc/util/XMLURL.hpp	/^    bool            fHasInvalidChar;$/;"	m	class:XMLURL
fHasNoDTD	include/xercesc/internal/XMLScanner.hpp	/^    bool                        fHasNoDTD;$/;"	m	class:XMLScanner
fHasOptionalContent	include/xercesc/validators/common/AllContentModel.hpp	/^    bool            fHasOptionalContent;$/;"	m	class:AllContentModel
fHasTime	include/xercesc/util/XMLDateTime.hpp	/^    bool         fHasTime;$/;"	m	class:XMLDateTime
fHash	include/xercesc/framework/psvi/XSNamedMap.hpp	/^    RefHash2KeysTableOf<TVal>*  fHash;$/;"	m	class:XSNamedMap
fHashMap	include/xercesc/framework/psvi/XSNamespaceItem.hpp	/^    RefHashTableOf<XSObject>*               fHashMap[XSConstants::MULTIVALUE_FACET];$/;"	m	class:XSNamespaceItem
fHashModulus	include/xercesc/dom/impl/DOMDeepNodeListPool.hpp	/^    XMLSize_t                                  fHashModulus;$/;"	m	class:DOMDeepNodeListPool
fHashModulus	include/xercesc/util/Hash2KeysSetOf.hpp	/^    XMLSize_t                           fHashModulus;$/;"	m	class:Hash2KeysSetOf
fHashModulus	include/xercesc/util/RefHash2KeysTableOf.hpp	/^    XMLSize_t                           fHashModulus;$/;"	m	class:RefHash2KeysTableOf
fHashModulus	include/xercesc/util/RefHash3KeysIdPool.hpp	/^    XMLSize_t                           fHashModulus;$/;"	m	class:RefHash3KeysIdPool
fHashModulus	include/xercesc/util/RefHashTableOf.hpp	/^    XMLSize_t                      fHashModulus;$/;"	m	class:RefHashTableOf
fHashModulus	include/xercesc/util/ValueHashTableOf.hpp	/^    XMLSize_t                        fHashModulus;$/;"	m	class:ValueHashTableOf
fHashNamespace	include/xercesc/framework/psvi/XSModel.hpp	/^    RefHashTableOf<XSNamespaceItem>*        fHashNamespace;$/;"	m	class:XSModel
fHashTable	include/xercesc/util/StringPool.hpp	/^    RefHashTableOf<PoolElem>*   fHashTable;$/;"	m	class:XMLStringPool
fHasher	include/xercesc/dom/impl/DOMDeepNodeListPool.hpp	/^    THasher                                    fHasher;$/;"	m	class:DOMDeepNodeListPool
fHasher	include/xercesc/util/Hash2KeysSetOf.hpp	/^    THasher				                fHasher;$/;"	m	class:Hash2KeysSetOf
fHasher	include/xercesc/util/RefHash2KeysTableOf.hpp	/^    THasher                             fHasher;$/;"	m	class:RefHash2KeysTableOf
fHasher	include/xercesc/util/RefHash3KeysIdPool.hpp	/^    THasher                             fHasher;$/;"	m	class:RefHash3KeysIdPool
fHasher	include/xercesc/util/RefHashTableOf.hpp	/^    THasher                        fHasher;$/;"	m	class:RefHashTableOf
fHasher	include/xercesc/util/ValueHashTableOf.hpp	/^    THasher                          fHasher;$/;"	m	class:ValueHashTableOf
fHeadNode	include/xercesc/validators/common/DFAContentModel.hpp	/^    CMNode*                     fHeadNode;$/;"	m	class:DFAContentModel
fHeaders	include/xercesc/util/XMLNetAccessor.hpp	/^    const char*     fHeaders;$/;"	m	class:XMLNetHTTPInfo
fHeadersLen	include/xercesc/util/XMLNetAccessor.hpp	/^    XMLSize_t       fHeadersLen;$/;"	m	class:XMLNetHTTPInfo
fHeapAllocSize	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^                          fHeapAllocSize;$/;"	m	class:DOMDocumentImpl
fHost	include/xercesc/util/XMLURL.hpp	/^    XMLCh*          fHost;$/;"	m	class:XMLURL
fHost	include/xercesc/util/XMLUri.hpp	/^    XMLCh*          fHost;$/;"	m	class:XMLUri
fHref	include/xercesc/xinclude/XIncludeLocation.hpp	/^    const XMLCh *fHref;$/;"	m	class:XIncludeLocation
fIC2ValueStoreMap	include/xercesc/validators/schema/identity/ValueStoreCache.hpp	/^    RefHash2KeysTableOf<ValueStore, PtrHasher>* fIC2ValueStoreMap;$/;"	m	class:ValueStoreCache
fICHandler	include/xercesc/internal/IGXMLScanner.hpp	/^    IdentityConstraintHandler*              fICHandler;$/;"	m	class:IGXMLScanner
fICHandler	include/xercesc/internal/SGXMLScanner.hpp	/^    IdentityConstraintHandler*              fICHandler;$/;"	m	class:SGXMLScanner
fIC_Elements	include/xercesc/validators/schema/TraverseSchema.hpp	/^    ValueVectorOf<SchemaElementDecl*>*             fIC_Elements;$/;"	m	class:TraverseSchema
fIC_ElementsNS	include/xercesc/validators/schema/TraverseSchema.hpp	/^    RefHashTableOf<ElemVector>*                    fIC_ElementsNS;$/;"	m	class:TraverseSchema
fIC_NodeListNS	include/xercesc/validators/schema/TraverseSchema.hpp	/^    RefHashTableOf<ValueVectorOf<DOMElement*>, PtrHasher>* fIC_NodeListNS;$/;"	m	class:TraverseSchema
fIDValidator	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^    IDDatatypeValidator                      fIDValidator;$/;"	m	class:GeneralAttributeCheck
fId	include/xercesc/framework/XMLAttDef.hpp	/^    XMLSize_t       fId;$/;"	m	class:XMLAttDef
fId	include/xercesc/framework/XMLElementDecl.hpp	/^    XMLSize_t           fId;$/;"	m	class:XMLElementDecl
fId	include/xercesc/framework/XMLEntityDecl.hpp	/^    XMLSize_t       fId;$/;"	m	class:XMLEntityDecl
fId	include/xercesc/framework/XMLNotationDecl.hpp	/^    XMLSize_t       fId;$/;"	m	class:XMLNotationDecl
fId	include/xercesc/framework/psvi/XSObject.hpp	/^    XMLSize_t                   fId;$/;"	m	class:XSObject
fId	include/xercesc/util/StringPool.hpp	/^        unsigned int  fId;$/;"	m	struct:XMLStringPool::PoolElem
fIdCounter	include/xercesc/dom/impl/DOMDeepNodeListPool.hpp	/^    XMLSize_t                                  fIdCounter;$/;"	m	class:DOMDeepNodeListPool
fIdCounter	include/xercesc/util/NameIdPool.hpp	/^    XMLSize_t                       fIdCounter;$/;"	m	class:NameIdPool
fIdCounter	include/xercesc/util/RefHash3KeysIdPool.hpp	/^    XMLSize_t                           fIdCounter;$/;"	m	class:RefHash3KeysIdPool
fIdMap	include/xercesc/util/StringPool.hpp	/^    PoolElem**                  fIdMap;$/;"	m	class:XMLStringPool
fIdPtrs	include/xercesc/dom/impl/DOMDeepNodeListPool.hpp	/^    TVal**                                     fIdPtrs;$/;"	m	class:DOMDeepNodeListPool
fIdPtrs	include/xercesc/util/NameIdPool.hpp	/^    TElem**                         fIdPtrs;$/;"	m	class:NameIdPool
fIdPtrs	include/xercesc/util/RefHash3KeysIdPool.hpp	/^    TVal**                              fIdPtrs;$/;"	m	class:RefHash3KeysIdPool
fIdPtrsCount	include/xercesc/dom/impl/DOMDeepNodeListPool.hpp	/^    XMLSize_t                                  fIdPtrsCount;$/;"	m	class:DOMDeepNodeListPool
fIdPtrsCount	include/xercesc/util/NameIdPool.hpp	/^    XMLSize_t                       fIdPtrsCount;$/;"	m	class:NameIdPool
fIdPtrsCount	include/xercesc/util/RefHash3KeysIdPool.hpp	/^    XMLSize_t                           fIdPtrsCount;$/;"	m	class:RefHash3KeysIdPool
fIdRefList	include/xercesc/internal/ValidationContextImpl.hpp	/^    RefHashTableOf<XMLRefInfo>*         fIdRefList;$/;"	m	class:ValidationContextImpl
fIdVector	include/xercesc/framework/psvi/XSModel.hpp	/^    RefVectorOf<XSObject>*                  fIdVector[XSConstants::MULTIVALUE_FACET];$/;"	m	class:XSModel
fIdentityConstraint	include/xercesc/framework/psvi/XSIDCDefinition.hpp	/^    IdentityConstraint* fIdentityConstraint;$/;"	m	class:XSIDCDefinition
fIdentityConstraint	include/xercesc/validators/schema/identity/IC_Field.hpp	/^    IdentityConstraint* fIdentityConstraint;$/;"	m	class:IC_Field
fIdentityConstraint	include/xercesc/validators/schema/identity/IC_Selector.hpp	/^    IdentityConstraint* fIdentityConstraint;$/;"	m	class:IC_Selector
fIdentityConstraint	include/xercesc/validators/schema/identity/ValueStore.hpp	/^    IdentityConstraint*         fIdentityConstraint;$/;"	m	class:ValueStore
fIdentityConstraint	include/xercesc/validators/schema/identity/XPathMatcher.hpp	/^    IdentityConstraint*                     fIdentityConstraint;$/;"	m	class:XPathMatcher
fIdentityConstraintChecking	include/xercesc/internal/XMLScanner.hpp	/^    bool                        fIdentityConstraintChecking;$/;"	m	class:XMLScanner
fIdentityConstraintName	include/xercesc/validators/schema/identity/IdentityConstraint.hpp	/^    XMLCh*                 fIdentityConstraintName;$/;"	m	class:IdentityConstraint
fIdentityConstraintNames	include/xercesc/validators/schema/TraverseSchema.hpp	/^    RefHash2KeysTableOf<IdentityConstraint>*       fIdentityConstraintNames;$/;"	m	class:TraverseSchema
fIdentityConstraints	include/xercesc/framework/psvi/XSElementDeclaration.hpp	/^    XSNamedMap<XSIDCDefinition>*  fIdentityConstraints;$/;"	m	class:XSElementDeclaration
fIdentityConstraints	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^    RefVectorOf<IdentityConstraint>*   fIdentityConstraints;$/;"	m	class:SchemaElementDecl
fIgnoreAnnotations	include/xercesc/internal/XMLScanner.hpp	/^    bool                        fIgnoreAnnotations;$/;"	m	class:XMLScanner
fIgnoreCachedDTD	include/xercesc/internal/XMLScanner.hpp	/^    bool                        fIgnoreCachedDTD;$/;"	m	class:XMLScanner
fIgnoreCase	include/xercesc/util/regx/BMPattern.hpp	/^    bool           fIgnoreCase;$/;"	m	class:BMPattern
fIgnoreSerializedAnnotations	include/xercesc/framework/XMLGrammarPool.hpp	/^    bool fIgnoreSerializedAnnotations;$/;"	m	class:XMLGrammarPool
fImplementationFeatures	include/xercesc/parsers/AbstractDOMParser.hpp	/^    XMLCh*                        fImplementationFeatures;$/;"	m	class:AbstractDOMParser
fImportedInfoList	include/xercesc/validators/schema/SchemaInfo.hpp	/^    RefVectorOf<SchemaInfo>*          fImportedInfoList;$/;"	m	class:SchemaInfo
fImportedNSList	include/xercesc/validators/schema/TraverseSchema.hpp	/^    ValueVectorOf<int>*                            fImportedNSList;$/;"	m	class:TraverseSchema
fImportingInfoList	include/xercesc/validators/schema/SchemaInfo.hpp	/^    RefVectorOf<SchemaInfo>*          fImportingInfoList;$/;"	m	class:SchemaInfo
fInException	include/xercesc/internal/XMLScanner.hpp	/^    bool                        fInException;$/;"	m	class:XMLScanner
fIncludeHistoryHead	include/xercesc/xinclude/XIncludeUtils.hpp	/^    XIncludeHistoryNode *fIncludeHistoryHead;$/;"	m	class:XIncludeUtils
fIncludeIgnorableWhitespace	include/xercesc/parsers/AbstractDOMParser.hpp	/^    bool                          fIncludeIgnorableWhitespace;$/;"	m	class:AbstractDOMParser
fIncludeInfoList	include/xercesc/validators/schema/SchemaInfo.hpp	/^    RefVectorOf<SchemaInfo>*          fIncludeInfoList;$/;"	m	class:SchemaInfo
fIndex	include/xercesc/dom/impl/DOMStringPool.hpp	/^    XMLSize_t        fIndex;$/;"	m	class:DOMBuffer
fIndex	include/xercesc/dom/impl/DOMXPathResultImpl.hpp	/^    XMLSize_t               fIndex;$/;"	m	class:DOMXPathResultImpl
fIndex	include/xercesc/framework/LocalFileFormatTarget.hpp	/^    XMLSize_t       fIndex;$/;"	m	class:LocalFileFormatTarget
fIndex	include/xercesc/framework/MemBufFormatTarget.hpp	/^    XMLSize_t       fIndex;$/;"	m	class:MemBufFormatTarget
fIndex	include/xercesc/framework/XMLBuffer.hpp	/^    XMLSize_t                   fIndex;$/;"	m	class:XMLBuffer
fIndex	include/xercesc/internal/BinMemOutputStream.hpp	/^    XMLSize_t       fIndex;$/;"	m	class:BinMemOutputStream
fIndexCount	include/xercesc/validators/common/CMStateSet.hpp	/^    XMLSize_t           fIndexCount;$/;"	m	class:CMStateSetEnumerator
fInitialDepth	include/xercesc/validators/schema/identity/IC_Selector.hpp	/^    int             fInitialDepth;$/;"	m	class:SelectorMatcher
fInitialModulus	include/xercesc/util/RefHashTableOf.hpp	/^    XMLSize_t                      fInitialModulus;$/;"	m	class:RefHashTableOf
fInitialModulus	include/xercesc/util/ValueHashTableOf.hpp	/^    XMLSize_t                        fInitialModulus;$/;"	m	class:ValueHashTableOf
fInnerAnnotationDepth	include/xercesc/validators/schema/XSDDOMParser.hpp	/^    int                          fInnerAnnotationDepth;$/;"	m	class:XSDDOMParser
fInputEncoding	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^    const XMLCh*          fInputEncoding;$/;"	m	class:DOMDocumentImpl
fInputEncoding	include/xercesc/dom/impl/DOMEntityImpl.hpp	/^    const XMLCh*          fInputEncoding;$/;"	m	class:DOMEntityImpl
fInputSource	include/xercesc/framework/Wrapper4DOMLSInput.hpp	/^    DOMLSInput*             fInputSource;$/;"	m	class:Wrapper4DOMLSInput
fInputSource	include/xercesc/framework/Wrapper4InputSource.hpp	/^    InputSource* fInputSource;$/;"	m	class:Wrapper4InputSource
fInputStream	include/xercesc/internal/XSerializeEngine.hpp	/^    BinInputStream*  const                 fInputStream;$/;"	m	class:XSerializeEngine
fInstance	include/xercesc/util/EncodingValidator.hpp	/^    static EncodingValidator* fInstance;$/;"	m	class:EncodingValidator
fInstance	include/xercesc/util/regx/RangeTokenMap.hpp	/^    static RangeTokenMap*              fInstance;$/;"	m	class:RangeTokenMap
fIntSubsetReading	include/xercesc/dom/impl/DOMDocumentTypeImpl.hpp	/^    bool			     fIntSubsetReading;$/;"	m	class:DOMDocumentTypeImpl
fIntVal	include/xercesc/util/XMLBigDecimal.hpp	/^    XMLCh*         fIntVal;$/;"	m	class:XMLBigDecimal
fInternalSubset	include/xercesc/dom/impl/DOMDocumentTypeImpl.hpp	/^    const XMLCh *        fInternalSubset;$/;"	m	class:DOMDocumentTypeImpl
fInternalSubset	include/xercesc/parsers/AbstractDOMParser.hpp	/^    XMLBuffer&                    fInternalSubset;$/;"	m	class:AbstractDOMParser
fInternalSubset	include/xercesc/validators/DTD/DTDScanner.hpp	/^    bool                            fInternalSubset;$/;"	m	class:DTDScanner
fIsCreatedFromHeap	include/xercesc/dom/impl/DOMDocumentTypeImpl.hpp	/^    bool                 fIsCreatedFromHeap;$/;"	m	class:DOMDocumentTypeImpl
fIsExternal	include/xercesc/framework/XMLEntityDecl.hpp	/^    bool            fIsExternal;$/;"	m	class:XMLEntityDecl
fIsFixed	include/xercesc/framework/psvi/XSFacet.hpp	/^    bool                          fIsFixed;$/;"	m	class:XSFacet
fIsFixed	include/xercesc/framework/psvi/XSMultiValueFacet.hpp	/^    bool                          fIsFixed;$/;"	m	class:XSMultiValueFacet
fIsMixed	include/xercesc/validators/common/AllContentModel.hpp	/^    bool            fIsMixed;$/;"	m	class:AllContentModel
fIsMixed	include/xercesc/validators/common/DFAContentModel.hpp	/^    bool                        fIsMixed;$/;"	m	class:DFAContentModel
fIsNullable	include/xercesc/validators/common/CMNode.hpp	/^    bool                       fIsNullable;$/;"	m	class:CMNode
fIsParameter	include/xercesc/validators/DTD/DTDEntityDecl.hpp	/^    bool    fIsParameter;$/;"	m	class:DTDEntityDecl
fIsSpecialChar	include/xercesc/validators/DTD/DTDEntityDecl.hpp	/^    bool    fIsSpecialChar;$/;"	m	class:DTDEntityDecl
fIsSpecified	include/xercesc/framework/psvi/PSVIItem.hpp	/^    bool                        fIsSpecified;$/;"	m	class:PSVIItem
fIsSpecified	include/xercesc/internal/XMLScanner.hpp	/^    bool               fIsSpecified;$/;"	m	struct:PSVIElemContext
fIsXML11	include/xercesc/framework/XMLFormatter.hpp	/^    bool                        fIsXML11;$/;"	m	class:XMLFormatter
fIssueFatalErrorIfNotFound	include/xercesc/dom/impl/DOMLSInputImpl.hpp	/^    bool                         fIssueFatalErrorIfNotFound;$/;"	m	class:DOMLSInputImpl
fKey	include/xercesc/framework/psvi/XSIDCDefinition.hpp	/^    XSIDCDefinition*    fKey;$/;"	m	class:XSIDCDefinition
fKey	include/xercesc/util/KVStringPair.hpp	/^    XMLCh*         fKey;$/;"	m	class:KVStringPair
fKey	include/xercesc/util/KeyRefPair.hpp	/^        TKey*    fKey;$/;"	m	class:KeyRefPair
fKey	include/xercesc/util/KeyValuePair.hpp	/^        TKey    fKey;$/;"	m	class:KeyValuePair
fKey	include/xercesc/util/RefHashTableOf.hpp	/^  void*                           fKey;$/;"	m	struct:RefHashTableBucketElem
fKey	include/xercesc/util/ValueHashTableOf.hpp	/^    void*                           fKey;$/;"	m	struct:ValueHashTableBucketElem
fKey	include/xercesc/validators/schema/identity/IC_KeyRef.hpp	/^    IdentityConstraint* fKey;$/;"	m	class:IC_KeyRef
fKey1	include/xercesc/dom/impl/DOMDeepNodeListPool.hpp	/^    void*                                     fKey1;$/;"	m	struct:DOMDeepNodeListPoolTableBucketElem
fKey1	include/xercesc/util/Hash2KeysSetOf.hpp	/^    const void*                          fKey1;$/;"	m	struct:Hash2KeysSetBucketElem
fKey1	include/xercesc/util/RefHash2KeysTableOf.hpp	/^    void*                                fKey1;$/;"	m	struct:RefHash2KeysTableBucketElem
fKey1	include/xercesc/util/RefHash3KeysIdPool.hpp	/^    void*  fKey1;$/;"	m	struct:RefHash3KeysTableBucketElem
fKey2	include/xercesc/dom/impl/DOMDeepNodeListPool.hpp	/^    XMLCh*                                    fKey2;$/;"	m	struct:DOMDeepNodeListPoolTableBucketElem
fKey2	include/xercesc/util/Hash2KeysSetOf.hpp	/^    int                                  fKey2;$/;"	m	struct:Hash2KeysSetBucketElem
fKey2	include/xercesc/util/RefHash2KeysTableOf.hpp	/^    int                                  fKey2;$/;"	m	struct:RefHash2KeysTableBucketElem
fKey2	include/xercesc/util/RefHash3KeysIdPool.hpp	/^    int    fKey2;$/;"	m	struct:RefHash3KeysTableBucketElem
fKey3	include/xercesc/dom/impl/DOMDeepNodeListPool.hpp	/^    XMLCh*                                    fKey3;$/;"	m	struct:DOMDeepNodeListPoolTableBucketElem
fKey3	include/xercesc/util/RefHash3KeysIdPool.hpp	/^    int    fKey3;$/;"	m	struct:RefHash3KeysTableBucketElem
fKeyAllocSize	include/xercesc/util/KVStringPair.hpp	/^    XMLSize_t      fKeyAllocSize;$/;"	m	class:KVStringPair
fKeywordsInitialized	include/xercesc/util/regx/RangeFactory.hpp	/^    bool fKeywordsInitialized;$/;"	m	class:RangeFactory
fLTLen	include/xercesc/framework/XMLFormatter.hpp	/^    XMLSize_t                   fLTLen;$/;"	m	class:XMLFormatter
fLTRef	include/xercesc/framework/XMLFormatter.hpp	/^    XMLByte*                    fLTRef;$/;"	m	class:XMLFormatter
fLastPos	include/xercesc/validators/common/CMNode.hpp	/^    CMStateSet*                fLastPos;$/;"	m	class:CMNode
fLastTopLevelComponent	include/xercesc/validators/schema/SchemaInfo.hpp	/^    DOMElement*                       fLastTopLevelComponent[C_Count];$/;"	m	class:SchemaInfo
fLastValue	include/xercesc/validators/common/CMStateSet.hpp	/^    XMLInt32            fLastValue;$/;"	m	class:CMStateSetEnumerator
fLastWhiteSpaceInTextNode	include/xercesc/dom/impl/DOMLSSerializerImpl.hpp	/^    unsigned int                  fLastWhiteSpaceInTextNode;$/;"	m	class:DOMLSSerializerImpl
fLeafCount	include/xercesc/validators/common/ContentLeafNameTypeVector.hpp	/^    XMLSize_t                     fLeafCount;$/;"	m	class:ContentLeafNameTypeVector
fLeafCount	include/xercesc/validators/common/DFAContentModel.hpp	/^    unsigned int                fLeafCount;$/;"	m	class:DFAContentModel
fLeafList	include/xercesc/validators/common/DFAContentModel.hpp	/^    CMLeaf**                    fLeafList;$/;"	m	class:DFAContentModel
fLeafListType	include/xercesc/validators/common/DFAContentModel.hpp	/^    ContentSpecNode::NodeTypes* fLeafListType;$/;"	m	class:DFAContentModel
fLeafNameTypeVector	include/xercesc/validators/common/DFAContentModel.hpp	/^    ContentLeafNameTypeVector * fLeafNameTypeVector;$/;"	m	class:DFAContentModel
fLeafNames	include/xercesc/validators/common/ContentLeafNameTypeVector.hpp	/^    QName**                       fLeafNames;$/;"	m	class:ContentLeafNameTypeVector
fLeafTypes	include/xercesc/validators/common/ContentLeafNameTypeVector.hpp	/^    ContentSpecNode::NodeTypes   *fLeafTypes;$/;"	m	class:ContentLeafNameTypeVector
fLeftChild	include/xercesc/validators/common/CMBinaryOp.hpp	/^    CMNode* fLeftChild;$/;"	m	class:CMBinaryOp
fLength	include/xercesc/util/regx/RegularExpression.hpp	/^            XMLSize_t      fLength;    \/\/ fLimit - fStart$/;"	m	class:RegularExpression::Context
fLength	include/xercesc/validators/datatype/AbstractStringValidator.hpp	/^     XMLSize_t            fLength;$/;"	m	class:AbstractStringValidator
fLexicalHandler	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^    LexicalHandler*             fLexicalHandler;$/;"	m	class:SAX2XMLReaderImpl
fLexicalValue	include/xercesc/framework/psvi/XSFacet.hpp	/^    const XMLCh*                  fLexicalValue;$/;"	m	class:XSFacet
fLexicalValues	include/xercesc/framework/psvi/XSMultiValueFacet.hpp	/^    StringList*                   fLexicalValues;  \/\/ not owned by this class$/;"	m	class:XSMultiValueFacet
fLimit	include/xercesc/util/regx/RegularExpression.hpp	/^            XMLSize_t      fLimit;$/;"	m	class:RegularExpression::Context
fLine	include/xercesc/framework/psvi/XSAnnotation.hpp	/^    XMLFileLoc    fLine;$/;"	m	class:XSAnnotation
fLineBegin	include/xercesc/util/regx/TokenFactory.hpp	/^    Token*              fLineBegin;$/;"	m	class:TokenFactory
fLineEnd	include/xercesc/util/regx/TokenFactory.hpp	/^    Token*              fLineEnd;$/;"	m	class:TokenFactory
fLineFeedInTextNodePrinted	include/xercesc/dom/impl/DOMLSSerializerImpl.hpp	/^    bool                          fLineFeedInTextNodePrinted;$/;"	m	class:DOMLSSerializerImpl
fLineNo	include/xercesc/dom/impl/XSDElementNSImpl.hpp	/^    XMLFileLoc fLineNo;     \/\/Line number$/;"	m	class:XSDElementNSImpl
fLineNo	include/xercesc/validators/schema/XSDLocator.hpp	/^    XMLFileLoc fLineNo;$/;"	m	class:XSDLocator
fLineNum	include/xercesc/dom/impl/DOMLocatorImpl.hpp	/^    XMLFileLoc       fLineNum;$/;"	m	class:DOMLocatorImpl
fLineNumber	include/xercesc/sax/SAXParseException.hpp	/^    XMLFileLoc   fLineNumber;$/;"	m	class:SAXParseException
fList	include/xercesc/dom/impl/DOMImplementationListImpl.hpp	/^    RefVectorOf<DOMImplementation>   *fList;$/;"	m	class:DOMImplementationListImpl
fList	include/xercesc/dom/impl/DOMStringListImpl.hpp	/^    RefVectorOf<XMLCh>   *fList;$/;"	m	class:DOMStringListImpl
fList	include/xercesc/validators/DTD/DTDAttDefList.hpp	/^    RefHashTableOf<DTDAttDef>*              fList;$/;"	m	class:DTDAttDefList
fList	include/xercesc/validators/schema/SchemaAttDefList.hpp	/^    RefHash2KeysTableOf<SchemaAttDef>*              fList;$/;"	m	class:SchemaAttDefList
fLiteral	include/xercesc/util/regx/Op.hpp	/^    XMLCh* fLiteral;$/;"	m	class:StringOp
fLoadExternalDTD	include/xercesc/internal/XMLScanner.hpp	/^    bool                        fLoadExternalDTD;$/;"	m	class:XMLScanner
fLoadPool	include/xercesc/internal/XSerializeEngine.hpp	/^    ValueVectorOf<void*>*                  fLoadPool;$/;"	m	class:XSerializeEngine
fLoadSchema	include/xercesc/internal/XMLScanner.hpp	/^    bool                        fLoadSchema;$/;"	m	class:XMLScanner
fLocalName	include/xercesc/dom/impl/DOMAttrNSImpl.hpp	/^    const XMLCh * fLocalName;        \/\/local part of qualified name$/;"	m	class:DOMAttrNSImpl
fLocalName	include/xercesc/dom/impl/DOMElementNSImpl.hpp	/^    const XMLCh * fLocalName;        \/\/local part of qualified name$/;"	m	class:DOMElementNSImpl
fLocalPart	include/xercesc/util/QName.hpp	/^    XMLCh*              fLocalPart;$/;"	m	class:QName
fLocalPartBufSz	include/xercesc/util/QName.hpp	/^    XMLSize_t           fLocalPartBufSz;$/;"	m	class:QName
fLocale	include/xercesc/util/XMLMsgLoader.hpp	/^    static char*    fLocale;$/;"	m	class:XMLMsgLoader
fLocation	include/xercesc/dom/impl/DOMErrorImpl.hpp	/^    DOMLocator*   fLocation;$/;"	m	class:DOMErrorImpl
fLocationHints	include/xercesc/validators/schema/XMLSchemaDescriptionImpl.hpp	/^    RefArrayVectorOf<XMLCh>*               fLocationHints;$/;"	m	class:XMLSchemaDescriptionImpl
fLocationPairs	include/xercesc/internal/IGXMLScanner.hpp	/^    ValueVectorOf<XMLCh*>*                  fLocationPairs;$/;"	m	class:IGXMLScanner
fLocationPathSize	include/xercesc/validators/schema/identity/XPathMatcher.hpp	/^    XMLSize_t                               fLocationPathSize;$/;"	m	class:XPathMatcher
fLocationPaths	include/xercesc/validators/schema/identity/XPathMatcher.hpp	/^    RefVectorOf<XercesLocationPath>*        fLocationPaths;$/;"	m	class:XPathMatcher
fLocationPaths	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    RefVectorOf<XercesLocationPath>* fLocationPaths;$/;"	m	class:XercesXPath
fLocator	include/xercesc/util/XMLResourceIdentifier.hpp	/^    const Locator*                  fLocator;$/;"	m	class:XMLResourceIdentifier
fLocator	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^    XSDLocator*                        fLocator;$/;"	m	class:ComplexTypeInfo
fLocator	include/xercesc/validators/schema/TraverseSchema.hpp	/^    XSDLocator*                                    fLocator;$/;"	m	class:TraverseSchema
fLocator	include/xercesc/validators/schema/XercesGroupInfo.hpp	/^    XSDLocator*                     fLocator;$/;"	m	class:XercesGroupInfo
fLockPrimaryKey	include/xercesc/util/Hash2KeysSetOf.hpp	/^    const void*                             fLockPrimaryKey;$/;"	m	class:Hash2KeysSetOfEnumerator
fLockPrimaryKey	include/xercesc/util/RefHash2KeysTableOf.hpp	/^    const void*                             fLockPrimaryKey;$/;"	m	class:RefHash2KeysTableOfEnumerator
fLocked	include/xercesc/framework/XMLGrammarPoolImpl.hpp	/^    bool                                fLocked;$/;"	m	class:XMLGrammarPoolImpl
fLowWaterMark	include/xercesc/internal/XMLReader.hpp	/^    XMLSize_t                   fLowWaterMark;$/;"	m	class:XMLReader
fLowWaterMark	include/xercesc/internal/XMLScanner.hpp	/^    XMLSize_t                   fLowWaterMark;$/;"	m	class:XMLScanner
fMagnitude	include/xercesc/util/XMLBigInteger.hpp	/^    XMLCh*      fMagnitude;  \/\/null terminated$/;"	m	class:XMLBigInteger
fManager	include/xercesc/dom/impl/DOMXPathNSResolverImpl.hpp	/^    MemoryManager*                fManager;$/;"	m	class:DOMXPathNSResolverImpl
fManager	include/xercesc/util/Mutexes.hpp	/^    MemoryManager* fManager;$/;"	m	class:XMLMutex
fMap	include/xercesc/internal/ElemStack.hpp	/^        PrefMapElem*        fMap;$/;"	m	struct:ElemStack::StackElem
fMap	include/xercesc/internal/ElemStack.hpp	/^    PrefMapElem*    fMap;$/;"	m	class:WFElemStack
fMap	include/xercesc/util/regx/RangeToken.hpp	/^    int*         fMap;$/;"	m	class:RangeToken
fMap	include/xercesc/validators/schema/NamespaceScope.hpp	/^        PrefMapElem*        fMap;$/;"	m	struct:NamespaceScope::StackElem
fMapCapacity	include/xercesc/internal/ElemStack.hpp	/^        XMLSize_t           fMapCapacity;$/;"	m	struct:ElemStack::StackElem
fMapCapacity	include/xercesc/internal/ElemStack.hpp	/^    XMLSize_t       fMapCapacity;$/;"	m	class:WFElemStack
fMapCapacity	include/xercesc/util/StringPool.hpp	/^    unsigned int                fMapCapacity;$/;"	m	class:XMLStringPool
fMapCapacity	include/xercesc/validators/schema/NamespaceScope.hpp	/^        unsigned int        fMapCapacity;$/;"	m	struct:NamespaceScope::StackElem
fMapCount	include/xercesc/internal/ElemStack.hpp	/^        XMLSize_t           fMapCount;$/;"	m	struct:ElemStack::StackElem
fMapCount	include/xercesc/validators/schema/NamespaceScope.hpp	/^        unsigned int        fMapCount;$/;"	m	struct:NamespaceScope::StackElem
fMatch	include/xercesc/util/regx/RegularExpression.hpp	/^            Match*         fMatch;$/;"	m	class:RegularExpression::Context
fMatchAll	include/xercesc/dom/impl/DOMDeepNodeListImpl.hpp	/^    bool             fMatchAll;$/;"	m	class:DOMDeepNodeListImpl
fMatchAllURI	include/xercesc/dom/impl/DOMDeepNodeListImpl.hpp	/^    bool	     fMatchAllURI;$/;"	m	class:DOMDeepNodeListImpl
fMatchURIandTagname	include/xercesc/dom/impl/DOMDeepNodeListImpl.hpp	/^    bool             fMatchURIandTagname; \/\/match both namespaceURI and tagName$/;"	m	class:DOMDeepNodeListImpl
fMatched	include/xercesc/validators/schema/identity/XPathMatcher.hpp	/^    unsigned char*                          fMatched;$/;"	m	class:XPathMatcher
fMatchedDepth	include/xercesc/validators/schema/identity/IC_Selector.hpp	/^    int             fMatchedDepth;$/;"	m	class:SelectorMatcher
fMatcherStack	include/xercesc/validators/schema/identity/FieldActivator.hpp	/^    XPathMatcherStack*                 fMatcherStack;$/;"	m	class:FieldActivator
fMatcherStack	include/xercesc/validators/schema/identity/IdentityConstraintHandler.hpp	/^    XPathMatcherStack*          fMatcherStack;$/;"	m	class:IdentityConstraintHandler
fMatchers	include/xercesc/validators/schema/identity/XPathMatcherStack.hpp	/^    RefVectorOf<XPathMatcher>*  fMatchers;$/;"	m	class:XPathMatcherStack
fMatchersCount	include/xercesc/validators/schema/identity/XPathMatcherStack.hpp	/^    unsigned int                fMatchersCount;$/;"	m	class:XPathMatcherStack
fMax	include/xercesc/util/regx/ClosureToken.hpp	/^    int    fMax;$/;"	m	class:ClosureToken
fMaxCount	include/xercesc/util/BaseRefVectorOf.hpp	/^    XMLSize_t       fMaxCount;$/;"	m	class:BaseRefVectorOf
fMaxCount	include/xercesc/util/ValueVectorOf.hpp	/^    XMLSize_t       fMaxCount;$/;"	m	class:ValueVectorOf
fMaxCount	include/xercesc/util/regx/RangeToken.hpp	/^    unsigned int fMaxCount;$/;"	m	class:RangeToken
fMaxEntries	include/xercesc/dom/impl/DOMNodeIDMap.hpp	/^    XMLSize_t      fMaxEntries;              \/\/ The max number of entries to use before$/;"	m	class:DOMNodeIDMap
fMaxExclusive	include/xercesc/validators/datatype/AbstractNumericFacetValidator.hpp	/^    XMLNumber*               fMaxExclusive;$/;"	m	class:AbstractNumericFacetValidator
fMaxExclusiveInherited	include/xercesc/validators/datatype/AbstractNumericFacetValidator.hpp	/^    bool                     fMaxExclusiveInherited;$/;"	m	class:AbstractNumericFacetValidator
fMaxInclusive	include/xercesc/validators/datatype/AbstractNumericFacetValidator.hpp	/^    XMLNumber*               fMaxInclusive;$/;"	m	class:AbstractNumericFacetValidator
fMaxInclusiveInherited	include/xercesc/validators/datatype/AbstractNumericFacetValidator.hpp	/^    bool                     fMaxInclusiveInherited;$/;"	m	class:AbstractNumericFacetValidator
fMaxLength	include/xercesc/validators/datatype/AbstractStringValidator.hpp	/^     XMLSize_t            fMaxLength;$/;"	m	class:AbstractStringValidator
fMaxOccurs	include/xercesc/framework/psvi/XSParticle.hpp	/^    XMLSize_t fMaxOccurs;$/;"	m	class:XSParticle
fMaxOccurs	include/xercesc/validators/common/CMRepeatingLeaf.hpp	/^    int             fMaxOccurs;$/;"	m	class:CMRepeatingLeaf
fMaxOccurs	include/xercesc/validators/common/ContentSpecNode.hpp	/^    int                 fMaxOccurs;$/;"	m	class:ContentSpecNode
fMaxStates	include/xercesc/validators/common/CMNode.hpp	/^    unsigned int               fMaxStates;$/;"	m	class:CMNode
fMayMatch	include/xercesc/validators/schema/identity/FieldActivator.hpp	/^    ValueHashTableOf<bool, PtrHasher>* fMayMatch;$/;"	m	class:FieldActivator
fMemAllocated	include/xercesc/framework/psvi/XSValue.hpp	/^    bool                fMemAllocated;$/;"	m	class:XSValue
fMemMgr	include/xercesc/framework/XMLGrammarDescription.hpp	/^    MemoryManager* const  fMemMgr;     $/;"	m	class:XMLGrammarDescription
fMemMgr	include/xercesc/framework/XMLGrammarPool.hpp	/^    MemoryManager* const  fMemMgr;$/;"	m	class:XMLGrammarPool
fMemberType	include/xercesc/framework/psvi/PSVIItem.hpp	/^    XSSimpleTypeDefinition*     fMemberType;$/;"	m	class:PSVIItem
fMemberTypeName	include/xercesc/dom/impl/DOMTypeInfoImpl.hpp	/^    const XMLCh*    fMemberTypeName;$/;"	m	class:DOMTypeInfoImpl
fMemberTypeNamespace	include/xercesc/dom/impl/DOMTypeInfoImpl.hpp	/^    const XMLCh*    fMemberTypeNamespace;$/;"	m	class:DOMTypeInfoImpl
fMemberTypeValidators	include/xercesc/validators/datatype/UnionDatatypeValidator.hpp	/^     RefVectorOf<DatatypeValidator>*  fMemberTypeValidators;   $/;"	m	class:UnionDatatypeValidator
fMemberTypes	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^    XSSimpleTypeDefinitionList* fMemberTypes;$/;"	m	class:XSSimpleTypeDefinition
fMemberTypesInherited	include/xercesc/validators/datatype/UnionDatatypeValidator.hpp	/^     bool                             fMemberTypesInherited;$/;"	m	class:UnionDatatypeValidator
fMemoryManager	include/xercesc/dom/DOMException.hpp	/^    MemoryManager*  fMemoryManager;$/;"	m	class:DOMException
fMemoryManager	include/xercesc/dom/impl/DOMConfigurationImpl.hpp	/^    MemoryManager* fMemoryManager;$/;"	m	class:DOMConfigurationImpl
fMemoryManager	include/xercesc/dom/impl/DOMDeepNodeListPool.hpp	/^    MemoryManager*                             fMemoryManager;$/;"	m	class:DOMDeepNodeListPool
fMemoryManager	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^    MemoryManager*        fMemoryManager;   \/\/ configurable memory manager$/;"	m	class:DOMDocumentImpl
fMemoryManager	include/xercesc/dom/impl/DOMLSInputImpl.hpp	/^    MemoryManager*               fMemoryManager;$/;"	m	class:DOMLSInputImpl
fMemoryManager	include/xercesc/dom/impl/DOMLSOutputImpl.hpp	/^    MemoryManager*               fMemoryManager;$/;"	m	class:DOMLSOutputImpl
fMemoryManager	include/xercesc/dom/impl/DOMLSSerializerImpl.hpp	/^    MemoryManager*               fMemoryManager;$/;"	m	class:DOMLSSerializerImpl
fMemoryManager	include/xercesc/dom/impl/DOMNormalizer.hpp	/^    MemoryManager* fMemoryManager;$/;"	m	class:DOMNormalizer
fMemoryManager	include/xercesc/dom/impl/DOMRangeImpl.hpp	/^    MemoryManager* fMemoryManager;$/;"	m	class:DOMRangeImpl
fMemoryManager	include/xercesc/dom/impl/DOMXPathExpressionImpl.hpp	/^    MemoryManager* const        fMemoryManager;$/;"	m	class:DOMXPathExpressionImpl
fMemoryManager	include/xercesc/dom/impl/DOMXPathResultImpl.hpp	/^    MemoryManager* const    fMemoryManager;$/;"	m	class:DOMXPathResultImpl
fMemoryManager	include/xercesc/framework/LocalFileFormatTarget.hpp	/^    MemoryManager*  fMemoryManager;$/;"	m	class:LocalFileFormatTarget
fMemoryManager	include/xercesc/framework/MemBufFormatTarget.hpp	/^    MemoryManager*  fMemoryManager;$/;"	m	class:MemBufFormatTarget
fMemoryManager	include/xercesc/framework/ValidationContext.hpp	/^    MemoryManager*                    fMemoryManager;$/;"	m	class:ValidationContext
fMemoryManager	include/xercesc/framework/XMLAttDef.hpp	/^    MemoryManager*  fMemoryManager;$/;"	m	class:XMLAttDef
fMemoryManager	include/xercesc/framework/XMLAttDefList.hpp	/^    MemoryManager*      fMemoryManager;$/;"	m	class:XMLAttDefList
fMemoryManager	include/xercesc/framework/XMLAttr.hpp	/^    MemoryManager*      fMemoryManager;   $/;"	m	class:XMLAttr
fMemoryManager	include/xercesc/framework/XMLBuffer.hpp	/^    MemoryManager* const        fMemoryManager;$/;"	m	class:XMLBuffer
fMemoryManager	include/xercesc/framework/XMLBufferMgr.hpp	/^    MemoryManager*  fMemoryManager;$/;"	m	class:XMLBufferMgr
fMemoryManager	include/xercesc/framework/XMLElementDecl.hpp	/^    MemoryManager*      fMemoryManager;$/;"	m	class:XMLElementDecl
fMemoryManager	include/xercesc/framework/XMLEntityDecl.hpp	/^    MemoryManager*  fMemoryManager;$/;"	m	class:XMLEntityDecl
fMemoryManager	include/xercesc/framework/XMLFormatter.hpp	/^    MemoryManager*              fMemoryManager;$/;"	m	class:XMLFormatter
fMemoryManager	include/xercesc/framework/XMLNotationDecl.hpp	/^    MemoryManager*  fMemoryManager;$/;"	m	class:XMLNotationDecl
fMemoryManager	include/xercesc/framework/XMLRefInfo.hpp	/^    MemoryManager* fMemoryManager;$/;"	m	class:XMLRefInfo
fMemoryManager	include/xercesc/framework/psvi/PSVIAttributeList.hpp	/^    MemoryManager*                      fMemoryManager;$/;"	m	class:PSVIAttributeList
fMemoryManager	include/xercesc/framework/psvi/PSVIItem.hpp	/^    MemoryManager* const        fMemoryManager;$/;"	m	class:PSVIItem
fMemoryManager	include/xercesc/framework/psvi/XSModel.hpp	/^    MemoryManager* const                    fMemoryManager;$/;"	m	class:XSModel
fMemoryManager	include/xercesc/framework/psvi/XSNamedMap.hpp	/^    MemoryManager *const        fMemoryManager;$/;"	m	class:XSNamedMap
fMemoryManager	include/xercesc/framework/psvi/XSNamespaceItem.hpp	/^    MemoryManager* const    fMemoryManager;$/;"	m	class:XSNamespaceItem
fMemoryManager	include/xercesc/framework/psvi/XSObject.hpp	/^    MemoryManager*              fMemoryManager;$/;"	m	class:XSObject
fMemoryManager	include/xercesc/framework/psvi/XSValue.hpp	/^    MemoryManager*      fMemoryManager;$/;"	m	class:XSValue
fMemoryManager	include/xercesc/internal/BinFileOutputStream.hpp	/^    MemoryManager* const    fMemoryManager;$/;"	m	class:BinFileOutputStream
fMemoryManager	include/xercesc/internal/BinMemOutputStream.hpp	/^    MemoryManager*  fMemoryManager;$/;"	m	class:BinMemOutputStream
fMemoryManager	include/xercesc/internal/ElemStack.hpp	/^    MemoryManager*               fMemoryManager;$/;"	m	class:ElemStack
fMemoryManager	include/xercesc/internal/ElemStack.hpp	/^    MemoryManager*  fMemoryManager;$/;"	m	class:WFElemStack
fMemoryManager	include/xercesc/internal/ReaderMgr.hpp	/^    MemoryManager*              fMemoryManager;$/;"	m	class:ReaderMgr
fMemoryManager	include/xercesc/internal/XMLReader.hpp	/^    MemoryManager*              fMemoryManager;$/;"	m	class:XMLReader
fMemoryManager	include/xercesc/internal/XMLScanner.hpp	/^    MemoryManager*              fMemoryManager;$/;"	m	class:XMLScanner
fMemoryManager	include/xercesc/internal/XSObjectFactory.hpp	/^    MemoryManager*                       fMemoryManager;$/;"	m	class:XSObjectFactory
fMemoryManager	include/xercesc/parsers/AbstractDOMParser.hpp	/^    MemoryManager*                fMemoryManager;$/;"	m	class:AbstractDOMParser
fMemoryManager	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^    MemoryManager*              fMemoryManager;$/;"	m	class:SAX2XMLReaderImpl
fMemoryManager	include/xercesc/parsers/SAXParser.hpp	/^    MemoryManager*       fMemoryManager;$/;"	m	class:SAXParser
fMemoryManager	include/xercesc/sax/InputSource.hpp	/^    MemoryManager* const fMemoryManager;$/;"	m	class:InputSource
fMemoryManager	include/xercesc/sax/SAXException.hpp	/^    MemoryManager* fMemoryManager;$/;"	m	class:SAXException
fMemoryManager	include/xercesc/util/BaseRefVectorOf.hpp	/^    MemoryManager*  fMemoryManager;$/;"	m	class:BaseRefVectorOf
fMemoryManager	include/xercesc/util/BinFileInputStream.hpp	/^    MemoryManager* const    fMemoryManager;$/;"	m	class:BinFileInputStream
fMemoryManager	include/xercesc/util/BinMemInputStream.hpp	/^    MemoryManager*  fMemoryManager;$/;"	m	class:BinMemInputStream
fMemoryManager	include/xercesc/util/BitSet.hpp	/^    MemoryManager*  fMemoryManager;$/;"	m	class:BitSet
fMemoryManager	include/xercesc/util/Hash2KeysSetOf.hpp	/^    MemoryManager*                      fMemoryManager;$/;"	m	class:Hash2KeysSetOf
fMemoryManager	include/xercesc/util/Hash2KeysSetOf.hpp	/^    MemoryManager* const                    fMemoryManager;$/;"	m	class:Hash2KeysSetOfEnumerator
fMemoryManager	include/xercesc/util/Janitor.hpp	/^    MemoryManager* fMemoryManager;$/;"	m	class:ArrayJanitor
fMemoryManager	include/xercesc/util/KVStringPair.hpp	/^    MemoryManager* fMemoryManager;$/;"	m	class:KVStringPair
fMemoryManager	include/xercesc/util/NameIdPool.hpp	/^    MemoryManager*                  fMemoryManager;$/;"	m	class:NameIdPool
fMemoryManager	include/xercesc/util/NameIdPool.hpp	/^    MemoryManager*          fMemoryManager;$/;"	m	class:NameIdPoolEnumerator
fMemoryManager	include/xercesc/util/NetAccessors/Curl/CurlURLInputStream.hpp	/^    MemoryManager*      fMemoryManager;$/;"	m	class:CurlURLInputStream
fMemoryManager	include/xercesc/util/QName.hpp	/^    MemoryManager*      fMemoryManager;$/;"	m	class:QName
fMemoryManager	include/xercesc/util/RefArrayOf.hpp	/^    MemoryManager*  fMemoryManager;$/;"	m	class:RefArrayOf
fMemoryManager	include/xercesc/util/RefHash2KeysTableOf.hpp	/^    MemoryManager*                      fMemoryManager;$/;"	m	class:RefHash2KeysTableOf
fMemoryManager	include/xercesc/util/RefHash2KeysTableOf.hpp	/^    MemoryManager* const                    fMemoryManager;$/;"	m	class:RefHash2KeysTableOfEnumerator
fMemoryManager	include/xercesc/util/RefHash3KeysIdPool.hpp	/^    MemoryManager*                      fMemoryManager;$/;"	m	class:RefHash3KeysIdPool
fMemoryManager	include/xercesc/util/RefHash3KeysIdPool.hpp	/^    MemoryManager* const                fMemoryManager;$/;"	m	class:RefHash3KeysIdPoolEnumerator
fMemoryManager	include/xercesc/util/RefHashTableOf.hpp	/^    MemoryManager*                 fMemoryManager;$/;"	m	class:RefHashTableOf
fMemoryManager	include/xercesc/util/RefHashTableOf.hpp	/^    MemoryManager* const                  fMemoryManager;$/;"	m	class:RefHashTableOfEnumerator
fMemoryManager	include/xercesc/util/StringPool.hpp	/^    MemoryManager*              fMemoryManager;$/;"	m	class:XMLStringPool
fMemoryManager	include/xercesc/util/TransService.hpp	/^    MemoryManager *fMemoryManager;$/;"	m	class:TranscodeFromStr
fMemoryManager	include/xercesc/util/TransService.hpp	/^    MemoryManager *fMemoryManager;$/;"	m	class:TranscodeToStr
fMemoryManager	include/xercesc/util/TransService.hpp	/^    MemoryManager*  fMemoryManager;$/;"	m	class:XMLTranscoder
fMemoryManager	include/xercesc/util/ValueArrayOf.hpp	/^    MemoryManager*  fMemoryManager;$/;"	m	class:ValueArrayOf
fMemoryManager	include/xercesc/util/ValueHashTableOf.hpp	/^    MemoryManager*                   fMemoryManager;$/;"	m	class:ValueHashTableOf
fMemoryManager	include/xercesc/util/ValueHashTableOf.hpp	/^    MemoryManager* const             fMemoryManager;$/;"	m	class:ValueHashTableOfEnumerator
fMemoryManager	include/xercesc/util/ValueVectorOf.hpp	/^    MemoryManager*  fMemoryManager;$/;"	m	class:ValueVectorOf
fMemoryManager	include/xercesc/util/XMLAbstractDoubleFloat.hpp	/^    MemoryManager*          fMemoryManager;$/;"	m	class:XMLAbstractDoubleFloat
fMemoryManager	include/xercesc/util/XMLBigDecimal.hpp	/^    MemoryManager* fMemoryManager;$/;"	m	class:XMLBigDecimal
fMemoryManager	include/xercesc/util/XMLBigInteger.hpp	/^    MemoryManager* fMemoryManager;$/;"	m	class:XMLBigInteger
fMemoryManager	include/xercesc/util/XMLDateTime.hpp	/^    MemoryManager* fMemoryManager;$/;"	m	class:XMLDateTime
fMemoryManager	include/xercesc/util/XMLException.hpp	/^    MemoryManager*          fMemoryManager;$/;"	m	class:XMLException
fMemoryManager	include/xercesc/util/XMLStringTokenizer.hpp	/^    MemoryManager*           fMemoryManager;$/;"	m	class:XMLStringTokenizer
fMemoryManager	include/xercesc/util/XMLURL.hpp	/^    MemoryManager*  fMemoryManager;$/;"	m	class:XMLURL
fMemoryManager	include/xercesc/util/XMLUri.hpp	/^    MemoryManager*  fMemoryManager;$/;"	m	class:XMLUri
fMemoryManager	include/xercesc/util/regx/BMPattern.hpp	/^    MemoryManager* fMemoryManager; $/;"	m	class:BMPattern
fMemoryManager	include/xercesc/util/regx/Match.hpp	/^    MemoryManager* fMemoryManager;$/;"	m	class:Match
fMemoryManager	include/xercesc/util/regx/Op.hpp	/^    MemoryManager* const fMemoryManager;$/;"	m	class:Op
fMemoryManager	include/xercesc/util/regx/OpFactory.hpp	/^    MemoryManager*   fMemoryManager;$/;"	m	class:OpFactory
fMemoryManager	include/xercesc/util/regx/RangeToken.hpp	/^    MemoryManager* fMemoryManager;$/;"	m	class:RangeToken
fMemoryManager	include/xercesc/util/regx/RegularExpression.hpp	/^            MemoryManager* fMemoryManager;$/;"	m	class:RegularExpression::Context
fMemoryManager	include/xercesc/util/regx/RegularExpression.hpp	/^    MemoryManager*     fMemoryManager;$/;"	m	class:RegularExpression
fMemoryManager	include/xercesc/util/regx/RegxParser.hpp	/^    MemoryManager*                  fMemoryManager;$/;"	m	class:RegxParser
fMemoryManager	include/xercesc/util/regx/StringToken.hpp	/^    MemoryManager* fMemoryManager;$/;"	m	class:StringToken
fMemoryManager	include/xercesc/util/regx/Token.hpp	/^    MemoryManager* const    fMemoryManager;$/;"	m	class:Token
fMemoryManager	include/xercesc/util/regx/TokenFactory.hpp	/^    MemoryManager*      fMemoryManager;$/;"	m	class:TokenFactory
fMemoryManager	include/xercesc/validators/DTD/DTDGrammar.hpp	/^    MemoryManager*                    fMemoryManager;$/;"	m	class:DTDGrammar
fMemoryManager	include/xercesc/validators/DTD/DTDScanner.hpp	/^    MemoryManager*                  fMemoryManager;$/;"	m	class:DTDScanner
fMemoryManager	include/xercesc/validators/common/AllContentModel.hpp	/^    MemoryManager* fMemoryManager;$/;"	m	class:AllContentModel
fMemoryManager	include/xercesc/validators/common/CMNode.hpp	/^    MemoryManager*             fMemoryManager;$/;"	m	class:CMNode
fMemoryManager	include/xercesc/validators/common/CMStateSet.hpp	/^    MemoryManager*  fMemoryManager;$/;"	m	struct:CMDynamicBuffer
fMemoryManager	include/xercesc/validators/common/ContentLeafNameTypeVector.hpp	/^    MemoryManager*                fMemoryManager;$/;"	m	class:ContentLeafNameTypeVector
fMemoryManager	include/xercesc/validators/common/ContentSpecNode.hpp	/^    MemoryManager*      fMemoryManager;$/;"	m	class:ContentSpecNode
fMemoryManager	include/xercesc/validators/common/DFAContentModel.hpp	/^    MemoryManager*              fMemoryManager;$/;"	m	class:DFAContentModel
fMemoryManager	include/xercesc/validators/common/GrammarResolver.hpp	/^    MemoryManager*                  fMemoryManager;$/;"	m	class:GrammarResolver
fMemoryManager	include/xercesc/validators/common/MixedContentModel.hpp	/^    MemoryManager*              fMemoryManager;$/;"	m	class:MixedContentModel
fMemoryManager	include/xercesc/validators/common/SimpleContentModel.hpp	/^    MemoryManager* const       fMemoryManager;$/;"	m	class:SimpleContentModel
fMemoryManager	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^    MemoryManager*                      fMemoryManager;$/;"	m	class:DatatypeValidator
fMemoryManager	include/xercesc/validators/datatype/DatatypeValidatorFactory.hpp	/^    XERCES_CPP_NAMESPACE_QUALIFIER MemoryManager* const fMemoryManager;$/;"	m	class:DatatypeValidatorFactory
fMemoryManager	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^    MemoryManager*                     fMemoryManager;$/;"	m	class:ComplexTypeInfo
fMemoryManager	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^    MemoryManager*                           fMemoryManager;$/;"	m	class:GeneralAttributeCheck
fMemoryManager	include/xercesc/validators/schema/NamespaceScope.hpp	/^    MemoryManager* fMemoryManager;$/;"	m	class:NamespaceScope
fMemoryManager	include/xercesc/validators/schema/SchemaGrammar.hpp	/^    MemoryManager*                           fMemoryManager;$/;"	m	class:SchemaGrammar
fMemoryManager	include/xercesc/validators/schema/SchemaInfo.hpp	/^    MemoryManager*                    fMemoryManager;$/;"	m	class:SchemaInfo
fMemoryManager	include/xercesc/validators/schema/SchemaValidator.hpp	/^    MemoryManager*                  fMemoryManager;$/;"	m	class:SchemaValidator
fMemoryManager	include/xercesc/validators/schema/TraverseSchema.hpp	/^    MemoryManager*                                 fMemoryManager;$/;"	m	class:TraverseSchema
fMemoryManager	include/xercesc/validators/schema/XercesAttGroupInfo.hpp	/^    MemoryManager*             fMemoryManager;$/;"	m	class:XercesAttGroupInfo
fMemoryManager	include/xercesc/validators/schema/identity/FieldActivator.hpp	/^    MemoryManager*                     fMemoryManager;$/;"	m	class:FieldActivator
fMemoryManager	include/xercesc/validators/schema/identity/FieldValueMap.hpp	/^    MemoryManager*                     fMemoryManager;$/;"	m	class:FieldValueMap
fMemoryManager	include/xercesc/validators/schema/identity/IdentityConstraint.hpp	/^    MemoryManager*         fMemoryManager;$/;"	m	class:IdentityConstraint
fMemoryManager	include/xercesc/validators/schema/identity/IdentityConstraintHandler.hpp	/^    MemoryManager*              fMemoryManager;$/;"	m	class:IdentityConstraintHandler
fMemoryManager	include/xercesc/validators/schema/identity/ValueStore.hpp	/^    MemoryManager*              fMemoryManager;$/;"	m	class:ValueStore
fMemoryManager	include/xercesc/validators/schema/identity/ValueStore.hpp	/^    MemoryManager* fMemoryManager;$/;"	m	struct:ICValueHasher
fMemoryManager	include/xercesc/validators/schema/identity/ValueStoreCache.hpp	/^    MemoryManager*                           fMemoryManager;$/;"	m	class:ValueStoreCache
fMemoryManager	include/xercesc/validators/schema/identity/XPathMatcher.hpp	/^    MemoryManager*                          fMemoryManager;$/;"	m	class:XPathMatcher
fMemoryManager	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    MemoryManager*                   fMemoryManager;$/;"	m	class:XercesXPath
fMessage	include/xercesc/dom/impl/DOMErrorImpl.hpp	/^    const XMLCh*  fMessage;$/;"	m	class:DOMErrorImpl
fMgr	include/xercesc/framework/XMLBufferMgr.hpp	/^    XMLBufferMgr* const fMgr;$/;"	m	class:XMLBufBid
fMgr	include/xercesc/internal/ReaderMgr.hpp	/^    ReaderMgr*  fMgr;$/;"	m	class:ThrowEOEJanitor
fMilliSecond	include/xercesc/util/XMLDateTime.hpp	/^    double       fMilliSecond;$/;"	m	class:XMLDateTime
fMin	include/xercesc/util/regx/ClosureToken.hpp	/^    int    fMin;$/;"	m	class:ClosureToken
fMinExclusive	include/xercesc/validators/datatype/AbstractNumericFacetValidator.hpp	/^    XMLNumber*               fMinExclusive;$/;"	m	class:AbstractNumericFacetValidator
fMinExclusiveInherited	include/xercesc/validators/datatype/AbstractNumericFacetValidator.hpp	/^    bool                     fMinExclusiveInherited;$/;"	m	class:AbstractNumericFacetValidator
fMinInclusive	include/xercesc/validators/datatype/AbstractNumericFacetValidator.hpp	/^    XMLNumber*               fMinInclusive;$/;"	m	class:AbstractNumericFacetValidator
fMinInclusiveInherited	include/xercesc/validators/datatype/AbstractNumericFacetValidator.hpp	/^    bool                     fMinInclusiveInherited;$/;"	m	class:AbstractNumericFacetValidator
fMinLength	include/xercesc/util/regx/RegularExpression.hpp	/^    XMLSize_t          fMinLength;$/;"	m	class:RegularExpression
fMinLength	include/xercesc/validators/datatype/AbstractStringValidator.hpp	/^     XMLSize_t            fMinLength;$/;"	m	class:AbstractStringValidator
fMinOccurs	include/xercesc/framework/psvi/XSParticle.hpp	/^    XMLSize_t fMinOccurs;$/;"	m	class:XSParticle
fMinOccurs	include/xercesc/validators/common/CMRepeatingLeaf.hpp	/^    int             fMinOccurs;$/;"	m	class:CMRepeatingLeaf
fMinOccurs	include/xercesc/validators/common/ContentSpecNode.hpp	/^    int                 fMinOccurs;$/;"	m	class:ContentSpecNode
fMiscFlags	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^    int                                fMiscFlags;    $/;"	m	class:SchemaElementDecl
fModSymbol	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    int fModSymbol;$/;"	m	class:XPathScanner
fModel	include/xercesc/internal/IGXMLScanner.hpp	/^    XSModel*                                fModel;$/;"	m	class:IGXMLScanner
fModel	include/xercesc/internal/SGXMLScanner.hpp	/^    XSModel*                                fModel;$/;"	m	class:SGXMLScanner
fModelGroupParticle	include/xercesc/framework/psvi/XSModelGroupDefinition.hpp	/^    XSParticle*      fModelGroupParticle;$/;"	m	class:XSModelGroupDefinition
fModelType	include/xercesc/validators/DTD/DTDElementDecl.hpp	/^    ModelTypes                  fModelType;$/;"	m	class:DTDElementDecl
fModelType	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^    ModelTypes                         fModelType;$/;"	m	class:SchemaElementDecl
fMostRecentAttrValidator	include/xercesc/validators/schema/SchemaValidator.hpp	/^    DatatypeValidator *             fMostRecentAttrValidator;$/;"	m	class:SchemaValidator
fMoveToRoot	include/xercesc/dom/impl/DOMXPathExpressionImpl.hpp	/^    bool                        fMoveToRoot;$/;"	m	class:DOMXPathExpressionImpl
fMsg	include/xercesc/sax/SAXException.hpp	/^    XMLCh*  fMsg;$/;"	m	class:SAXException
fMsg	include/xercesc/util/XMLException.hpp	/^    XMLCh*                  fMsg;$/;"	m	class:XMLException
fMsgDomain	include/xercesc/util/MsgLoaders/InMemory/InMemMsgLoader.hpp	/^    XMLCh*  fMsgDomain;$/;"	m	class:InMemMsgLoader
fMsgOwned	include/xercesc/dom/DOMException.hpp	/^    bool            fMsgOwned;$/;"	m	class:DOMException
fMulti	include/xercesc/util/NetAccessors/Curl/CurlURLInputStream.hpp	/^    CURLM*				fMulti;$/;"	m	class:CurlURLInputStream
fMutex	include/xercesc/util/SynchronizedStringPool.hpp	/^    XMLMutex             fMutex;$/;"	m	class:XMLSynchronizedStringPool
fMutex	include/xercesc/util/Transcoders/IconvGNU/IconvGNUTransService.hpp	/^    XMLMutex    fMutex;$/;"	m	class:IconvGNUWrapper
fMutex	include/xercesc/util/regx/RangeTokenMap.hpp	/^    XMLMutex                           fMutex;$/;"	m	class:RangeTokenMap
fNEL	include/xercesc/internal/XMLReader.hpp	/^    bool                        fNEL;$/;"	m	class:XMLReader
fNRange	include/xercesc/util/regx/RangeTokenMap.hpp	/^    RangeToken*  fNRange;$/;"	m	class:RangeTokenElemMap
fNSScope	include/xercesc/dom/impl/DOMNormalizer.hpp	/^    InScopeNamespaces *fNSScope;$/;"	m	class:DOMNormalizer
fName	include/xercesc/dom/impl/DOMAttrImpl.hpp	/^    const XMLCh       *fName;$/;"	m	class:DOMAttrImpl
fName	include/xercesc/dom/impl/DOMDocumentTypeImpl.hpp	/^    const XMLCh *        fName;$/;"	m	class:DOMDocumentTypeImpl
fName	include/xercesc/dom/impl/DOMElementImpl.hpp	/^    const XMLCh      *fName;$/;"	m	class:DOMElementImpl
fName	include/xercesc/dom/impl/DOMEntityImpl.hpp	/^    const XMLCh *   fName;$/;"	m	class:DOMEntityImpl
fName	include/xercesc/dom/impl/DOMEntityReferenceImpl.hpp	/^    const XMLCh    *fName;$/;"	m	class:DOMEntityReferenceImpl
fName	include/xercesc/dom/impl/DOMNotationImpl.hpp	/^    const XMLCh * fName;$/;"	m	class:DOMNotationImpl
fName	include/xercesc/framework/XMLEntityDecl.hpp	/^    XMLCh*          fName;$/;"	m	class:XMLEntityDecl
fName	include/xercesc/framework/XMLNotationDecl.hpp	/^	XMLCh*          fName;$/;"	m	class:XMLNotationDecl
fName	include/xercesc/validators/DTD/DTDAttDef.hpp	/^    XMLCh*          fName;$/;"	m	class:DTDAttDef
fName	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    QName* fName;$/;"	m	class:XercesNodeTest
fNameId	include/xercesc/validators/schema/XercesAttGroupInfo.hpp	/^    unsigned int               fNameId;$/;"	m	class:XercesAttGroupInfo
fNameId	include/xercesc/validators/schema/XercesGroupInfo.hpp	/^    unsigned int                    fNameId;$/;"	m	class:XercesGroupInfo
fNameSpace	include/xercesc/util/XMLResourceIdentifier.hpp	/^    const XMLCh*                    fNameSpace;$/;"	m	class:XMLResourceIdentifier
fNameSpaceId	include/xercesc/framework/XMLNotationDecl.hpp	/^    unsigned int    fNameSpaceId;$/;"	m	class:XMLNotationDecl
fNameTable	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^    DOMStringPoolEntry**  fNameTable;$/;"	m	class:DOMDocumentImpl
fNameTableSize	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^    XMLSize_t             fNameTableSize;$/;"	m	class:DOMDocumentImpl
fNamespace	include/xercesc/validators/schema/XMLSchemaDescriptionImpl.hpp	/^    const XMLCh*                           fNamespace;$/;"	m	class:XMLSchemaDescriptionImpl
fNamespaceBindings	include/xercesc/dom/impl/DOMXPathNSResolverImpl.hpp	/^    RefHashTableOf<KVStringPair>* fNamespaceBindings;$/;"	m	class:DOMXPathNSResolverImpl
fNamespaceId	include/xercesc/validators/schema/XercesAttGroupInfo.hpp	/^    unsigned int               fNamespaceId;$/;"	m	class:XercesAttGroupInfo
fNamespaceId	include/xercesc/validators/schema/XercesGroupInfo.hpp	/^    unsigned int                    fNamespaceId;$/;"	m	class:XercesGroupInfo
fNamespaceList	include/xercesc/validators/schema/SchemaAttDef.hpp	/^    ValueVectorOf<unsigned int>* fNamespaceList;$/;"	m	class:SchemaAttDef
fNamespaceMap	include/xercesc/internal/ElemStack.hpp	/^    ValueVectorOf<PrefMapElem*>* fNamespaceMap;$/;"	m	class:ElemStack
fNamespacePrefix	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^    bool                        fNamespacePrefix;$/;"	m	class:SAX2XMLReaderImpl
fNamespaceScope	include/xercesc/internal/ValidationContextImpl.hpp	/^    NamespaceScope*                     fNamespaceScope;$/;"	m	class:ValidationContextImpl
fNamespaceScope	include/xercesc/validators/schema/SchemaInfo.hpp	/^    NamespaceScope*                   fNamespaceScope;$/;"	m	class:SchemaInfo
fNamespaceStack	include/xercesc/dom/impl/DOMLSSerializerImpl.hpp	/^    RefVectorOf< RefHashTableOf<XMLCh> >* fNamespaceStack;$/;"	m	class:DOMLSSerializerImpl
fNamespaceStringList	include/xercesc/framework/psvi/XSModel.hpp	/^    StringList*                             fNamespaceStringList;$/;"	m	class:XSModel
fNamespaceSymbol	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    int fNamespaceSymbol;$/;"	m	class:XPathScanner
fNamespaceURI	include/xercesc/dom/impl/DOMAttrNSImpl.hpp	/^    const XMLCh * fNamespaceURI;     \/\/namespace URI of this node$/;"	m	class:DOMAttrNSImpl
fNamespaceURI	include/xercesc/dom/impl/DOMDeepNodeListImpl.hpp	/^    const XMLCh*     fNamespaceURI;$/;"	m	class:DOMDeepNodeListImpl
fNamespaceURI	include/xercesc/dom/impl/DOMElementNSImpl.hpp	/^    const XMLCh * fNamespaceURI;     \/\/namespace URI of this node$/;"	m	class:DOMElementNSImpl
fNamespaceURI	include/xercesc/validators/schema/identity/IdentityConstraint.hpp	/^    int                    fNamespaceURI;$/;"	m	class:IdentityConstraint
fNewLine	include/xercesc/dom/impl/DOMLSSerializerImpl.hpp	/^    XMLCh                        *fNewLine;$/;"	m	class:DOMLSSerializerImpl
fNewLineUsed	include/xercesc/dom/impl/DOMLSSerializerImpl.hpp	/^    const XMLCh                  *fNewLineUsed;$/;"	m	class:DOMLSSerializerImpl
fNewNamespaceCount	include/xercesc/dom/impl/DOMNormalizer.hpp	/^    unsigned int fNewNamespaceCount;$/;"	m	class:DOMNormalizer
fNext	include/xercesc/dom/impl/DOMDeepNodeListPool.hpp	/^    DOMDeepNodeListPoolTableBucketElem<TVal>* fNext;$/;"	m	struct:DOMDeepNodeListPoolTableBucketElem
fNext	include/xercesc/dom/impl/DOMStringPool.hpp	/^    DOMStringPoolEntry    *fNext;$/;"	m	struct:DOMStringPoolEntry
fNext	include/xercesc/framework/psvi/XSAnnotation.hpp	/^    XSAnnotation* fNext;$/;"	m	class:XSAnnotation
fNext	include/xercesc/util/Hash2KeysSetOf.hpp	/^    Hash2KeysSetBucketElem*              fNext;$/;"	m	struct:Hash2KeysSetBucketElem
fNext	include/xercesc/util/RefHash2KeysTableOf.hpp	/^    RefHash2KeysTableBucketElem<TVal>*   fNext;$/;"	m	struct:RefHash2KeysTableBucketElem
fNext	include/xercesc/util/RefHash3KeysIdPool.hpp	/^    RefHash3KeysTableBucketElem<TVal>*   fNext;$/;"	m	struct:RefHash3KeysTableBucketElem
fNext	include/xercesc/util/RefHashTableOf.hpp	/^  RefHashTableBucketElem<TVal>*   fNext;$/;"	m	struct:RefHashTableBucketElem
fNext	include/xercesc/util/ValueHashTableOf.hpp	/^    ValueHashTableBucketElem<TVal>* fNext;$/;"	m	struct:ValueHashTableBucketElem
fNextAttrId	include/xercesc/validators/DTD/DTDScanner.hpp	/^    unsigned int                    fNextAttrId;$/;"	m	class:DTDScanner
fNextOp	include/xercesc/util/regx/Op.hpp	/^    const Op*   fNextOp;$/;"	m	class:Op
fNextReaderNum	include/xercesc/internal/ReaderMgr.hpp	/^    unsigned int                fNextReaderNum;$/;"	m	class:ReaderMgr
fNil	include/xercesc/validators/schema/SchemaValidator.hpp	/^    bool                            fNil;$/;"	m	class:SchemaValidator
fNilFound	include/xercesc/validators/schema/SchemaValidator.hpp	/^    bool                            fNilFound;$/;"	m	class:SchemaValidator
fNoClosures	include/xercesc/util/regx/RegularExpression.hpp	/^    unsigned int       fNoClosures;$/;"	m	class:RegularExpression
fNoGroups	include/xercesc/util/regx/Match.hpp	/^    int fNoGroups;$/;"	m	class:Match
fNoGroups	include/xercesc/util/regx/RegularExpression.hpp	/^    int                fNoGroups;$/;"	m	class:RegularExpression
fNoGroups	include/xercesc/util/regx/RegxParser.hpp	/^    int                             fNoGroups;$/;"	m	class:RegxParser
fNoMatchDepth	include/xercesc/validators/schema/identity/XPathMatcher.hpp	/^    XMLSize_t*                              fNoMatchDepth;$/;"	m	class:XPathMatcher
fNoMore	include/xercesc/internal/XMLReader.hpp	/^    bool                        fNoMore;$/;"	m	class:XMLReader
fNoParen	include/xercesc/util/regx/ParenToken.hpp	/^    int    fNoParen;$/;"	m	class:ParenToken
fNode	include/xercesc/dom/impl/DOMAttrImpl.hpp	/^    DOMNodeImpl        fNode;$/;"	m	class:DOMAttrImpl
fNode	include/xercesc/dom/impl/DOMCDATASectionImpl.hpp	/^    DOMNodeImpl           fNode;$/;"	m	class:DOMCDATASectionImpl
fNode	include/xercesc/dom/impl/DOMCommentImpl.hpp	/^    DOMNodeImpl            fNode;$/;"	m	class:DOMCommentImpl
fNode	include/xercesc/dom/impl/DOMDocumentFragmentImpl.hpp	/^    DOMNodeImpl     fNode;$/;"	m	class:DOMDocumentFragmentImpl
fNode	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^    DOMNodeImpl           fNode;           \/\/ Implements common node functionality.$/;"	m	class:DOMDocumentImpl
fNode	include/xercesc/dom/impl/DOMDocumentTypeImpl.hpp	/^    DOMNodeImpl          fNode;$/;"	m	class:DOMDocumentTypeImpl
fNode	include/xercesc/dom/impl/DOMElementImpl.hpp	/^    DOMNodeImpl       fNode;$/;"	m	class:DOMElementImpl
fNode	include/xercesc/dom/impl/DOMEntityImpl.hpp	/^    DOMNodeImpl      fNode;$/;"	m	class:DOMEntityImpl
fNode	include/xercesc/dom/impl/DOMEntityReferenceImpl.hpp	/^    DOMNodeImpl      fNode;$/;"	m	class:DOMEntityReferenceImpl
fNode	include/xercesc/dom/impl/DOMNodeListImpl.hpp	/^    DOMParentNode   *fNode;$/;"	m	class:DOMNodeListImpl
fNode	include/xercesc/dom/impl/DOMNotationImpl.hpp	/^    DOMNodeImpl      fNode;$/;"	m	class:DOMNotationImpl
fNode	include/xercesc/dom/impl/DOMProcessingInstructionImpl.hpp	/^    DOMNodeImpl   fNode;$/;"	m	class:DOMProcessingInstructionImpl
fNode	include/xercesc/dom/impl/DOMTextImpl.hpp	/^    DOMNodeImpl             fNode;$/;"	m	class:DOMTextImpl
fNodeFilter	include/xercesc/dom/impl/DOMNodeIteratorImpl.hpp	/^        DOMNodeFilter* fNodeFilter;$/;"	m	class:DOMNodeIteratorImpl
fNodeFilter	include/xercesc/dom/impl/DOMTreeWalkerImpl.hpp	/^        DOMNodeFilter* fNodeFilter;$/;"	m	class:DOMTreeWalkerImpl
fNodeIDMap	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^    DOMNodeIDMap*         fNodeIDMap;     \/\/ for use by GetElementsById().$/;"	m	class:DOMDocumentImpl
fNodeIterators	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^    NodeIterators*        fNodeIterators;$/;"	m	class:DOMDocumentImpl
fNodeListPool	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^    DOMDeepNodeListPool<DOMDeepNodeListImpl>* fNodeListPool;$/;"	m	class:DOMDocumentImpl
fNodeSymbol	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    int fNodeSymbol;$/;"	m	class:XPathScanner
fNodeTest	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    XercesNodeTest* fNodeTest;$/;"	m	class:XercesStep
fNodes	include/xercesc/dom/impl/DOMAttrMapImpl.hpp	/^    DOMNodeVector*    fNodes;$/;"	m	class:DOMAttrMapImpl
fNonMapIndex	include/xercesc/util/regx/RangeToken.hpp	/^    int          fNonMapIndex;$/;"	m	class:RangeToken
fNonNegIntDV	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^    static DatatypeValidator*                fNonNegIntDV;$/;"	m	class:GeneralAttributeCheck
fNonXSAttList	include/xercesc/validators/schema/SchemaInfo.hpp	/^    ValueVectorOf<DOMNode*>*          fNonXSAttList;$/;"	m	class:SchemaInfo
fNonXSAttList	include/xercesc/validators/schema/TraverseSchema.hpp	/^    ValueVectorOf<DOMNode*>*                       fNonXSAttList;$/;"	m	class:TraverseSchema
fNoneValidationDepth	include/xercesc/internal/XMLScanner.hpp	/^    int                fNoneValidationDepth;$/;"	m	struct:PSVIElemContext
fNormalizeData	include/xercesc/internal/XMLScanner.hpp	/^    bool                        fNormalizeData;$/;"	m	class:XMLScanner
fNormalizedValue	include/xercesc/dom/impl/DOMTypeInfoImpl.hpp	/^    const XMLCh*    fNormalizedValue;$/;"	m	class:DOMTypeInfoImpl
fNormalizedValue	include/xercesc/framework/psvi/PSVIItem.hpp	/^    const XMLCh*                fNormalizedValue;$/;"	m	class:PSVIItem
fNormalizedValue	include/xercesc/internal/XMLScanner.hpp	/^    const XMLCh*       fNormalizedValue;$/;"	m	struct:PSVIElemContext
fNormalizer	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^    DOMNormalizer*        fNormalizer;$/;"	m	class:DOMDocumentImpl
fNotationBuf	include/xercesc/validators/schema/SchemaValidator.hpp	/^    XMLBuffer*                      fNotationBuf;$/;"	m	class:SchemaValidator
fNotationDecl	include/xercesc/framework/psvi/PSVIElement.hpp	/^    XSNotationDeclaration *fNotationDecl;$/;"	m	class:PSVIElement
fNotationDeclPool	include/xercesc/validators/DTD/DTDGrammar.hpp	/^    NameIdPool<XMLNotationDecl>*      fNotationDeclPool;$/;"	m	class:DTDGrammar
fNotationDeclPool	include/xercesc/validators/schema/SchemaGrammar.hpp	/^    NameIdPool<XMLNotationDecl>*             fNotationDeclPool;$/;"	m	class:SchemaGrammar
fNotationName	include/xercesc/dom/impl/DOMEntityImpl.hpp	/^    const XMLCh *   fNotationName;$/;"	m	class:DOMEntityImpl
fNotationName	include/xercesc/framework/XMLEntityDecl.hpp	/^    XMLCh*          fNotationName;$/;"	m	class:XMLEntityDecl
fNotationRegistry	include/xercesc/validators/schema/TraverseSchema.hpp	/^    RefHash2KeysTableOf<XMLCh>*                    fNotationRegistry;$/;"	m	class:TraverseSchema
fNotations	include/xercesc/dom/impl/DOMDocumentTypeImpl.hpp	/^    DOMNamedNodeMapImpl* fNotations;$/;"	m	class:DOMDocumentTypeImpl
fNsConstraintList	include/xercesc/framework/psvi/XSWildcard.hpp	/^    StringList*          fNsConstraintList;$/;"	m	class:XSWildcard
fNumEntries	include/xercesc/dom/impl/DOMNodeIDMap.hpp	/^    XMLSize_t      fNumEntries;              \/\/ The number of entries used.$/;"	m	class:DOMNodeIDMap
fNumRequired	include/xercesc/validators/common/AllContentModel.hpp	/^    unsigned int    fNumRequired;$/;"	m	class:AllContentModel
fNumeric	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^    bool                                fNumeric;$/;"	m	class:DatatypeValidator
fObjFactory	include/xercesc/framework/psvi/XSModel.hpp	/^    XSObjectFactory*                        fObjFactory;$/;"	m	class:XSModel
fObject	include/xercesc/util/Janitor.hpp	/^    T*      fObject;$/;"	m	class:JanitorMemFunCall
fObjectCount	include/xercesc/internal/XSerializeEngine.hpp	/^	XSerializedObjectId_t                  fObjectCount;$/;"	m	class:XSerializeEngine
fOffset	include/xercesc/util/XMLStringTokenizer.hpp	/^    XMLSize_t           fOffset;$/;"	m	class:XMLStringTokenizer
fOffset	include/xercesc/util/regx/RegxParser.hpp	/^    XMLSize_t                       fOffset;$/;"	m	class:RegxParser
fOffsets	include/xercesc/util/regx/RegularExpression.hpp	/^            int*           fOffsets;$/;"	m	class:RegularExpression::Context
fOld	include/xercesc/internal/ReaderMgr.hpp	/^    bool        fOld;$/;"	m	class:ThrowEOEJanitor
fOldVal	include/xercesc/util/FlagJanitor.hpp	/^    T   fOldVal;$/;"	m	class:FlagJanitor
fOp	include/xercesc/validators/common/SimpleContentModel.hpp	/^    ContentSpecNode::NodeTypes fOp;$/;"	m	class:SimpleContentModel
fOpFactory	include/xercesc/util/regx/RegularExpression.hpp	/^    OpFactory          fOpFactory;$/;"	m	class:RegularExpression
fOpType	include/xercesc/util/regx/Op.hpp	/^    opType      fOpType;$/;"	m	class:Op
fOpVector	include/xercesc/util/regx/OpFactory.hpp	/^    RefVectorOf<Op>* fOpVector;$/;"	m	class:OpFactory
fOperations	include/xercesc/util/regx/RegularExpression.hpp	/^    const Op*          fOperations;$/;"	m	class:RegularExpression
fOptions	include/xercesc/util/regx/RegularExpression.hpp	/^            unsigned int   fOptions;$/;"	m	class:RegularExpression::Context
fOptions	include/xercesc/util/regx/RegularExpression.hpp	/^    unsigned int       fOptions;$/;"	m	class:RegularExpression
fOptions	include/xercesc/util/regx/RegxParser.hpp	/^    int                             fOptions;$/;"	m	class:RegxParser
fOrSymbol	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    int fOrSymbol;$/;"	m	class:XPathScanner
fOrdered	include/xercesc/validators/common/MixedContentModel.hpp	/^    bool                        fOrdered;$/;"	m	class:MixedContentModel
fOrdered	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^    XSSimpleTypeDefinition::ORDERING    fOrdered;$/;"	m	class:DatatypeValidator
fOutEncoding	include/xercesc/framework/XMLFormatter.hpp	/^    XMLCh*                      fOutEncoding;$/;"	m	class:XMLFormatter
fOutputStream	include/xercesc/internal/XSerializeEngine.hpp	/^    BinOutputStream* const                 fOutputStream;$/;"	m	class:XSerializeEngine
fOwnerDocument	include/xercesc/dom/impl/DOMParentNode.hpp	/^    DOMDocument            *fOwnerDocument; \/\/ Document this node belongs to$/;"	m	class:DOMParentNode
fOwnerNode	include/xercesc/dom/impl/DOMAttrMapImpl.hpp	/^    DOMNode*          fOwnerNode;       \/\/ the node this map belongs to$/;"	m	class:DOMAttrMapImpl
fOwnerNode	include/xercesc/dom/impl/DOMNamedNodeMapImpl.hpp	/^    DOMNode*          fOwnerNode;       \/\/ the node this map belongs to$/;"	m	class:DOMNamedNodeMapImpl
fOwnerNode	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    DOMNode                *fOwnerNode; \/\/ typically the parent but not always!$/;"	m	class:DOMNodeImpl
fPEntityDeclPool	include/xercesc/validators/DTD/DTDScanner.hpp	/^    NameIdPool<DTDEntityDecl>*      fPEntityDeclPool;$/;"	m	class:DTDScanner
fPISymbol	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    int fPISymbol;$/;"	m	class:XPathScanner
fPSVIAttrList	include/xercesc/internal/IGXMLScanner.hpp	/^    PSVIAttributeList *                     fPSVIAttrList;$/;"	m	class:IGXMLScanner
fPSVIAttrList	include/xercesc/internal/SGXMLScanner.hpp	/^    PSVIAttributeList *                     fPSVIAttrList;$/;"	m	class:SGXMLScanner
fPSVIAttribute	include/xercesc/framework/psvi/PSVIAttributeList.hpp	/^    PSVIAttribute* fPSVIAttribute;$/;"	m	class:PSVIAttributeStorage
fPSVIElemContext	include/xercesc/internal/IGXMLScanner.hpp	/^    PSVIElemContext                         fPSVIElemContext;$/;"	m	class:IGXMLScanner
fPSVIElemContext	include/xercesc/internal/SGXMLScanner.hpp	/^    PSVIElemContext                         fPSVIElemContext;$/;"	m	class:SGXMLScanner
fPSVIElement	include/xercesc/internal/IGXMLScanner.hpp	/^    PSVIElement*                            fPSVIElement;$/;"	m	class:IGXMLScanner
fPSVIElement	include/xercesc/internal/SGXMLScanner.hpp	/^    PSVIElement*                            fPSVIElement;$/;"	m	class:SGXMLScanner
fPSVIHandler	include/xercesc/internal/XMLScanner.hpp	/^    PSVIHandler*                fPSVIHandler;$/;"	m	class:XMLScanner
fPSVIHandler	include/xercesc/parsers/AbstractDOMParser.hpp	/^    PSVIHandler*                  fPSVIHandler;$/;"	m	class:AbstractDOMParser
fPSVIHandler	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^    PSVIHandler*                fPSVIHandler;$/;"	m	class:SAX2XMLReaderImpl
fPSVIHandler	include/xercesc/parsers/SAXParser.hpp	/^    PSVIHandler*         fPSVIHandler;$/;"	m	class:SAXParser
fPSVIScope	include/xercesc/validators/schema/SchemaAttDef.hpp	/^    PSVIDefs::PSVIScope          fPSVIScope;$/;"	m	class:SchemaAttDef
fPSVIScope	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^    PSVIDefs::PSVIScope                fPSVIScope;$/;"	m	class:SchemaElementDecl
fParent	include/xercesc/dom/impl/DOMAttrImpl.hpp	/^    DOMParentNode      fParent;$/;"	m	class:DOMAttrImpl
fParent	include/xercesc/dom/impl/DOMDocumentFragmentImpl.hpp	/^    DOMParentNode   fParent;$/;"	m	class:DOMDocumentFragmentImpl
fParent	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^    DOMParentNode         fParent;         \/\/ Implements common parent node functionality$/;"	m	class:DOMDocumentImpl
fParent	include/xercesc/dom/impl/DOMDocumentTypeImpl.hpp	/^    DOMParentNode        fParent;$/;"	m	class:DOMDocumentTypeImpl
fParent	include/xercesc/dom/impl/DOMElementImpl.hpp	/^    DOMParentNode     fParent;$/;"	m	class:DOMElementImpl
fParent	include/xercesc/dom/impl/DOMEntityImpl.hpp	/^    DOMParentNode    fParent;$/;"	m	class:DOMEntityImpl
fParent	include/xercesc/dom/impl/DOMEntityReferenceImpl.hpp	/^    DOMParentNode    fParent;$/;"	m	class:DOMEntityReferenceImpl
fParent	include/xercesc/framework/psvi/XSModel.hpp	/^    XSModel*                                fParent;$/;"	m	class:XSModel
fParentReader	include/xercesc/parsers/SAX2XMLFilterImpl.hpp	/^    SAX2XMLReader*              fParentReader;$/;"	m	class:SAX2XMLFilterImpl
fParentSymbol	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    int fParentSymbol;$/;"	m	class:XPathScanner
fParseContext	include/xercesc/util/regx/RegxParser.hpp	/^    parserStateContext              fParseContext;$/;"	m	class:RegxParser
fParseInProgress	include/xercesc/parsers/AbstractDOMParser.hpp	/^    bool                          fParseInProgress;$/;"	m	class:AbstractDOMParser
fParseInProgress	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^    bool                        fParseInProgress;$/;"	m	class:SAX2XMLReaderImpl
fParseInProgress	include/xercesc/parsers/SAXParser.hpp	/^    bool                 fParseInProgress;$/;"	m	class:SAXParser
fParsedExpression	include/xercesc/dom/impl/DOMXPathExpressionImpl.hpp	/^    XercesXPath*                fParsedExpression;$/;"	m	class:DOMXPathExpressionImpl
fParser	include/xercesc/validators/schema/TraverseSchema.hpp	/^    XSDDOMParser*                                  fParser;$/;"	m	class:TraverseSchema
fParticle	include/xercesc/framework/psvi/XSComplexTypeDefinition.hpp	/^    XSParticle*             fParticle;$/;"	m	class:XSComplexTypeDefinition
fParticleList	include/xercesc/framework/psvi/XSModelGroup.hpp	/^    XSParticleList* fParticleList;$/;"	m	class:XSModelGroup
fPassword	include/xercesc/util/XMLURL.hpp	/^    XMLCh*          fPassword;$/;"	m	class:XMLURL
fPath	include/xercesc/util/XMLMsgLoader.hpp	/^    static char*    fPath;$/;"	m	class:XMLMsgLoader
fPath	include/xercesc/util/XMLURL.hpp	/^    XMLCh*          fPath;$/;"	m	class:XMLURL
fPath	include/xercesc/util/XMLUri.hpp	/^    XMLCh*          fPath;$/;"	m	class:XMLUri
fPattern	include/xercesc/util/regx/BMPattern.hpp	/^    XMLCh*         fPattern;$/;"	m	class:BMPattern
fPattern	include/xercesc/util/regx/RegularExpression.hpp	/^    XMLCh*             fPattern;$/;"	m	class:RegularExpression
fPattern	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^    XMLCh*                              fPattern;$/;"	m	class:DatatypeValidator
fPatternList	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^    StringList*                 fPatternList;$/;"	m	class:XSSimpleTypeDefinition
fPayload	include/xercesc/util/NetAccessors/Curl/CurlURLInputStream.hpp	/^    const char*         fPayload;$/;"	m	class:CurlURLInputStream
fPayload	include/xercesc/util/XMLNetAccessor.hpp	/^    const char*     fPayload;$/;"	m	class:XMLNetHTTPInfo
fPayloadLen	include/xercesc/util/NetAccessors/Curl/CurlURLInputStream.hpp	/^    XMLSize_t           fPayloadLen;$/;"	m	class:CurlURLInputStream
fPayloadLen	include/xercesc/util/XMLNetAccessor.hpp	/^    XMLSize_t       fPayloadLen;$/;"	m	class:XMLNetHTTPInfo
fPort	include/xercesc/util/XMLUri.hpp	/^    int             fPort;$/;"	m	class:XMLUri
fPortNum	include/xercesc/util/XMLURL.hpp	/^    unsigned int    fPortNum;$/;"	m	class:XMLURL
fPosition	include/xercesc/util/regx/RegxParser.hpp	/^            XMLSize_t   fPosition;$/;"	m	class:RegxParser::ReferencePosition
fPosition	include/xercesc/validators/common/CMAny.hpp	/^    unsigned int fPosition;$/;"	m	class:CMAny
fPosition	include/xercesc/validators/common/CMLeaf.hpp	/^    unsigned int    fPosition;$/;"	m	class:CMLeaf
fPositionsSize	include/xercesc/util/regx/Match.hpp	/^    int fPositionsSize;$/;"	m	class:Match
fPrecedingSiblingSymbol	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    int fPrecedingSiblingSymbol;$/;"	m	class:XPathScanner
fPrecedingSymbol	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    int fPrecedingSymbol;$/;"	m	class:XPathScanner
fPrefId	include/xercesc/internal/ElemStack.hpp	/^    unsigned int        fPrefId;$/;"	m	struct:PrefMapElem
fPrefId	include/xercesc/validators/schema/NamespaceScope.hpp	/^        unsigned int        fPrefId;$/;"	m	struct:NamespaceScope::PrefMapElem
fPrefix	include/xercesc/dom/impl/DOMAttrNSImpl.hpp	/^    const XMLCh * fPrefix;           \/\/ prefix part of qualified name$/;"	m	class:DOMAttrNSImpl
fPrefix	include/xercesc/dom/impl/DOMElementNSImpl.hpp	/^    const XMLCh * fPrefix;$/;"	m	class:DOMElementNSImpl
fPrefix	include/xercesc/util/QName.hpp	/^    XMLCh*              fPrefix;$/;"	m	class:QName
fPrefixBuf	include/xercesc/internal/XMLScanner.hpp	/^    XMLBuffer                   fPrefixBuf;$/;"	m	class:XMLScanner
fPrefixBufSz	include/xercesc/util/QName.hpp	/^    XMLSize_t           fPrefixBufSz;$/;"	m	class:QName
fPrefixColonPos	include/xercesc/internal/ElemStack.hpp	/^        int                 fPrefixColonPos;$/;"	m	struct:ElemStack::StackElem
fPrefixCounts	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^    ValueStackOf<XMLSize_t>*    fPrefixCounts ;$/;"	m	class:SAX2XMLReaderImpl
fPrefixHash	include/xercesc/dom/impl/DOMNormalizer.hpp	/^            RefHashTableOf<XMLCh> *fPrefixHash;$/;"	m	class:DOMNormalizer::InScopeNamespaces::Scope
fPrefixPool	include/xercesc/internal/ElemStack.hpp	/^    XMLStringPool                fPrefixPool;$/;"	m	class:ElemStack
fPrefixPool	include/xercesc/internal/ElemStack.hpp	/^    XMLStringPool   fPrefixPool;$/;"	m	class:WFElemStack
fPrefixPool	include/xercesc/validators/schema/NamespaceScope.hpp	/^    XMLStringPool fPrefixPool;$/;"	m	class:NamespaceScope
fPrefixes	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^    ValueStackOf<unsigned int>* fPrefixes ;$/;"	m	class:SAX2XMLReaderImpl
fPrefixesStorage	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^    XMLStringPool*              fPrefixesStorage ;$/;"	m	class:SAX2XMLReaderImpl
fPreprocessed	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^    bool                               fPreprocessed;$/;"	m	class:ComplexTypeInfo
fPreprocessedNodes	include/xercesc/validators/schema/TraverseSchema.hpp	/^    RefHashTableOf<SchemaInfo, PtrHasher>*         fPreprocessedNodes;$/;"	m	class:TraverseSchema
fPrimitiveOrItemType	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^    XSSimpleTypeDefinition*     fPrimitiveOrItemType;$/;"	m	class:XSSimpleTypeDefinition
fProcessContents	include/xercesc/framework/psvi/XSWildcard.hpp	/^    PROCESS_CONTENTS     fProcessContents;$/;"	m	class:XSWildcard
fProcessed	include/xercesc/validators/schema/SchemaInfo.hpp	/^    bool                              fProcessed;$/;"	m	class:SchemaInfo
fProhibitedSubstitution	include/xercesc/framework/psvi/XSComplexTypeDefinition.hpp	/^    short                   fProhibitedSubstitution;$/;"	m	class:XSComplexTypeDefinition
fProtocol	include/xercesc/util/XMLURL.hpp	/^    Protocols       fProtocol;$/;"	m	class:XMLURL
fPtr	include/xercesc/util/CountedPointer.hpp	/^    T*  fPtr;$/;"	m	class:CountedPointerTo
fPublicId	include/xercesc/dom/impl/DOMDocumentTypeImpl.hpp	/^    const XMLCh *        fPublicId;$/;"	m	class:DOMDocumentTypeImpl
fPublicId	include/xercesc/dom/impl/DOMEntityImpl.hpp	/^    const XMLCh *   fPublicId;$/;"	m	class:DOMEntityImpl
fPublicId	include/xercesc/dom/impl/DOMLSInputImpl.hpp	/^    XMLCh                        *fPublicId;$/;"	m	class:DOMLSInputImpl
fPublicId	include/xercesc/dom/impl/DOMNotationImpl.hpp	/^    const XMLCh * fPublicId;$/;"	m	class:DOMNotationImpl
fPublicId	include/xercesc/framework/XMLEntityDecl.hpp	/^    XMLCh*          fPublicId;$/;"	m	class:XMLEntityDecl
fPublicId	include/xercesc/framework/XMLNotationDecl.hpp	/^    XMLCh*          fPublicId;$/;"	m	class:XMLNotationDecl
fPublicId	include/xercesc/internal/XMLReader.hpp	/^    XMLCh*                      fPublicId;$/;"	m	class:XMLReader
fPublicId	include/xercesc/sax/InputSource.hpp	/^    XMLCh*         fPublicId;$/;"	m	class:InputSource
fPublicId	include/xercesc/sax/SAXParseException.hpp	/^    XMLCh*          fPublicId;$/;"	m	class:SAXParseException
fPublicId	include/xercesc/util/XMLResourceIdentifier.hpp	/^    const XMLCh*                    fPublicId;$/;"	m	class:XMLResourceIdentifier
fPublicId	include/xercesc/validators/schema/XSDLocator.hpp	/^    const XMLCh* fPublicId;$/;"	m	class:XSDLocator
fQNameBuf	include/xercesc/internal/XMLScanner.hpp	/^    XMLBuffer                   fQNameBuf;$/;"	m	class:XMLScanner
fQuery	include/xercesc/util/XMLURL.hpp	/^    XMLCh*          fQuery;$/;"	m	class:XMLURL
fQueryString	include/xercesc/util/XMLUri.hpp	/^    XMLCh*          fQueryString;$/;"	m	class:XMLUri
fQuoteLen	include/xercesc/framework/XMLFormatter.hpp	/^    XMLSize_t                   fQuoteLen;$/;"	m	class:XMLFormatter
fQuoteRef	include/xercesc/framework/XMLFormatter.hpp	/^    XMLByte*                    fQuoteRef;$/;"	m	class:XMLFormatter
fRange	include/xercesc/util/regx/RangeTokenMap.hpp	/^    RangeToken*  fRange;$/;"	m	class:RangeTokenElemMap
fRangeMap	include/xercesc/util/regx/RangeTokenMap.hpp	/^    RefHashTableOf<RangeFactory>*      fRangeMap;$/;"	m	class:RangeTokenMap
fRanges	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^    Ranges*               fRanges;$/;"	m	class:DOMDocumentImpl
fRanges	include/xercesc/util/regx/RangeToken.hpp	/^    XMLInt32*    fRanges;$/;"	m	class:RangeToken
fRangesCreated	include/xercesc/util/regx/RangeFactory.hpp	/^    bool fRangesCreated;$/;"	m	class:RangeFactory
fRawAttrColonList	include/xercesc/internal/IGXMLScanner.hpp	/^    int*                                    fRawAttrColonList;$/;"	m	class:IGXMLScanner
fRawAttrColonList	include/xercesc/internal/SGXMLScanner.hpp	/^    int*                                    fRawAttrColonList;$/;"	m	class:SGXMLScanner
fRawAttrColonListSize	include/xercesc/internal/IGXMLScanner.hpp	/^    unsigned int                            fRawAttrColonListSize;$/;"	m	class:IGXMLScanner
fRawAttrColonListSize	include/xercesc/internal/SGXMLScanner.hpp	/^    unsigned int                            fRawAttrColonListSize;$/;"	m	class:SGXMLScanner
fRawAttrList	include/xercesc/internal/IGXMLScanner.hpp	/^    RefVectorOf<KVStringPair>*              fRawAttrList;$/;"	m	class:IGXMLScanner
fRawAttrList	include/xercesc/internal/SGXMLScanner.hpp	/^    RefVectorOf<KVStringPair>*              fRawAttrList;$/;"	m	class:SGXMLScanner
fRawBufIndex	include/xercesc/internal/XMLReader.hpp	/^    XMLSize_t                   fRawBufIndex;$/;"	m	class:XMLReader
fRawByteBuf	include/xercesc/internal/XMLReader.hpp	/^    XMLByte                     fRawByteBuf[kRawBufSize];$/;"	m	class:XMLReader
fRawBytesAvail	include/xercesc/internal/XMLReader.hpp	/^    XMLSize_t                   fRawBytesAvail;$/;"	m	class:XMLReader
fRawData	include/xercesc/util/XMLAbstractDoubleFloat.hpp	/^    XMLCh*                  fRawData;$/;"	m	class:XMLAbstractDoubleFloat
fRawData	include/xercesc/util/XMLBigDecimal.hpp	/^    XMLCh*         fRawData;$/;"	m	class:XMLBigDecimal
fRawData	include/xercesc/util/XMLBigInteger.hpp	/^    XMLCh*      fRawData;$/;"	m	class:XMLBigInteger
fRawDataLen	include/xercesc/util/XMLBigDecimal.hpp	/^    XMLSize_t      fRawDataLen;$/;"	m	class:XMLBigDecimal
fRawName	include/xercesc/util/QName.hpp	/^    XMLCh*              fRawName;$/;"	m	class:QName
fRawNameBufSz	include/xercesc/util/QName.hpp	/^    XMLSize_t           fRawNameBufSz;$/;"	m	class:QName
fReaderMgr	include/xercesc/framework/XMLValidator.hpp	/^    ReaderMgr*          fReaderMgr;$/;"	m	class:XMLValidator
fReaderMgr	include/xercesc/internal/XMLScanner.hpp	/^    ReaderMgr                   fReaderMgr;$/;"	m	class:XMLScanner
fReaderMgr	include/xercesc/validators/DTD/DTDScanner.hpp	/^    ReaderMgr*                      fReaderMgr;$/;"	m	class:DTDScanner
fReaderNum	include/xercesc/internal/ElemStack.hpp	/^        XMLSize_t           fReaderNum;$/;"	m	struct:ElemStack::StackElem
fReaderNum	include/xercesc/internal/ElemStack.hpp	/^        unsigned int        fReaderNum;$/;"	m	struct:WFElemStack::StackElem
fReaderNum	include/xercesc/internal/EndOfEntityException.hpp	/^    XMLSize_t       fReaderNum;$/;"	m	class:EndOfEntityException
fReaderNum	include/xercesc/internal/XMLReader.hpp	/^    XMLSize_t                   fReaderNum;$/;"	m	class:XMLReader
fReaderStack	include/xercesc/internal/ReaderMgr.hpp	/^    RefStackOf<XMLReader>*      fReaderStack;$/;"	m	class:ReaderMgr
fRecursingAnonTypes	include/xercesc/validators/schema/SchemaInfo.hpp	/^    ValueVectorOf<const DOMElement*>* fRecursingAnonTypes;$/;"	m	class:SchemaInfo
fRecursingTypeNames	include/xercesc/validators/schema/SchemaInfo.hpp	/^    ValueVectorOf<const XMLCh*>*      fRecursingTypeNames;$/;"	m	class:SchemaInfo
fRecycleBufferPtr	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^    RefStackOf<DOMBuffer>* fRecycleBufferPtr;$/;"	m	class:DOMDocumentImpl
fRecycleNodePtr	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^    RefArrayOf<DOMNodePtr>* fRecycleNodePtr;$/;"	m	class:DOMDocumentImpl
fRedefineComponents	include/xercesc/validators/schema/TraverseSchema.hpp	/^    RefHash2KeysTableOf<XMLCh>*                    fRedefineComponents;$/;"	m	class:TraverseSchema
fRefEntity	include/xercesc/dom/impl/DOMEntityImpl.hpp	/^    DOMEntityReference*	fRefEntity;$/;"	m	class:DOMEntityImpl
fRefFrom	include/xercesc/internal/XMLReader.hpp	/^    RefFrom                     fRefFrom;$/;"	m	class:XMLReader
fRefName	include/xercesc/framework/XMLRefInfo.hpp	/^    XMLCh*      fRefName;$/;"	m	class:XMLRefInfo
fRefNo	include/xercesc/util/regx/StringToken.hpp	/^    int    fRefNo;$/;"	m	class:StringToken
fReferenceEscaped	include/xercesc/internal/ElemStack.hpp	/^        bool                fReferenceEscaped;$/;"	m	struct:ElemStack::StackElem
fReferenceNo	include/xercesc/util/regx/RegxParser.hpp	/^            int            fReferenceNo;$/;"	m	class:RegxParser::ReferencePosition
fReferences	include/xercesc/util/regx/RegxParser.hpp	/^    RefVectorOf<ReferencePosition>* fReferences;$/;"	m	class:RegxParser
fRegAuth	include/xercesc/util/XMLUri.hpp	/^    XMLCh*          fRegAuth;$/;"	m	class:XMLUri
fRegex	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^    RegularExpression*                  fRegex;$/;"	m	class:DatatypeValidator
fRelatedData	include/xercesc/dom/impl/DOMErrorImpl.hpp	/^    void*         fRelatedData;$/;"	m	class:DOMErrorImpl
fRelatedNode	include/xercesc/dom/impl/DOMLocatorImpl.hpp	/^    DOMNode*        fRelatedNode;$/;"	m	class:DOMLocatorImpl
fRemoveChild	include/xercesc/dom/impl/DOMRangeImpl.hpp	/^    DOMNode*     fRemoveChild;$/;"	m	class:DOMRangeImpl
fRequired	include/xercesc/framework/psvi/XSAttributeUse.hpp	/^    bool                          fRequired;$/;"	m	class:XSAttributeUse
fResolverNode	include/xercesc/dom/impl/DOMXPathNSResolverImpl.hpp	/^    const DOMNode*                fResolverNode;$/;"	m	class:DOMXPathNSResolverImpl
fResourceIdentifierType	include/xercesc/util/XMLResourceIdentifier.hpp	/^    const ResourceIdentifierType    fResourceIdentifierType;$/;"	m	class:XMLResourceIdentifier
fRightChild	include/xercesc/validators/common/CMBinaryOp.hpp	/^    CMNode* fRightChild;$/;"	m	class:CMBinaryOp
fRoot	include/xercesc/dom/impl/DOMNodeIteratorImpl.hpp	/^        DOMNode* fRoot;$/;"	m	class:DOMNodeIteratorImpl
fRoot	include/xercesc/dom/impl/DOMTreeWalkerImpl.hpp	/^        DOMNode* fRoot;$/;"	m	class:DOMTreeWalkerImpl
fRootElemName	include/xercesc/internal/XMLScanner.hpp	/^    XMLCh*                      fRootElemName;$/;"	m	class:XMLScanner
fRootGrammar	include/xercesc/internal/XMLScanner.hpp	/^    Grammar*                    fRootGrammar;$/;"	m	class:XMLScanner
fRootName	include/xercesc/validators/DTD/XMLDTDDescriptionImpl.hpp	/^    const XMLCh*      fRootName;    $/;"	m	class:XMLDTDDescriptionImpl
fRootNode	include/xercesc/dom/impl/DOMDeepNodeListImpl.hpp	/^    const DOMNode*   fRootNode;$/;"	m	class:DOMDeepNodeListImpl
fSawError	include/xercesc/internal/XMLInternalErrorHandler.hpp	/^    bool    fSawError;$/;"	m	class:XMLInternalErrorHandler
fSawFatal	include/xercesc/internal/XMLInternalErrorHandler.hpp	/^    bool    fSawFatal;$/;"	m	class:XMLInternalErrorHandler
fSawFatal	include/xercesc/validators/schema/XSDDOMParser.hpp	/^    bool                         fSawFatal;$/;"	m	class:XSDDOMParser
fSawWarning	include/xercesc/internal/XMLInternalErrorHandler.hpp	/^    bool    fSawWarning;$/;"	m	class:XMLInternalErrorHandler
fScale	include/xercesc/util/XMLBigDecimal.hpp	/^    unsigned int   fScale;$/;"	m	class:XMLBigDecimal
fScanner	include/xercesc/framework/XMLValidator.hpp	/^    XMLScanner*         fScanner;$/;"	m	class:XMLValidator
fScanner	include/xercesc/internal/ValidationContextImpl.hpp	/^    XMLScanner*                         fScanner;$/;"	m	class:ValidationContextImpl
fScanner	include/xercesc/internal/VecAttributesImpl.hpp	/^    const XMLScanner *		fScanner ;$/;"	m	class:VecAttributesImpl
fScanner	include/xercesc/parsers/AbstractDOMParser.hpp	/^    XMLScanner*                   fScanner;$/;"	m	class:AbstractDOMParser
fScanner	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^    XMLScanner*                 fScanner;$/;"	m	class:SAX2XMLReaderImpl
fScanner	include/xercesc/parsers/SAXParser.hpp	/^    XMLScanner*          fScanner;$/;"	m	class:SAXParser
fScanner	include/xercesc/validators/DTD/DTDScanner.hpp	/^    XMLScanner*                     fScanner;$/;"	m	class:DTDScanner
fScanner	include/xercesc/validators/schema/TraverseSchema.hpp	/^    XMLScanner*                                    fScanner;$/;"	m	class:TraverseSchema
fScanner	include/xercesc/validators/schema/identity/IdentityConstraintHandler.hpp	/^    XMLScanner*                 fScanner;$/;"	m	class:IdentityConstraintHandler
fScanner	include/xercesc/validators/schema/identity/ValueStore.hpp	/^    XMLScanner*                 fScanner; \/\/ for error reporting - REVISIT$/;"	m	class:ValueStore
fScanner	include/xercesc/validators/schema/identity/ValueStoreCache.hpp	/^    XMLScanner*                              fScanner;$/;"	m	class:ValueStoreCache
fScannerId	include/xercesc/framework/XMLPScanToken.hpp	/^    XMLUInt32   fScannerId;$/;"	m	class:XMLPScanToken
fScannerId	include/xercesc/internal/XMLScanner.hpp	/^    XMLUInt32                   fScannerId;$/;"	m	class:XMLScanner
fSchemaElemName	include/xercesc/internal/ElemStack.hpp	/^        XMLCh *             fSchemaElemName;$/;"	m	struct:ElemStack::StackElem
fSchemaElemNameMaxLen	include/xercesc/internal/ElemStack.hpp	/^        XMLSize_t           fSchemaElemNameMaxLen;$/;"	m	struct:ElemStack::StackElem
fSchemaElemNonDeclPool	include/xercesc/internal/IGXMLScanner.hpp	/^    RefHash3KeysIdPool<SchemaElementDecl>*  fSchemaElemNonDeclPool;$/;"	m	class:IGXMLScanner
fSchemaElementDecl	include/xercesc/framework/psvi/XSElementDeclaration.hpp	/^    SchemaElementDecl*            fSchemaElementDecl;$/;"	m	class:XSElementDeclaration
fSchemaErrorReporter	include/xercesc/validators/schema/SchemaValidator.hpp	/^    XSDErrorReporter                fSchemaErrorReporter;$/;"	m	class:SchemaValidator
fSchemaFullChecking	include/xercesc/internal/XMLScanner.hpp	/^    bool                        fSchemaFullChecking;$/;"	m	class:XMLScanner
fSchemaGrammar	include/xercesc/internal/SGXMLScanner.hpp	/^    SchemaGrammar*                          fSchemaGrammar;$/;"	m	class:SGXMLScanner
fSchemaGrammar	include/xercesc/validators/schema/SchemaValidator.hpp	/^    SchemaGrammar*                  fSchemaGrammar;$/;"	m	class:SchemaValidator
fSchemaGrammar	include/xercesc/validators/schema/TraverseSchema.hpp	/^    SchemaGrammar*                                 fSchemaGrammar;$/;"	m	class:TraverseSchema
fSchemaInfo	include/xercesc/framework/psvi/PSVIElement.hpp	/^    XSModel *fSchemaInfo;$/;"	m	class:PSVIElement
fSchemaInfo	include/xercesc/validators/schema/TraverseSchema.hpp	/^    SchemaInfo*                                    fSchemaInfo;$/;"	m	class:TraverseSchema
fSchemaInfoList	include/xercesc/internal/IGXMLScanner.hpp	/^    RefHash2KeysTableOf<SchemaInfo>*        fSchemaInfoList;$/;"	m	class:IGXMLScanner
fSchemaInfoList	include/xercesc/internal/SGXMLScanner.hpp	/^    RefHash2KeysTableOf<SchemaInfo>*        fSchemaInfoList;$/;"	m	class:SGXMLScanner
fSchemaInfoList	include/xercesc/validators/schema/TraverseSchema.hpp	/^    RefHash2KeysTableOf<SchemaInfo>*               fSchemaInfoList;$/;"	m	class:TraverseSchema
fSchemaLocation	include/xercesc/dom/impl/DOMConfigurationImpl.hpp	/^    const XMLCh* fSchemaLocation;$/;"	m	class:DOMConfigurationImpl
fSchemaNamespace	include/xercesc/framework/psvi/XSNamespaceItem.hpp	/^    const XMLCh*                            fSchemaNamespace;$/;"	m	class:XSNamespaceItem
fSchemaNamespaceId	include/xercesc/internal/XMLScanner.hpp	/^    unsigned int                fSchemaNamespaceId;$/;"	m	class:XMLScanner
fSchemaRootElement	include/xercesc/validators/schema/SchemaInfo.hpp	/^    const DOMElement*                 fSchemaRootElement;$/;"	m	class:SchemaInfo
fSchemaType	include/xercesc/dom/impl/DOMAttrImpl.hpp	/^    const DOMTypeInfoImpl *fSchemaType;$/;"	m	class:DOMAttrImpl
fSchemaType	include/xercesc/dom/impl/DOMConfigurationImpl.hpp	/^    const XMLCh* fSchemaType;$/;"	m	class:DOMConfigurationImpl
fSchemaType	include/xercesc/dom/impl/DOMElementNSImpl.hpp	/^    const DOMTypeInfoImpl *fSchemaType;$/;"	m	class:DOMElementNSImpl
fSchemaValidator	include/xercesc/internal/IGXMLScanner.hpp	/^    SchemaValidator*                        fSchemaValidator;$/;"	m	class:IGXMLScanner
fSchemaValidator	include/xercesc/internal/SGXMLScanner.hpp	/^    SchemaValidator*                        fSchemaValidator;$/;"	m	class:SGXMLScanner
fScheme	include/xercesc/util/XMLUri.hpp	/^    XMLCh*          fScheme;$/;"	m	class:XMLUri
fScope	include/xercesc/framework/psvi/XSAttributeDeclaration.hpp	/^    XSConstants::SCOPE          fScope;$/;"	m	class:XSAttributeDeclaration
fScope	include/xercesc/framework/psvi/XSElementDeclaration.hpp	/^    XSConstants::SCOPE            fScope;$/;"	m	class:XSElementDeclaration
fScope	include/xercesc/validators/schema/XercesGroupInfo.hpp	/^    unsigned int                    fScope;$/;"	m	class:XercesGroupInfo
fScopeCount	include/xercesc/validators/schema/SchemaGrammar.hpp	/^    unsigned int                             fScopeCount;$/;"	m	class:SchemaGrammar
fScopeCount	include/xercesc/validators/schema/TraverseSchema.hpp	/^    unsigned int                                   fScopeCount;$/;"	m	class:TraverseSchema
fScopeDefined	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^    unsigned int                       fScopeDefined;$/;"	m	class:ComplexTypeInfo
fScopes	include/xercesc/dom/impl/DOMNormalizer.hpp	/^        RefVectorOf<Scope> *fScopes;$/;"	m	class:DOMNormalizer::InScopeNamespaces
fSecond	include/xercesc/validators/common/ContentSpecNode.hpp	/^    ContentSpecNode*    fSecond;$/;"	m	class:ContentSpecNode
fSecondChild	include/xercesc/validators/common/SimpleContentModel.hpp	/^    QName*                     fSecondChild;$/;"	m	class:SimpleContentModel
fSecurityManager	include/xercesc/internal/XMLScanner.hpp	/^    SecurityManager*            fSecurityManager;$/;"	m	class:XMLScanner
fSeeXsi	include/xercesc/internal/IGXMLScanner.hpp	/^    bool                                    fSeeXsi;$/;"	m	class:IGXMLScanner
fSeeXsi	include/xercesc/internal/SGXMLScanner.hpp	/^    bool                                    fSeeXsi;$/;"	m	class:SGXMLScanner
fSeenId	include/xercesc/validators/schema/SchemaValidator.hpp	/^    bool                            fSeenId;$/;"	m	class:SchemaValidator
fSeenNonWhiteSpace	include/xercesc/validators/schema/SchemaValidator.hpp	/^    bool                            fSeenNonWhiteSpace;$/;"	m	class:SchemaValidator
fSelector	include/xercesc/validators/schema/identity/IC_Selector.hpp	/^    IC_Selector*    fSelector;$/;"	m	class:SelectorMatcher
fSelector	include/xercesc/validators/schema/identity/IdentityConstraint.hpp	/^    IC_Selector*           fSelector;$/;"	m	class:IdentityConstraint
fSelfSymbol	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    int fSelfSymbol;$/;"	m	class:XPathScanner
fSentTrailingSpace	include/xercesc/internal/XMLReader.hpp	/^    bool                        fSentTrailingSpace;$/;"	m	class:XMLReader
fSequenceId	include/xercesc/framework/XMLPScanToken.hpp	/^    XMLUInt32   fSequenceId;$/;"	m	class:XMLPScanToken
fSequenceId	include/xercesc/internal/XMLScanner.hpp	/^    XMLUInt32                   fSequenceId;$/;"	m	class:XMLScanner
fSeverity	include/xercesc/dom/impl/DOMErrorImpl.hpp	/^    ErrorSeverity fSeverity;$/;"	m	class:DOMErrorImpl
fShiftTable	include/xercesc/util/regx/BMPattern.hpp	/^    XMLSize_t*     fShiftTable;$/;"	m	class:BMPattern
fShiftTableLen	include/xercesc/util/regx/BMPattern.hpp	/^    unsigned int   fShiftTableLen;$/;"	m	class:BMPattern
fSign	include/xercesc/util/XMLAbstractDoubleFloat.hpp	/^    int                     fSign;$/;"	m	class:XMLAbstractDoubleFloat
fSign	include/xercesc/util/XMLBigDecimal.hpp	/^    int            fSign;$/;"	m	class:XMLBigDecimal
fSign	include/xercesc/util/XMLBigInteger.hpp	/^    int         fSign;$/;"	m	class:XMLBigInteger
fSize	include/xercesc/dom/impl/DOMNodeIDMap.hpp	/^	XMLSize_t      fSize;                   \/\/ The current size of the table array$/;"	m	class:DOMNodeIDMap
fSize	include/xercesc/util/RefArrayOf.hpp	/^	XMLSize_t       fSize;$/;"	m	class:RefArrayOf
fSize	include/xercesc/util/ValueArrayOf.hpp	/^	XMLSize_t       fSize;$/;"	m	class:ValueArrayOf
fSize	include/xercesc/util/regx/RegularExpression.hpp	/^            int            fSize;$/;"	m	class:RegularExpression::Context
fSize	include/xercesc/validators/DTD/DTDAttDefList.hpp	/^    XMLSize_t                               fSize;$/;"	m	class:DTDAttDefList
fSize	include/xercesc/validators/schema/SchemaAttDefList.hpp	/^    XMLSize_t                                       fSize;$/;"	m	class:SchemaAttDefList
fSizeIndex	include/xercesc/dom/impl/DOMNodeIDMap.hpp	/^    XMLSize_t      fSizeIndex;              \/\/ Index of the current table size in the$/;"	m	class:DOMNodeIDMap
fSkipDTDValidation	include/xercesc/internal/XMLScanner.hpp	/^    bool                        fSkipDTDValidation;$/;"	m	class:XMLScanner
fSnapshot	include/xercesc/dom/impl/DOMXPathResultImpl.hpp	/^    RefVectorOf<DOMNode>*   fSnapshot;$/;"	m	class:DOMXPathResultImpl
fSorted	include/xercesc/util/regx/RangeToken.hpp	/^    bool         fSorted;$/;"	m	class:RangeToken
fSource	include/xercesc/framework/LocalFileFormatTarget.hpp	/^    FileHandle      fSource;$/;"	m	class:LocalFileFormatTarget
fSource	include/xercesc/internal/BinFileOutputStream.hpp	/^    FileHandle              fSource;$/;"	m	class:BinFileOutputStream
fSource	include/xercesc/internal/XMLReader.hpp	/^    Sources                     fSource;$/;"	m	class:XMLReader
fSource	include/xercesc/util/BinFileInputStream.hpp	/^    FileHandle              fSource;$/;"	m	class:BinFileInputStream
fSpecified	include/xercesc/framework/XMLAttr.hpp	/^    bool                fSpecified;$/;"	m	class:XMLAttr
fSrcBytes	include/xercesc/framework/MemBufInputSource.hpp	/^    const XMLByte*  fSrcBytes;$/;"	m	class:MemBufInputSource
fSrcFile	include/xercesc/util/XMLException.hpp	/^    char*                   fSrcFile;$/;"	m	class:XMLException
fSrcLine	include/xercesc/util/XMLException.hpp	/^    XMLFileLoc              fSrcLine;$/;"	m	class:XMLException
fSrcOfsBase	include/xercesc/internal/XMLReader.hpp	/^    XMLFilePos                  fSrcOfsBase;$/;"	m	class:XMLReader
fSrcOfsSupported	include/xercesc/internal/XMLReader.hpp	/^    bool                        fSrcOfsSupported;$/;"	m	class:XMLReader
fStack	include/xercesc/internal/ElemStack.hpp	/^    StackElem**                  fStack;$/;"	m	class:ElemStack
fStack	include/xercesc/internal/ElemStack.hpp	/^    StackElem**     fStack;$/;"	m	class:WFElemStack
fStack	include/xercesc/validators/schema/NamespaceScope.hpp	/^    StackElem**   fStack;$/;"	m	class:NamespaceScope
fStackCapacity	include/xercesc/internal/ElemStack.hpp	/^    XMLSize_t                    fStackCapacity;$/;"	m	class:ElemStack
fStackCapacity	include/xercesc/internal/ElemStack.hpp	/^    XMLSize_t       fStackCapacity;$/;"	m	class:WFElemStack
fStackCapacity	include/xercesc/validators/schema/NamespaceScope.hpp	/^    unsigned int  fStackCapacity;$/;"	m	class:NamespaceScope
fStackTop	include/xercesc/internal/ElemStack.hpp	/^    XMLSize_t                    fStackTop;$/;"	m	class:ElemStack
fStackTop	include/xercesc/internal/ElemStack.hpp	/^    XMLSize_t       fStackTop;$/;"	m	class:WFElemStack
fStackTop	include/xercesc/validators/schema/NamespaceScope.hpp	/^    unsigned int  fStackTop;$/;"	m	class:NamespaceScope
fStandalone	include/xercesc/internal/XMLScanner.hpp	/^    bool                        fStandalone;$/;"	m	class:XMLScanner
fStandardUriConformant	include/xercesc/internal/ReaderMgr.hpp	/^    bool                        fStandardUriConformant;$/;"	m	class:ReaderMgr
fStandardUriConformant	include/xercesc/internal/XMLScanner.hpp	/^    bool                        fStandardUriConformant;$/;"	m	class:XMLScanner
fStart	include/xercesc/util/XMLDateTime.hpp	/^    XMLSize_t    fStart;$/;"	m	class:XMLDateTime
fStart	include/xercesc/util/regx/RegularExpression.hpp	/^            XMLSize_t      fStart;$/;"	m	class:RegularExpression::Context
fStartContainer	include/xercesc/dom/impl/DOMRangeImpl.hpp	/^    DOMNode*     fStartContainer;$/;"	m	class:DOMRangeImpl
fStartOffset	include/xercesc/dom/impl/DOMRangeImpl.hpp	/^    XMLSize_t    fStartOffset;$/;"	m	class:DOMRangeImpl
fStartPositions	include/xercesc/util/regx/Match.hpp	/^    int* fStartPositions;$/;"	m	class:Match
fState	include/xercesc/util/regx/RegxParser.hpp	/^    parserState                     fState;$/;"	m	class:RegxParser
fStepIndexes	include/xercesc/validators/schema/identity/XPathMatcher.hpp	/^    RefVectorOf<ValueStackOf<XMLSize_t> >*  fStepIndexes;$/;"	m	class:XPathMatcher
fSteps	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    RefVectorOf<XercesStep>* fSteps;$/;"	m	class:XercesLocationPath
fStoreLoad	include/xercesc/internal/XSerializeEngine.hpp	/^    const short                            fStoreLoad;$/;"	m	class:XSerializeEngine
fStorePool	include/xercesc/internal/XSerializeEngine.hpp	/^    RefHashTableOf<XSerializedObjectId, PtrHasher>*   fStorePool;$/;"	m	class:XSerializeEngine
fStorerLevel	include/xercesc/internal/XSerializeEngine.hpp	/^    unsigned int                           fStorerLevel;$/;"	m	class:XSerializeEngine
fStrEnumeration	include/xercesc/validators/datatype/AbstractNumericFacetValidator.hpp	/^    RefArrayVectorOf<XMLCh>*      fStrEnumeration;$/;"	m	class:AbstractNumericFacetValidator
fStream	include/xercesc/internal/XMLReader.hpp	/^    BinInputStream*             fStream;$/;"	m	class:XMLReader
fString	include/xercesc/dom/impl/DOMStringPool.hpp	/^    XMLCh                 fString[1];$/;"	m	struct:DOMStringPoolEntry
fString	include/xercesc/util/StringPool.hpp	/^        XMLCh*        fString;$/;"	m	struct:XMLStringPool::PoolElem
fString	include/xercesc/util/TransService.hpp	/^    XMLByte *fString;$/;"	m	class:TranscodeToStr
fString	include/xercesc/util/TransService.hpp	/^    XMLCh *fString;$/;"	m	class:TranscodeFromStr
fString	include/xercesc/util/XMLStringTokenizer.hpp	/^	XMLCh*              fString;$/;"	m	class:XMLStringTokenizer
fString	include/xercesc/util/regx/RegularExpression.hpp	/^            const XMLCh*   fString;$/;"	m	class:RegularExpression::Context
fString	include/xercesc/util/regx/RegxParser.hpp	/^    XMLCh*                          fString;$/;"	m	class:RegxParser
fString	include/xercesc/util/regx/StringToken.hpp	/^    XMLCh* fString;$/;"	m	class:StringToken
fStringData	include/xercesc/dom/impl/DOMLSInputImpl.hpp	/^    const XMLCh                  *fStringData;$/;"	m	class:DOMLSInputImpl
fStringLen	include/xercesc/util/XMLStringTokenizer.hpp	/^    XMLSize_t           fStringLen;$/;"	m	class:XMLStringTokenizer
fStringLen	include/xercesc/util/regx/RegxParser.hpp	/^    XMLSize_t                       fStringLen;$/;"	m	class:RegxParser
fStringList	include/xercesc/framework/psvi/XSIDCDefinition.hpp	/^    StringList*         fStringList;$/;"	m	class:XSIDCDefinition
fStringMaxLen	include/xercesc/util/regx/RegularExpression.hpp	/^            XMLSize_t      fStringMaxLen;$/;"	m	class:RegularExpression::Context
fStringPool	include/xercesc/dom/impl/DOMXPathExpressionImpl.hpp	/^    XMLStringPool*              fStringPool;$/;"	m	class:DOMXPathExpressionImpl
fStringPool	include/xercesc/framework/XMLGrammarPoolImpl.hpp	/^    XMLStringPool*                      fStringPool;$/;"	m	class:XMLGrammarPoolImpl
fStringPool	include/xercesc/validators/common/GrammarResolver.hpp	/^    XMLStringPool*                  fStringPool;$/;"	m	class:GrammarResolver
fStringPool	include/xercesc/validators/schema/SubstitutionGroupComparator.hpp	/^    XMLStringPool       *fStringPool;$/;"	m	class:SubstitutionGroupComparator
fStringPool	include/xercesc/validators/schema/TraverseSchema.hpp	/^    XMLStringPool*                                 fStringPool;$/;"	m	class:TraverseSchema
fStringPool	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    XMLStringPool* fStringPool;$/;"	m	class:XPathScanner
fSubstitutionGroupAffiliation	include/xercesc/framework/psvi/XSElementDeclaration.hpp	/^    XSElementDeclaration*         fSubstitutionGroupAffiliation;$/;"	m	class:XSElementDeclaration
fSubstitutionGroupElem	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^    SchemaElementDecl*                 fSubstitutionGroupElem;$/;"	m	class:SchemaElementDecl
fSubstitutionGroupExclusions	include/xercesc/framework/psvi/XSElementDeclaration.hpp	/^    short                         fSubstitutionGroupExclusions;    $/;"	m	class:XSElementDeclaration
fSupportedParameters	include/xercesc/dom/impl/DOMConfigurationImpl.hpp	/^    DOMStringListImpl* fSupportedParameters;$/;"	m	class:DOMConfigurationImpl
fSupportedParameters	include/xercesc/dom/impl/DOMLSSerializerImpl.hpp	/^    DOMStringListImpl            *fSupportedParameters;$/;"	m	class:DOMLSSerializerImpl
fSupportedParameters	include/xercesc/parsers/DOMLSParserImpl.hpp	/^    DOMStringListImpl*          fSupportedParameters;$/;"	m	class:DOMLSParserImpl
fSwapped	include/xercesc/internal/XMLReader.hpp	/^    bool                        fSwapped;$/;"	m	class:XMLReader
fSwapped	include/xercesc/util/TransENameMap.hpp	/^    bool    fSwapped;$/;"	m	class:EEndianNameMapFor
fSwapped	include/xercesc/util/XMLUCS4Transcoder.hpp	/^    bool    fSwapped;$/;"	m	class:XMLUCS4Transcoder
fSwapped	include/xercesc/util/XMLUTF16Transcoder.hpp	/^    bool    fSwapped;$/;"	m	class:XMLUTF16Transcoder
fSynchronizedStringPool	include/xercesc/framework/XMLGrammarPoolImpl.hpp	/^    XMLSynchronizedStringPool*          fSynchronizedStringPool;$/;"	m	class:XMLGrammarPoolImpl
fSystemId	include/xercesc/dom/impl/DOMDocumentTypeImpl.hpp	/^    const XMLCh *        fSystemId;$/;"	m	class:DOMDocumentTypeImpl
fSystemId	include/xercesc/dom/impl/DOMEntityImpl.hpp	/^    const XMLCh *   fSystemId;$/;"	m	class:DOMEntityImpl
fSystemId	include/xercesc/dom/impl/DOMLSInputImpl.hpp	/^    XMLCh                        *fSystemId;$/;"	m	class:DOMLSInputImpl
fSystemId	include/xercesc/dom/impl/DOMLSOutputImpl.hpp	/^    XMLCh                        *fSystemId;$/;"	m	class:DOMLSOutputImpl
fSystemId	include/xercesc/dom/impl/DOMNotationImpl.hpp	/^    const XMLCh * fSystemId;$/;"	m	class:DOMNotationImpl
fSystemId	include/xercesc/framework/XMLEntityDecl.hpp	/^    XMLCh*          fSystemId;$/;"	m	class:XMLEntityDecl
fSystemId	include/xercesc/framework/XMLNotationDecl.hpp	/^    XMLCh*          fSystemId;$/;"	m	class:XMLNotationDecl
fSystemId	include/xercesc/framework/psvi/XSAnnotation.hpp	/^    XMLCh*        fSystemId;$/;"	m	class:XSAnnotation
fSystemId	include/xercesc/internal/XMLReader.hpp	/^    XMLCh*                      fSystemId;$/;"	m	class:XMLReader
fSystemId	include/xercesc/sax/InputSource.hpp	/^    XMLCh*         fSystemId;$/;"	m	class:InputSource
fSystemId	include/xercesc/sax/SAXParseException.hpp	/^    XMLCh*          fSystemId;$/;"	m	class:SAXParseException
fSystemId	include/xercesc/util/XMLResourceIdentifier.hpp	/^    const XMLCh*                    fSystemId;$/;"	m	class:XMLResourceIdentifier
fSystemId	include/xercesc/validators/DTD/XMLDTDDescriptionImpl.hpp	/^    const XMLCh*      fSystemId;$/;"	m	class:XMLDTDDescriptionImpl
fSystemId	include/xercesc/validators/schema/XSDLocator.hpp	/^    const XMLCh* fSystemId;$/;"	m	class:XSDLocator
fTable	include/xercesc/dom/impl/DOMNodeIDMap.hpp	/^    DOMAttr      **fTable;$/;"	m	class:DOMNodeIDMap
fTagName	include/xercesc/dom/impl/DOMDeepNodeListImpl.hpp	/^    const XMLCh*     fTagName;$/;"	m	class:DOMDeepNodeListImpl
fTarget	include/xercesc/dom/impl/DOMProcessingInstructionImpl.hpp	/^    XMLCh       *fTarget;$/;"	m	class:DOMProcessingInstructionImpl
fTarget	include/xercesc/framework/XMLFormatter.hpp	/^    XMLFormatTarget*            fTarget;$/;"	m	class:XMLFormatter
fTargetNSURI	include/xercesc/validators/schema/SchemaInfo.hpp	/^    int                               fTargetNSURI;$/;"	m	class:SchemaInfo
fTargetNSURI	include/xercesc/validators/schema/TraverseSchema.hpp	/^    int                                            fTargetNSURI;$/;"	m	class:TraverseSchema
fTargetNSURIString	include/xercesc/validators/schema/SchemaInfo.hpp	/^    XMLCh*                            fTargetNSURIString;$/;"	m	class:SchemaInfo
fTargetNSURIString	include/xercesc/validators/schema/TraverseSchema.hpp	/^    const XMLCh*                                   fTargetNSURIString;$/;"	m	class:TraverseSchema
fTargetNamespace	include/xercesc/validators/schema/SchemaGrammar.hpp	/^    XMLCh*                                   fTargetNamespace;$/;"	m	class:SchemaGrammar
fTempAttrVec	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^    RefVectorOf<XMLAttr>*       fTempAttrVec ;$/;"	m	class:SAX2XMLReaderImpl
fTempQName	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^    XMLBuffer*                  fTempQName;$/;"	m	class:SAX2XMLReaderImpl
fTerm	include/xercesc/framework/psvi/XSParticle.hpp	/^    XSObject* fTerm;$/;"	m	class:XSParticle
fTermType	include/xercesc/framework/psvi/XSParticle.hpp	/^    TERM_TYPE fTermType;$/;"	m	class:XSParticle
fTextSymbol	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    int fTextSymbol;$/;"	m	class:XPathScanner
fThisElement	include/xercesc/internal/ElemStack.hpp	/^        XMLCh*              fThisElement;$/;"	m	struct:WFElemStack::StackElem
fThisElement	include/xercesc/internal/ElemStack.hpp	/^        XMLElementDecl*     fThisElement;$/;"	m	struct:ElemStack::StackElem
fThrowAtEnd	include/xercesc/internal/XMLReader.hpp	/^    bool                        fThrowAtEnd;$/;"	m	class:XMLReader
fThrowEOE	include/xercesc/internal/ReaderMgr.hpp	/^    bool                        fThrowEOE;$/;"	m	class:ReaderMgr
fTimeZone	include/xercesc/util/XMLDateTime.hpp	/^    int          fTimeZone[TIMEZONE_ARRAYSIZE];$/;"	m	class:XMLDateTime
fTmpBuf	include/xercesc/framework/XMLFormatter.hpp	/^    XMLByte                     fTmpBuf[kTmpBufSize + 4];$/;"	m	class:XMLFormatter
fToCacheGrammar	include/xercesc/internal/XMLScanner.hpp	/^    bool                        fToCacheGrammar;$/;"	m	class:XMLScanner
fToCall	include/xercesc/util/Janitor.hpp	/^    MFPT    fToCall;$/;"	m	class:JanitorMemFunCall
fToCheckIdRefList	include/xercesc/internal/ValidationContextImpl.hpp	/^    bool                                fToCheckIdRefList;$/;"	m	class:ValidationContextImpl
fToEnum	include/xercesc/util/BaseRefVectorOf.hpp	/^    BaseRefVectorOf<TElem>*    fToEnum;$/;"	m	class:BaseRefVectorEnumerator
fToEnum	include/xercesc/util/Hash2KeysSetOf.hpp	/^    Hash2KeysSetOf<THasher>*                fToEnum;$/;"	m	class:Hash2KeysSetOfEnumerator
fToEnum	include/xercesc/util/NameIdPool.hpp	/^    NameIdPool<TElem>*      fToEnum;$/;"	m	class:NameIdPoolEnumerator
fToEnum	include/xercesc/util/RefArrayOf.c	/^    , fToEnum(toEnum)$/;"	f
fToEnum	include/xercesc/util/RefArrayOf.hpp	/^    RefArrayOf<TElem>*  fToEnum;$/;"	m	class:RefArrayEnumerator
fToEnum	include/xercesc/util/RefHash2KeysTableOf.hpp	/^    RefHash2KeysTableOf<TVal, THasher>*     fToEnum;$/;"	m	class:RefHash2KeysTableOfEnumerator
fToEnum	include/xercesc/util/RefHash3KeysIdPool.hpp	/^    RefHash3KeysIdPool<TVal, THasher>*  fToEnum;$/;"	m	class:RefHash3KeysIdPoolEnumerator
fToEnum	include/xercesc/util/RefHashTableOf.hpp	/^    RefHashTableOf<TVal, THasher>*        fToEnum;$/;"	m	class:RefHashTableOfEnumerator
fToEnum	include/xercesc/util/RefStackOf.hpp	/^    RefStackOf<TElem>*  fToEnum;$/;"	m	class:RefStackEnumerator
fToEnum	include/xercesc/util/ValueArrayOf.c	/^    , fToEnum(toEnum)$/;"	f
fToEnum	include/xercesc/util/ValueArrayOf.hpp	/^    ValueArrayOf<TElem>*    fToEnum;$/;"	m	class:ValueArrayEnumerator
fToEnum	include/xercesc/util/ValueHashTableOf.hpp	/^    ValueHashTableOf<TVal, THasher>* fToEnum;$/;"	m	class:ValueHashTableOfEnumerator
fToEnum	include/xercesc/util/ValueStackOf.hpp	/^    ValueStackOf<TElem>*    fToEnum;$/;"	m	class:ValueStackEnumerator
fToEnum	include/xercesc/util/ValueVectorOf.c	/^    , fToEnum(toEnum)$/;"	f
fToEnum	include/xercesc/util/ValueVectorOf.hpp	/^    ValueVectorOf<TElem>*   fToEnum;$/;"	m	class:ValueVectorEnumerator
fToEnum	include/xercesc/validators/common/CMStateSet.hpp	/^    const CMStateSet*   fToEnum;$/;"	m	class:CMStateSetEnumerator
fToLock	include/xercesc/util/Mutexes.hpp	/^    XMLMutex*   fToLock;$/;"	m	class:XMLMutexLock
fToSize	include/xercesc/util/XML256TableTranscoder.hpp	/^    XMLSize_t                           fToSize;$/;"	m	class:XML256TableTranscoder
fToTable	include/xercesc/util/XML256TableTranscoder.hpp	/^    const XMLTransService::TransRec*    fToTable;$/;"	m	class:XML256TableTranscoder
fToken	include/xercesc/util/regx/Op.hpp	/^    const Token* fToken;$/;"	m	class:RangeOp
fTokenFactory	include/xercesc/util/regx/RangeTokenMap.hpp	/^    TokenFactory*                      fTokenFactory;$/;"	m	class:RangeTokenMap
fTokenFactory	include/xercesc/util/regx/RegularExpression.hpp	/^    TokenFactory*      fTokenFactory;$/;"	m	class:RegularExpression
fTokenFactory	include/xercesc/util/regx/RegxParser.hpp	/^    TokenFactory*                   fTokenFactory;$/;"	m	class:RegxParser
fTokenRegistry	include/xercesc/util/regx/RangeTokenMap.hpp	/^    RefHashTableOf<RangeTokenElemMap>* fTokenRegistry;$/;"	m	class:RangeTokenMap
fTokenTree	include/xercesc/util/regx/RegularExpression.hpp	/^    Token*             fTokenTree;$/;"	m	class:RegularExpression
fTokenType	include/xercesc/util/regx/Token.hpp	/^    tokType fTokenType;$/;"	m	class:Token
fTokens	include/xercesc/util/XMLStringTokenizer.hpp	/^	RefArrayVectorOf<XMLCh>* fTokens;$/;"	m	class:XMLStringTokenizer
fTokens	include/xercesc/util/regx/TokenFactory.hpp	/^    RefVectorOf<Token>* fTokens;$/;"	m	class:TokenFactory
fTopLevelComponents	include/xercesc/validators/schema/SchemaInfo.hpp	/^    RefHashTableOf<DOMElement>*       fTopLevelComponents[C_Count];$/;"	m	class:SchemaInfo
fTopPrefix	include/xercesc/internal/ElemStack.hpp	/^        int                 fTopPrefix;        $/;"	m	struct:WFElemStack::StackElem
fTotalBytesRead	include/xercesc/util/NetAccessors/Curl/CurlURLInputStream.hpp	/^    XMLSize_t           fTotalBytesRead;$/;"	m	class:CurlURLInputStream
fTotalDigits	include/xercesc/util/XMLBigDecimal.hpp	/^    unsigned int   fTotalDigits;$/;"	m	class:XMLBigDecimal
fTotalDigits	include/xercesc/validators/datatype/DecimalDatatypeValidator.hpp	/^    unsigned int         fTotalDigits;$/;"	m	class:DecimalDatatypeValidator
fTrailing	include/xercesc/validators/schema/SchemaValidator.hpp	/^    bool                            fTrailing;$/;"	m	class:SchemaValidator
fTransTable	include/xercesc/validators/common/DFAContentModel.hpp	/^    unsigned int**              fTransTable;$/;"	m	class:DFAContentModel
fTransTableSize	include/xercesc/validators/common/DFAContentModel.hpp	/^    unsigned int                fTransTableSize;$/;"	m	class:DFAContentModel
fTranscoder	include/xercesc/internal/XMLReader.hpp	/^    XMLTranscoder*              fTranscoder;$/;"	m	class:XMLReader
fTriggeringComponent	include/xercesc/validators/schema/XMLSchemaDescriptionImpl.hpp	/^    const QName*                           fTriggeringComponent;$/;"	m	class:XMLSchemaDescriptionImpl
fType	include/xercesc/dom/impl/DOMErrorImpl.hpp	/^    const XMLCh*  fType;$/;"	m	class:DOMErrorImpl
fType	include/xercesc/dom/impl/DOMXPathResultImpl.hpp	/^    ResultType              fType;$/;"	m	class:DOMXPathResultImpl
fType	include/xercesc/framework/XMLAttDef.hpp	/^    AttTypes        fType;$/;"	m	class:XMLAttDef
fType	include/xercesc/framework/XMLAttr.hpp	/^    XMLAttDef::AttTypes fType;$/;"	m	class:XMLAttr
fType	include/xercesc/framework/psvi/PSVIItem.hpp	/^    XSTypeDefinition *          fType;$/;"	m	class:PSVIItem
fType	include/xercesc/internal/XMLReader.hpp	/^    Types                       fType;$/;"	m	class:XMLReader
fType	include/xercesc/util/XMLAbstractDoubleFloat.hpp	/^    LiteralType             fType;$/;"	m	class:XMLAbstractDoubleFloat
fType	include/xercesc/validators/common/CMNode.hpp	/^    ContentSpecNode::NodeTypes fType;$/;"	m	class:CMNode
fType	include/xercesc/validators/common/ContentSpecNode.hpp	/^    NodeTypes           fType;$/;"	m	class:ContentSpecNode
fType	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^    ValidatorType                       fType;$/;"	m	class:DatatypeValidator
fType	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    short  fType;$/;"	m	class:XercesNodeTest
fTypeCategory	include/xercesc/framework/psvi/XSTypeDefinition.hpp	/^    TYPE_CATEGORY     fTypeCategory;$/;"	m	class:XSTypeDefinition
fTypeDefinition	include/xercesc/framework/psvi/XSAttributeDeclaration.hpp	/^    XSSimpleTypeDefinition*     fTypeDefinition;$/;"	m	class:XSAttributeDeclaration
fTypeDefinition	include/xercesc/framework/psvi/XSElementDeclaration.hpp	/^    XSTypeDefinition*             fTypeDefinition;$/;"	m	class:XSElementDeclaration
fTypeLocalName	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^    const XMLCh*                        fTypeLocalName;$/;"	m	class:DatatypeValidator
fTypeLocalName	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^    XMLCh*                             fTypeLocalName;$/;"	m	class:ComplexTypeInfo
fTypeName	include/xercesc/dom/impl/DOMTypeInfoImpl.hpp	/^    const XMLCh*    fTypeName;$/;"	m	class:DOMTypeInfoImpl
fTypeName	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^    XMLCh*                              fTypeName;$/;"	m	class:DatatypeValidator
fTypeName	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^    XMLCh*                             fTypeName;$/;"	m	class:ComplexTypeInfo
fTypeNamespace	include/xercesc/dom/impl/DOMTypeInfoImpl.hpp	/^    const XMLCh*    fTypeNamespace;$/;"	m	class:DOMTypeInfoImpl
fTypeStack	include/xercesc/validators/schema/SchemaValidator.hpp	/^    ValueStackOf<ComplexTypeInfo*>* fTypeStack;$/;"	m	class:SchemaValidator
fTypeUri	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^    const XMLCh*                        fTypeUri;$/;"	m	class:DatatypeValidator
fTypeUri	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^    XMLCh*                             fTypeUri;$/;"	m	class:ComplexTypeInfo
fTypeWithId	include/xercesc/validators/schema/XercesAttGroupInfo.hpp	/^    bool                       fTypeWithId;$/;"	m	class:XercesAttGroupInfo
fUBO	include/xercesc/util/Transcoders/IconvGNU/IconvGNUTransService.hpp	/^    unsigned int fUBO;$/;"	m	class:IconvGNUWrapper
fUChSize	include/xercesc/util/Transcoders/IconvGNU/IconvGNUTransService.hpp	/^    size_t	fUChSize;$/;"	m	class:IconvGNUWrapper
fUIntPool	include/xercesc/internal/XMLScanner.hpp	/^    unsigned int **             fUIntPool;$/;"	m	class:XMLScanner
fUIntPoolCol	include/xercesc/internal/XMLScanner.hpp	/^    unsigned int                fUIntPoolCol;$/;"	m	class:XMLScanner
fUIntPoolRow	include/xercesc/internal/XMLScanner.hpp	/^    unsigned int                fUIntPoolRow;$/;"	m	class:XMLScanner
fUIntPoolRowTotal	include/xercesc/internal/XMLScanner.hpp	/^    unsigned int                fUIntPoolRowTotal;$/;"	m	class:XMLScanner
fURI	include/xercesc/dom/impl/DOMLocatorImpl.hpp	/^    const XMLCh*    fURI;$/;"	m	class:DOMLocatorImpl
fURI	include/xercesc/validators/common/CMAny.hpp	/^    unsigned int fURI;$/;"	m	class:CMAny
fURIBuf	include/xercesc/internal/XMLScanner.hpp	/^    XMLBuffer                   fURIBuf;$/;"	m	class:XMLScanner
fURIId	include/xercesc/internal/ElemStack.hpp	/^    unsigned int        fURIId;$/;"	m	struct:PrefMapElem
fURIId	include/xercesc/util/QName.hpp	/^    unsigned int        fURIId;$/;"	m	class:QName
fURIId	include/xercesc/validators/schema/NamespaceScope.hpp	/^        unsigned int        fURIId;$/;"	m	struct:NamespaceScope::PrefMapElem
fURIStringPool	include/xercesc/framework/psvi/XSModel.hpp	/^    XMLStringPool*                          fURIStringPool;$/;"	m	class:XSModel
fURIStringPool	include/xercesc/framework/psvi/XSNamedMap.hpp	/^    XMLStringPool*              fURIStringPool;$/;"	m	class:XSNamedMap
fURIStringPool	include/xercesc/internal/XMLScanner.hpp	/^    XMLStringPool*              fURIStringPool;$/;"	m	class:XMLScanner
fURIStringPool	include/xercesc/parsers/AbstractDOMParser.hpp	/^    XMLStringPool*                fURIStringPool;$/;"	m	class:AbstractDOMParser
fURIStringPool	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^    XMLStringPool*              fURIStringPool;$/;"	m	class:SAX2XMLReaderImpl
fURIStringPool	include/xercesc/parsers/SAXParser.hpp	/^    XMLStringPool*       fURIStringPool;$/;"	m	class:SAXParser
fURIStringPool	include/xercesc/validators/schema/TraverseSchema.hpp	/^    XMLStringPool*                                 fURIStringPool;$/;"	m	class:TraverseSchema
fURIText	include/xercesc/util/XMLUri.hpp	/^    XMLCh*          fURIText;$/;"	m	class:XMLUri
fURIs	include/xercesc/validators/schema/XSDDOMParser.hpp	/^    ValueVectorOf<unsigned int>* fURIs;$/;"	m	class:XSDDOMParser
fURL	include/xercesc/framework/URLInputSource.hpp	/^    XMLURL fURL;$/;"	m	class:URLInputSource
fURLSource	include/xercesc/util/NetAccessors/Curl/CurlURLInputStream.hpp	/^    XMLURL				fURLSource;$/;"	m	class:CurlURLInputStream
fURLText	include/xercesc/util/XMLURL.hpp	/^    XMLCh*          fURLText;$/;"	m	class:XMLURL
fUnRepFlags	include/xercesc/framework/XMLFormatter.hpp	/^    UnRepFlags                  fUnRepFlags;$/;"	m	class:XMLFormatter
fUnbounded	include/xercesc/framework/psvi/XSParticle.hpp	/^    bool      fUnbounded;$/;"	m	class:XSParticle
fUndeclaredAttrRegistry	include/xercesc/internal/DGXMLScanner.hpp	/^    Hash2KeysSetOf<StringHasher>*            fUndeclaredAttrRegistry;$/;"	m	class:DGXMLScanner
fUndeclaredAttrRegistry	include/xercesc/internal/IGXMLScanner.hpp	/^    Hash2KeysSetOf<StringHasher>*           fUndeclaredAttrRegistry;$/;"	m	class:IGXMLScanner
fUndeclaredAttrRegistry	include/xercesc/internal/SGXMLScanner.hpp	/^    Hash2KeysSetOf<StringHasher>*           fUndeclaredAttrRegistry;$/;"	m	class:SGXMLScanner
fUnicodeCP	include/xercesc/util/Transcoders/IconvGNU/IconvGNUTransService.hpp	/^    const char*	fUnicodeCP;$/;"	m	class:IconvGNUTransService
fUniqueURI	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^    unsigned int                       fUniqueURI;$/;"	m	class:ComplexTypeInfo
fUnitLen	include/xercesc/util/BitSet.hpp	/^    XMLSize_t       fUnitLen;$/;"	m	class:BitSet
fUnknownNamespaceId	include/xercesc/internal/ElemStack.hpp	/^    unsigned int                 fUnknownNamespaceId;$/;"	m	class:ElemStack
fUnknownNamespaceId	include/xercesc/internal/ElemStack.hpp	/^    unsigned int    fUnknownNamespaceId;$/;"	m	class:WFElemStack
fUnknownNamespaceId	include/xercesc/internal/XMLScanner.hpp	/^    unsigned int                fUnknownNamespaceId;$/;"	m	class:XMLScanner
fUppercasePattern	include/xercesc/util/regx/BMPattern.hpp	/^    XMLCh*         fUppercasePattern;$/;"	m	class:BMPattern
fUriHash	include/xercesc/dom/impl/DOMNormalizer.hpp	/^            RefHashTableOf<XMLCh> *fUriHash;$/;"	m	class:DOMNormalizer::InScopeNamespaces::Scope
fUseCachedGrammar	include/xercesc/internal/XMLScanner.hpp	/^    bool                        fUseCachedGrammar;$/;"	m	class:XMLScanner
fUseCachedGrammar	include/xercesc/validators/common/GrammarResolver.hpp	/^    bool                            fUseCachedGrammar;$/;"	m	class:GrammarResolver
fUsed	include/xercesc/framework/XMLBuffer.hpp	/^    bool                        fUsed;$/;"	m	class:XMLBuffer
fUsed	include/xercesc/framework/XMLRefInfo.hpp	/^    bool        fUsed;$/;"	m	class:XMLRefInfo
fUser	include/xercesc/util/XMLURL.hpp	/^    XMLCh*          fUser;$/;"	m	class:XMLURL
fUserAdoptsDocument	include/xercesc/parsers/DOMLSParserImpl.hpp	/^    bool                        fUserAdoptsDocument;$/;"	m	class:DOMLSParserImpl
fUserDataTable	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^    RefHash2KeysTableOf<DOMUserDataRecord, PtrHasher>* fUserDataTable;$/;"	m	class:DOMDocumentImpl
fUserDataTableKeys	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^    XMLStringPool         fUserDataTableKeys;$/;"	m	class:DOMDocumentImpl
fUserDefinedRegistry	include/xercesc/validators/datatype/DatatypeValidatorFactory.hpp	/^    XERCES_CPP_NAMESPACE_QUALIFIER RefHashTableOf<XERCES_CPP_NAMESPACE_QUALIFIER DatatypeValidator>*        fUserDefinedRegistry;$/;"	m	class:DatatypeValidatorFactory
fUserEntityHandler	include/xercesc/validators/schema/XSDDOMParser.hpp	/^    XMLEntityHandler*            fUserEntityHandler;$/;"	m	class:XSDDOMParser
fUserErrorHandler	include/xercesc/internal/XMLInternalErrorHandler.hpp	/^    ErrorHandler* fUserErrorHandler;$/;"	m	class:XMLInternalErrorHandler
fUserErrorReporter	include/xercesc/validators/schema/XSDDOMParser.hpp	/^    XMLErrorReporter*            fUserErrorReporter;$/;"	m	class:XSDDOMParser
fUserInfo	include/xercesc/util/XMLUri.hpp	/^    XMLCh*          fUserInfo;$/;"	m	class:XMLUri
fUtf16Offset	include/xercesc/dom/impl/DOMLocatorImpl.hpp	/^    XMLFilePos      fUtf16Offset;$/;"	m	class:DOMLocatorImpl
fVal1	include/xercesc/util/regx/Op.hpp	/^    XMLInt32 fVal1;$/;"	m	class:ModifierOp
fVal2	include/xercesc/util/regx/Op.hpp	/^    XMLInt32 fVal2;$/;"	m	class:ModifierOp
fValPtr	include/xercesc/util/FlagJanitor.hpp	/^    T*  fValPtr;$/;"	m	class:FlagJanitor
fValScheme	include/xercesc/internal/XMLScanner.hpp	/^    ValSchemes                  fValScheme;$/;"	m	class:XMLScanner
fValidSubstitutionGroups	include/xercesc/validators/schema/SchemaGrammar.hpp	/^    RefHash2KeysTableOf<ElemVector>*         fValidSubstitutionGroups;$/;"	m	class:SchemaGrammar
fValidSubstitutionGroups	include/xercesc/validators/schema/TraverseSchema.hpp	/^    RefHash2KeysTableOf<ElemVector>*               fValidSubstitutionGroups;$/;"	m	class:TraverseSchema
fValidate	include/xercesc/internal/XMLScanner.hpp	/^    bool                        fValidate;$/;"	m	class:XMLScanner
fValidateAnnotations	include/xercesc/internal/XMLScanner.hpp	/^    bool                        fValidateAnnotations;$/;"	m	class:XMLScanner
fValidated	include/xercesc/validators/DTD/DTDGrammar.hpp	/^    bool                              fValidated;$/;"	m	class:DTDGrammar
fValidated	include/xercesc/validators/schema/SchemaGrammar.hpp	/^    bool                                   fValidated;$/;"	m	class:SchemaGrammar
fValidatingMemberType	include/xercesc/internal/ValidationContextImpl.hpp	/^    DatatypeValidator *                 fValidatingMemberType;    $/;"	m	class:ValidationContextImpl
fValidation	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^    bool                        fValidation;$/;"	m	class:SAX2XMLReaderImpl
fValidationConstraintFatal	include/xercesc/internal/XMLScanner.hpp	/^    bool                        fValidationConstraintFatal;$/;"	m	class:XMLScanner
fValidationContext	include/xercesc/framework/psvi/PSVIItem.hpp	/^    const XMLCh*                fValidationContext;$/;"	m	class:PSVIItem
fValidationContext	include/xercesc/internal/XMLScanner.hpp	/^    ValidationContext           *fValidationContext;$/;"	m	class:XMLScanner
fValidationContext	include/xercesc/validators/schema/SchemaGrammar.hpp	/^    ValidationContext*                       fValidationContext;$/;"	m	class:SchemaGrammar
fValidationContext	include/xercesc/validators/schema/SchemaInfo.hpp	/^    ValidationContext*                fValidationContext;$/;"	m	class:SchemaInfo
fValidationFlag	include/xercesc/internal/ElemStack.hpp	/^        bool                fValidationFlag;$/;"	m	struct:ElemStack::StackElem
fValidator	include/xercesc/internal/XMLScanner.hpp	/^    XMLValidator*               fValidator;$/;"	m	class:XMLScanner
fValidator	include/xercesc/parsers/AbstractDOMParser.hpp	/^    XMLValidator*                 fValidator;$/;"	m	class:AbstractDOMParser
fValidator	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^    XMLValidator*               fValidator;$/;"	m	class:SAX2XMLReaderImpl
fValidator	include/xercesc/parsers/SAXParser.hpp	/^    XMLValidator*        fValidator;$/;"	m	class:SAXParser
fValidatorFromUser	include/xercesc/internal/XMLScanner.hpp	/^    bool                        fValidatorFromUser;$/;"	m	class:XMLScanner
fValidators	include/xercesc/validators/schema/identity/FieldValueMap.hpp	/^    ValueVectorOf<DatatypeValidator*>* fValidators;$/;"	m	class:FieldValueMap
fValidityState	include/xercesc/framework/psvi/PSVIItem.hpp	/^    VALIDITY_STATE              fValidityState;$/;"	m	class:PSVIItem
fValue	include/xercesc/framework/XMLAttDef.hpp	/^    XMLCh*          fValue;$/;"	m	class:XMLAttDef
fValue	include/xercesc/framework/XMLAttr.hpp	/^    XMLCh*              fValue;$/;"	m	class:XMLAttr
fValue	include/xercesc/framework/XMLEntityDecl.hpp	/^    XMLCh*          fValue;$/;"	m	class:XMLEntityDecl
fValue	include/xercesc/framework/psvi/XSValue.hpp	/^        } fValue;$/;"	m	struct:XSValue::XSValue_Data
fValue	include/xercesc/util/KVStringPair.hpp	/^    XMLCh*         fValue;$/;"	m	class:KVStringPair
fValue	include/xercesc/util/KeyRefPair.hpp	/^        TValue*  fValue;$/;"	m	class:KeyRefPair
fValue	include/xercesc/util/KeyValuePair.hpp	/^        TValue  fValue;$/;"	m	class:KeyValuePair
fValue	include/xercesc/util/XMLAbstractDoubleFloat.hpp	/^    double                  fValue;$/;"	m	class:XMLAbstractDoubleFloat
fValue	include/xercesc/util/XMLDateTime.hpp	/^    int          fValue[TOTAL_SIZE];$/;"	m	class:XMLDateTime
fValueAllocSize	include/xercesc/util/KVStringPair.hpp	/^    XMLSize_t      fValueAllocSize;$/;"	m	class:KVStringPair
fValueBufSz	include/xercesc/framework/XMLAttr.hpp	/^    XMLSize_t           fValueBufSz;$/;"	m	class:XMLAttr
fValueLen	include/xercesc/framework/XMLEntityDecl.hpp	/^    XMLSize_t       fValueLen;$/;"	m	class:XMLEntityDecl
fValueStore	include/xercesc/validators/schema/identity/IC_Field.hpp	/^    ValueStore*     fValueStore;$/;"	m	class:FieldMatcher
fValueStoreCache	include/xercesc/validators/schema/identity/FieldActivator.hpp	/^    ValueStoreCache*                   fValueStoreCache;$/;"	m	class:FieldActivator
fValueStoreCache	include/xercesc/validators/schema/identity/IdentityConstraintHandler.hpp	/^    ValueStoreCache*            fValueStoreCache;$/;"	m	class:IdentityConstraintHandler
fValueStores	include/xercesc/validators/schema/identity/ValueStoreCache.hpp	/^    RefVectorOf<ValueStore>*                 fValueStores;$/;"	m	class:ValueStoreCache
fValueTuples	include/xercesc/validators/schema/identity/ValueStore.hpp	/^    RefHashTableOf<FieldValueMap, ICValueHasher>* fValueTuples;$/;"	m	class:ValueStore
fValues	include/xercesc/validators/schema/identity/FieldValueMap.hpp	/^    RefArrayVectorOf<XMLCh>*           fValues;$/;"	m	class:FieldValueMap
fValues	include/xercesc/validators/schema/identity/ValueStore.hpp	/^    FieldValueMap               fValues;$/;"	m	class:ValueStore
fValuesCount	include/xercesc/validators/schema/identity/ValueStore.hpp	/^    XMLSize_t                   fValuesCount;$/;"	m	class:ValueStore
fVariety	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^    VARIETY                     fVariety;$/;"	m	class:XSSimpleTypeDefinition
fVector	include/xercesc/framework/psvi/XSNamedMap.hpp	/^    RefVectorOf<TVal>*          fVector;$/;"	m	class:XSNamedMap
fVector	include/xercesc/internal/VecAttrListImpl.hpp	/^    const RefVectorOf<XMLAttr>* fVector;$/;"	m	class:VecAttrListImpl
fVector	include/xercesc/internal/VecAttributesImpl.hpp	/^    const RefVectorOf<XMLAttr>* fVector;$/;"	m	class:VecAttributesImpl
fVector	include/xercesc/util/RefStackOf.hpp	/^    RefVectorOf<TElem>  fVector;$/;"	m	class:RefStackOf
fVector	include/xercesc/util/RefStackOf.hpp	/^    RefVectorOf<TElem>* fVector;$/;"	m	class:RefStackEnumerator
fVector	include/xercesc/util/ValueStackOf.hpp	/^    ValueVectorOf<TElem>    fVector;$/;"	m	class:ValueStackOf
fVector	include/xercesc/util/ValueStackOf.hpp	/^    ValueVectorOf<TElem>*   fVector;$/;"	m	class:ValueStackEnumerator
fWSNormalizeBuf	include/xercesc/internal/XMLScanner.hpp	/^    XMLBuffer                   fWSNormalizeBuf;$/;"	m	class:XMLScanner
fWhatToShow	include/xercesc/dom/impl/DOMNodeIteratorImpl.hpp	/^        DOMNodeFilter::ShowType fWhatToShow;$/;"	m	class:DOMNodeIteratorImpl
fWhatToShow	include/xercesc/dom/impl/DOMTreeWalkerImpl.hpp	/^        DOMNodeFilter::ShowType fWhatToShow;$/;"	m	class:DOMTreeWalkerImpl
fWhiteSpace	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^    short                               fWhiteSpace;$/;"	m	class:DatatypeValidator
fWithinElement	include/xercesc/parsers/AbstractDOMParser.hpp	/^    bool                          fWithinElement;$/;"	m	class:AbstractDOMParser
fWordRange	include/xercesc/util/regx/RegularExpression.hpp	/^    static RangeToken* fWordRange;$/;"	m	class:RegularExpression
fWrapNodesAction	include/xercesc/parsers/DOMLSParserImpl.hpp	/^    ActionType                  fWrapNodesAction;$/;"	m	class:DOMLSParserImpl
fWrapNodesContext	include/xercesc/parsers/DOMLSParserImpl.hpp	/^    DOMNode*                    fWrapNodesContext;$/;"	m	class:DOMLSParserImpl
fWrapNodesInDocumentFragment	include/xercesc/parsers/DOMLSParserImpl.hpp	/^    DOMDocumentFragment*        fWrapNodesInDocumentFragment;$/;"	m	class:DOMLSParserImpl
fWritePtr	include/xercesc/util/NetAccessors/Curl/CurlURLInputStream.hpp	/^    XMLByte*			fWritePtr;$/;"	m	class:CurlURLInputStream
fXCoder	include/xercesc/framework/XMLFormatter.hpp	/^    XMLTranscoder*              fXCoder;$/;"	m	class:XMLFormatter
fXMLEntityResolver	include/xercesc/parsers/DOMLSParserImpl.hpp	/^    XMLEntityResolver*          fXMLEntityResolver;$/;"	m	class:DOMLSParserImpl
fXMLEntityResolver	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^    XMLEntityResolver*          fXMLEntityResolver;$/;"	m	class:SAX2XMLReaderImpl
fXMLEntityResolver	include/xercesc/parsers/SAXParser.hpp	/^    XMLEntityResolver*   fXMLEntityResolver;$/;"	m	class:SAXParser
fXMLEntityResolver	include/xercesc/parsers/XercesDOMParser.hpp	/^    XMLEntityResolver*       fXMLEntityResolver;$/;"	m	class:XercesDOMParser
fXMLNSNamespaceId	include/xercesc/internal/ElemStack.hpp	/^    unsigned int                 fXMLNSNamespaceId;$/;"	m	class:ElemStack
fXMLNSNamespaceId	include/xercesc/internal/ElemStack.hpp	/^    unsigned int    fXMLNSNamespaceId;$/;"	m	class:WFElemStack
fXMLNSNamespaceId	include/xercesc/internal/XMLScanner.hpp	/^    unsigned int                fXMLNSNamespaceId;$/;"	m	class:XMLScanner
fXMLNSPoolId	include/xercesc/internal/ElemStack.hpp	/^    unsigned int                 fXMLNSPoolId;$/;"	m	class:ElemStack
fXMLNSPoolId	include/xercesc/internal/ElemStack.hpp	/^    unsigned int    fXMLNSPoolId;$/;"	m	class:WFElemStack
fXMLNamespaceId	include/xercesc/internal/ElemStack.hpp	/^    unsigned int                 fXMLNamespaceId;$/;"	m	class:ElemStack
fXMLNamespaceId	include/xercesc/internal/ElemStack.hpp	/^    unsigned int    fXMLNamespaceId;$/;"	m	class:WFElemStack
fXMLNamespaceId	include/xercesc/internal/XMLScanner.hpp	/^    unsigned int                fXMLNamespaceId;$/;"	m	class:XMLScanner
fXMLNotationDecl	include/xercesc/framework/psvi/XSNotationDeclaration.hpp	/^    XMLNotationDecl* fXMLNotationDecl;$/;"	m	class:XSNotationDeclaration
fXMLPoolId	include/xercesc/internal/ElemStack.hpp	/^    unsigned int                 fXMLPoolId;$/;"	m	class:ElemStack
fXMLPoolId	include/xercesc/internal/ElemStack.hpp	/^    unsigned int    fXMLPoolId;$/;"	m	class:WFElemStack
fXMLVersion	include/xercesc/internal/ReaderMgr.hpp	/^    XMLReader::XMLVersion       fXMLVersion;$/;"	m	class:ReaderMgr
fXMLVersion	include/xercesc/internal/XMLReader.hpp	/^    XMLVersion                  fXMLVersion;$/;"	m	class:XMLReader
fXMLVersion	include/xercesc/internal/XMLScanner.hpp	/^    XMLReader::XMLVersion       fXMLVersion;$/;"	m	class:XMLScanner
fXPath	include/xercesc/validators/schema/identity/IC_Field.hpp	/^    XercesXPath*        fXPath;$/;"	m	class:IC_Field
fXPath	include/xercesc/validators/schema/identity/IC_Selector.hpp	/^    XercesXPath*        fXPath;$/;"	m	class:IC_Selector
fXSAnnotationList	include/xercesc/framework/psvi/XSComplexTypeDefinition.hpp	/^    XSAnnotationList*       fXSAnnotationList;$/;"	m	class:XSComplexTypeDefinition
fXSAnnotationList	include/xercesc/framework/psvi/XSIDCDefinition.hpp	/^    XSAnnotationList*   fXSAnnotationList;$/;"	m	class:XSIDCDefinition
fXSAnnotationList	include/xercesc/framework/psvi/XSModel.hpp	/^    XSAnnotationList*                       fXSAnnotationList;$/;"	m	class:XSModel
fXSAnnotationList	include/xercesc/framework/psvi/XSMultiValueFacet.hpp	/^    XSAnnotationList*             fXSAnnotationList;$/;"	m	class:XSMultiValueFacet
fXSAnnotationList	include/xercesc/framework/psvi/XSNamespaceItem.hpp	/^    XSAnnotationList*                       fXSAnnotationList;$/;"	m	class:XSNamespaceItem
fXSAnnotationList	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^    XSAnnotationList*           fXSAnnotationList;$/;"	m	class:XSSimpleTypeDefinition
fXSAttributeDeclaration	include/xercesc/framework/psvi/XSAttributeUse.hpp	/^    XSAttributeDeclaration*       fXSAttributeDeclaration;$/;"	m	class:XSAttributeUse
fXSAttributeUseList	include/xercesc/framework/psvi/XSAttributeGroupDefinition.hpp	/^    XSAttributeUseList*     fXSAttributeUseList;$/;"	m	class:XSAttributeGroupDefinition
fXSAttributeUseList	include/xercesc/framework/psvi/XSComplexTypeDefinition.hpp	/^    XSAttributeUseList*     fXSAttributeUseList;$/;"	m	class:XSComplexTypeDefinition
fXSDErrorReporter	include/xercesc/validators/schema/TraverseSchema.hpp	/^    XSDErrorReporter                               fXSDErrorReporter;$/;"	m	class:TraverseSchema
fXSDErrorReporter	include/xercesc/validators/schema/XSDDOMParser.hpp	/^    XSDErrorReporter             fXSDErrorReporter;$/;"	m	class:XSDDOMParser
fXSFacetList	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^    XSFacetList*                fXSFacetList;$/;"	m	class:XSSimpleTypeDefinition
fXSLocator	include/xercesc/validators/schema/XSDDOMParser.hpp	/^    XSDLocator                   fXSLocator;$/;"	m	class:XSDDOMParser
fXSModel	include/xercesc/framework/XMLGrammarPoolImpl.hpp	/^    XSModel*                            fXSModel;$/;"	m	class:XMLGrammarPoolImpl
fXSModel	include/xercesc/framework/psvi/XSNamespaceItem.hpp	/^    XSModel*                fXSModel;$/;"	m	class:XSNamespaceItem
fXSModel	include/xercesc/framework/psvi/XSObject.hpp	/^    XSModel*                    fXSModel;$/;"	m	class:XSObject
fXSModel	include/xercesc/validators/common/GrammarResolver.hpp	/^    XSModel*                        fXSModel;$/;"	m	class:GrammarResolver
fXSModelIsValid	include/xercesc/framework/XMLGrammarPoolImpl.hpp	/^    bool                                fXSModelIsValid;$/;"	m	class:XMLGrammarPoolImpl
fXSMultiValueFacetList	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^    XSMultiValueFacetList*      fXSMultiValueFacetList;$/;"	m	class:XSSimpleTypeDefinition
fXSNamespaceItemList	include/xercesc/framework/psvi/XSModel.hpp	/^    XSNamespaceItemList*                    fXSNamespaceItemList;$/;"	m	class:XSModel
fXSSimpleTypeDefinition	include/xercesc/framework/psvi/XSComplexTypeDefinition.hpp	/^    XSSimpleTypeDefinition* fXSSimpleTypeDefinition;$/;"	m	class:XSComplexTypeDefinition
fXSWildcard	include/xercesc/framework/psvi/XSAttributeGroupDefinition.hpp	/^    XSWildcard*             fXSWildcard;$/;"	m	class:XSAttributeGroupDefinition
fXSWildcard	include/xercesc/framework/psvi/XSComplexTypeDefinition.hpp	/^    XSWildcard*             fXSWildcard;$/;"	m	class:XSComplexTypeDefinition
fXercesAttGroupInfo	include/xercesc/framework/psvi/XSAttributeGroupDefinition.hpp	/^    XercesAttGroupInfo*     fXercesAttGroupInfo;$/;"	m	class:XSAttributeGroupDefinition
fXercesToXSMap	include/xercesc/internal/XSObjectFactory.hpp	/^    RefHashTableOf<XSObject, PtrHasher>* fXercesToXSMap;$/;"	m	class:XSObjectFactory
fXmlEncoding	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^    const XMLCh*          fXmlEncoding;$/;"	m	class:DOMDocumentImpl
fXmlEncoding	include/xercesc/dom/impl/DOMEntityImpl.hpp	/^    const XMLCh*          fXmlEncoding;$/;"	m	class:DOMEntityImpl
fXmlStandalone	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^    bool                  fXmlStandalone;$/;"	m	class:DOMDocumentImpl
fXmlVersion	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^    const XMLCh*          fXmlVersion;$/;"	m	class:DOMDocumentImpl
fXmlVersion	include/xercesc/dom/impl/DOMEntityImpl.hpp	/^    const XMLCh*          fXmlVersion;$/;"	m	class:DOMEntityImpl
fXsiType	include/xercesc/validators/schema/SchemaValidator.hpp	/^    QName*                          fXsiType;$/;"	m	class:SchemaValidator
f_bool	include/xercesc/framework/psvi/XSValue.hpp	/^                         bool      f_bool;$/;"	m	union:XSValue::XSValue_Data::<anonymous>
f_byteVal	include/xercesc/framework/psvi/XSValue.hpp	/^                         XMLByte*  f_byteVal;$/;"	m	union:XSValue::XSValue_Data::<anonymous>
f_char	include/xercesc/framework/psvi/XSValue.hpp	/^                         char      f_char;$/;"	m	union:XSValue::XSValue_Data::<anonymous>
f_datatype	include/xercesc/framework/psvi/XSValue.hpp	/^        DataType f_datatype;$/;"	m	struct:XSValue::XSValue_Data
f_datetime	include/xercesc/framework/psvi/XSValue.hpp	/^                } f_datetime;$/;"	m	union:XSValue::XSValue_Data::<anonymous>
f_day	include/xercesc/framework/psvi/XSValue.hpp	/^                                int       f_day;$/;"	m	struct:XSValue::XSValue_Data::<anonymous>::datetime
f_decimal	include/xercesc/framework/psvi/XSValue.hpp	/^                } f_decimal;$/;"	m	union:XSValue::XSValue_Data::<anonymous>
f_double	include/xercesc/framework/psvi/XSValue.hpp	/^                                double          f_double;$/;"	m	struct:XSValue::XSValue_Data::<anonymous>::doubletype
f_double	include/xercesc/framework/psvi/XSValue.hpp	/^                         double    f_double;$/;"	m	union:XSValue::XSValue_Data::<anonymous>
f_doubleEnum	include/xercesc/framework/psvi/XSValue.hpp	/^                                DoubleFloatType f_doubleEnum;$/;"	m	struct:XSValue::XSValue_Data::<anonymous>::doubletype
f_doubleType	include/xercesc/framework/psvi/XSValue.hpp	/^                } f_doubleType;$/;"	m	union:XSValue::XSValue_Data::<anonymous>
f_dvalue	include/xercesc/framework/psvi/XSValue.hpp	/^                                double           f_dvalue;$/;"	m	struct:XSValue::XSValue_Data::<anonymous>::decimal
f_float	include/xercesc/framework/psvi/XSValue.hpp	/^                                float           f_float;$/;"	m	struct:XSValue::XSValue_Data::<anonymous>::floattype
f_float	include/xercesc/framework/psvi/XSValue.hpp	/^                         float     f_float;$/;"	m	union:XSValue::XSValue_Data::<anonymous>
f_floatEnum	include/xercesc/framework/psvi/XSValue.hpp	/^                                DoubleFloatType f_floatEnum;$/;"	m	struct:XSValue::XSValue_Data::<anonymous>::floattype
f_floatType	include/xercesc/framework/psvi/XSValue.hpp	/^                } f_floatType;$/;"	m	union:XSValue::XSValue_Data::<anonymous>
f_hour	include/xercesc/framework/psvi/XSValue.hpp	/^                                int       f_hour;$/;"	m	struct:XSValue::XSValue_Data::<anonymous>::datetime
f_int	include/xercesc/framework/psvi/XSValue.hpp	/^                         int       f_int;$/;"	m	union:XSValue::XSValue_Data::<anonymous>
f_long	include/xercesc/framework/psvi/XSValue.hpp	/^                         long      f_long;$/;"	m	union:XSValue::XSValue_Data::<anonymous>
f_long	include/xercesc/framework/psvi/XSValue.hpp	/^                long  f_long;$/;"	m	union:XSValue::<anonymous>
f_milisec	include/xercesc/framework/psvi/XSValue.hpp	/^                                double    f_milisec;$/;"	m	struct:XSValue::XSValue_Data::<anonymous>::datetime
f_min	include/xercesc/framework/psvi/XSValue.hpp	/^                                int       f_min;$/;"	m	struct:XSValue::XSValue_Data::<anonymous>::datetime
f_month	include/xercesc/framework/psvi/XSValue.hpp	/^                                int       f_month;$/;"	m	struct:XSValue::XSValue_Data::<anonymous>::datetime
f_second	include/xercesc/framework/psvi/XSValue.hpp	/^                                int       f_second;$/;"	m	struct:XSValue::XSValue_Data::<anonymous>::datetime
f_short	include/xercesc/framework/psvi/XSValue.hpp	/^                         short     f_short;$/;"	m	union:XSValue::XSValue_Data::<anonymous>
f_strVal	include/xercesc/framework/psvi/XSValue.hpp	/^                         XMLCh*    f_strVal;$/;"	m	union:XSValue::XSValue_Data::<anonymous>
f_uchar	include/xercesc/framework/psvi/XSValue.hpp	/^                unsigned char      f_uchar;$/;"	m	union:XSValue::XSValue_Data::<anonymous>
f_uint	include/xercesc/framework/psvi/XSValue.hpp	/^                unsigned int       f_uint;$/;"	m	union:XSValue::XSValue_Data::<anonymous>
f_ulong	include/xercesc/framework/psvi/XSValue.hpp	/^                unsigned long      f_ulong;$/;"	m	union:XSValue::XSValue_Data::<anonymous>
f_ulong	include/xercesc/framework/psvi/XSValue.hpp	/^       unsigned long  f_ulong;$/;"	m	union:XSValue::<anonymous>
f_ushort	include/xercesc/framework/psvi/XSValue.hpp	/^                unsigned short     f_ushort;$/;"	m	union:XSValue::XSValue_Data::<anonymous>
f_year	include/xercesc/framework/psvi/XSValue.hpp	/^                                int       f_year;$/;"	m	struct:XSValue::XSValue_Data::<anonymous>::datetime
false	include/xercesc/util/XercesDefs.hpp	85;"	d
fatalError	include/xercesc/internal/XMLInternalErrorHandler.hpp	/^inline void XMLInternalErrorHandler::fatalError(const SAXParseException& toCatch)$/;"	f	class:XMLInternalErrorHandler
fatalError	include/xercesc/sax/HandlerBase.hpp	/^inline void HandlerBase::fatalError(const SAXParseException& exc)$/;"	f	class:HandlerBase
fatalError	include/xercesc/sax2/DefaultHandler.hpp	/^inline void DefaultHandler::fatalError(const SAXParseException& exc)$/;"	f	class:DefaultHandler
featureValues	include/xercesc/dom/impl/DOMConfigurationImpl.hpp	/^    unsigned short featureValues;$/;"	m	class:DOMConfigurationImpl
fgASCII	include/xercesc/util/regx/RegxDefs.hpp	/^static const XMLCh fgASCII[] =$/;"	v
fgASCIICategory	include/xercesc/util/regx/RegxDefs.hpp	/^static const XMLCh fgASCIICategory[] =$/;"	v
fgASCIIDigit	include/xercesc/util/regx/RegxDefs.hpp	/^static const XMLCh fgASCIIDigit[] =$/;"	v
fgASCIIPre	include/xercesc/framework/XMLRecognizer.hpp	/^    static const char           fgASCIIPre[];$/;"	m	class:XMLRecognizer
fgASCIIPreLen	include/xercesc/framework/XMLRecognizer.hpp	/^    static const XMLSize_t      fgASCIIPreLen;$/;"	m	class:XMLRecognizer
fgASCIISpace	include/xercesc/util/regx/RegxDefs.hpp	/^static const XMLCh fgASCIISpace[] =$/;"	v
fgASCIIWord	include/xercesc/util/regx/RegxDefs.hpp	/^static const XMLCh fgASCIIWord[] =$/;"	v
fgASCIIXDigit	include/xercesc/util/regx/RegxDefs.hpp	/^static const XMLCh fgASCIIXDigit[] =$/;"	v
fgATTVAL_ANYTYPE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_ANYTYPE[];$/;"	m	class:SchemaSymbols
fgATTVAL_BASE64	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_BASE64[];$/;"	m	class:SchemaSymbols
fgATTVAL_BOOLEAN	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_BOOLEAN[];$/;"	m	class:SchemaSymbols
fgATTVAL_DEFAULT	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_DEFAULT[];$/;"	m	class:SchemaSymbols
fgATTVAL_ELEMENTONLY	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_ELEMENTONLY[];$/;"	m	class:SchemaSymbols
fgATTVAL_EMPTY	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_EMPTY[];$/;"	m	class:SchemaSymbols
fgATTVAL_EXTENSION	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_EXTENSION[];$/;"	m	class:SchemaSymbols
fgATTVAL_FALSE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_FALSE[];$/;"	m	class:SchemaSymbols
fgATTVAL_FIXED	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_FIXED[];$/;"	m	class:SchemaSymbols
fgATTVAL_HEX	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_HEX[];$/;"	m	class:SchemaSymbols
fgATTVAL_ID	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_ID[];$/;"	m	class:SchemaSymbols
fgATTVAL_LAX	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_LAX[];$/;"	m	class:SchemaSymbols
fgATTVAL_MAXLENGTH	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_MAXLENGTH[];$/;"	m	class:SchemaSymbols
fgATTVAL_MINLENGTH	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_MINLENGTH[];$/;"	m	class:SchemaSymbols
fgATTVAL_MIXED	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_MIXED[];$/;"	m	class:SchemaSymbols
fgATTVAL_NCNAME	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_NCNAME[];$/;"	m	class:SchemaSymbols
fgATTVAL_OPTIONAL	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_OPTIONAL[];$/;"	m	class:SchemaSymbols
fgATTVAL_POUNDALL	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_POUNDALL[];$/;"	m	class:SchemaSymbols
fgATTVAL_PROHIBITED	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_PROHIBITED[];$/;"	m	class:SchemaSymbols
fgATTVAL_QNAME	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_QNAME[];$/;"	m	class:SchemaSymbols
fgATTVAL_QUALIFIED	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_QUALIFIED[];$/;"	m	class:SchemaSymbols
fgATTVAL_REQUIRED	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_REQUIRED[];$/;"	m	class:SchemaSymbols
fgATTVAL_RESTRICTION	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_RESTRICTION[];$/;"	m	class:SchemaSymbols
fgATTVAL_SKIP	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_SKIP[];$/;"	m	class:SchemaSymbols
fgATTVAL_STRICT	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_STRICT[];$/;"	m	class:SchemaSymbols
fgATTVAL_STRING	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_STRING[];$/;"	m	class:SchemaSymbols
fgATTVAL_SUBSTITUTION	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_SUBSTITUTION[];$/;"	m	class:SchemaSymbols
fgATTVAL_SUBSTITUTIONGROUP	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_SUBSTITUTIONGROUP[];$/;"	m	class:SchemaSymbols
fgATTVAL_TEXTONLY	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_TEXTONLY[];$/;"	m	class:SchemaSymbols
fgATTVAL_TIMEDURATION	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_TIMEDURATION[];$/;"	m	class:SchemaSymbols
fgATTVAL_TRUE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_TRUE[];$/;"	m	class:SchemaSymbols
fgATTVAL_TWOPOUNDANY	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_TWOPOUNDANY[];$/;"	m	class:SchemaSymbols
fgATTVAL_TWOPOUNDLOCAL	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_TWOPOUNDLOCAL[];$/;"	m	class:SchemaSymbols
fgATTVAL_TWOPOUNDOTHER	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_TWOPOUNDOTHER[];$/;"	m	class:SchemaSymbols
fgATTVAL_TWOPOUNDTRAGETNAMESPACE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_TWOPOUNDTRAGETNAMESPACE[];$/;"	m	class:SchemaSymbols
fgATTVAL_UNQUALIFIED	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_UNQUALIFIED[];$/;"	m	class:SchemaSymbols
fgATTVAL_URI	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_URI[];$/;"	m	class:SchemaSymbols
fgATTVAL_URIREFERENCE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATTVAL_URIREFERENCE[];$/;"	m	class:SchemaSymbols
fgATT_ABSTRACT	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATT_ABSTRACT[];$/;"	m	class:SchemaSymbols
fgATT_ATTRIBUTEFORMDEFAULT	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATT_ATTRIBUTEFORMDEFAULT[];$/;"	m	class:SchemaSymbols
fgATT_BASE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATT_BASE[];$/;"	m	class:SchemaSymbols
fgATT_BLOCK	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATT_BLOCK[];$/;"	m	class:SchemaSymbols
fgATT_BLOCKDEFAULT	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATT_BLOCKDEFAULT[];$/;"	m	class:SchemaSymbols
fgATT_DEFAULT	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATT_DEFAULT[];$/;"	m	class:SchemaSymbols
fgATT_ELEMENTFORMDEFAULT	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATT_ELEMENTFORMDEFAULT[];$/;"	m	class:SchemaSymbols
fgATT_FINAL	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATT_FINAL[];$/;"	m	class:SchemaSymbols
fgATT_FINALDEFAULT	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATT_FINALDEFAULT[];$/;"	m	class:SchemaSymbols
fgATT_FIXED	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATT_FIXED[];$/;"	m	class:SchemaSymbols
fgATT_FORM	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATT_FORM[];$/;"	m	class:SchemaSymbols
fgATT_ID	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATT_ID[];$/;"	m	class:SchemaSymbols
fgATT_ITEMTYPE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATT_ITEMTYPE[];$/;"	m	class:SchemaSymbols
fgATT_MAXOCCURS	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATT_MAXOCCURS[];$/;"	m	class:SchemaSymbols
fgATT_MEMBERTYPES	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATT_MEMBERTYPES[];$/;"	m	class:SchemaSymbols
fgATT_MINOCCURS	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATT_MINOCCURS[];$/;"	m	class:SchemaSymbols
fgATT_MIXED	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATT_MIXED[];$/;"	m	class:SchemaSymbols
fgATT_NAME	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATT_NAME[];$/;"	m	class:SchemaSymbols
fgATT_NAMESPACE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATT_NAMESPACE[];$/;"	m	class:SchemaSymbols
fgATT_NILL	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATT_NILL[];$/;"	m	class:SchemaSymbols
fgATT_NILLABLE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATT_NILLABLE[];$/;"	m	class:SchemaSymbols
fgATT_PROCESSCONTENTS	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATT_PROCESSCONTENTS[];$/;"	m	class:SchemaSymbols
fgATT_PUBLIC	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATT_PUBLIC[];$/;"	m	class:SchemaSymbols
fgATT_REF	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATT_REF[];$/;"	m	class:SchemaSymbols
fgATT_REFER	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATT_REFER[];$/;"	m	class:SchemaSymbols
fgATT_SCHEMALOCATION	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATT_SCHEMALOCATION[];$/;"	m	class:SchemaSymbols
fgATT_SOURCE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATT_SOURCE[];$/;"	m	class:SchemaSymbols
fgATT_SUBSTITUTIONGROUP	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATT_SUBSTITUTIONGROUP[];$/;"	m	class:SchemaSymbols
fgATT_SYSTEM	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATT_SYSTEM[];$/;"	m	class:SchemaSymbols
fgATT_TARGETNAMESPACE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATT_TARGETNAMESPACE[];$/;"	m	class:SchemaSymbols
fgATT_TYPE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATT_TYPE[];$/;"	m	class:SchemaSymbols
fgATT_USE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATT_USE[];$/;"	m	class:SchemaSymbols
fgATT_VALUE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATT_VALUE[];$/;"	m	class:SchemaSymbols
fgATT_VERSION	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATT_VERSION[];$/;"	m	class:SchemaSymbols
fgATT_XPATH	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgATT_XPATH[];$/;"	m	class:SchemaSymbols
fgAbstract	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgAbstract[];$/;"	m	class:PSVIUni
fgAg	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgAg[];$/;"	m	class:PSVIUni
fgAll	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgAll[];$/;"	m	class:PSVIUni
fgAllDeclarationsProcessed	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgAllDeclarationsProcessed[];$/;"	m	class:PSVIUni
fgAmp	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgAmp[];$/;"	m	class:XMLUni
fgAnnot	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgAnnot[];$/;"	m	class:PSVIUni
fgAnnotation	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgAnnotation[];$/;"	m	class:PSVIUni
fgAnnotations	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgAnnotations[];$/;"	m	class:PSVIUni
fgAny	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgAny[];$/;"	m	class:PSVIUni
fgAnyString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgAnyString[];$/;"	m	class:XMLUni
fgApos	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgApos[];$/;"	m	class:XMLUni
fgAppinfo	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgAppinfo[];$/;"	m	class:PSVIUni
fgApplicationInformation	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgApplicationInformation[];$/;"	m	class:PSVIUni
fgArrayIndexOutOfBoundsException_Name	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgArrayIndexOutOfBoundsException_Name[];$/;"	m	class:XMLUni
fgAtomic	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgAtomic[];$/;"	m	class:PSVIUni
fgAtomicMutex	include/xercesc/util/PlatformUtils.hpp	/^    static XMLMutex*            fgAtomicMutex;$/;"	m	class:XMLPlatformUtils
fgAttListString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgAttListString[];$/;"	m	class:XMLUni
fgAttr	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgAttr[];$/;"	m	class:PSVIUni
fgAttribute	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgAttribute[];$/;"	m	class:PSVIUni
fgAttributeDeclaration	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgAttributeDeclaration[];$/;"	m	class:PSVIUni
fgAttributeGroupDefinition	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgAttributeGroupDefinition[];$/;"	m	class:PSVIUni
fgAttributeType	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgAttributeType[];$/;"	m	class:PSVIUni
fgAttributeUse	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgAttributeUse[];$/;"	m	class:PSVIUni
fgAttributeUses	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgAttributeUses[];$/;"	m	class:PSVIUni
fgAttributeWildcard	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgAttributeWildcard[];$/;"	m	class:PSVIUni
fgAttributes	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgAttributes[];$/;"	m	class:PSVIUni
fgAu	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgAu[];$/;"	m	class:PSVIUni
fgBaseTypeDefinition	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgBaseTypeDefinition[];$/;"	m	class:PSVIUni
fgBaseURI	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgBaseURI[];$/;"	m	class:PSVIUni
fgBlockCategory	include/xercesc/util/regx/RegxDefs.hpp	/^static const XMLCh fgBlockCategory[] =$/;"	v
fgBlockIsPrivateUse	include/xercesc/util/regx/RegxDefs.hpp	/^static const XMLCh fgBlockIsPrivateUse[] =$/;"	v
fgBlockIsSpecials	include/xercesc/util/regx/RegxDefs.hpp	/^static const XMLCh fgBlockIsSpecials[] =$/;"	v
fgBooleanValueSpace	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgBooleanValueSpace[][8];$/;"	m	class:XMLUni
fgBooleanValueSpaceArraySize	include/xercesc/util/XMLUni.hpp	/^    static const XMLSize_t fgBooleanValueSpaceArraySize;$/;"	m	class:XMLUni
fgBounded	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgBounded[];$/;"	m	class:PSVIUni
fgByteMaxInc	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgByteMaxInc[];$/;"	m	class:XMLUni
fgByteMinInc	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgByteMinInc[];$/;"	m	class:XMLUni
fgCDATAString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgCDATAString[];$/;"	m	class:XMLUni
fgCDataEnd	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgCDataEnd[];$/;"	m	class:XMLUni
fgCDataStart	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgCDataStart[];$/;"	m	class:XMLUni
fgCanonicalRepresentation	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgCanonicalRepresentation[];$/;"	m	class:PSVIUni
fgCardinality	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgCardinality[];$/;"	m	class:PSVIUni
fgCharCharsTable	include/xercesc/internal/XMLReader.hpp	/^    XMLByte*                    fgCharCharsTable;$/;"	m	class:XMLReader
fgCharCharsTable1_0	include/xercesc/util/XMLChar.hpp	/^    static XMLByte  fgCharCharsTable1_0[0x10000];$/;"	m	class:XMLChar1_0
fgCharCharsTable1_1	include/xercesc/util/XMLChar.hpp	/^    static XMLByte  fgCharCharsTable1_1[0x10000];$/;"	m	class:XMLChar1_1
fgCharacter	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgCharacter[];$/;"	m	class:PSVIUni
fgCharacterEncodingScheme	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgCharacterEncodingScheme[];$/;"	m	class:PSVIUni
fgChildren	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgChildren[];$/;"	m	class:PSVIUni
fgChoice	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgChoice[];$/;"	m	class:PSVIUni
fgComment	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgComment[];$/;"	m	class:PSVIUni
fgCommentString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgCommentString[];$/;"	m	class:XMLUni
fgComplexTypeDefinition	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgComplexTypeDefinition[];$/;"	m	class:PSVIUni
fgCompositor	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgCompositor[];$/;"	m	class:PSVIUni
fgContent	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgContent[];$/;"	m	class:PSVIUni
fgContentType	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgContentType[];$/;"	m	class:PSVIUni
fgCurlInitCount	include/xercesc/util/NetAccessors/Curl/CurlNetAccessor.hpp	/^	static int fgCurlInitCount;$/;"	m	class:CurlNetAccessor
fgDGXMLScanner	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDGXMLScanner[];$/;"	m	class:XMLUni
fgDOMCDATASections	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDOMCDATASections[];$/;"	m	class:XMLUni
fgDOMCanonicalForm	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDOMCanonicalForm[];$/;"	m	class:XMLUni
fgDOMCharsetOverridesXMLEncoding	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDOMCharsetOverridesXMLEncoding[];$/;"	m	class:XMLUni
fgDOMCheckCharacterNormalization	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDOMCheckCharacterNormalization[];$/;"	m	class:XMLUni
fgDOMComments	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDOMComments[];$/;"	m	class:XMLUni
fgDOMDTDType	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDOMDTDType[];$/;"	m	class:XMLUni
fgDOMDatatypeNormalization	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDOMDatatypeNormalization[];$/;"	m	class:XMLUni
fgDOMDisallowDoctype	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDOMDisallowDoctype[];$/;"	m	class:XMLUni
fgDOMElementContentWhitespace	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDOMElementContentWhitespace[];$/;"	m	class:XMLUni
fgDOMEntities	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDOMEntities[];$/;"	m	class:XMLUni
fgDOMErrorHandler	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDOMErrorHandler[];$/;"	m	class:XMLUni
fgDOMIgnoreUnknownCharacterDenormalization	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDOMIgnoreUnknownCharacterDenormalization[];$/;"	m	class:XMLUni
fgDOMInfoset	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDOMInfoset[];$/;"	m	class:XMLUni
fgDOMNamespaceDeclarations	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDOMNamespaceDeclarations[];$/;"	m	class:XMLUni
fgDOMNamespaces	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDOMNamespaces[];$/;"	m	class:XMLUni
fgDOMNormalizeCharacters	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDOMNormalizeCharacters[];$/;"	m	class:XMLUni
fgDOMResourceResolver	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDOMResourceResolver[];$/;"	m	class:XMLUni
fgDOMSchemaLocation	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDOMSchemaLocation[];$/;"	m	class:XMLUni
fgDOMSchemaType	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDOMSchemaType[];$/;"	m	class:XMLUni
fgDOMSplitCDATASections	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDOMSplitCDATASections[];$/;"	m	class:XMLUni
fgDOMSupportedMediatypesOnly	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDOMSupportedMediatypesOnly[];$/;"	m	class:XMLUni
fgDOMValidate	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDOMValidate[];$/;"	m	class:XMLUni
fgDOMValidateIfSchema	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDOMValidateIfSchema[];$/;"	m	class:XMLUni
fgDOMWRTBOM	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDOMWRTBOM[];$/;"	m	class:XMLUni
fgDOMWRTCanonicalForm	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDOMWRTCanonicalForm[];$/;"	m	class:XMLUni
fgDOMWRTDiscardDefaultContent	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDOMWRTDiscardDefaultContent[];$/;"	m	class:XMLUni
fgDOMWRTEntities	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDOMWRTEntities[];$/;"	m	class:XMLUni
fgDOMWRTFormatPrettyPrint	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDOMWRTFormatPrettyPrint[];$/;"	m	class:XMLUni
fgDOMWRTNormalizeCharacters	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDOMWRTNormalizeCharacters[];$/;"	m	class:XMLUni
fgDOMWRTSplitCdataSections	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDOMWRTSplitCdataSections[];$/;"	m	class:XMLUni
fgDOMWRTValidation	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDOMWRTValidation[];$/;"	m	class:XMLUni
fgDOMWRTWhitespaceInElementContent	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDOMWRTWhitespaceInElementContent[];$/;"	m	class:XMLUni
fgDOMWRTXercesPrettyPrint	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDOMWRTXercesPrettyPrint[];$/;"	m	class:XMLUni
fgDOMWellFormed	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDOMWellFormed[];$/;"	m	class:XMLUni
fgDOMXMLDeclaration	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDOMXMLDeclaration[];$/;"	m	class:XMLUni
fgDOMXMLSchemaType	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDOMXMLSchemaType[];$/;"	m	class:XMLUni
fgDTDEntityString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDTDEntityString[];$/;"	m	class:XMLUni
fgDT_ANYSIMPLETYPE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgDT_ANYSIMPLETYPE[];$/;"	m	class:SchemaSymbols
fgDT_ANYURI	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgDT_ANYURI[];$/;"	m	class:SchemaSymbols
fgDT_BASE64BINARY	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgDT_BASE64BINARY[];$/;"	m	class:SchemaSymbols
fgDT_BOOLEAN	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgDT_BOOLEAN[];$/;"	m	class:SchemaSymbols
fgDT_BYTE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgDT_BYTE[];$/;"	m	class:SchemaSymbols
fgDT_DATE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgDT_DATE[];$/;"	m	class:SchemaSymbols
fgDT_DATETIME	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgDT_DATETIME[];$/;"	m	class:SchemaSymbols
fgDT_DAY	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgDT_DAY[];$/;"	m	class:SchemaSymbols
fgDT_DECIMAL	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgDT_DECIMAL[];$/;"	m	class:SchemaSymbols
fgDT_DOUBLE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgDT_DOUBLE[];$/;"	m	class:SchemaSymbols
fgDT_DURATION	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgDT_DURATION[];$/;"	m	class:SchemaSymbols
fgDT_FLOAT	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgDT_FLOAT[];$/;"	m	class:SchemaSymbols
fgDT_HEXBINARY	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgDT_HEXBINARY[];$/;"	m	class:SchemaSymbols
fgDT_INT	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgDT_INT[];$/;"	m	class:SchemaSymbols
fgDT_INTEGER	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgDT_INTEGER[];$/;"	m	class:SchemaSymbols
fgDT_LANGUAGE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgDT_LANGUAGE[];$/;"	m	class:SchemaSymbols
fgDT_LONG	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgDT_LONG[];$/;"	m	class:SchemaSymbols
fgDT_MONTH	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgDT_MONTH[];$/;"	m	class:SchemaSymbols
fgDT_MONTHDAY	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgDT_MONTHDAY[];$/;"	m	class:SchemaSymbols
fgDT_NAME	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgDT_NAME[];$/;"	m	class:SchemaSymbols
fgDT_NCNAME	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgDT_NCNAME[];$/;"	m	class:SchemaSymbols
fgDT_NEGATIVEINTEGER	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgDT_NEGATIVEINTEGER[];$/;"	m	class:SchemaSymbols
fgDT_NONNEGATIVEINTEGER	include/xercesc/validators/schema/SchemaSymbols.hpp	/^	static const XMLCh fgDT_NONNEGATIVEINTEGER[];$/;"	m	class:SchemaSymbols
fgDT_NONPOSITIVEINTEGER	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgDT_NONPOSITIVEINTEGER[];$/;"	m	class:SchemaSymbols
fgDT_NORMALIZEDSTRING	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgDT_NORMALIZEDSTRING[];$/;"	m	class:SchemaSymbols
fgDT_POSITIVEINTEGER	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgDT_POSITIVEINTEGER[];$/;"	m	class:SchemaSymbols
fgDT_QNAME	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgDT_QNAME[];$/;"	m	class:SchemaSymbols
fgDT_SHORT	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgDT_SHORT[];$/;"	m	class:SchemaSymbols
fgDT_STRING	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgDT_STRING[];$/;"	m	class:SchemaSymbols
fgDT_TIME	include/xercesc/validators/schema/SchemaSymbols.hpp	/^	static const XMLCh fgDT_TIME[];$/;"	m	class:SchemaSymbols
fgDT_TOKEN	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgDT_TOKEN[];$/;"	m	class:SchemaSymbols
fgDT_UBYTE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^	static const XMLCh fgDT_UBYTE[];$/;"	m	class:SchemaSymbols
fgDT_UINT	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgDT_UINT[];$/;"	m	class:SchemaSymbols
fgDT_ULONG	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgDT_ULONG[];$/;"	m	class:SchemaSymbols
fgDT_URIREFERENCE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgDT_URIREFERENCE[];$/;"	m	class:SchemaSymbols
fgDT_USHORT	include/xercesc/validators/schema/SchemaSymbols.hpp	/^	static const XMLCh fgDT_USHORT[];$/;"	m	class:SchemaSymbols
fgDT_YEAR	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgDT_YEAR[];$/;"	m	class:SchemaSymbols
fgDT_YEARMONTH	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgDT_YEARMONTH[];$/;"	m	class:SchemaSymbols
fgDeclaration	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgDeclaration[];$/;"	m	class:PSVIUni
fgDefErrMsg	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh  fgDefErrMsg[];$/;"	m	class:XMLUni
fgDefault	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgDefault[];$/;"	m	class:PSVIUni
fgDefaultPanicHandler	include/xercesc/util/PlatformUtils.hpp	/^    static PanicHandler*        fgDefaultPanicHandler;$/;"	m	class:XMLPlatformUtils
fgDefaultString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDefaultString[];$/;"	m	class:XMLUni
fgDerivationMethod	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgDerivationMethod[];$/;"	m	class:PSVIUni
fgDisallowedSubstitutions	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgDisallowedSubstitutions[];$/;"	m	class:PSVIUni
fgDocTypeDeclaration	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgDocTypeDeclaration[];$/;"	m	class:PSVIUni
fgDocTypeString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgDocTypeString[];$/;"	m	class:XMLUni
fgDocument	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgDocument[];$/;"	m	class:PSVIUni
fgDocumentElement	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgDocumentElement[];$/;"	m	class:PSVIUni
fgDocumentLocation	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgDocumentLocation[];$/;"	m	class:PSVIUni
fgDocumentation	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgDocumentation[];$/;"	m	class:PSVIUni
fgEBCDICEncodingString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgEBCDICEncodingString[];$/;"	m	class:XMLUni
fgEBCDICPre	include/xercesc/framework/XMLRecognizer.hpp	/^    static const XMLByte        fgEBCDICPre[];$/;"	m	class:XMLRecognizer
fgEBCDICPreLen	include/xercesc/framework/XMLRecognizer.hpp	/^    static const XMLSize_t      fgEBCDICPreLen;$/;"	m	class:XMLRecognizer
fgELT_ALL	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_ALL[];$/;"	m	class:SchemaSymbols
fgELT_ANNOTATION	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_ANNOTATION[];$/;"	m	class:SchemaSymbols
fgELT_ANY	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_ANY[];$/;"	m	class:SchemaSymbols
fgELT_ANYATTRIBUTE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_ANYATTRIBUTE[];$/;"	m	class:SchemaSymbols
fgELT_APPINFO	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_APPINFO[];$/;"	m	class:SchemaSymbols
fgELT_ATTRIBUTE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_ATTRIBUTE[];$/;"	m	class:SchemaSymbols
fgELT_ATTRIBUTEGROUP	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_ATTRIBUTEGROUP[];$/;"	m	class:SchemaSymbols
fgELT_CHOICE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_CHOICE[];$/;"	m	class:SchemaSymbols
fgELT_COMPLEXCONTENT	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_COMPLEXCONTENT[];$/;"	m	class:SchemaSymbols
fgELT_COMPLEXTYPE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_COMPLEXTYPE[];$/;"	m	class:SchemaSymbols
fgELT_CONTENT	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_CONTENT[];$/;"	m	class:SchemaSymbols
fgELT_DOCUMENTATION	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_DOCUMENTATION[];$/;"	m	class:SchemaSymbols
fgELT_DURATION	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_DURATION[];$/;"	m	class:SchemaSymbols
fgELT_ELEMENT	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_ELEMENT[];$/;"	m	class:SchemaSymbols
fgELT_ENCODING	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_ENCODING[];$/;"	m	class:SchemaSymbols
fgELT_ENUMERATION	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_ENUMERATION[];$/;"	m	class:SchemaSymbols
fgELT_EXTENSION	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_EXTENSION[];$/;"	m	class:SchemaSymbols
fgELT_FIELD	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_FIELD[];$/;"	m	class:SchemaSymbols
fgELT_FRACTIONDIGITS	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_FRACTIONDIGITS[];$/;"	m	class:SchemaSymbols
fgELT_GROUP	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_GROUP[];$/;"	m	class:SchemaSymbols
fgELT_IMPORT	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_IMPORT[];$/;"	m	class:SchemaSymbols
fgELT_INCLUDE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_INCLUDE[];$/;"	m	class:SchemaSymbols
fgELT_KEY	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_KEY[];$/;"	m	class:SchemaSymbols
fgELT_KEYREF	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_KEYREF[];$/;"	m	class:SchemaSymbols
fgELT_LENGTH	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_LENGTH[];$/;"	m	class:SchemaSymbols
fgELT_LIST	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_LIST[];$/;"	m	class:SchemaSymbols
fgELT_MAXEXCLUSIVE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_MAXEXCLUSIVE[];$/;"	m	class:SchemaSymbols
fgELT_MAXINCLUSIVE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_MAXINCLUSIVE[];$/;"	m	class:SchemaSymbols
fgELT_MAXLENGTH	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_MAXLENGTH[];$/;"	m	class:SchemaSymbols
fgELT_MINEXCLUSIVE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_MINEXCLUSIVE[];$/;"	m	class:SchemaSymbols
fgELT_MININCLUSIVE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_MININCLUSIVE[];$/;"	m	class:SchemaSymbols
fgELT_MINLENGTH	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_MINLENGTH[];$/;"	m	class:SchemaSymbols
fgELT_NOTATION	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_NOTATION[];$/;"	m	class:SchemaSymbols
fgELT_PATTERN	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_PATTERN[];$/;"	m	class:SchemaSymbols
fgELT_PERIOD	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_PERIOD[];$/;"	m	class:SchemaSymbols
fgELT_REDEFINE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_REDEFINE[];$/;"	m	class:SchemaSymbols
fgELT_RESTRICTION	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_RESTRICTION[];$/;"	m	class:SchemaSymbols
fgELT_SCHEMA	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_SCHEMA[];$/;"	m	class:SchemaSymbols
fgELT_SELECTOR	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_SELECTOR[];$/;"	m	class:SchemaSymbols
fgELT_SEQUENCE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_SEQUENCE[];$/;"	m	class:SchemaSymbols
fgELT_SIMPLECONTENT	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_SIMPLECONTENT[];$/;"	m	class:SchemaSymbols
fgELT_SIMPLETYPE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_SIMPLETYPE[];$/;"	m	class:SchemaSymbols
fgELT_TOTALDIGITS	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_TOTALDIGITS[];$/;"	m	class:SchemaSymbols
fgELT_UNION	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_UNION[];$/;"	m	class:SchemaSymbols
fgELT_UNIQUE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_UNIQUE[];$/;"	m	class:SchemaSymbols
fgELT_WHITESPACE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_WHITESPACE[];$/;"	m	class:SchemaSymbols
fgELT_WILDCARD	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgELT_WILDCARD[];$/;"	m	class:SchemaSymbols
fgEString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgEString[];$/;"	m	class:XMLUni
fgElemAttTable	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^    static unsigned short                    fgElemAttTable[E_Count][A_Count];$/;"	m	class:GeneralAttributeCheck
fgElemString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgElemString[];$/;"	m	class:XMLUni
fgElement	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgElement[];$/;"	m	class:PSVIUni
fgElementDeclaration	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgElementDeclaration[];$/;"	m	class:PSVIUni
fgElementOnly	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgElementOnly[];$/;"	m	class:PSVIUni
fgElt	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgElt[];$/;"	m	class:PSVIUni
fgEmpty	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgEmpty[];$/;"	m	class:PSVIUni
fgEmptyStackException_Name	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgEmptyStackException_Name[];$/;"	m	class:XMLUni
fgEmptyString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgEmptyString[];$/;"	m	class:XMLUni
fgEncodingString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgEncodingString[];$/;"	m	class:XMLUni
fgEntitString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgEntitString[];$/;"	m	class:XMLUni
fgEntitiesString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgEntitiesString[];$/;"	m	class:XMLUni
fgEntityString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgEntityString[];$/;"	m	class:XMLUni
fgEnumeration	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgEnumeration[];$/;"	m	class:PSVIUni
fgEnumerationString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgEnumerationString[];$/;"	m	class:XMLUni
fgExceptDomain	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgExceptDomain[];$/;"	m	class:XMLUni
fgExtension	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgExtension[];$/;"	m	class:PSVIUni
fgFacetFixed	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgFacetFixed[];$/;"	m	class:PSVIUni
fgFacets	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgFacets[];$/;"	m	class:PSVIUni
fgFalse	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgFalse[];$/;"	m	class:PSVIUni
fgFields	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgFields[];$/;"	m	class:PSVIUni
fgFileMgr	include/xercesc/util/PlatformUtils.hpp	/^    static XMLFileMgr*          fgFileMgr;$/;"	m	class:XMLPlatformUtils
fgFinal	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgFinal[];    $/;"	m	class:PSVIUni
fgFixedString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgFixedString[];$/;"	m	class:XMLUni
fgFractionDigits	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgFractionDigits[];$/;"	m	class:PSVIUni
fgFull	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgFull[];$/;"	m	class:PSVIUni
fgFundamentalFacets	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgFundamentalFacets[];$/;"	m	class:PSVIUni
fgGT	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgGT[];$/;"	m	class:XMLUni
fgGlobal	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgGlobal[];$/;"	m	class:PSVIUni
fgIBM037EncodingString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgIBM037EncodingString[];$/;"	m	class:XMLUni
fgIBM037EncodingString2	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgIBM037EncodingString2[];$/;"	m	class:XMLUni
fgIBM1047EncodingString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgIBM1047EncodingString[];$/;"	m	class:XMLUni
fgIBM1047EncodingString2	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgIBM1047EncodingString2[];$/;"	m	class:XMLUni
fgIBM1140EncodingString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgIBM1140EncodingString[];$/;"	m	class:XMLUni
fgIBM1140EncodingString2	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgIBM1140EncodingString2[];$/;"	m	class:XMLUni
fgIBM1140EncodingString3	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgIBM1140EncodingString3[];$/;"	m	class:XMLUni
fgIBM1140EncodingString4	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgIBM1140EncodingString4[];$/;"	m	class:XMLUni
fgIDRefString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgIDRefString[];$/;"	m	class:XMLUni
fgIDRefsString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgIDRefsString[];$/;"	m	class:XMLUni
fgIDString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgIDString[];$/;"	m	class:XMLUni
fgIESString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgIESString[];$/;"	m	class:XMLUni
fgIGXMLScanner	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgIGXMLScanner[];$/;"	m	class:XMLUni
fgINT_MAX_VALUE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const int   fgINT_MAX_VALUE;$/;"	m	class:SchemaSymbols
fgINT_MIN_VALUE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const int   fgINT_MIN_VALUE;$/;"	m	class:SchemaSymbols
fgIOException_Name	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgIOException_Name[];$/;"	m	class:XMLUni
fgISO88591EncodingString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgISO88591EncodingString[];$/;"	m	class:XMLUni
fgISO88591EncodingString10	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgISO88591EncodingString10[];$/;"	m	class:XMLUni
fgISO88591EncodingString11	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgISO88591EncodingString11[];$/;"	m	class:XMLUni
fgISO88591EncodingString12	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgISO88591EncodingString12[];$/;"	m	class:XMLUni
fgISO88591EncodingString2	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgISO88591EncodingString2[];$/;"	m	class:XMLUni
fgISO88591EncodingString3	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgISO88591EncodingString3[];$/;"	m	class:XMLUni
fgISO88591EncodingString4	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgISO88591EncodingString4[];$/;"	m	class:XMLUni
fgISO88591EncodingString5	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgISO88591EncodingString5[];$/;"	m	class:XMLUni
fgISO88591EncodingString6	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgISO88591EncodingString6[];$/;"	m	class:XMLUni
fgISO88591EncodingString7	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgISO88591EncodingString7[];$/;"	m	class:XMLUni
fgISO88591EncodingString8	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgISO88591EncodingString8[];$/;"	m	class:XMLUni
fgISO88591EncodingString9	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgISO88591EncodingString9[];$/;"	m	class:XMLUni
fgIdIdrefTable	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgIdIdrefTable[];$/;"	m	class:PSVIUni
fgIdc	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgIdc[];$/;"	m	class:PSVIUni
fgIdentityConstraintCategory	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgIdentityConstraintCategory[];$/;"	m	class:PSVIUni
fgIdentityConstraintDefinition	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgIdentityConstraintDefinition[];$/;"	m	class:PSVIUni
fgIdentityConstraintDefinitions	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgIdentityConstraintDefinitions[];$/;"	m	class:PSVIUni
fgIdentityConstraintTable	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgIdentityConstraintTable[];$/;"	m	class:PSVIUni
fgIgnoreString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgIgnoreString[];$/;"	m	class:XMLUni
fgIllegalArgumentException_Name	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgIllegalArgumentException_Name[];$/;"	m	class:XMLUni
fgImpliedString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgImpliedString[];$/;"	m	class:XMLUni
fgInScopeNamespaces	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgInScopeNamespaces[];$/;"	m	class:PSVIUni
fgIncludeString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgIncludeString[];$/;"	m	class:XMLUni
fgInfoset	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgInfoset[];$/;"	m	class:PSVIUni
fgInfosetURIName	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgInfosetURIName[];$/;"	m	class:XMLUni
fgIntMaxInc	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgIntMaxInc[];$/;"	m	class:XMLUni
fgIntMinInc	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgIntMinInc[];$/;"	m	class:XMLUni
fgInvalid	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgInvalid[];$/;"	m	class:PSVIUni
fgInvalidAttrId	include/xercesc/framework/XMLAttDef.hpp	/^    static const unsigned int fgInvalidAttrId;$/;"	m	class:XMLAttDef
fgInvalidCastException_Name	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgInvalidCastException_Name[];$/;"	m	class:XMLUni
fgInvalidDatatypeFacetException_Name	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgInvalidDatatypeFacetException_Name[];$/;"	m	class:XMLUni
fgInvalidDatatypeValueException_Name	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgInvalidDatatypeValueException_Name[];$/;"	m	class:XMLUni
fgInvalidElemId	include/xercesc/framework/XMLElementDecl.hpp	/^    static const unsigned int   fgInvalidElemId;$/;"	m	class:XMLElementDecl
fgItemTypeDefinition	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgItemTypeDefinition[];$/;"	m	class:PSVIUni
fgKey	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgKey[];$/;"	m	class:PSVIUni
fgKeyref	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgKeyref[];$/;"	m	class:PSVIUni
fgLT	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgLT[];$/;"	m	class:XMLUni
fgLangPattern	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgLangPattern[];$/;"	m	class:XMLUni
fgLax	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgLax[];$/;"	m	class:PSVIUni
fgLength	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgLength[];$/;"	m	class:PSVIUni
fgList	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgList[];$/;"	m	class:PSVIUni
fgLocal	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgLocal[];$/;"	m	class:PSVIUni
fgLocalHostString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgLocalHostString[];$/;"	m	class:XMLUni
fgLocalName	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgLocalName[];$/;"	m	class:PSVIUni
fgLongMaxInc	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgLongMaxInc[];$/;"	m	class:XMLUni
fgLongMinInc	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgLongMinInc[];$/;"	m	class:XMLUni
fgMalformedURLException_Name	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgMalformedURLException_Name[];$/;"	m	class:XMLUni
fgMaxExclusive	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgMaxExclusive[];$/;"	m	class:PSVIUni
fgMaxInclusive	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgMaxInclusive[];$/;"	m	class:PSVIUni
fgMaxLength	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgMaxLength[];$/;"	m	class:PSVIUni
fgMaxOccurs	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgMaxOccurs[];$/;"	m	class:PSVIUni
fgMemMgrAdopted	include/xercesc/util/PlatformUtils.hpp	/^    static bool fgMemMgrAdopted;$/;"	m	class:XMLPlatformUtils
fgMemberTypeDefinition	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgMemberTypeDefinition[];$/;"	m	class:PSVIUni
fgMemberTypeDefinitions	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgMemberTypeDefinitions[];$/;"	m	class:PSVIUni
fgMemoryManager	include/xercesc/util/PlatformUtils.hpp	/^    static MemoryManager*       fgMemoryManager;$/;"	m	class:XMLPlatformUtils
fgMemoryManager	include/xercesc/util/XMLString.hpp	/^    static MemoryManager* fgMemoryManager;$/;"	m	class:XMLString
fgMg	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgMg[];$/;"	m	class:PSVIUni
fgMinExclusive	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgMinExclusive[];$/;"	m	class:PSVIUni
fgMinInclusive	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgMinInclusive[];$/;"	m	class:PSVIUni
fgMinLength	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgMinLength[];$/;"	m	class:PSVIUni
fgMinOccurs	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgMinOccurs[];$/;"	m	class:PSVIUni
fgMixed	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgMixed[];$/;"	m	class:PSVIUni
fgModelGroup	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgModelGroup[];$/;"	m	class:PSVIUni
fgModelGroupDefinition	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgModelGroupDefinition[];$/;"	m	class:PSVIUni
fgMutexMgr	include/xercesc/util/PlatformUtils.hpp	/^    static XMLMutexMgr*         fgMutexMgr;$/;"	m	class:XMLPlatformUtils
fgMyName	include/xercesc/util/NetAccessors/Curl/CurlNetAccessor.hpp	/^    static const XMLCh fgMyName[];$/;"	m	class:CurlNetAccessor
fgNDATAString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgNDATAString[];$/;"	m	class:XMLUni
fgNaNString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgNaNString[];$/;"	m	class:XMLUni
fgName	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgName[];$/;"	m	class:PSVIUni
fgNamespace	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgNamespace[];$/;"	m	class:PSVIUni
fgNamespaceAttributes	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgNamespaceAttributes[];$/;"	m	class:PSVIUni
fgNamespaceConstraint	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgNamespaceConstraint[];$/;"	m	class:PSVIUni
fgNamespaceInfoset	include/xercesc/util/PSVIUni.hpp	/^	static const XMLCh fgNamespaceInfoset[];$/;"	m	class:PSVIUni
fgNamespaceInstance	include/xercesc/util/PSVIUni.hpp	/^	static const XMLCh fgNamespaceInstance[];$/;"	m	class:PSVIUni
fgNamespaceName	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgNamespaceName[];$/;"	m	class:PSVIUni
fgNamespacePsvi	include/xercesc/util/PSVIUni.hpp	/^	static const XMLCh fgNamespacePsvi[];$/;"	m	class:PSVIUni
fgNamespaceSchemaInformation	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgNamespaceSchemaInformation[];$/;"	m	class:PSVIUni
fgNamespaceXmlSchema	include/xercesc/util/PSVIUni.hpp	/^	static const XMLCh fgNamespaceXmlSchema[];$/;"	m	class:PSVIUni
fgNamespaces	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgNamespaces[];$/;"	m	class:PSVIUni
fgNegINFString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgNegINFString[];$/;"	m	class:XMLUni
fgNegOne	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgNegOne[];$/;"	m	class:XMLUni
fgNegZeroString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgNegZeroString[];$/;"	m	class:XMLUni
fgNetAccessor	include/xercesc/util/PlatformUtils.hpp	/^    static XMLNetAccessor*      fgNetAccessor;$/;"	m	class:XMLPlatformUtils
fgNetAccessorException_Name	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgNetAccessorException_Name[];$/;"	m	class:XMLUni
fgNil	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgNil[];$/;"	m	class:PSVIUni
fgNillable	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgNillable[];$/;"	m	class:PSVIUni
fgNmTokenString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgNmTokenString[];$/;"	m	class:XMLUni
fgNmTokensString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgNmTokensString[];$/;"	m	class:XMLUni
fgNoString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgNoString[];$/;"	m	class:XMLUni
fgNoSuchElementException_Name	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgNoSuchElementException_Name[];$/;"	m	class:XMLUni
fgNone	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgNone[];$/;"	m	class:PSVIUni
fgNormalizedValue	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgNormalizedValue[];$/;"	m	class:PSVIUni
fgNot	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgNot[];$/;"	m	class:PSVIUni
fgNotKnown	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgNotKnown[];$/;"	m	class:PSVIUni
fgNotation	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgNotation[];$/;"	m	class:PSVIUni
fgNotationDeclaration	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgNotationDeclaration[];$/;"	m	class:PSVIUni
fgNotationString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgNotationString[];$/;"	m	class:XMLUni
fgNotations	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgNotations[];$/;"	m	class:PSVIUni
fgNsNamespace	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgNsNamespace[];$/;"	m	class:PSVIUni
fgNullPointerException_Name	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgNullPointerException_Name[];$/;"	m	class:XMLUni
fgNullString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgNullString[];$/;"	m	class:XMLUni
fgNumberFormatException_Name	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgNumberFormatException_Name[];$/;"	m	class:XMLUni
fgNumeric	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgNumeric[];$/;"	m	class:PSVIUni
fgOnePointZero	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgOnePointZero[];$/;"	m	class:PSVIUni
fgOrdered	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgOrdered[];$/;"	m	class:PSVIUni
fgPCDATAString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgPCDATAString[];$/;"	m	class:XMLUni
fgPCDataElemId	include/xercesc/framework/XMLElementDecl.hpp	/^    static const unsigned int   fgPCDataElemId;$/;"	m	class:XMLElementDecl
fgPCDataElemName	include/xercesc/framework/XMLElementDecl.hpp	/^    static const XMLCh          fgPCDataElemName[];$/;"	m	class:XMLElementDecl
fgPIString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgPIString[];$/;"	m	class:XMLUni
fgParseException_Name	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgParseException_Name[];$/;"	m	class:XMLUni
fgPartial	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgPartial[];$/;"	m	class:PSVIUni
fgParticle	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgParticle[];$/;"	m	class:PSVIUni
fgParticles	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgParticles[];$/;"	m	class:PSVIUni
fgPattern	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgPattern[];$/;"	m	class:PSVIUni
fgPosINFString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgPosINFString[];$/;"	m	class:XMLUni
fgPosZeroString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgPosZeroString[];$/;"	m	class:XMLUni
fgPrefix	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgPrefix[];$/;"	m	class:PSVIUni
fgPrimitiveTypeDefinition	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgPrimitiveTypeDefinition[];$/;"	m	class:PSVIUni
fgProcessContents	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgProcessContents[];$/;"	m	class:PSVIUni
fgProcessingInstruction	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgProcessingInstruction[];$/;"	m	class:PSVIUni
fgProhibitedSubstitutions	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgProhibitedSubstitutions[];$/;"	m	class:PSVIUni
fgPsv	include/xercesc/util/PSVIUni.hpp	/^	static const XMLCh fgPsv[];$/;"	m	class:PSVIUni
fgPsvColon	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgPsvColon[];$/;"	m	class:PSVIUni
fgPsvDocument	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgPsvDocument[];$/;"	m	class:PSVIUni
fgPubIDString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgPubIDString[];$/;"	m	class:XMLUni
fgPublicIdentifier	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgPublicIdentifier[];$/;"	m	class:PSVIUni
fgQuot	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgQuot[];$/;"	m	class:XMLUni
fgRedefIdentifier	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgRedefIdentifier[];$/;"	m	class:SchemaSymbols
fgRefString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgRefString[];$/;"	m	class:XMLUni
fgReferencedKey	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgReferencedKey[];$/;"	m	class:PSVIUni
fgReferences	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgReferences[];$/;"	m	class:PSVIUni
fgRegEx_XOption	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgRegEx_XOption[];$/;"	m	class:SchemaSymbols
fgRequired	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgRequired[];$/;"	m	class:PSVIUni
fgRequiredString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgRequiredString[];$/;"	m	class:XMLUni
fgRestrict	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgRestrict[];$/;"	m	class:PSVIUni
fgRestriction	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgRestriction[];$/;"	m	class:PSVIUni
fgRuntimeException_Name	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgRuntimeException_Name[];$/;"	m	class:XMLUni
fgSAX2CoreNameSpacePrefixes	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgSAX2CoreNameSpacePrefixes[];$/;"	m	class:XMLUni
fgSAX2CoreNameSpaces	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgSAX2CoreNameSpaces[];$/;"	m	class:XMLUni
fgSAX2CoreValidation	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgSAX2CoreValidation[];$/;"	m	class:XMLUni
fgSGXMLScanner	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgSGXMLScanner[];$/;"	m	class:XMLUni
fgSSE2ok	include/xercesc/util/PlatformUtils.hpp	/^    static bool                 fgSSE2ok;$/;"	m	class:XMLPlatformUtils
fgSYMBOL_ANCESTOR	include/xercesc/validators/schema/identity/XPathSymbols.hpp	/^    static const XMLCh fgSYMBOL_ANCESTOR[];$/;"	m	class:XPathSymbols
fgSYMBOL_ANCESTOR_OR_SELF	include/xercesc/validators/schema/identity/XPathSymbols.hpp	/^    static const XMLCh fgSYMBOL_ANCESTOR_OR_SELF[];$/;"	m	class:XPathSymbols
fgSYMBOL_AND	include/xercesc/validators/schema/identity/XPathSymbols.hpp	/^    static const XMLCh fgSYMBOL_AND[];$/;"	m	class:XPathSymbols
fgSYMBOL_ATTRIBUTE	include/xercesc/validators/schema/identity/XPathSymbols.hpp	/^    static const XMLCh fgSYMBOL_ATTRIBUTE[];$/;"	m	class:XPathSymbols
fgSYMBOL_CHILD	include/xercesc/validators/schema/identity/XPathSymbols.hpp	/^    static const XMLCh fgSYMBOL_CHILD[];$/;"	m	class:XPathSymbols
fgSYMBOL_COMMENT	include/xercesc/validators/schema/identity/XPathSymbols.hpp	/^    static const XMLCh fgSYMBOL_COMMENT[];$/;"	m	class:XPathSymbols
fgSYMBOL_DESCENDANT	include/xercesc/validators/schema/identity/XPathSymbols.hpp	/^    static const XMLCh fgSYMBOL_DESCENDANT[];$/;"	m	class:XPathSymbols
fgSYMBOL_DESCENDANT_OR_SELF	include/xercesc/validators/schema/identity/XPathSymbols.hpp	/^    static const XMLCh fgSYMBOL_DESCENDANT_OR_SELF[];$/;"	m	class:XPathSymbols
fgSYMBOL_DIV	include/xercesc/validators/schema/identity/XPathSymbols.hpp	/^    static const XMLCh fgSYMBOL_DIV[];$/;"	m	class:XPathSymbols
fgSYMBOL_FOLLOWING	include/xercesc/validators/schema/identity/XPathSymbols.hpp	/^    static const XMLCh fgSYMBOL_FOLLOWING[];$/;"	m	class:XPathSymbols
fgSYMBOL_FOLLOWING_SIBLING	include/xercesc/validators/schema/identity/XPathSymbols.hpp	/^    static const XMLCh fgSYMBOL_FOLLOWING_SIBLING[];$/;"	m	class:XPathSymbols
fgSYMBOL_MOD	include/xercesc/validators/schema/identity/XPathSymbols.hpp	/^    static const XMLCh fgSYMBOL_MOD[];$/;"	m	class:XPathSymbols
fgSYMBOL_NAMESPACE	include/xercesc/validators/schema/identity/XPathSymbols.hpp	/^    static const XMLCh fgSYMBOL_NAMESPACE[];$/;"	m	class:XPathSymbols
fgSYMBOL_NODE	include/xercesc/validators/schema/identity/XPathSymbols.hpp	/^    static const XMLCh fgSYMBOL_NODE[];$/;"	m	class:XPathSymbols
fgSYMBOL_OR	include/xercesc/validators/schema/identity/XPathSymbols.hpp	/^    static const XMLCh fgSYMBOL_OR[];$/;"	m	class:XPathSymbols
fgSYMBOL_PARENT	include/xercesc/validators/schema/identity/XPathSymbols.hpp	/^    static const XMLCh fgSYMBOL_PARENT[];$/;"	m	class:XPathSymbols
fgSYMBOL_PI	include/xercesc/validators/schema/identity/XPathSymbols.hpp	/^    static const XMLCh fgSYMBOL_PI[];$/;"	m	class:XPathSymbols
fgSYMBOL_PRECEDING	include/xercesc/validators/schema/identity/XPathSymbols.hpp	/^    static const XMLCh fgSYMBOL_PRECEDING[];$/;"	m	class:XPathSymbols
fgSYMBOL_PRECEDING_SIBLING	include/xercesc/validators/schema/identity/XPathSymbols.hpp	/^    static const XMLCh fgSYMBOL_PRECEDING_SIBLING[];$/;"	m	class:XPathSymbols
fgSYMBOL_SELF	include/xercesc/validators/schema/identity/XPathSymbols.hpp	/^    static const XMLCh fgSYMBOL_SELF[];$/;"	m	class:XPathSymbols
fgSYMBOL_TEXT	include/xercesc/validators/schema/identity/XPathSymbols.hpp	/^    static const XMLCh fgSYMBOL_TEXT[];$/;"	m	class:XPathSymbols
fgSchema	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgSchema[];$/;"	m	class:PSVIUni
fgSchemaAnnotations	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgSchemaAnnotations[];$/;"	m	class:PSVIUni
fgSchemaComponents	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgSchemaComponents[];$/;"	m	class:PSVIUni
fgSchemaDateTimeException_Name	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgSchemaDateTimeException_Name[];$/;"	m	class:XMLUni
fgSchemaDefault	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgSchemaDefault[];$/;"	m	class:PSVIUni
fgSchemaDocument	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgSchemaDocument[];$/;"	m	class:PSVIUni
fgSchemaDocuments	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgSchemaDocuments[];$/;"	m	class:PSVIUni
fgSchemaErrorCode	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgSchemaErrorCode[];$/;"	m	class:PSVIUni
fgSchemaInformation	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgSchemaInformation[];$/;"	m	class:PSVIUni
fgSchemaNamespace	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgSchemaNamespace[];$/;"	m	class:PSVIUni
fgSchemaNormalizedValue	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgSchemaNormalizedValue[];$/;"	m	class:PSVIUni
fgSchemaSpecified	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgSchemaSpecified[];$/;"	m	class:PSVIUni
fgScope	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgScope[];$/;"	m	class:PSVIUni
fgSelector	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgSelector[];$/;"	m	class:PSVIUni
fgSequence	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgSequence[];$/;"	m	class:PSVIUni
fgShortMaxInc	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgShortMaxInc[];$/;"	m	class:XMLUni
fgShortMinInc	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgShortMinInc[];$/;"	m	class:XMLUni
fgSimple	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgSimple[];$/;"	m	class:PSVIUni
fgSimpleTypeDefinition	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgSimpleTypeDefinition[];$/;"	m	class:PSVIUni
fgSkip	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgSkip[];$/;"	m	class:PSVIUni
fgSpecified	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgSpecified[];$/;"	m	class:PSVIUni
fgStandalone	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgStandalone[];$/;"	m	class:PSVIUni
fgStandaloneString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgStandaloneString[];$/;"	m	class:XMLUni
fgStrict	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgStrict[];$/;"	m	class:PSVIUni
fgSubstitution	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgSubstitution[];$/;"	m	class:PSVIUni
fgSubstitutionGroupAffiliation	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgSubstitutionGroupAffiliation[];$/;"	m	class:PSVIUni
fgSubstitutionGroupExclusions	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgSubstitutionGroupExclusions[];$/;"	m	class:PSVIUni
fgSysIDString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgSysIDString[];$/;"	m	class:XMLUni
fgSystemIdentifier	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgSystemIdentifier[];$/;"	m	class:PSVIUni
fgTarget	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgTarget[];$/;"	m	class:PSVIUni
fgTargetNamespace	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgTargetNamespace[];$/;"	m	class:PSVIUni
fgTerm	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgTerm[];$/;"	m	class:PSVIUni
fgText	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgText[];$/;"	m	class:PSVIUni
fgTextContent	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgTextContent[];$/;"	m	class:PSVIUni
fgTotal	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgTotal[];$/;"	m	class:PSVIUni
fgTotalDigits	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgTotalDigits[];$/;"	m	class:PSVIUni
fgTransService	include/xercesc/util/PlatformUtils.hpp	/^    static XMLTransService*     fgTransService;$/;"	m	class:XMLPlatformUtils
fgTransService2	include/xercesc/util/PlatformUtils.hpp	/^    static XMLTransService*     fgTransService2;$/;"	m	class:XMLPlatformUtils
fgTranscodingException_Name	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgTranscodingException_Name[];$/;"	m	class:XMLUni
fgTrue	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgTrue[];$/;"	m	class:PSVIUni
fgType	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgType[];$/;"	m	class:PSVIUni
fgTypeDefinition	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgTypeDefinition[];$/;"	m	class:PSVIUni
fgUByteMaxInc	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgUByteMaxInc[];$/;"	m	class:XMLUni
fgUCS4BEncodingString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgUCS4BEncodingString[];$/;"	m	class:XMLUni
fgUCS4BEncodingString2	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgUCS4BEncodingString2[];$/;"	m	class:XMLUni
fgUCS4BPre	include/xercesc/framework/XMLRecognizer.hpp	/^    static const XMLByte        fgUCS4BPre[];$/;"	m	class:XMLRecognizer
fgUCS4EncodingString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgUCS4EncodingString[];$/;"	m	class:XMLUni
fgUCS4EncodingString2	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgUCS4EncodingString2[];$/;"	m	class:XMLUni
fgUCS4EncodingString3	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgUCS4EncodingString3[];$/;"	m	class:XMLUni
fgUCS4EncodingString4	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgUCS4EncodingString4[];$/;"	m	class:XMLUni
fgUCS4EncodingString5	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgUCS4EncodingString5[];$/;"	m	class:XMLUni
fgUCS4LEncodingString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgUCS4LEncodingString[];$/;"	m	class:XMLUni
fgUCS4LEncodingString2	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgUCS4LEncodingString2[];$/;"	m	class:XMLUni
fgUCS4LPre	include/xercesc/framework/XMLRecognizer.hpp	/^    static const XMLByte        fgUCS4LPre[];$/;"	m	class:XMLRecognizer
fgUCS4PreLen	include/xercesc/framework/XMLRecognizer.hpp	/^    static const XMLSize_t      fgUCS4PreLen;$/;"	m	class:XMLRecognizer
fgUIntMaxInc	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgUIntMaxInc[];$/;"	m	class:XMLUni
fgULongMaxInc	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgULongMaxInc[];$/;"	m	class:XMLUni
fgURI_SCHEMAFORSCHEMA	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgURI_SCHEMAFORSCHEMA[];$/;"	m	class:SchemaSymbols
fgURI_XSI	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgURI_XSI[];$/;"	m	class:SchemaSymbols
fgUSASCIIEncodingString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgUSASCIIEncodingString[];$/;"	m	class:XMLUni
fgUSASCIIEncodingString2	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgUSASCIIEncodingString2[];$/;"	m	class:XMLUni
fgUSASCIIEncodingString3	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgUSASCIIEncodingString3[];$/;"	m	class:XMLUni
fgUSASCIIEncodingString4	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgUSASCIIEncodingString4[];$/;"	m	class:XMLUni
fgUShortMaxInc	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgUShortMaxInc[];$/;"	m	class:XMLUni
fgUTF16BEncodingString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgUTF16BEncodingString[];$/;"	m	class:XMLUni
fgUTF16BEncodingString2	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgUTF16BEncodingString2[];$/;"	m	class:XMLUni
fgUTF16BPre	include/xercesc/framework/XMLRecognizer.hpp	/^    static const XMLByte        fgUTF16BPre[];$/;"	m	class:XMLRecognizer
fgUTF16EncodingString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgUTF16EncodingString[];$/;"	m	class:XMLUni
fgUTF16EncodingString2	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgUTF16EncodingString2[];$/;"	m	class:XMLUni
fgUTF16EncodingString3	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgUTF16EncodingString3[];$/;"	m	class:XMLUni
fgUTF16EncodingString4	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgUTF16EncodingString4[];$/;"	m	class:XMLUni
fgUTF16EncodingString5	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgUTF16EncodingString5[];$/;"	m	class:XMLUni
fgUTF16EncodingString6	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgUTF16EncodingString6[];$/;"	m	class:XMLUni
fgUTF16EncodingString7	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgUTF16EncodingString7[];$/;"	m	class:XMLUni
fgUTF16LEncodingString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgUTF16LEncodingString[];$/;"	m	class:XMLUni
fgUTF16LEncodingString2	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgUTF16LEncodingString2[];$/;"	m	class:XMLUni
fgUTF16LPre	include/xercesc/framework/XMLRecognizer.hpp	/^    static const XMLByte        fgUTF16LPre[];$/;"	m	class:XMLRecognizer
fgUTF16PreLen	include/xercesc/framework/XMLRecognizer.hpp	/^    static const XMLSize_t      fgUTF16PreLen;$/;"	m	class:XMLRecognizer
fgUTF8BOM	include/xercesc/framework/XMLRecognizer.hpp	/^    static const char           fgUTF8BOM[];$/;"	m	class:XMLRecognizer
fgUTF8BOMLen	include/xercesc/framework/XMLRecognizer.hpp	/^    static const XMLSize_t      fgUTF8BOMLen;$/;"	m	class:XMLRecognizer
fgUTF8EncodingString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgUTF8EncodingString[];$/;"	m	class:XMLUni
fgUTF8EncodingString2	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgUTF8EncodingString2[];$/;"	m	class:XMLUni
fgUTFDataFormatException_Name	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgUTFDataFormatException_Name[];$/;"	m	class:XMLUni
fgUnbounded	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgUnbounded[];$/;"	m	class:PSVIUni
fgUnexpectedEOFException_Name	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgUnexpectedEOFException_Name[];$/;"	m	class:XMLUni
fgUniAll	include/xercesc/util/regx/RegxDefs.hpp	/^static const XMLCh fgUniAll[] =$/;"	v
fgUniAssigned	include/xercesc/util/regx/RegxDefs.hpp	/^static const XMLCh fgUniAssigned[] =$/;"	v
fgUniCharsTable	include/xercesc/util/regx/UniCharTable.hpp	/^const XMLByte fgUniCharsTable[0x10000] =$/;"	v
fgUniControl	include/xercesc/util/regx/RegxDefs.hpp	/^static const XMLCh fgUniControl[] =$/;"	v
fgUniDecimalDigit	include/xercesc/util/regx/RegxDefs.hpp	/^static const XMLCh fgUniDecimalDigit[] =$/;"	v
fgUniIsAlnum	include/xercesc/util/regx/RegxDefs.hpp	/^static const XMLCh fgUniIsAlnum[] =$/;"	v
fgUniIsAlpha	include/xercesc/util/regx/RegxDefs.hpp	/^static const XMLCh fgUniIsAlpha[] =$/;"	v
fgUniIsDigit	include/xercesc/util/regx/RegxDefs.hpp	/^static const XMLCh fgUniIsDigit[] =$/;"	v
fgUniIsLower	include/xercesc/util/regx/RegxDefs.hpp	/^static const XMLCh fgUniIsLower[] =$/;"	v
fgUniIsPunct	include/xercesc/util/regx/RegxDefs.hpp	/^static const XMLCh fgUniIsPunct[] =$/;"	v
fgUniIsSpace	include/xercesc/util/regx/RegxDefs.hpp	/^static const XMLCh fgUniIsSpace[] =$/;"	v
fgUniIsUpper	include/xercesc/util/regx/RegxDefs.hpp	/^static const XMLCh fgUniIsUpper[] =$/;"	v
fgUniIsWord	include/xercesc/util/regx/RegxDefs.hpp	/^static const XMLCh fgUniIsWord[] =$/;"	v
fgUniLetter	include/xercesc/util/regx/RegxDefs.hpp	/^static const XMLCh fgUniLetter[] =$/;"	v
fgUniMark	include/xercesc/util/regx/RegxDefs.hpp	/^static const XMLCh fgUniMark[] =$/;"	v
fgUniNumber	include/xercesc/util/regx/RegxDefs.hpp	/^static const XMLCh fgUniNumber[] =$/;"	v
fgUniPunctuation	include/xercesc/util/regx/RegxDefs.hpp	/^static const XMLCh fgUniPunctuation[] =$/;"	v
fgUniSeparator	include/xercesc/util/regx/RegxDefs.hpp	/^static const XMLCh fgUniSeparator[] =$/;"	v
fgUniSymbol	include/xercesc/util/regx/RegxDefs.hpp	/^static const XMLCh fgUniSymbol[] =$/;"	v
fgUnicodeCategory	include/xercesc/util/regx/RegxDefs.hpp	/^static const XMLCh fgUnicodeCategory[] =$/;"	v
fgUnion	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgUnion[];$/;"	m	class:PSVIUni
fgUnique	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgUnique[];$/;"	m	class:PSVIUni
fgUnknown	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgUnknown[];$/;"	m	class:PSVIUni
fgUnknownURIName	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgUnknownURIName[];$/;"	m	class:XMLUni
fgUnparsedEntities	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgUnparsedEntities[];$/;"	m	class:PSVIUni
fgUnsupportedEncodingException_Name	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgUnsupportedEncodingException_Name[];$/;"	m	class:XMLUni
fgUserInformation	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgUserInformation[];$/;"	m	class:PSVIUni
fgUserPanicHandler	include/xercesc/util/PlatformUtils.hpp	/^    static PanicHandler*        fgUserPanicHandler;$/;"	m	class:XMLPlatformUtils
fgVCFixed	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgVCFixed[];$/;"	m	class:PSVIUni
fgValid	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgValid[];$/;"	m	class:PSVIUni
fgValidationAttempted	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgValidationAttempted[];$/;"	m	class:PSVIUni
fgValidationContext	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgValidationContext[];$/;"	m	class:PSVIUni
fgValidity	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgValidity[];$/;"	m	class:PSVIUni
fgValidityDomain	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgValidityDomain[];$/;"	m	class:XMLUni
fgValue	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgValue[];$/;"	m	class:PSVIUni
fgValueConstraint	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgValueConstraint[];$/;"	m	class:PSVIUni
fgValueOne	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgValueOne[];$/;"	m	class:XMLUni
fgValueZero	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgValueZero[];$/;"	m	class:XMLUni
fgVariety	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgVariety[];$/;"	m	class:PSVIUni
fgVersion	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgVersion[];$/;"	m	class:PSVIUni
fgVersion1_0	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgVersion1_0[];$/;"	m	class:XMLUni
fgVersion1_1	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgVersion1_1[];$/;"	m	class:XMLUni
fgVersionString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgVersionString[];$/;"	m	class:XMLUni
fgWFXMLScanner	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgWFXMLScanner[];$/;"	m	class:XMLUni
fgWS_COLLAPSE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgWS_COLLAPSE[];$/;"	m	class:SchemaSymbols
fgWS_PRESERVE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgWS_PRESERVE[];$/;"	m	class:SchemaSymbols
fgWS_REPLACE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgWS_REPLACE[];$/;"	m	class:SchemaSymbols
fgWhiteSpace	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgWhiteSpace[];$/;"	m	class:PSVIUni
fgWildcard	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgWildcard[];$/;"	m	class:PSVIUni
fgWin1252EncodingString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgWin1252EncodingString[];$/;"	m	class:XMLUni
fgXIBaseAttrName	include/xercesc/xinclude/XIncludeUtils.hpp	/^    static const XMLCh fgXIBaseAttrName[];$/;"	m	class:XIncludeUtils
fgXIFallbackQName	include/xercesc/xinclude/XIncludeUtils.hpp	/^    static const XMLCh fgXIFallbackQName[];$/;"	m	class:XIncludeUtils
fgXIIIncludeNamespaceURI	include/xercesc/xinclude/XIncludeUtils.hpp	/^    static const XMLCh fgXIIIncludeNamespaceURI[];$/;"	m	class:XIncludeUtils
fgXIIncludeAcceptAttrName	include/xercesc/xinclude/XIncludeUtils.hpp	/^    static const XMLCh fgXIIncludeAcceptAttrName[];$/;"	m	class:XIncludeUtils
fgXIIncludeAcceptLanguageAttrName	include/xercesc/xinclude/XIncludeUtils.hpp	/^    static const XMLCh fgXIIncludeAcceptLanguageAttrName[];$/;"	m	class:XIncludeUtils
fgXIIncludeEncodingAttrName	include/xercesc/xinclude/XIncludeUtils.hpp	/^    static const XMLCh fgXIIncludeEncodingAttrName[];$/;"	m	class:XIncludeUtils
fgXIIncludeHREFAttrName	include/xercesc/xinclude/XIncludeUtils.hpp	/^    static const XMLCh fgXIIncludeHREFAttrName[];$/;"	m	class:XIncludeUtils
fgXIIncludeParseAttrName	include/xercesc/xinclude/XIncludeUtils.hpp	/^    static const XMLCh fgXIIncludeParseAttrName[];$/;"	m	class:XIncludeUtils
fgXIIncludeParseAttrTextValue	include/xercesc/xinclude/XIncludeUtils.hpp	/^    static const XMLCh fgXIIncludeParseAttrTextValue[];$/;"	m	class:XIncludeUtils
fgXIIncludeParseAttrXMLValue	include/xercesc/xinclude/XIncludeUtils.hpp	/^    static const XMLCh fgXIIncludeParseAttrXMLValue[];$/;"	m	class:XIncludeUtils
fgXIIncludeQName	include/xercesc/xinclude/XIncludeUtils.hpp	/^    static const XMLCh fgXIIncludeQName[];$/;"	m	class:XIncludeUtils
fgXIIncludeXPointerAttrName	include/xercesc/xinclude/XIncludeUtils.hpp	/^    static const XMLCh fgXIIncludeXPointerAttrName[];$/;"	m	class:XIncludeUtils
fgXMLCategory	include/xercesc/util/regx/RegxDefs.hpp	/^static const XMLCh fgXMLCategory[] =$/;"	v
fgXMLChBigEndian	include/xercesc/util/PlatformUtils.hpp	/^    static bool                 fgXMLChBigEndian;$/;"	m	class:XMLPlatformUtils
fgXMLChEncodingString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXMLChEncodingString[];$/;"	m	class:XMLUni
fgXMLChNull	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgXMLChNull[];$/;"	m	class:PSVIUni
fgXMLDOMMsgDomain	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXMLDOMMsgDomain[];$/;"	m	class:XMLUni
fgXMLDeclString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXMLDeclString[];$/;"	m	class:XMLUni
fgXMLDeclStringCR	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXMLDeclStringCR[];$/;"	m	class:XMLUni
fgXMLDeclStringCRU	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXMLDeclStringCRU[];$/;"	m	class:XMLUni
fgXMLDeclStringHTab	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXMLDeclStringHTab[];$/;"	m	class:XMLUni
fgXMLDeclStringHTabU	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXMLDeclStringHTabU[];$/;"	m	class:XMLUni
fgXMLDeclStringLF	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXMLDeclStringLF[];$/;"	m	class:XMLUni
fgXMLDeclStringLFU	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXMLDeclStringLFU[];$/;"	m	class:XMLUni
fgXMLDeclStringSpace	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXMLDeclStringSpace[];$/;"	m	class:XMLUni
fgXMLDeclStringSpaceU	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXMLDeclStringSpaceU[];$/;"	m	class:XMLUni
fgXMLDigit	include/xercesc/util/regx/RegxDefs.hpp	/^static const XMLCh fgXMLDigit[] =$/;"	v
fgXMLErrDomain	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXMLErrDomain[];$/;"	m	class:XMLUni
fgXMLInitialNameChar	include/xercesc/util/regx/RegxDefs.hpp	/^static const XMLCh fgXMLInitialNameChar[] =$/;"	v
fgXMLNSColonString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXMLNSColonString[];$/;"	m	class:XMLUni
fgXMLNSString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXMLNSString[];$/;"	m	class:XMLUni
fgXMLNSURIName	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXMLNSURIName[];$/;"	m	class:XMLUni
fgXMLNameChar	include/xercesc/util/regx/RegxDefs.hpp	/^static const XMLCh fgXMLNameChar[] =$/;"	v
fgXMLPlatformUtilsException_Name	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXMLPlatformUtilsException_Name[];$/;"	m	class:XMLUni
fgXMLSpace	include/xercesc/util/regx/RegxDefs.hpp	/^static const XMLCh fgXMLSpace[] =$/;"	v
fgXMLString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXMLString[];$/;"	m	class:XMLUni
fgXMLStringCR	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXMLStringCR[];$/;"	m	class:XMLUni
fgXMLStringCRU	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXMLStringCRU[];$/;"	m	class:XMLUni
fgXMLStringHTab	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXMLStringHTab[];$/;"	m	class:XMLUni
fgXMLStringHTabU	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXMLStringHTabU[];$/;"	m	class:XMLUni
fgXMLStringLF	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXMLStringLF[];$/;"	m	class:XMLUni
fgXMLStringLFU	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXMLStringLFU[];$/;"	m	class:XMLUni
fgXMLStringSpace	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXMLStringSpace[];$/;"	m	class:XMLUni
fgXMLStringSpaceU	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXMLStringSpaceU[];$/;"	m	class:XMLUni
fgXMLURIName	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXMLURIName[];$/;"	m	class:XMLUni
fgXMLWord	include/xercesc/util/regx/RegxDefs.hpp	/^static const XMLCh fgXMLWord[] =$/;"	v
fgXMLXIncludeException_Name	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXMLXIncludeException_Name[];$/;"	m	class:XMLUni
fgXPathException_Name	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXPathException_Name[];$/;"	m	class:XMLUni
fgXSAXMLScanner	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXSAXMLScanner[];$/;"	m	class:XMLUni
fgXSI_NONAMESPACESCHEMALOCACTION	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgXSI_NONAMESPACESCHEMALOCACTION[];$/;"	m	class:SchemaSymbols
fgXSI_NONAMESPACESCHEMALOCATION	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgXSI_NONAMESPACESCHEMALOCATION[];$/;"	m	class:SchemaSymbols
fgXSI_SCHEMALOCACTION	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgXSI_SCHEMALOCACTION[];$/;"	m	class:SchemaSymbols
fgXSI_SCHEMALOCATION	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgXSI_SCHEMALOCATION[];$/;"	m	class:SchemaSymbols
fgXSI_TYPE	include/xercesc/validators/schema/SchemaSymbols.hpp	/^    static const XMLCh fgXSI_TYPE[];$/;"	m	class:SchemaSymbols
fgXSerializationException_Name	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXSerializationException_Name[];$/;"	m	class:XMLUni
fgXercesCacheGrammarFromParse	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXercesCacheGrammarFromParse[];$/;"	m	class:XMLUni
fgXercesCalculateSrcOfs	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXercesCalculateSrcOfs[];$/;"	m	class:XMLUni
fgXercesContinueAfterFatalError	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXercesContinueAfterFatalError[];$/;"	m	class:XMLUni
fgXercesDOMHasPSVIInfo	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXercesDOMHasPSVIInfo[];$/;"	m	class:XMLUni
fgXercesDisableDefaultEntityResolution	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXercesDisableDefaultEntityResolution[];$/;"	m	class:XMLUni
fgXercesDoXInclude	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXercesDoXInclude[];$/;"	m	class:XMLUni
fgXercesDynamic	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXercesDynamic[];$/;"	m	class:XMLUni
fgXercesEntityResolver	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXercesEntityResolver[];$/;"	m	class:XMLUni
fgXercesGenerateSyntheticAnnotations	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXercesGenerateSyntheticAnnotations[];$/;"	m	class:XMLUni
fgXercesHandleMultipleImports	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXercesHandleMultipleImports[];$/;"	m	class:XMLUni
fgXercesIdentityConstraintChecking	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXercesIdentityConstraintChecking[];$/;"	m	class:XMLUni
fgXercesIgnoreAnnotations	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXercesIgnoreAnnotations[];$/;"	m	class:XMLUni
fgXercesIgnoreCachedDTD	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXercesIgnoreCachedDTD[];$/;"	m	class:XMLUni
fgXercesLoadExternalDTD	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXercesLoadExternalDTD[];$/;"	m	class:XMLUni
fgXercesLoadSchema	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXercesLoadSchema[];$/;"	m	class:XMLUni
fgXercesLowWaterMark	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXercesLowWaterMark[];$/;"	m	class:XMLUni
fgXercesParserUseDocumentFromImplementation	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXercesParserUseDocumentFromImplementation[];$/;"	m	class:XMLUni
fgXercesScannerName	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXercesScannerName[];$/;"	m	class:XMLUni
fgXercesSchema	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXercesSchema[];$/;"	m	class:XMLUni
fgXercesSchemaExternalNoNameSpaceSchemaLocation	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXercesSchemaExternalNoNameSpaceSchemaLocation[];$/;"	m	class:XMLUni
fgXercesSchemaExternalSchemaLocation	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXercesSchemaExternalSchemaLocation[];$/;"	m	class:XMLUni
fgXercesSchemaFullChecking	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXercesSchemaFullChecking[];$/;"	m	class:XMLUni
fgXercesSecurityManager	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXercesSecurityManager[];$/;"	m	class:XMLUni
fgXercesSkipDTDValidation	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXercesSkipDTDValidation[];$/;"	m	class:XMLUni
fgXercesStandardUriConformant	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXercesStandardUriConformant[];$/;"	m	class:XMLUni
fgXercesUseCachedGrammarInParse	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXercesUseCachedGrammarInParse[];$/;"	m	class:XMLUni
fgXercesUserAdoptsDOMDocument	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXercesUserAdoptsDOMDocument[];$/;"	m	class:XMLUni
fgXercesValidateAnnotations	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXercesValidateAnnotations[];$/;"	m	class:XMLUni
fgXercesValidationErrorAsFatal	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXercesValidationErrorAsFatal[];$/;"	m	class:XMLUni
fgXercescDefaultLocale	include/xercesc/util/XMLUni.hpp	/^    static const char  fgXercescDefaultLocale[];$/;"	m	class:XMLUni
fgXercescInterfaceDOMDocumentImpl	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXercescInterfaceDOMDocumentImpl[];$/;"	m	class:XMLUni
fgXercescInterfaceDOMDocumentTypeImpl	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXercescInterfaceDOMDocumentTypeImpl[];$/;"	m	class:XMLUni
fgXercescInterfaceDOMMemoryManager	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXercescInterfaceDOMMemoryManager[];$/;"	m	class:XMLUni
fgXercescInterfacePSVITypeInfo	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgXercescInterfacePSVITypeInfo[];$/;"	m	class:XMLUni
fgXml	include/xercesc/util/PSVIUni.hpp	/^	static const XMLCh fgXml[];$/;"	m	class:PSVIUni
fgXpath	include/xercesc/util/PSVIUni.hpp	/^    static const XMLCh fgXpath[];$/;"	m	class:PSVIUni
fgXsi	include/xercesc/util/PSVIUni.hpp	/^	static const XMLCh fgXsi[];$/;"	m	class:PSVIUni
fgYesString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgYesString[];$/;"	m	class:XMLUni
fgZeroLenString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgZeroLenString[];$/;"	m	class:XMLUni
fgZeroString	include/xercesc/util/XMLUni.hpp	/^    static const XMLCh fgZeroString[];$/;"	m	class:XMLUni
findAttDefLocalPart	include/xercesc/validators/schema/SchemaAttDefList.hpp	/^inline XMLAttDef* SchemaAttDefList::findAttDefLocalPart(const   unsigned int       uriID$/;"	f	class:SchemaAttDefList
findAttDefLocalPart	include/xercesc/validators/schema/SchemaAttDefList.hpp	/^inline const XMLAttDef* SchemaAttDefList::findAttDefLocalPart(const   unsigned int       uriID$/;"	f	class:SchemaAttDefList
findBucketElem	include/xercesc/dom/impl/DOMDeepNodeListPool.c	/^findBucketElem(const void* const key1, const XMLCh* const key2, const XMLCh* const key3, XMLSize_t& hashVal) const$/;"	f	class:THasher
findBucketElem	include/xercesc/dom/impl/DOMDeepNodeListPool.c	/^findBucketElem(const void* const key1, const XMLCh* const key2, const XMLCh* const key3, XMLSize_t& hashVal)$/;"	f	class:THasher
findBucketElem	include/xercesc/util/Hash2KeysSetOf.c	/^findBucketElem(const void* const key1, const int key2, XMLSize_t& hashVal) const$/;"	f	class:THasher
findBucketElem	include/xercesc/util/Hash2KeysSetOf.c	/^findBucketElem(const void* const key1, const int key2, XMLSize_t& hashVal)$/;"	f	class:THasher
findBucketElem	include/xercesc/util/RefHash2KeysTableOf.c	/^findBucketElem(const void* const key1, const int key2, XMLSize_t& hashVal) const$/;"	f	class:THasher
findBucketElem	include/xercesc/util/RefHash2KeysTableOf.c	/^findBucketElem(const void* const key1, const int key2, XMLSize_t& hashVal)$/;"	f	class:THasher
findBucketElem	include/xercesc/util/RefHash3KeysIdPool.c	/^findBucketElem(const void* const key1, const int key2, const int key3, XMLSize_t& hashVal) const$/;"	f	class:THasher
findBucketElem	include/xercesc/util/RefHash3KeysIdPool.c	/^findBucketElem(const void* const key1, const int key2, const int key3, XMLSize_t& hashVal)$/;"	f	class:THasher
findBucketElem	include/xercesc/util/RefHashTableOf.c	/^findBucketElem(const void* const key, XMLSize_t& hashVal) const$/;"	f	class:THasher
findBucketElem	include/xercesc/util/RefHashTableOf.c	/^findBucketElem(const void* const key, XMLSize_t& hashVal)$/;"	f	class:THasher
findBucketElem	include/xercesc/util/ValueHashTableOf.c	/^findBucketElem(const void* const key, XMLSize_t& hashVal) const$/;"	f	class:THasher
findBucketElem	include/xercesc/util/ValueHashTableOf.c	/^findBucketElem(const void* const key, XMLSize_t& hashVal)$/;"	f	class:THasher
findNext	include/xercesc/util/Hash2KeysSetOf.c	/^void Hash2KeysSetOfEnumerator<THasher>::findNext()$/;"	f	class:THasher
findNext	include/xercesc/util/RefHash2KeysTableOf.c	/^void RefHash2KeysTableOfEnumerator<TVal, THasher>::findNext()$/;"	f	class:THasher
findNext	include/xercesc/util/RefHash3KeysIdPool.c	/^void RefHash3KeysIdPoolEnumerator<TVal, THasher>::findNext()$/;"	f	class:THasher
findNext	include/xercesc/util/RefHashTableOf.c	/^void RefHashTableOfEnumerator<TVal, THasher>::findNext()$/;"	f	class:THasher
findNext	include/xercesc/util/ValueHashTableOf.c	/^void ValueHashTableOfEnumerator<TVal, THasher>::findNext()$/;"	f	class:THasher
findNext	include/xercesc/validators/common/CMStateSet.hpp	/^    void findNext()$/;"	f	class:CMStateSetEnumerator
firstCharacterOptions	include/xercesc/util/regx/Token.hpp	/^    } firstCharacterOptions;$/;"	t	class:Token
flags	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    unsigned short flags;$/;"	m	class:DOMNodeImpl
floattype	include/xercesc/framework/psvi/XSValue.hpp	/^                struct floattype {$/;"	s	union:XSValue::XSValue_Data::<anonymous>
flush	include/xercesc/framework/XMLFormatter.hpp	/^    virtual void flush() {};$/;"	f	class:XMLFormatTarget
gBaseChars	include/xercesc/internal/CharTypeTables.hpp	/^static const XMLCh gBaseChars[] =$/;"	v
gCombiningChars	include/xercesc/internal/CharTypeTables.hpp	/^static const XMLCh gCombiningChars[] =$/;"	v
gControlCharMask	include/xercesc/util/XMLChar.hpp	/^const XMLByte   gControlCharMask            = 0x20;$/;"	v
gControl_Chars1_1	include/xercesc/internal/CharTypeTables.hpp	/^static const XMLCh gControl_Chars1_1[] =$/;"	v
gDefOutOfMemoryErrMsg	include/xercesc/util/OutOfMemoryException.hpp	/^static const XMLCh gDefOutOfMemoryErrMsg[] =$/;"	v
gDigitChars	include/xercesc/internal/CharTypeTables.hpp	/^static const XMLCh gDigitChars[] =$/;"	v
gEOCFakeId	include/xercesc/framework/XMLContentModel.hpp	/^    static const unsigned int   gEOCFakeId;$/;"	m	class:XMLContentModel
gEncodingArray	include/xercesc/internal/IANAEncodings.hpp	/^const XMLCh gEncodingArray[][46] =$/;"	v
gEncodingArraySize	include/xercesc/internal/IANAEncodings.hpp	/^const unsigned int gEncodingArraySize = 791;$/;"	v
gEpsilonFakeId	include/xercesc/framework/XMLContentModel.hpp	/^    static const unsigned int   gEpsilonFakeId;$/;"	m	class:XMLContentModel
gExtenderChars	include/xercesc/internal/CharTypeTables.hpp	/^static const XMLCh gExtenderChars[] =$/;"	v
gFirstNameCharMask	include/xercesc/util/XMLChar.hpp	/^const XMLByte   gFirstNameCharMask          = 0x2;$/;"	v
gFirstNameChars1_1	include/xercesc/internal/CharTypeTables.hpp	/^static const XMLCh gFirstNameChars1_1[] =$/;"	v
gIdeographicChars	include/xercesc/internal/CharTypeTables.hpp	/^static const XMLCh gIdeographicChars[] =$/;"	v
gInvalidTrans	include/xercesc/framework/XMLContentModel.hpp	/^    static const unsigned int   gInvalidTrans;$/;"	m	class:XMLContentModel
gMappings	include/xercesc/util/TransService.hpp	/^    static RefHashTableOf<ENameMap>*    gMappings;$/;"	m	class:XMLTransService
gMappingsRecognizer	include/xercesc/util/TransService.hpp	/^    static RefVectorOf<ENameMap>*       gMappingsRecognizer;$/;"	m	class:XMLTransService
gNCNameCharMask	include/xercesc/util/XMLChar.hpp	/^const XMLByte   gNCNameCharMask             = 0x1;$/;"	v
gNameCharMask	include/xercesc/util/XMLChar.hpp	/^const XMLByte   gNameCharMask               = 0x4;$/;"	v
gNameChars1_1	include/xercesc/internal/CharTypeTables.hpp	/^static const XMLCh gNameChars1_1[] =$/;"	v
gPlainContentCharMask	include/xercesc/util/XMLChar.hpp	/^const XMLByte   gPlainContentCharMask       = 0x8;$/;"	v
gPublicIdChars	include/xercesc/internal/CharTypeTables.hpp	/^static const XMLCh gPublicIdChars[] =$/;"	v
gSpecialStartTagCharMask	include/xercesc/util/XMLChar.hpp	/^const XMLByte   gSpecialStartTagCharMask    = 0x10;$/;"	v
gWhitespaceCharMask	include/xercesc/util/XMLChar.hpp	/^const XMLByte   gWhitespaceCharMask         = 0x80;$/;"	v
gWhitespaceChars	include/xercesc/internal/CharTypeTables.hpp	/^static const XMLCh gWhitespaceChars[] =$/;"	v
gWhitespaceChars1_1	include/xercesc/internal/CharTypeTables.hpp	/^static const XMLCh gWhitespaceChars1_1[] =$/;"	v
gXMLCharMask	include/xercesc/util/XMLChar.hpp	/^const XMLByte   gXMLCharMask                = 0x40;$/;"	v
gXMLChars	include/xercesc/internal/CharTypeTables.hpp	/^static const XMLCh gXMLChars[] =$/;"	v
gXMLChars1_1	include/xercesc/internal/CharTypeTables.hpp	/^static const XMLCh gXMLChars1_1[] =$/;"	v
gXMLDOMMsgArray	include/xercesc/util/MsgLoaders/InMemory/XercesMessages_en_US.hpp	/^const XMLCh gXMLDOMMsgArray[][128] = $/;"	v
gXMLDOMMsgArraySize	include/xercesc/util/MsgLoaders/InMemory/XercesMessages_en_US.hpp	/^const unsigned int gXMLDOMMsgArraySize = 41;$/;"	v
gXMLErrArray	include/xercesc/util/MsgLoaders/InMemory/XercesMessages_en_US.hpp	/^const XMLCh gXMLErrArray[][128] = $/;"	v
gXMLErrArraySize	include/xercesc/util/MsgLoaders/InMemory/XercesMessages_en_US.hpp	/^const unsigned int gXMLErrArraySize = 288;$/;"	v
gXMLExceptArray	include/xercesc/util/MsgLoaders/InMemory/XercesMessages_en_US.hpp	/^const XMLCh gXMLExceptArray[][128] = $/;"	v
gXMLExceptArraySize	include/xercesc/util/MsgLoaders/InMemory/XercesMessages_en_US.hpp	/^const unsigned int gXMLExceptArraySize = 369;$/;"	v
gXMLValidityArray	include/xercesc/util/MsgLoaders/InMemory/XercesMessages_en_US.hpp	/^const XMLCh gXMLValidityArray[][128] = $/;"	v
gXMLValidityArraySize	include/xercesc/util/MsgLoaders/InMemory/XercesMessages_en_US.hpp	/^const unsigned int gXMLValidityArraySize = 84;$/;"	v
gXercesFullVersionStr	include/xercesc/util/XercesVersion.hpp	/^const char* const    gXercesFullVersionStr = XERCES_FULLVERSIONSTR;$/;"	v
gXercesMajVersion	include/xercesc/util/XercesVersion.hpp	/^const unsigned int   gXercesMajVersion = XERCES_VERSION_MAJOR;$/;"	v
gXercesMinVersion	include/xercesc/util/XercesVersion.hpp	/^const unsigned int   gXercesMinVersion = XERCES_VERSION_MINOR;$/;"	v
gXercesRevision	include/xercesc/util/XercesVersion.hpp	/^const unsigned int   gXercesRevision   = XERCES_VERSION_REVISION;$/;"	v
gXercesVersionStr	include/xercesc/util/XercesVersion.hpp	/^const char* const    gXercesVersionStr = XERCES_VERSIONSTR;$/;"	v
g_DtdNotValidatedAttribute	include/xercesc/dom/impl/DOMTypeInfoImpl.hpp	/^    static DOMTypeInfoImpl  g_DtdNotValidatedAttribute;$/;"	m	class:DOMTypeInfoImpl
g_DtdValidatedCDATAAttribute	include/xercesc/dom/impl/DOMTypeInfoImpl.hpp	/^    static DOMTypeInfoImpl  g_DtdValidatedCDATAAttribute;$/;"	m	class:DOMTypeInfoImpl
g_DtdValidatedENTITIESAttribute	include/xercesc/dom/impl/DOMTypeInfoImpl.hpp	/^    static DOMTypeInfoImpl  g_DtdValidatedENTITIESAttribute;$/;"	m	class:DOMTypeInfoImpl
g_DtdValidatedENTITYAttribute	include/xercesc/dom/impl/DOMTypeInfoImpl.hpp	/^    static DOMTypeInfoImpl  g_DtdValidatedENTITYAttribute;$/;"	m	class:DOMTypeInfoImpl
g_DtdValidatedENUMERATIONAttribute	include/xercesc/dom/impl/DOMTypeInfoImpl.hpp	/^    static DOMTypeInfoImpl  g_DtdValidatedENUMERATIONAttribute;$/;"	m	class:DOMTypeInfoImpl
g_DtdValidatedElement	include/xercesc/dom/impl/DOMTypeInfoImpl.hpp	/^    static DOMTypeInfoImpl  g_DtdValidatedElement;$/;"	m	class:DOMTypeInfoImpl
g_DtdValidatedIDAttribute	include/xercesc/dom/impl/DOMTypeInfoImpl.hpp	/^    static DOMTypeInfoImpl  g_DtdValidatedIDAttribute;$/;"	m	class:DOMTypeInfoImpl
g_DtdValidatedIDREFAttribute	include/xercesc/dom/impl/DOMTypeInfoImpl.hpp	/^    static DOMTypeInfoImpl  g_DtdValidatedIDREFAttribute;$/;"	m	class:DOMTypeInfoImpl
g_DtdValidatedIDREFSAttribute	include/xercesc/dom/impl/DOMTypeInfoImpl.hpp	/^    static DOMTypeInfoImpl  g_DtdValidatedIDREFSAttribute;$/;"	m	class:DOMTypeInfoImpl
g_DtdValidatedNMTOKENAttribute	include/xercesc/dom/impl/DOMTypeInfoImpl.hpp	/^    static DOMTypeInfoImpl  g_DtdValidatedNMTOKENAttribute;$/;"	m	class:DOMTypeInfoImpl
g_DtdValidatedNMTOKENSAttribute	include/xercesc/dom/impl/DOMTypeInfoImpl.hpp	/^    static DOMTypeInfoImpl  g_DtdValidatedNMTOKENSAttribute;$/;"	m	class:DOMTypeInfoImpl
g_DtdValidatedNOTATIONAttribute	include/xercesc/dom/impl/DOMTypeInfoImpl.hpp	/^    static DOMTypeInfoImpl  g_DtdValidatedNOTATIONAttribute;$/;"	m	class:DOMTypeInfoImpl
genAnonTypeName	include/xercesc/validators/schema/TraverseSchema.hpp	/^inline const XMLCh* TraverseSchema::genAnonTypeName(const XMLCh* const prefix) {$/;"	f	class:TraverseSchema
get	include/xercesc/util/Janitor.c	/^ArrayJanitor<T>::get() const$/;"	f	class:T
get	include/xercesc/util/Janitor.c	/^Janitor<T>::get() const$/;"	f	class:T
get	include/xercesc/util/Janitor.c	/^T* JanitorMemFunCall<T>::get() const$/;"	f	class:T
get	include/xercesc/util/RefHash2KeysTableOf.c	/^TVal* RefHash2KeysTableOf<TVal, THasher>::get(const void* const key1, const int key2)$/;"	f	class:THasher
get	include/xercesc/util/RefHash2KeysTableOf.c	/^get(const void* const key1, const int key2) const$/;"	f	class:THasher
get	include/xercesc/util/RefHashTableOf.c	/^get(const void* const key) const$/;"	f	class:THasher
get	include/xercesc/util/RefHashTableOf.c	/^inline TVal* RefHashTableOf<TVal, THasher>::get(const void* const key)$/;"	f	class:THasher
get	include/xercesc/util/ValueHashTableOf.c	/^TVal& ValueHashTableOf<TVal, THasher>::get(const void* const key, MemoryManager* const manager)$/;"	f	class:THasher
get	include/xercesc/util/ValueHashTableOf.c	/^get(const void* const key) const$/;"	f	class:THasher
getAbstract	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline bool ComplexTypeInfo::getAbstract() const {$/;"	f	class:ComplexTypeInfo
getAdoptContentSpec	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline bool ComplexTypeInfo::getAdoptContentSpec() const {$/;"	f	class:ComplexTypeInfo
getAnnotation	include/xercesc/framework/psvi/XSAttributeDeclaration.hpp	/^inline XSAnnotation *XSAttributeDeclaration::getAnnotation() const$/;"	f	class:XSAttributeDeclaration
getAnnotation	include/xercesc/framework/psvi/XSAttributeGroupDefinition.hpp	/^inline XSAnnotation* XSAttributeGroupDefinition::getAnnotation() const$/;"	f	class:XSAttributeGroupDefinition
getAnnotation	include/xercesc/framework/psvi/XSElementDeclaration.hpp	/^inline XSAnnotation *XSElementDeclaration::getAnnotation() const$/;"	f	class:XSElementDeclaration
getAnnotation	include/xercesc/framework/psvi/XSFacet.hpp	/^inline XSAnnotation* XSFacet::getAnnotation() const$/;"	f	class:XSFacet
getAnnotation	include/xercesc/framework/psvi/XSModelGroup.hpp	/^inline XSAnnotation* XSModelGroup::getAnnotation() const$/;"	f	class:XSModelGroup
getAnnotation	include/xercesc/framework/psvi/XSModelGroupDefinition.hpp	/^inline XSAnnotation* XSModelGroupDefinition::getAnnotation() const$/;"	f	class:XSModelGroupDefinition
getAnnotation	include/xercesc/framework/psvi/XSNotationDeclaration.hpp	/^inline XSAnnotation* XSNotationDeclaration::getAnnotation() const$/;"	f	class:XSNotationDeclaration
getAnnotation	include/xercesc/framework/psvi/XSWildcard.hpp	/^inline XSAnnotation *XSWildcard::getAnnotation() const$/;"	f	class:XSWildcard
getAnnotation	include/xercesc/validators/schema/SchemaGrammar.hpp	/^inline XSAnnotation* SchemaGrammar::getAnnotation()$/;"	f	class:SchemaGrammar
getAnnotation	include/xercesc/validators/schema/SchemaGrammar.hpp	/^inline XSAnnotation* SchemaGrammar::getAnnotation(const void* const key)$/;"	f	class:SchemaGrammar
getAnnotation	include/xercesc/validators/schema/SchemaGrammar.hpp	/^inline const XSAnnotation* SchemaGrammar::getAnnotation() const$/;"	f	class:SchemaGrammar
getAnnotation	include/xercesc/validators/schema/SchemaGrammar.hpp	/^inline const XSAnnotation* SchemaGrammar::getAnnotation(const void* const key) const$/;"	f	class:SchemaGrammar
getAnnotationString	include/xercesc/framework/psvi/XSAnnotation.hpp	/^inline XMLCh *XSAnnotation::getAnnotationString()$/;"	f	class:XSAnnotation
getAnnotationString	include/xercesc/framework/psvi/XSAnnotation.hpp	/^inline const XMLCh *XSAnnotation::getAnnotationString() const$/;"	f	class:XSAnnotation
getAnnotations	include/xercesc/framework/psvi/XSMultiValueFacet.hpp	/^inline XSAnnotationList *XSMultiValueFacet::getAnnotations()$/;"	f	class:XSMultiValueFacet
getAnnotations	include/xercesc/framework/psvi/XSNamespaceItem.hpp	/^inline XSAnnotationList* XSNamespaceItem::getAnnotations()$/;"	f	class:XSNamespaceItem
getAnnotations	include/xercesc/framework/psvi/XSNamespaceItem.hpp	/^inline const XSAnnotationList* XSNamespaceItem::getAnnotations() const$/;"	f	class:XSNamespaceItem
getAnnotations	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^inline XSAnnotationList *XSSimpleTypeDefinition::getAnnotations()$/;"	f	class:XSSimpleTypeDefinition
getAnnotations	include/xercesc/validators/schema/SchemaGrammar.hpp	/^inline RefHashTableOf<XSAnnotation, PtrHasher>* SchemaGrammar::getAnnotations()$/;"	f	class:SchemaGrammar
getAnnotations	include/xercesc/validators/schema/SchemaGrammar.hpp	/^inline const RefHashTableOf<XSAnnotation, PtrHasher>* SchemaGrammar::getAnnotations() const$/;"	f	class:SchemaGrammar
getAnonTypeCount	include/xercesc/validators/schema/SchemaGrammar.hpp	/^SchemaGrammar::getAnonTypeCount () const$/;"	f	class:SchemaGrammar
getAnonymous	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^inline bool DatatypeValidator::getAnonymous() const$/;"	f	class:DatatypeValidator
getAnonymous	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline bool ComplexTypeInfo::getAnonymous() const {$/;"	f	class:ComplexTypeInfo
getAsync	include/xercesc/parsers/DOMLSParserImpl.hpp	/^inline bool DOMLSParserImpl::getAsync() const$/;"	f	class:DOMLSParserImpl
getAttDef	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline SchemaAttDef* ComplexTypeInfo::getAttDef(const XMLCh* const baseName,$/;"	f	class:ComplexTypeInfo
getAttDef	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline const SchemaAttDef* ComplexTypeInfo::getAttDef(const XMLCh* const baseName,$/;"	f	class:ComplexTypeInfo
getAttGroupInfoRegistry	include/xercesc/validators/schema/SchemaGrammar.hpp	/^SchemaGrammar::getAttGroupInfoRegistry() const {$/;"	f	class:SchemaGrammar
getAttName	include/xercesc/framework/XMLAttr.hpp	/^inline QName* XMLAttr::getAttName() const$/;"	f	class:XMLAttr
getAttName	include/xercesc/validators/schema/SchemaAttDef.hpp	/^inline QName* SchemaAttDef::getAttName() const$/;"	f	class:SchemaAttDef
getAttWildCard	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline SchemaAttDef* ComplexTypeInfo::getAttWildCard() {$/;"	f	class:ComplexTypeInfo
getAttWildCard	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline const SchemaAttDef* ComplexTypeInfo::getAttWildCard() const {$/;"	f	class:ComplexTypeInfo
getAttWildCard	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^inline SchemaAttDef* SchemaElementDecl::getAttWildCard() {$/;"	f	class:SchemaElementDecl
getAttWildCard	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^inline const SchemaAttDef* SchemaElementDecl::getAttWildCard() const {$/;"	f	class:SchemaElementDecl
getAttrDeclaration	include/xercesc/framework/psvi/XSAttributeUse.hpp	/^inline XSAttributeDeclaration *XSAttributeUse::getAttrDeclaration() const$/;"	f	class:XSAttributeUse
getAttributeDeclRegistry	include/xercesc/validators/schema/SchemaGrammar.hpp	/^inline RefHashTableOf<XMLAttDef>* SchemaGrammar::getAttributeDeclRegistry() const {$/;"	f	class:SchemaGrammar
getAttributeDeclaration	include/xercesc/framework/psvi/PSVIAttribute.hpp	/^inline XSAttributeDeclaration *PSVIAttribute::getAttributeDeclaration() $/;"	f	class:PSVIAttribute
getAttributeUses	include/xercesc/framework/psvi/XSAttributeGroupDefinition.hpp	/^inline XSAttributeUseList* XSAttributeGroupDefinition::getAttributeUses()$/;"	f	class:XSAttributeGroupDefinition
getAttributeUses	include/xercesc/framework/psvi/XSComplexTypeDefinition.hpp	/^inline XSAttributeUseList* XSComplexTypeDefinition::getAttributeUses()$/;"	f	class:XSComplexTypeDefinition
getAttributeWildcard	include/xercesc/framework/psvi/XSAttributeGroupDefinition.hpp	/^inline XSWildcard* XSAttributeGroupDefinition::getAttributeWildcard() const$/;"	f	class:XSAttributeGroupDefinition
getAttributeWildcard	include/xercesc/framework/psvi/XSComplexTypeDefinition.hpp	/^inline XSWildcard* XSComplexTypeDefinition::getAttributeWildcard() const$/;"	f	class:XSComplexTypeDefinition
getAvailableBufferCount	include/xercesc/framework/XMLBufferMgr.hpp	/^inline XMLSize_t XMLBufferMgr::getAvailableBufferCount() const$/;"	f	class:XMLBufferMgr
getAxisType	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    unsigned short getAxisType() const { return fAxisType; }$/;"	f	class:XercesStep
getBaseAttDecl	include/xercesc/validators/schema/SchemaAttDef.hpp	/^inline SchemaAttDef* SchemaAttDef::getBaseAttDecl()$/;"	f	class:SchemaAttDef
getBaseAttDecl	include/xercesc/validators/schema/SchemaAttDef.hpp	/^inline const SchemaAttDef* SchemaAttDef::getBaseAttDecl() const$/;"	f	class:SchemaAttDef
getBaseComplexTypeInfo	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline ComplexTypeInfo* ComplexTypeInfo::getBaseComplexTypeInfo() const {$/;"	f	class:ComplexTypeInfo
getBaseDatatypeValidator	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline DatatypeValidator* ComplexTypeInfo::getBaseDatatypeValidator() const {$/;"	f	class:ComplexTypeInfo
getBaseGroup	include/xercesc/validators/schema/XercesGroupInfo.hpp	/^inline XercesGroupInfo* XercesGroupInfo::getBaseGroup() const {$/;"	f	class:XercesGroupInfo
getBaseName	include/xercesc/framework/XMLElementDecl.hpp	/^inline XMLCh* XMLElementDecl::getBaseName()$/;"	f	class:XMLElementDecl
getBaseName	include/xercesc/framework/XMLElementDecl.hpp	/^inline const XMLCh* XMLElementDecl::getBaseName() const$/;"	f	class:XMLElementDecl
getBaseURI	include/xercesc/dom/impl/DOMLSInputImpl.hpp	/^inline const XMLCh* DOMLSInputImpl::getBaseURI() const$/;"	f	class:DOMLSInputImpl
getBaseURI	include/xercesc/framework/Wrapper4InputSource.hpp	/^inline const XMLCh* Wrapper4InputSource::getBaseURI() const$/;"	f	class:Wrapper4InputSource
getBaseURI	include/xercesc/framework/XMLEntityDecl.hpp	/^inline const XMLCh* XMLEntityDecl::getBaseURI() const$/;"	f	class:XMLEntityDecl
getBaseURI	include/xercesc/framework/XMLNotationDecl.hpp	/^inline const XMLCh* XMLNotationDecl::getBaseURI() const$/;"	f	class:XMLNotationDecl
getBaseURI	include/xercesc/util/XMLResourceIdentifier.hpp	/^inline const XMLCh* XMLResourceIdentifier::getBaseURI() const$/;"	f	class:XMLResourceIdentifier
getBaseValidator	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^inline DatatypeValidator* DatatypeValidator::getBaseValidator() const {$/;"	f	class:DatatypeValidator
getBit	include/xercesc/validators/common/CMStateSet.hpp	/^    bool getBit(const XMLSize_t bitToGet) const$/;"	f	class:CMStateSet
getBitCountInRange	include/xercesc/validators/common/CMStateSet.hpp	/^    XMLSize_t getBitCountInRange(XMLSize_t start, XMLSize_t end) const$/;"	f	class:CMStateSet
getBlockDefault	include/xercesc/validators/schema/SchemaInfo.hpp	/^inline int SchemaInfo::getBlockDefault() const {$/;"	f	class:SchemaInfo
getBlockSet	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline int ComplexTypeInfo::getBlockSet() const {$/;"	f	class:ComplexTypeInfo
getBlockSet	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^inline int SchemaElementDecl::getBlockSet() const$/;"	f	class:SchemaElementDecl
getBlockSize	include/xercesc/util/TransService.hpp	/^inline XMLSize_t XMLTranscoder::getBlockSize() const$/;"	f	class:XMLTranscoder
getBounded	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^inline bool DatatypeValidator::getBounded() const$/;"	f	class:DatatypeValidator
getBufCount	include/xercesc/internal/XSerializeEngine.hpp	/^unsigned long XSerializeEngine::getBufCount() const$/;"	f	class:XSerializeEngine
getBufCur	include/xercesc/internal/XSerializeEngine.hpp	/^XMLSize_t XSerializeEngine::getBufCur() const$/;"	f	class:XSerializeEngine
getBufCurAccumulated	include/xercesc/internal/XSerializeEngine.hpp	/^XMLSize_t XSerializeEngine::getBufCurAccumulated() const$/;"	f	class:XSerializeEngine
getBufMgr	include/xercesc/framework/XMLValidator.hpp	/^inline XMLBufferMgr* XMLValidator::getBufMgr()$/;"	f	class:XMLValidator
getBufMgr	include/xercesc/framework/XMLValidator.hpp	/^inline const XMLBufferMgr* XMLValidator::getBufMgr() const$/;"	f	class:XMLValidator
getBufSize	include/xercesc/internal/XSerializeEngine.hpp	/^XMLSize_t XSerializeEngine::getBufSize() const$/;"	f	class:XSerializeEngine
getBuffer	include/xercesc/framework/XMLBufferMgr.hpp	/^    XMLBuffer& getBuffer()$/;"	f	class:XMLBufBid
getBuffer	include/xercesc/framework/XMLBufferMgr.hpp	/^    const XMLBuffer& getBuffer() const$/;"	f	class:XMLBufBid
getBufferCount	include/xercesc/framework/XMLBufferMgr.hpp	/^inline XMLSize_t XMLBufferMgr::getBufferCount() const$/;"	f	class:XMLBufferMgr
getBuiltInRegistry	include/xercesc/validators/datatype/DatatypeValidatorFactory.hpp	/^DatatypeValidatorFactory::getBuiltInRegistry() {$/;"	f	class:DatatypeValidatorFactory
getBuiltinDatatypeValidatorFactory	include/xercesc/validators/common/GrammarResolver.hpp	/^inline DatatypeValidatorFactory* GrammarResolver::getBuiltinDatatypeValidatorFactory()$/;"	f	class:GrammarResolver
getById	include/xercesc/dom/impl/DOMDeepNodeListPool.c	/^DOMDeepNodeListPool<TVal, THasher>::getById(const XMLSize_t elemId) const$/;"	f	class:THasher
getById	include/xercesc/dom/impl/DOMDeepNodeListPool.c	/^DOMDeepNodeListPool<TVal, THasher>::getById(const XMLSize_t elemId)$/;"	f	class:THasher
getById	include/xercesc/util/NameIdPool.c	/^getById(const XMLSize_t elemId) const$/;"	f	class:TElem
getById	include/xercesc/util/NameIdPool.c	/^getById(const XMLSize_t elemId)$/;"	f	class:TElem
getById	include/xercesc/util/RefHash3KeysIdPool.c	/^RefHash3KeysIdPool<TVal, THasher>::getById(const unsigned int elemId) const$/;"	f	class:THasher
getById	include/xercesc/util/RefHash3KeysIdPool.c	/^RefHash3KeysIdPool<TVal, THasher>::getById(const unsigned int elemId)$/;"	f	class:THasher
getByKey	include/xercesc/dom/impl/DOMDeepNodeListPool.c	/^DOMDeepNodeListPool<TVal, THasher>::getByKey(const void* const key1, const XMLCh* const key2, const XMLCh* const key3) const$/;"	f	class:THasher
getByKey	include/xercesc/dom/impl/DOMDeepNodeListPool.c	/^DOMDeepNodeListPool<TVal, THasher>::getByKey(const void* const key1, const XMLCh* const key2, const XMLCh* const key3)$/;"	f	class:THasher
getByKey	include/xercesc/util/NameIdPool.c	/^getByKey(const XMLCh* const key) const$/;"	f	class:TElem
getByKey	include/xercesc/util/NameIdPool.c	/^getByKey(const XMLCh* const key)$/;"	f	class:TElem
getByKey	include/xercesc/util/RefHash3KeysIdPool.c	/^RefHash3KeysIdPool<TVal, THasher>::getByKey(const void* const key1, const int key2, const int key3) const$/;"	f	class:THasher
getByKey	include/xercesc/util/RefHash3KeysIdPool.c	/^RefHash3KeysIdPool<TVal, THasher>::getByKey(const void* const key1, const int key2, const int key3)$/;"	f	class:THasher
getByteOffset	include/xercesc/dom/impl/DOMLocatorImpl.hpp	/^inline XMLFilePos DOMLocatorImpl::getByteOffset() const$/;"	f	class:DOMLocatorImpl
getByteStream	include/xercesc/dom/impl/DOMLSInputImpl.hpp	/^inline InputSource* DOMLSInputImpl::getByteStream() const$/;"	f	class:DOMLSInputImpl
getByteStream	include/xercesc/dom/impl/DOMLSOutputImpl.hpp	/^inline XMLFormatTarget* DOMLSOutputImpl::getByteStream() const$/;"	f	class:DOMLSOutputImpl
getCalculateSrcOfs	include/xercesc/internal/XMLScanner.hpp	/^inline bool XMLScanner::getCalculateSrcOfs() const$/;"	f	class:XMLScanner
getCanonicalRepresentation	include/xercesc/framework/psvi/PSVIItem.hpp	/^inline const XMLCh* PSVIItem::getCanonicalRepresentation() const$/;"	f	class:PSVIItem
getCapacity	include/xercesc/dom/impl/DOMStringPool.hpp	/^    XMLSize_t getCapacity() const$/;"	f	class:DOMBuffer
getCategories	include/xercesc/util/regx/RangeTokenMap.hpp	/^inline XMLStringPool* RangeTokenMap::getCategories() const {$/;"	f	class:RangeTokenMap
getCategoryId	include/xercesc/util/regx/RangeTokenMap.hpp	/^inline unsigned int RangeTokenElemMap::getCategoryId() const {$/;"	f	class:RangeTokenElemMap
getChar	include/xercesc/util/regx/CharToken.hpp	/^inline XMLInt32 CharToken::getChar() const {$/;"	f	class:CharToken
getChar	include/xercesc/util/regx/Token.hpp	/^inline XMLInt32 Token::getChar() const {$/;"	f	class:Token
getCharData	include/xercesc/util/regx/RegxParser.hpp	/^inline XMLInt32 RegxParser::getCharData() const {$/;"	f	class:RegxParser
getCheckElementConsistency	include/xercesc/validators/schema/XercesGroupInfo.hpp	/^inline bool XercesGroupInfo::getCheckElementConsistency() const {$/;"	f	class:XercesGroupInfo
getChild	include/xercesc/util/regx/ClosureToken.hpp	/^inline Token* ClosureToken::getChild(const XMLSize_t) const {$/;"	f	class:ClosureToken
getChild	include/xercesc/util/regx/ConcatToken.hpp	/^inline Token* ConcatToken::getChild(const XMLSize_t index) const {$/;"	f	class:ConcatToken
getChild	include/xercesc/util/regx/ParenToken.hpp	/^inline Token* ParenToken::getChild(const XMLSize_t) const {$/;"	f	class:ParenToken
getChild	include/xercesc/util/regx/Token.hpp	/^inline Token* Token::getChild(const XMLSize_t) const {$/;"	f	class:Token
getChild	include/xercesc/util/regx/UnionToken.hpp	/^inline Token* UnionToken::getChild(const XMLSize_t index) const {$/;"	f	class:UnionToken
getCode	include/xercesc/util/OutOfMemoryException.hpp	/^inline XMLExcepts::Codes OutOfMemoryException::getCode() const$/;"	f	class:OutOfMemoryException
getCode	include/xercesc/util/XMLException.hpp	/^inline XMLExcepts::Codes XMLException::getCode() const$/;"	f	class:XMLException
getColumnNo	include/xercesc/dom/impl/XSDElementNSImpl.hpp	/^    XMLFileLoc getColumnNo() const { return fColumnNo; }$/;"	f	class:XSDElementNSImpl
getColumnNumber	include/xercesc/dom/impl/DOMLocatorImpl.hpp	/^inline XMLFileLoc DOMLocatorImpl::getColumnNumber() const$/;"	f	class:DOMLocatorImpl
getColumnNumber	include/xercesc/internal/XMLReader.hpp	/^inline XMLFileLoc XMLReader::getColumnNumber() const$/;"	f	class:XMLReader
getColumnNumber	include/xercesc/validators/schema/XSDLocator.hpp	/^inline XMLFileLoc XSDLocator::getColumnNumber() const$/;"	f	class:XSDLocator
getCommentOrPISeen	include/xercesc/internal/ElemStack.hpp	/^inline bool ElemStack::getCommentOrPISeen() const$/;"	f	class:ElemStack
getCompleteWildCard	include/xercesc/validators/schema/XercesAttGroupInfo.hpp	/^XercesAttGroupInfo::getCompleteWildCard() const {$/;"	f	class:XercesAttGroupInfo
getComplexTypeInfo	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^inline ComplexTypeInfo* SchemaElementDecl::getComplexTypeInfo() const$/;"	f	class:SchemaElementDecl
getComplexTypeRegistry	include/xercesc/validators/schema/SchemaGrammar.hpp	/^SchemaGrammar::getComplexTypeRegistry() const {$/;"	f	class:SchemaGrammar
getCompositor	include/xercesc/framework/psvi/XSModelGroup.hpp	/^inline XSModelGroup::COMPOSITOR_TYPE XSModelGroup::getCompositor() const$/;"	f	class:XSModelGroup
getConstraintType	include/xercesc/framework/psvi/XSAttributeUse.hpp	/^inline XSConstants::VALUE_CONSTRAINT XSAttributeUse::getConstraintType() const$/;"	f	class:XSAttributeUse
getConstraintType	include/xercesc/framework/psvi/XSWildcard.hpp	/^inline XSWildcard::NAMESPACE_CONSTRAINT XSWildcard::getConstraintType() const$/;"	f	class:XSWildcard
getConstraintValue	include/xercesc/framework/psvi/XSAttributeUse.hpp	/^inline const XMLCh *XSAttributeUse::getConstraintValue()$/;"	f	class:XSAttributeUse
getContent	include/xercesc/validators/datatype/ListDatatypeValidator.hpp	/^inline const XMLCh* ListDatatypeValidator::getContent() const$/;"	f	class:ListDatatypeValidator
getContentHandler	include/xercesc/parsers/SAX2XMLFilterImpl.hpp	/^inline ContentHandler* SAX2XMLFilterImpl::getContentHandler() const$/;"	f	class:SAX2XMLFilterImpl
getContentHandler	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^inline ContentHandler* SAX2XMLReaderImpl::getContentHandler() const$/;"	f	class:SAX2XMLReaderImpl
getContentLeafNameTypeVector	include/xercesc/validators/common/AllContentModel.hpp	/^inline ContentLeafNameTypeVector* AllContentModel::getContentLeafNameTypeVector() const$/;"	f	class:AllContentModel
getContentLeafNameTypeVector	include/xercesc/validators/common/MixedContentModel.hpp	/^inline ContentLeafNameTypeVector* MixedContentModel::getContentLeafNameTypeVector() const$/;"	f	class:MixedContentModel
getContentModel	include/xercesc/validators/DTD/DTDElementDecl.hpp	/^inline XMLContentModel* DTDElementDecl::getContentModel()$/;"	f	class:DTDElementDecl
getContentModel	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline XMLContentModel* ComplexTypeInfo::getContentModel(const bool checkUPA)$/;"	f	class:ComplexTypeInfo
getContentModel	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^inline XMLContentModel* SchemaElementDecl::getContentModel()$/;"	f	class:SchemaElementDecl
getContentSpec	include/xercesc/validators/DTD/DTDElementDecl.hpp	/^inline ContentSpecNode* DTDElementDecl::getContentSpec()$/;"	f	class:DTDElementDecl
getContentSpec	include/xercesc/validators/DTD/DTDElementDecl.hpp	/^inline const ContentSpecNode* DTDElementDecl::getContentSpec() const$/;"	f	class:DTDElementDecl
getContentSpec	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline ContentSpecNode* ComplexTypeInfo::getContentSpec() const {$/;"	f	class:ComplexTypeInfo
getContentSpec	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^inline ContentSpecNode* SchemaElementDecl::getContentSpec()$/;"	f	class:SchemaElementDecl
getContentSpec	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^inline const ContentSpecNode* SchemaElementDecl::getContentSpec() const$/;"	f	class:SchemaElementDecl
getContentSpec	include/xercesc/validators/schema/XercesGroupInfo.hpp	/^inline ContentSpecNode* XercesGroupInfo::getContentSpec() const {$/;"	f	class:XercesGroupInfo
getContentType	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline int ComplexTypeInfo::getContentType() const {$/;"	f	class:ComplexTypeInfo
getCount	include/xercesc/util/RefHashTableOf.c	/^inline XMLSize_t RefHashTableOf<TVal, THasher>::getCount() const$/;"	f	class:THasher
getCreateCommentNodes	include/xercesc/parsers/AbstractDOMParser.hpp	/^inline bool AbstractDOMParser::getCreateCommentNodes() const$/;"	f	class:AbstractDOMParser
getCreateEntityReferenceNodes	include/xercesc/parsers/AbstractDOMParser.hpp	/^inline bool AbstractDOMParser::getCreateEntityReferenceNodes() const$/;"	f	class:AbstractDOMParser
getCreateReason	include/xercesc/framework/XMLAttDef.hpp	/^inline XMLAttDef::CreateReasons XMLAttDef::getCreateReason() const$/;"	f	class:XMLAttDef
getCreateReason	include/xercesc/framework/XMLElementDecl.hpp	/^inline XMLElementDecl::CreateReasons XMLElementDecl::getCreateReason() const$/;"	f	class:XMLElementDecl
getCreateSchemaInfo	include/xercesc/parsers/AbstractDOMParser.hpp	/^inline bool AbstractDOMParser::getCreateSchemaInfo() const$/;"	f	class:AbstractDOMParser
getCurrentDatatypeValidator	include/xercesc/validators/schema/SchemaValidator.hpp	/^inline DatatypeValidator * SchemaValidator::getCurrentDatatypeValidator() const$/;"	f	class:SchemaValidator
getCurrentGrammar	include/xercesc/internal/ElemStack.hpp	/^inline Grammar* ElemStack::getCurrentGrammar()$/;"	f	class:ElemStack
getCurrentGrammarType	include/xercesc/internal/DGXMLScanner.hpp	/^inline Grammar::GrammarType DGXMLScanner::getCurrentGrammarType() const$/;"	f	class:DGXMLScanner
getCurrentGrammarType	include/xercesc/internal/IGXMLScanner.hpp	/^inline Grammar::GrammarType IGXMLScanner::getCurrentGrammarType() const$/;"	f	class:IGXMLScanner
getCurrentGrammarType	include/xercesc/internal/SGXMLScanner.hpp	/^inline Grammar::GrammarType SGXMLScanner::getCurrentGrammarType() const$/;"	f	class:SGXMLScanner
getCurrentGrammarType	include/xercesc/internal/XMLScanner.hpp	/^inline Grammar::GrammarType XMLScanner::getCurrentGrammarType() const$/;"	f	class:XMLScanner
getCurrentNode	include/xercesc/parsers/AbstractDOMParser.hpp	/^inline DOMNode* AbstractDOMParser::getCurrentNode()$/;"	f	class:AbstractDOMParser
getCurrentReader	include/xercesc/internal/ReaderMgr.hpp	/^inline XMLReader* ReaderMgr::getCurrentReader()$/;"	f	class:ReaderMgr
getCurrentReader	include/xercesc/internal/ReaderMgr.hpp	/^inline const XMLReader* ReaderMgr::getCurrentReader() const$/;"	f	class:ReaderMgr
getCurrentReaderNum	include/xercesc/internal/ReaderMgr.hpp	/^inline XMLSize_t ReaderMgr::getCurrentReaderNum() const$/;"	f	class:ReaderMgr
getCurrentSchemaElemName	include/xercesc/internal/ElemStack.hpp	/^inline XMLCh *ElemStack::getCurrentSchemaElemName()$/;"	f	class:ElemStack
getCurrentSchemaURL	include/xercesc/validators/schema/SchemaInfo.hpp	/^inline XMLCh* SchemaInfo::getCurrentSchemaURL() const {$/;"	f	class:SchemaInfo
getCurrentScope	include/xercesc/internal/ElemStack.hpp	/^inline int ElemStack::getCurrentScope()$/;"	f	class:ElemStack
getCurrentTypeInfo	include/xercesc/validators/schema/SchemaValidator.hpp	/^inline ComplexTypeInfo* SchemaValidator::getCurrentTypeInfo() const {$/;"	f	class:SchemaValidator
getCurrentURI	include/xercesc/internal/ElemStack.hpp	/^inline unsigned int ElemStack::getCurrentURI()$/;"	f	class:ElemStack
getCurrentURI	include/xercesc/internal/ElemStack.hpp	/^inline unsigned int WFElemStack::getCurrentURI()$/;"	f	class:WFElemStack
getDTDHandler	include/xercesc/parsers/SAX2XMLFilterImpl.hpp	/^inline DTDHandler* SAX2XMLFilterImpl::getDTDHandler() const$/;"	f	class:SAX2XMLFilterImpl
getDTDHandler	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^inline DTDHandler* SAX2XMLReaderImpl::getDTDHandler() const$/;"	f	class:SAX2XMLReaderImpl
getDatatypeRegistry	include/xercesc/validators/schema/SchemaGrammar.hpp	/^inline DatatypeValidatorFactory* SchemaGrammar::getDatatypeRegistry() {$/;"	f	class:SchemaGrammar
getDatatypeValidator	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^XSSimpleTypeDefinition::getDatatypeValidator() const$/;"	f	class:XSSimpleTypeDefinition
getDatatypeValidator	include/xercesc/validators/datatype/DatatypeValidatorFactory.hpp	/^DatatypeValidatorFactory::getDatatypeValidator(const XMLCh* const dvType) const$/;"	f	class:DatatypeValidatorFactory
getDatatypeValidator	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline DatatypeValidator* ComplexTypeInfo::getDatatypeValidator() const {$/;"	f	class:ComplexTypeInfo
getDatatypeValidator	include/xercesc/validators/schema/SchemaAttDef.hpp	/^inline DatatypeValidator* SchemaAttDef::getDatatypeValidator() const$/;"	f	class:SchemaAttDef
getDatatypeValidator	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^inline DatatypeValidator* SchemaElementDecl::getDatatypeValidator() const$/;"	f	class:SchemaElementDecl
getDatatypeValidatorAt	include/xercesc/validators/schema/identity/FieldValueMap.hpp	/^FieldValueMap::getDatatypeValidatorAt(const XMLSize_t index) const {$/;"	f	class:FieldValueMap
getDatatypeValidatorFor	include/xercesc/validators/schema/identity/FieldValueMap.hpp	/^FieldValueMap::getDatatypeValidatorFor(const IC_Field* const key) const {$/;"	f	class:FieldValueMap
getDeclarationHandler	include/xercesc/parsers/SAX2XMLFilterImpl.hpp	/^inline DeclHandler* SAX2XMLFilterImpl::getDeclarationHandler() const$/;"	f	class:SAX2XMLFilterImpl
getDeclarationHandler	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^inline DeclHandler* SAX2XMLReaderImpl::getDeclarationHandler() const$/;"	f	class:SAX2XMLReaderImpl
getDeclared	include/xercesc/framework/XMLRefInfo.hpp	/^inline bool XMLRefInfo::getDeclared() const$/;"	f	class:XMLRefInfo
getDeclaredInIntSubset	include/xercesc/validators/DTD/DTDEntityDecl.hpp	/^inline bool DTDEntityDecl::getDeclaredInIntSubset() const$/;"	f	class:DTDEntityDecl
getDefaultType	include/xercesc/framework/XMLAttDef.hpp	/^inline XMLAttDef::DefAttTypes XMLAttDef::getDefaultType() const$/;"	f	class:XMLAttDef
getDefaultValue	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^inline XMLCh* SchemaElementDecl::getDefaultValue() const$/;"	f	class:SchemaElementDecl
getDefinedFacets	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^inline int XSSimpleTypeDefinition::getDefinedFacets() const$/;"	f	class:XSSimpleTypeDefinition
getDerivedBy	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline int ComplexTypeInfo::getDerivedBy() const {$/;"	f	class:ComplexTypeInfo
getDisableDefaultEntityResolution	include/xercesc/internal/XMLScanner.hpp	/^inline bool XMLScanner::getDisableDefaultEntityResolution() const$/;"	f	class:XMLScanner
getDisallowedSubstitutions	include/xercesc/framework/psvi/XSElementDeclaration.hpp	/^inline short XSElementDeclaration::getDisallowedSubstitutions() const$/;"	f	class:XSElementDeclaration
getDoNamespaces	include/xercesc/internal/XMLScanner.hpp	/^inline bool XMLScanner::getDoNamespaces() const$/;"	f	class:XMLScanner
getDoSchema	include/xercesc/internal/XMLScanner.hpp	/^inline bool XMLScanner::getDoSchema() const$/;"	f	class:XMLScanner
getDoXInclude	include/xercesc/parsers/AbstractDOMParser.hpp	/^inline bool AbstractDOMParser::getDoXInclude() const$/;"	f	class:AbstractDOMParser
getDocHandler	include/xercesc/internal/XMLScanner.hpp	/^inline XMLDocumentHandler* XMLScanner::getDocHandler()$/;"	f	class:XMLScanner
getDocHandler	include/xercesc/internal/XMLScanner.hpp	/^inline const XMLDocumentHandler* XMLScanner::getDocHandler() const$/;"	f	class:XMLScanner
getDocTypeHandler	include/xercesc/internal/XMLScanner.hpp	/^inline DocTypeHandler* XMLScanner::getDocTypeHandler()$/;"	f	class:XMLScanner
getDocTypeHandler	include/xercesc/internal/XMLScanner.hpp	/^inline const DocTypeHandler* XMLScanner::getDocTypeHandler() const$/;"	f	class:XMLScanner
getDocTypeHandler	include/xercesc/validators/DTD/DTDScanner.hpp	/^inline DocTypeHandler* DTDScanner::getDocTypeHandler()$/;"	f	class:DTDScanner
getDocTypeHandler	include/xercesc/validators/DTD/DTDScanner.hpp	/^inline const DocTypeHandler* DTDScanner::getDocTypeHandler() const$/;"	f	class:DTDScanner
getDocumentHandler	include/xercesc/parsers/SAXParser.hpp	/^inline DocumentHandler* SAXParser::getDocumentHandler()$/;"	f	class:SAXParser
getDocumentHandler	include/xercesc/parsers/SAXParser.hpp	/^inline const DocumentHandler* SAXParser::getDocumentHandler() const$/;"	f	class:SAXParser
getDomConfig	include/xercesc/dom/impl/DOMLSSerializerImpl.hpp	/^inline DOMConfiguration* DOMLSSerializerImpl::getDomConfig()$/;"	f	class:DOMLSSerializerImpl
getDomConfig	include/xercesc/parsers/DOMLSParserImpl.hpp	/^inline DOMConfiguration* DOMLSParserImpl::getDomConfig()$/;"	f	class:DOMLSParserImpl
getElemAttrDefaultQualified	include/xercesc/validators/schema/SchemaInfo.hpp	/^inline unsigned short SchemaInfo::getElemAttrDefaultQualified() const {$/;"	f	class:SchemaInfo
getElemDecl	include/xercesc/validators/DTD/DTDGrammar.hpp	/^inline XMLElementDecl* DTDGrammar::getElemDecl (const   unsigned int$/;"	f	class:DTDGrammar
getElemDecl	include/xercesc/validators/DTD/DTDGrammar.hpp	/^inline XMLElementDecl* DTDGrammar::getElemDecl(const unsigned int elemId)$/;"	f	class:DTDGrammar
getElemDecl	include/xercesc/validators/DTD/DTDGrammar.hpp	/^inline const XMLElementDecl* DTDGrammar::getElemDecl( const   unsigned int$/;"	f	class:DTDGrammar
getElemDecl	include/xercesc/validators/DTD/DTDGrammar.hpp	/^inline const XMLElementDecl* DTDGrammar::getElemDecl(const unsigned int elemId) const$/;"	f	class:DTDGrammar
getElemDecl	include/xercesc/validators/schema/SchemaGrammar.hpp	/^inline XMLElementDecl* SchemaGrammar::getElemDecl (const   unsigned int  uriId$/;"	f	class:SchemaGrammar
getElemDecl	include/xercesc/validators/schema/SchemaGrammar.hpp	/^inline XMLElementDecl* SchemaGrammar::getElemDecl(const unsigned int elemId)$/;"	f	class:SchemaGrammar
getElemDecl	include/xercesc/validators/schema/SchemaGrammar.hpp	/^inline const XMLElementDecl* SchemaGrammar::getElemDecl( const   unsigned int  uriId$/;"	f	class:SchemaGrammar
getElemDecl	include/xercesc/validators/schema/SchemaGrammar.hpp	/^inline const XMLElementDecl* SchemaGrammar::getElemDecl(const unsigned int elemId) const$/;"	f	class:SchemaGrammar
getElemEnumerator	include/xercesc/validators/DTD/DTDGrammar.hpp	/^DTDGrammar::getElemEnumerator() const$/;"	f	class:DTDGrammar
getElemEnumerator	include/xercesc/validators/schema/SchemaGrammar.hpp	/^SchemaGrammar::getElemEnumerator() const$/;"	f	class:SchemaGrammar
getElemId	include/xercesc/validators/DTD/DTDAttDef.hpp	/^inline XMLSize_t DTDAttDef::getElemId() const$/;"	f	class:DTDAttDef
getElemId	include/xercesc/validators/DTD/DTDGrammar.hpp	/^inline XMLSize_t DTDGrammar::getElemId (const   unsigned int$/;"	f	class:DTDGrammar
getElemId	include/xercesc/validators/schema/SchemaAttDef.hpp	/^inline XMLSize_t SchemaAttDef::getElemId() const$/;"	f	class:SchemaAttDef
getElemId	include/xercesc/validators/schema/SchemaGrammar.hpp	/^inline XMLSize_t SchemaGrammar::getElemId (const   unsigned int  uriId$/;"	f	class:SchemaGrammar
getElement	include/xercesc/validators/common/CMLeaf.hpp	/^inline QName* CMLeaf::getElement()$/;"	f	class:CMLeaf
getElement	include/xercesc/validators/common/CMLeaf.hpp	/^inline const QName* CMLeaf::getElement() const$/;"	f	class:CMLeaf
getElement	include/xercesc/validators/common/ContentSpecNode.hpp	/^inline QName* ContentSpecNode::getElement()$/;"	f	class:ContentSpecNode
getElement	include/xercesc/validators/common/ContentSpecNode.hpp	/^inline const QName* ContentSpecNode::getElement() const$/;"	f	class:ContentSpecNode
getElementDecl	include/xercesc/validators/common/ContentSpecNode.hpp	/^inline XMLElementDecl* ContentSpecNode::getElementDecl()$/;"	f	class:ContentSpecNode
getElementDecl	include/xercesc/validators/common/ContentSpecNode.hpp	/^inline const XMLElementDecl* ContentSpecNode::getElementDecl() const$/;"	f	class:ContentSpecNode
getElementDeclaration	include/xercesc/framework/psvi/PSVIElement.hpp	/^inline XSElementDeclaration *PSVIElement::getElementDeclaration() $/;"	f	class:PSVIElement
getElementId	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline unsigned int ComplexTypeInfo::getElementId() const {$/;"	f	class:ComplexTypeInfo
getElementName	include/xercesc/framework/XMLElementDecl.hpp	/^inline QName* XMLElementDecl::getElementName()$/;"	f	class:XMLElementDecl
getElementName	include/xercesc/framework/XMLElementDecl.hpp	/^inline const QName* XMLElementDecl::getElementName() const$/;"	f	class:XMLElementDecl
getElementName	include/xercesc/validators/schema/identity/IdentityConstraint.hpp	/^inline XMLCh* IdentityConstraint::getElementName() const {$/;"	f	class:IdentityConstraint
getEmptyNamespaceId	include/xercesc/internal/ElemStack.hpp	/^inline unsigned int ElemStack::getEmptyNamespaceId() {$/;"	f	class:ElemStack
getEmptyNamespaceId	include/xercesc/internal/XMLScanner.hpp	/^inline unsigned int XMLScanner::getEmptyNamespaceId() const$/;"	f	class:XMLScanner
getEmptyNamespaceId	include/xercesc/validators/schema/NamespaceScope.hpp	/^inline unsigned int NamespaceScope::getEmptyNamespaceId() const$/;"	f	class:NamespaceScope
getEnclosingCTDefinition	include/xercesc/framework/psvi/XSAttributeDeclaration.hpp	/^inline XSComplexTypeDefinition *XSAttributeDeclaration::getEnclosingCTDefinition()$/;"	f	class:XSAttributeDeclaration
getEnclosingCTDefinition	include/xercesc/framework/psvi/XSElementDeclaration.hpp	/^inline XSComplexTypeDefinition *XSElementDeclaration::getEnclosingCTDefinition() const$/;"	f	class:XSElementDeclaration
getEnclosingScope	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^inline unsigned int SchemaElementDecl::getEnclosingScope() const$/;"	f	class:SchemaElementDecl
getEncoding	include/xercesc/dom/impl/DOMLSInputImpl.hpp	/^inline const XMLCh* DOMLSInputImpl::getEncoding() const$/;"	f	class:DOMLSInputImpl
getEncoding	include/xercesc/dom/impl/DOMLSOutputImpl.hpp	/^inline const XMLCh* DOMLSOutputImpl::getEncoding() const$/;"	f	class:DOMLSOutputImpl
getEncoding	include/xercesc/sax/InputSource.hpp	/^inline const XMLCh* InputSource::getEncoding() const$/;"	f	class:InputSource
getEncodingName	include/xercesc/framework/XMLFormatter.hpp	/^inline const XMLCh* XMLFormatter::getEncodingName() const$/;"	f	class:XMLFormatter
getEncodingName	include/xercesc/util/TransService.hpp	/^inline const XMLCh* XMLTranscoder::getEncodingName() const$/;"	f	class:XMLTranscoder
getEncodingStr	include/xercesc/internal/XMLReader.hpp	/^inline const XMLCh* XMLReader::getEncodingStr() const$/;"	f	class:XMLReader
getEndPos	include/xercesc/util/regx/Match.hpp	/^inline int Match::getEndPos(int index) const {$/;"	f	class:Match
getEntity	include/xercesc/internal/EndOfEntityException.hpp	/^inline XMLEntityDecl& EndOfEntityException::getEntity()$/;"	f	class:EndOfEntityException
getEntity	include/xercesc/internal/EndOfEntityException.hpp	/^inline const XMLEntityDecl& EndOfEntityException::getEntity() const$/;"	f	class:EndOfEntityException
getEntityDecl	include/xercesc/validators/DTD/DTDGrammar.hpp	/^DTDGrammar::getEntityDecl(const XMLCh* const entName) const$/;"	f	class:DTDGrammar
getEntityDecl	include/xercesc/validators/DTD/DTDGrammar.hpp	/^inline DTDEntityDecl* DTDGrammar::getEntityDecl(const XMLCh* const entName)$/;"	f	class:DTDGrammar
getEntityDeclPool	include/xercesc/validators/DTD/DTDGrammar.hpp	/^inline NameIdPool<DTDEntityDecl>* DTDGrammar::getEntityDeclPool()$/;"	f	class:DTDGrammar
getEntityDeclPool	include/xercesc/validators/DTD/DTDGrammar.hpp	/^inline const NameIdPool<DTDEntityDecl>* DTDGrammar::getEntityDeclPool() const$/;"	f	class:DTDGrammar
getEntityEnumerator	include/xercesc/validators/DTD/DTDGrammar.hpp	/^DTDGrammar::getEntityEnumerator() const$/;"	f	class:DTDGrammar
getEntityExpansionLimit	include/xercesc/util/SecurityManager.hpp	/^    virtual XMLSize_t getEntityExpansionLimit() const$/;"	f	class:SecurityManager
getEntityHandler	include/xercesc/internal/XMLScanner.hpp	/^inline XMLEntityHandler* XMLScanner::getEntityHandler()$/;"	f	class:XMLScanner
getEntityHandler	include/xercesc/internal/XMLScanner.hpp	/^inline const XMLEntityHandler* XMLScanner::getEntityHandler() const$/;"	f	class:XMLScanner
getEntityResolver	include/xercesc/parsers/SAX2XMLFilterImpl.hpp	/^inline EntityResolver* SAX2XMLFilterImpl::getEntityResolver() const$/;"	f	class:SAX2XMLFilterImpl
getEntityResolver	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^inline EntityResolver* SAX2XMLReaderImpl::getEntityResolver() const$/;"	f	class:SAX2XMLReaderImpl
getEntityResolver	include/xercesc/parsers/SAXParser.hpp	/^inline EntityResolver* SAXParser::getEntityResolver()$/;"	f	class:SAXParser
getEntityResolver	include/xercesc/parsers/SAXParser.hpp	/^inline const EntityResolver* SAXParser::getEntityResolver() const$/;"	f	class:SAXParser
getEntityResolver	include/xercesc/parsers/XercesDOMParser.hpp	/^inline EntityResolver* XercesDOMParser::getEntityResolver()$/;"	f	class:XercesDOMParser
getEntityResolver	include/xercesc/parsers/XercesDOMParser.hpp	/^inline const EntityResolver* XercesDOMParser::getEntityResolver() const$/;"	f	class:XercesDOMParser
getEnumeration	include/xercesc/framework/XMLAttDef.hpp	/^inline const XMLCh* XMLAttDef::getEnumeration() const$/;"	f	class:XMLAttDef
getEnumeration	include/xercesc/validators/datatype/AbstractNumericFacetValidator.hpp	/^inline RefVectorOf<XMLNumber>* AbstractNumericFacetValidator::getEnumeration() const$/;"	f	class:AbstractNumericFacetValidator
getEnumeration	include/xercesc/validators/datatype/AbstractStringValidator.hpp	/^inline RefArrayVectorOf<XMLCh>* AbstractStringValidator:: getEnumeration() const$/;"	f	class:AbstractStringValidator
getEnumeration	include/xercesc/validators/datatype/UnionDatatypeValidator.hpp	/^inline RefArrayVectorOf<XMLCh>* UnionDatatypeValidator:: getEnumeration() const$/;"	f	class:UnionDatatypeValidator
getErrorChecking	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^    inline bool getErrorChecking() const {$/;"	f	class:DOMDocumentImpl
getErrorCount	include/xercesc/internal/XMLScanner.hpp	/^inline int XMLScanner::getErrorCount()$/;"	f	class:XMLScanner
getErrorHandler	include/xercesc/internal/XMLScanner.hpp	/^inline ErrorHandler* XMLScanner::getErrorHandler()$/;"	f	class:XMLScanner
getErrorHandler	include/xercesc/internal/XMLScanner.hpp	/^inline const ErrorHandler* XMLScanner::getErrorHandler() const$/;"	f	class:XMLScanner
getErrorHandler	include/xercesc/parsers/SAX2XMLFilterImpl.hpp	/^inline ErrorHandler* SAX2XMLFilterImpl::getErrorHandler() const$/;"	f	class:SAX2XMLFilterImpl
getErrorHandler	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^inline ErrorHandler* SAX2XMLReaderImpl::getErrorHandler() const$/;"	f	class:SAX2XMLReaderImpl
getErrorHandler	include/xercesc/parsers/SAXParser.hpp	/^inline ErrorHandler* SAXParser::getErrorHandler()$/;"	f	class:SAXParser
getErrorHandler	include/xercesc/parsers/SAXParser.hpp	/^inline const ErrorHandler* SAXParser::getErrorHandler() const$/;"	f	class:SAXParser
getErrorHandler	include/xercesc/parsers/XercesDOMParser.hpp	/^inline ErrorHandler* XercesDOMParser::getErrorHandler()$/;"	f	class:XercesDOMParser
getErrorHandler	include/xercesc/parsers/XercesDOMParser.hpp	/^inline const ErrorHandler* XercesDOMParser::getErrorHandler() const$/;"	f	class:XercesDOMParser
getErrorOccurred	include/xercesc/validators/schema/SchemaValidator.hpp	/^inline bool SchemaValidator::getErrorOccurred() const$/;"	f	class:SchemaValidator
getErrorReporter	include/xercesc/internal/XMLScanner.hpp	/^inline XMLErrorReporter* XMLScanner::getErrorReporter()$/;"	f	class:XMLScanner
getErrorReporter	include/xercesc/internal/XMLScanner.hpp	/^inline const XMLErrorReporter* XMLScanner::getErrorReporter() const$/;"	f	class:XMLScanner
getErrorType	include/xercesc/util/XMLException.hpp	/^inline XMLErrorReporter::ErrTypes XMLException::getErrorType() const$/;"	f	class:XMLException
getEscapeFlags	include/xercesc/framework/XMLFormatter.hpp	/^inline XMLFormatter::EscapeFlags XMLFormatter::getEscapeFlags() const$/;"	f	class:XMLFormatter
getExitOnFirstFatal	include/xercesc/internal/XMLScanner.hpp	/^inline bool XMLScanner::getExitOnFirstFatal() const$/;"	f	class:XMLScanner
getExitOnFirstFatal	include/xercesc/validators/schema/XSDErrorReporter.hpp	/^inline bool XSDErrorReporter::getExitOnFirstFatal() const$/;"	f	class:XSDErrorReporter
getExitOnFirstFatalError	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^inline bool SAX2XMLReaderImpl::getExitOnFirstFatalError() const$/;"	f	class:SAX2XMLReaderImpl
getExpression	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^inline XMLCh* XercesXPath::getExpression() {$/;"	f	class:XercesXPath
getExternalNoNamespaceSchemaLocation	include/xercesc/internal/XMLScanner.hpp	/^inline XMLCh* XMLScanner::getExternalNoNamespaceSchemaLocation() const$/;"	f	class:XMLScanner
getExternalSchemaLocation	include/xercesc/internal/XMLScanner.hpp	/^inline XMLCh* XMLScanner::getExternalSchemaLocation() const$/;"	f	class:XMLScanner
getFacetId	include/xercesc/validators/schema/GeneralAttributeCheck.hpp	/^GeneralAttributeCheck::getFacetId(const XMLCh* const facetName, MemoryManager* const manager) {$/;"	f	class:GeneralAttributeCheck
getFacetKind	include/xercesc/framework/psvi/XSFacet.hpp	/^inline XSSimpleTypeDefinition::FACET XSFacet::getFacetKind() const$/;"	f	class:XSFacet
getFacetKind	include/xercesc/framework/psvi/XSMultiValueFacet.hpp	/^inline XSSimpleTypeDefinition::FACET XSMultiValueFacet::getFacetKind() const$/;"	f	class:XSMultiValueFacet
getFacets	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^inline XSFacetList* XSSimpleTypeDefinition::getFacets()$/;"	f	class:XSSimpleTypeDefinition
getFacets	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^inline RefHashTableOf<KVStringPair>* DatatypeValidator::getFacets() const {$/;"	f	class:DatatypeValidator
getFacetsDefined	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^inline int DatatypeValidator::getFacetsDefined() const$/;"	f	class:DatatypeValidator
getFeature	include/xercesc/dom/impl/DOMLSSerializerImpl.hpp	/^inline bool DOMLSSerializerImpl::getFeature(const int featureId) const$/;"	f	class:DOMLSSerializerImpl
getField	include/xercesc/validators/schema/identity/IC_Field.hpp	/^    IC_Field*   getField() const { return fField; }$/;"	f	class:FieldMatcher
getFieldAt	include/xercesc/validators/schema/identity/IdentityConstraint.hpp	/^inline IC_Field* IdentityConstraint::getFieldAt(const XMLSize_t index) {$/;"	f	class:IdentityConstraint
getFieldAt	include/xercesc/validators/schema/identity/IdentityConstraint.hpp	/^inline const IC_Field* IdentityConstraint::getFieldAt(const XMLSize_t index) const {$/;"	f	class:IdentityConstraint
getFieldCount	include/xercesc/validators/schema/identity/IdentityConstraint.hpp	/^inline XMLSize_t IdentityConstraint::getFieldCount() const {$/;"	f	class:IdentityConstraint
getFieldStrs	include/xercesc/framework/psvi/XSIDCDefinition.hpp	/^inline StringList* XSIDCDefinition::getFieldStrs()$/;"	f	class:XSIDCDefinition
getFilter	include/xercesc/parsers/DOMLSParserImpl.hpp	/^inline const DOMLSParserFilter* DOMLSParserImpl::getFilter() const$/;"	f	class:DOMLSParserImpl
getFinal	include/xercesc/framework/psvi/XSTypeDefinition.hpp	/^inline short XSTypeDefinition::getFinal() const$/;"	f	class:XSTypeDefinition
getFinalDefault	include/xercesc/validators/schema/SchemaInfo.hpp	/^inline int SchemaInfo::getFinalDefault() const {$/;"	f	class:SchemaInfo
getFinalSet	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^inline int DatatypeValidator::getFinalSet() const {$/;"	f	class:DatatypeValidator
getFinalSet	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline int ComplexTypeInfo::getFinalSet() const {$/;"	f	class:ComplexTypeInfo
getFinalSet	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^inline int SchemaElementDecl::getFinalSet() const$/;"	f	class:SchemaElementDecl
getFinite	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^inline bool DatatypeValidator::getFinite() const$/;"	f	class:DatatypeValidator
getFirst	include/xercesc/validators/common/ContentSpecNode.hpp	/^inline ContentSpecNode* ContentSpecNode::getFirst()$/;"	f	class:ContentSpecNode
getFirst	include/xercesc/validators/common/ContentSpecNode.hpp	/^inline const ContentSpecNode* ContentSpecNode::getFirst() const$/;"	f	class:ContentSpecNode
getFirstPos	include/xercesc/validators/common/CMNode.hpp	/^inline const CMStateSet& CMNode::getFirstPos()$/;"	f	class:CMNode
getFixed	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^inline int DatatypeValidator::getFixed() const$/;"	f	class:DatatypeValidator
getFixedFacets	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^inline int XSSimpleTypeDefinition::getFixedFacets() const$/;"	f	class:XSSimpleTypeDefinition
getFormattedString	include/xercesc/util/XMLBigDecimal.hpp	/^inline const XMLCh*  XMLBigDecimal::getFormattedString() const$/;"	f	class:XMLBigDecimal
getFractionDigits	include/xercesc/validators/datatype/DecimalDatatypeValidator.hpp	/^inline unsigned int DecimalDatatypeValidator::getFractionDigits() const$/;"	f	class:DecimalDatatypeValidator
getFragment	include/xercesc/util/XMLURL.hpp	/^inline const XMLCh* XMLURL::getFragment() const$/;"	f	class:XMLURL
getFragment	include/xercesc/util/XMLUri.hpp	/^inline const XMLCh* XMLUri::getFragment() const$/;"	f	class:XMLUri
getFullName	include/xercesc/framework/XMLElementDecl.hpp	/^inline const XMLCh* XMLElementDecl::getFullName() const$/;"	f	class:XMLElementDecl
getFullName	include/xercesc/validators/DTD/DTDAttDef.hpp	/^inline const XMLCh* DTDAttDef::getFullName() const$/;"	f	class:DTDAttDef
getGenerateSyntheticAnnotations	include/xercesc/internal/XMLScanner.hpp	/^inline bool XMLScanner::getGenerateSyntheticAnnotations() const$/;"	f	class:XMLScanner
getGlobalValueStoreFor	include/xercesc/validators/schema/identity/ValueStoreCache.hpp	/^ValueStoreCache::getGlobalValueStoreFor(const IdentityConstraint* const ic) {$/;"	f	class:ValueStoreCache
getGrammar	include/xercesc/validators/DTD/DTDValidator.hpp	/^inline Grammar* DTDValidator::getGrammar() const {$/;"	f	class:DTDValidator
getGrammar	include/xercesc/validators/schema/SchemaValidator.hpp	/^inline Grammar* SchemaValidator::getGrammar() const {$/;"	f	class:SchemaValidator
getGrammarDescription	include/xercesc/validators/schema/SchemaGrammar.hpp	/^inline XMLGrammarDescription* SchemaGrammar::getGrammarDescription() const$/;"	f	class:SchemaGrammar
getGrammarPool	include/xercesc/validators/common/GrammarResolver.hpp	/^inline XMLGrammarPool* GrammarResolver::getGrammarPool() const$/;"	f	class:GrammarResolver
getGrammarPoolMemoryManager	include/xercesc/validators/common/GrammarResolver.hpp	/^inline MemoryManager* GrammarResolver::getGrammarPoolMemoryManager() const$/;"	f	class:GrammarResolver
getGrammarResolver	include/xercesc/parsers/AbstractDOMParser.hpp	/^inline GrammarResolver* AbstractDOMParser::getGrammarResolver() const$/;"	f	class:AbstractDOMParser
getGrammarResolver	include/xercesc/parsers/SAXParser.hpp	/^inline GrammarResolver* SAXParser::getGrammarResolver() const$/;"	f	class:SAXParser
getGrammarType	include/xercesc/framework/XMLDTDDescription.hpp	/^    virtual Grammar::GrammarType   getGrammarType() const$/;"	f	class:XMLDTDDescription
getGrammarType	include/xercesc/framework/XMLSchemaDescription.hpp	/^    virtual Grammar::GrammarType   getGrammarType() const$/;"	f	class:XMLSchemaDescription
getGrammarType	include/xercesc/validators/DTD/DTDGrammar.hpp	/^inline Grammar::GrammarType DTDGrammar::getGrammarType() const {$/;"	f	class:DTDGrammar
getGrammarType	include/xercesc/validators/schema/SchemaGrammar.hpp	/^inline Grammar::GrammarType SchemaGrammar::getGrammarType() const {$/;"	f	class:SchemaGrammar
getGrammarsToAddToXSModel	include/xercesc/validators/common/GrammarResolver.hpp	/^inline ValueVectorOf<SchemaGrammar*>* GrammarResolver::getGrammarsToAddToXSModel()$/;"	f	class:GrammarResolver
getGroup	include/xercesc/validators/datatype/XMLCanRepGroup.hpp	/^inline XMLCanRepGroup::CanRepGroup XMLCanRepGroup::getGroup() const$/;"	f	class:XMLCanRepGroup
getGroupInfoRegistry	include/xercesc/validators/schema/SchemaGrammar.hpp	/^SchemaGrammar::getGroupInfoRegistry() const {$/;"	f	class:SchemaGrammar
getHandleMultipleImports	include/xercesc/internal/XMLScanner.hpp	/^inline bool XMLScanner::getHandleMultipleImports() const$/;"	f	class:XMLScanner
getHasNoDTD	include/xercesc/internal/XMLScanner.hpp	/^inline bool XMLScanner::getHasNoDTD() const$/;"	f	class:XMLScanner
getHashModulus	include/xercesc/util/Hash2KeysSetOf.c	/^XMLSize_t Hash2KeysSetOf<THasher>::getHashModulus() const$/;"	f	class:THasher
getHashModulus	include/xercesc/util/RefHash2KeysTableOf.c	/^XMLSize_t RefHash2KeysTableOf<TVal, THasher>::getHashModulus() const$/;"	f	class:THasher
getHashModulus	include/xercesc/util/RefHash3KeysIdPool.c	/^XMLSize_t RefHash3KeysIdPool<TVal, THasher>::getHashModulus() const$/;"	f	class:THasher
getHashModulus	include/xercesc/util/RefHashTableOf.c	/^inline XMLSize_t RefHashTableOf<TVal, THasher>::getHashModulus() const$/;"	f	class:THasher
getHashVal	include/xercesc/util/Hashers.hpp	/^  XMLSize_t getHashVal(const void* key, XMLSize_t mod) const$/;"	f	struct:PtrHasher
getHashVal	include/xercesc/util/Hashers.hpp	/^  XMLSize_t getHashVal(const void* key, XMLSize_t mod) const$/;"	f	struct:StringHasher
getHost	include/xercesc/util/XMLURL.hpp	/^inline const XMLCh* XMLURL::getHost() const$/;"	f	class:XMLURL
getHost	include/xercesc/util/XMLUri.hpp	/^inline const XMLCh* XMLUri::getHost() const$/;"	f	class:XMLUri
getIDRefList	include/xercesc/internal/XMLScanner.hpp	/^inline RefHashTableOf<XMLRefInfo>* XMLScanner::getIDRefList()$/;"	f	class:XMLScanner
getIDRefList	include/xercesc/internal/XMLScanner.hpp	/^inline const RefHashTableOf<XMLRefInfo>* XMLScanner::getIDRefList() const$/;"	f	class:XMLScanner
getId	include/xercesc/framework/XMLAttDef.hpp	/^inline XMLSize_t XMLAttDef::getId() const$/;"	f	class:XMLAttDef
getId	include/xercesc/framework/XMLElementDecl.hpp	/^inline XMLSize_t XMLElementDecl::getId() const$/;"	f	class:XMLElementDecl
getId	include/xercesc/framework/XMLEntityDecl.hpp	/^inline XMLSize_t XMLEntityDecl::getId() const$/;"	f	class:XMLEntityDecl
getId	include/xercesc/framework/XMLNotationDecl.hpp	/^inline XMLSize_t XMLNotationDecl::getId() const$/;"	f	class:XMLNotationDecl
getId	include/xercesc/util/NetAccessors/Curl/CurlNetAccessor.hpp	/^inline const XMLCh* CurlNetAccessor::getId() const$/;"	f	class:CurlNetAccessor
getId	include/xercesc/util/StringPool.hpp	/^inline unsigned int XMLStringPool::getId(const XMLCh* const toFind) const$/;"	f	class:XMLStringPool
getIdentityConstraint	include/xercesc/validators/schema/identity/IC_Field.hpp	/^    IdentityConstraint* getIdentityConstraint() const { return fIdentityConstraint; }$/;"	f	class:IC_Field
getIdentityConstraint	include/xercesc/validators/schema/identity/IC_Selector.hpp	/^    IdentityConstraint* getIdentityConstraint() const { return fIdentityConstraint; }$/;"	f	class:IC_Selector
getIdentityConstraint	include/xercesc/validators/schema/identity/ValueStore.hpp	/^ValueStore::getIdentityConstraint() const {$/;"	f	class:ValueStore
getIdentityConstraint	include/xercesc/validators/schema/identity/XPathMatcher.hpp	/^    IdentityConstraint* getIdentityConstraint() const { return fIdentityConstraint; }$/;"	f	class:XPathMatcher
getIdentityConstraintAt	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^SchemaElementDecl::getIdentityConstraintAt(XMLSize_t index) const {$/;"	f	class:SchemaElementDecl
getIdentityConstraintChecking	include/xercesc/internal/XMLScanner.hpp	/^inline bool XMLScanner::getIdentityConstraintChecking() const$/;"	f	class:XMLScanner
getIdentityConstraintCount	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^inline XMLSize_t SchemaElementDecl::getIdentityConstraintCount() const {$/;"	f	class:SchemaElementDecl
getIdentityConstraintName	include/xercesc/validators/schema/identity/IdentityConstraint.hpp	/^inline XMLCh* IdentityConstraint::getIdentityConstraintName() const {$/;"	f	class:IdentityConstraint
getIdentityConstraints	include/xercesc/framework/psvi/XSElementDeclaration.hpp	/^inline XSNamedMap<XSIDCDefinition>* XSElementDeclaration::getIdentityConstraints()$/;"	f	class:XSElementDeclaration
getIgnoreAnnotations	include/xercesc/internal/XMLScanner.hpp	/^inline bool XMLScanner::getIgnoreAnnotations() const$/;"	f	class:XMLScanner
getIgnoreCachedDTD	include/xercesc/internal/XMLScanner.hpp	/^inline bool XMLScanner::getIgnoreCachedDTD() const$/;"	f	class:XMLScanner
getIgnoreSerializedAnnotations	include/xercesc/framework/XMLGrammarPool.hpp	/^    inline bool getIgnoreSerializedAnnotations() const$/;"	f	class:XMLGrammarPool
getImportInfo	include/xercesc/validators/schema/SchemaInfo.hpp	/^inline SchemaInfo* SchemaInfo::getImportInfo(const unsigned int namespaceURI) const {$/;"	f	class:SchemaInfo
getImportingListEnumerator	include/xercesc/validators/schema/SchemaInfo.hpp	/^SchemaInfo::getImportingListEnumerator() const {$/;"	f	class:SchemaInfo
getInException	include/xercesc/internal/XMLScanner.hpp	/^inline bool XMLScanner::getInException() const$/;"	f	class:XMLScanner
getInUse	include/xercesc/framework/XMLBuffer.hpp	/^    bool getInUse() const$/;"	f	class:XMLBuffer
getIncludeIgnorableWhitespace	include/xercesc/parsers/AbstractDOMParser.hpp	/^inline bool AbstractDOMParser::getIncludeIgnorableWhitespace() const$/;"	f	class:AbstractDOMParser
getInitialDepth	include/xercesc/validators/schema/identity/IC_Selector.hpp	/^    int getInitialDepth() const { return fInitialDepth; }$/;"	f	class:SelectorMatcher
getIntVal	include/xercesc/util/XMLBigDecimal.hpp	/^inline XMLCh*  XMLBigDecimal::getIntVal() const$/;"	f	class:XMLBigDecimal
getIsElemSpecified	include/xercesc/validators/schema/SchemaValidator.hpp	/^inline bool SchemaValidator::getIsElemSpecified() const$/;"	f	class:SchemaValidator
getIsOpen	include/xercesc/internal/BinFileOutputStream.hpp	/^inline bool BinFileOutputStream::getIsOpen() const$/;"	f	class:BinFileOutputStream
getIsOpen	include/xercesc/util/BinFileInputStream.hpp	/^inline bool BinFileInputStream::getIsOpen() const$/;"	f	class:BinFileInputStream
getIsParameter	include/xercesc/validators/DTD/DTDEntityDecl.hpp	/^inline bool DTDEntityDecl::getIsParameter() const$/;"	f	class:DTDEntityDecl
getIsSchemaSpecified	include/xercesc/framework/psvi/PSVIItem.hpp	/^inline bool PSVIItem::getIsSchemaSpecified() const$/;"	f	class:PSVIItem
getIsSpecialChar	include/xercesc/validators/DTD/DTDEntityDecl.hpp	/^inline bool DTDEntityDecl::getIsSpecialChar() const$/;"	f	class:DTDEntityDecl
getIsXsiTypeSet	include/xercesc/validators/schema/SchemaValidator.hpp	/^inline bool SchemaValidator::getIsXsiTypeSet() const$/;"	f	class:SchemaValidator
getIssueFatalErrorIfNotFound	include/xercesc/dom/impl/DOMLSInputImpl.hpp	/^inline bool DOMLSInputImpl::getIssueFatalErrorIfNotFound() const$/;"	f	class:DOMLSInputImpl
getIssueFatalErrorIfNotFound	include/xercesc/sax/InputSource.hpp	/^inline bool InputSource::getIssueFatalErrorIfNotFound() const$/;"	f	class:InputSource
getItemType	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^inline XSSimpleTypeDefinition* XSSimpleTypeDefinition::getItemType()$/;"	f	class:XSSimpleTypeDefinition
getKey	include/xercesc/framework/XMLEntityDecl.hpp	/^inline const XMLCh* XMLEntityDecl::getKey() const$/;"	f	class:XMLEntityDecl
getKey	include/xercesc/framework/XMLNotationDecl.hpp	/^inline const XMLCh* XMLNotationDecl::getKey() const$/;"	f	class:XMLNotationDecl
getKey	include/xercesc/util/KVStringPair.hpp	/^inline XMLCh* KVStringPair::getKey()$/;"	f	class:KVStringPair
getKey	include/xercesc/util/KVStringPair.hpp	/^inline const XMLCh* KVStringPair::getKey() const$/;"	f	class:KVStringPair
getKey	include/xercesc/util/KeyRefPair.c	/^KeyRefPair<TKey,TValue>::getKey() const$/;"	f	class:TValue
getKey	include/xercesc/util/KeyRefPair.c	/^template <class TKey, class TValue> TKey* KeyRefPair<TKey,TValue>::getKey()$/;"	f	class:TValue
getKey	include/xercesc/util/KeyValuePair.c	/^KeyValuePair<TKey,TValue>::getKey() const$/;"	f	class:TValue
getKey	include/xercesc/util/KeyValuePair.c	/^template <class TKey, class TValue> TKey& KeyValuePair<TKey,TValue>::getKey()$/;"	f	class:TValue
getKey	include/xercesc/util/TransENameMap.hpp	/^    const XMLCh* getKey() const$/;"	f	class:ENameMap
getKey	include/xercesc/validators/DTD/DTDElementDecl.hpp	/^inline const XMLCh* DTDElementDecl::getKey() const$/;"	f	class:DTDElementDecl
getKey	include/xercesc/validators/schema/identity/IC_KeyRef.hpp	/^inline IdentityConstraint* IC_KeyRef::getKey() const {$/;"	f	class:IC_KeyRef
getLastPos	include/xercesc/validators/common/CMNode.hpp	/^inline const CMStateSet& CMNode::getLastPos()$/;"	f	class:CMNode
getLen	include/xercesc/dom/impl/DOMStringPool.hpp	/^    XMLSize_t getLen() const$/;"	f	class:DOMBuffer
getLen	include/xercesc/framework/MemBufFormatTarget.hpp	/^    XMLSize_t getLen() const$/;"	f	class:MemBufFormatTarget
getLen	include/xercesc/framework/XMLBuffer.hpp	/^    XMLSize_t getLen() const$/;"	f	class:XMLBuffer
getLen	include/xercesc/framework/XMLBufferMgr.hpp	/^    XMLSize_t getLen() const$/;"	f	class:XMLBufBid
getLength	include/xercesc/framework/psvi/XSNamedMap.c	/^XMLSize_t XSNamedMap<TVal>::getLength() const$/;"	f	class:TVal
getLength	include/xercesc/validators/datatype/AbstractStringValidator.hpp	/^inline XMLSize_t AbstractStringValidator::getLength() const$/;"	f	class:AbstractStringValidator
getLexicalFacetValue	include/xercesc/framework/psvi/XSFacet.hpp	/^inline const XMLCh* XSFacet::getLexicalFacetValue() const$/;"	f	class:XSFacet
getLexicalFacetValues	include/xercesc/framework/psvi/XSMultiValueFacet.hpp	/^inline StringList *XSMultiValueFacet::getLexicalFacetValues()$/;"	f	class:XSMultiValueFacet
getLexicalHandler	include/xercesc/parsers/SAX2XMLFilterImpl.hpp	/^inline LexicalHandler* SAX2XMLFilterImpl::getLexicalHandler() const$/;"	f	class:SAX2XMLFilterImpl
getLexicalHandler	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^inline LexicalHandler* SAX2XMLReaderImpl::getLexicalHandler() const$/;"	f	class:SAX2XMLReaderImpl
getLexicalPattern	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^inline StringList* XSSimpleTypeDefinition::getLexicalPattern()$/;"	f	class:XSSimpleTypeDefinition
getLineCol	include/xercesc/framework/psvi/XSAnnotation.hpp	/^inline void XSAnnotation::getLineCol(XMLFileLoc& line, XMLFileLoc& col) const$/;"	f	class:XSAnnotation
getLineNo	include/xercesc/dom/impl/XSDElementNSImpl.hpp	/^    XMLFileLoc getLineNo() const   { return fLineNo;   }$/;"	f	class:XSDElementNSImpl
getLineNumber	include/xercesc/dom/impl/DOMLocatorImpl.hpp	/^inline XMLFileLoc DOMLocatorImpl::getLineNumber() const$/;"	f	class:DOMLocatorImpl
getLineNumber	include/xercesc/internal/XMLReader.hpp	/^inline XMLFileLoc XMLReader::getLineNumber() const$/;"	f	class:XMLReader
getLineNumber	include/xercesc/validators/schema/XSDLocator.hpp	/^inline XMLFileLoc XSDLocator::getLineNumber() const$/;"	f	class:XSDLocator
getLoadExternalDTD	include/xercesc/internal/XMLScanner.hpp	/^inline bool XMLScanner::getLoadExternalDTD() const$/;"	f	class:XMLScanner
getLoadSchema	include/xercesc/internal/XMLScanner.hpp	/^inline bool XMLScanner::getLoadSchema() const$/;"	f	class:XMLScanner
getLocalPart	include/xercesc/util/QName.hpp	/^inline XMLCh* QName::getLocalPart()$/;"	f	class:QName
getLocalPart	include/xercesc/util/QName.hpp	/^inline const XMLCh* QName::getLocalPart() const$/;"	f	class:QName
getLocalPart	include/xercesc/validators/schema/TraverseSchema.hpp	/^inline const XMLCh* TraverseSchema::getLocalPart(const XMLCh* const rawName) {$/;"	f	class:TraverseSchema
getLocation	include/xercesc/dom/impl/DOMErrorImpl.hpp	/^inline DOMLocator* DOMErrorImpl::getLocation() const$/;"	f	class:DOMErrorImpl
getLocation	include/xercesc/xinclude/XIncludeLocation.hpp	/^    const XMLCh *getLocation(){$/;"	f	class:XIncludeLocation
getLocationPaths	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^inline RefVectorOf<XercesLocationPath>* XercesXPath::getLocationPaths() const {$/;"	f	class:XercesXPath
getLocator	include/xercesc/internal/XMLScanner.hpp	/^inline const Locator* XMLScanner::getLocator() const$/;"	f	class:XMLScanner
getLocator	include/xercesc/util/XMLResourceIdentifier.hpp	/^inline const Locator* XMLResourceIdentifier::getLocator() const$/;"	f	class:XMLResourceIdentifier
getLocator	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline XSDLocator* ComplexTypeInfo::getLocator() const$/;"	f	class:ComplexTypeInfo
getLocator	include/xercesc/validators/schema/XercesGroupInfo.hpp	/^inline XSDLocator* XercesGroupInfo::getLocator() const {$/;"	f	class:XercesGroupInfo
getLowWaterMark	include/xercesc/internal/XMLScanner.hpp	/^inline const XMLSize_t& XMLScanner::getLowWaterMark() const$/;"	f	class:XMLScanner
getMatcherAt	include/xercesc/validators/schema/identity/XPathMatcherStack.hpp	/^XPathMatcherStack::getMatcherAt(const XMLSize_t index) const {$/;"	f	class:XPathMatcherStack
getMatcherCount	include/xercesc/validators/schema/identity/IdentityConstraintHandler.hpp	/^XMLSize_t IdentityConstraintHandler::getMatcherCount() const$/;"	f	class:IdentityConstraintHandler
getMatcherCount	include/xercesc/validators/schema/identity/XPathMatcherStack.hpp	/^inline XMLSize_t XPathMatcherStack::getMatcherCount() const {$/;"	f	class:XPathMatcherStack
getMax	include/xercesc/util/regx/ClosureToken.hpp	/^inline int ClosureToken::getMax() const {$/;"	f	class:ClosureToken
getMax	include/xercesc/util/regx/Token.hpp	/^inline int Token::getMax() const {$/;"	f	class:Token
getMaxExclusive	include/xercesc/validators/datatype/AbstractNumericFacetValidator.hpp	/^inline XMLNumber* AbstractNumericFacetValidator::getMaxExclusive() const$/;"	f	class:AbstractNumericFacetValidator
getMaxInclusive	include/xercesc/validators/datatype/AbstractNumericFacetValidator.hpp	/^inline XMLNumber* AbstractNumericFacetValidator::getMaxInclusive() const$/;"	f	class:AbstractNumericFacetValidator
getMaxLength	include/xercesc/validators/datatype/AbstractStringValidator.hpp	/^inline XMLSize_t AbstractStringValidator::getMaxLength() const$/;"	f	class:AbstractStringValidator
getMaxOccurs	include/xercesc/framework/psvi/XSParticle.hpp	/^inline XMLSize_t XSParticle::getMaxOccurs() const$/;"	f	class:XSParticle
getMaxOccurs	include/xercesc/validators/common/CMRepeatingLeaf.hpp	/^inline int CMRepeatingLeaf::getMaxOccurs() const$/;"	f	class:CMRepeatingLeaf
getMaxOccurs	include/xercesc/validators/common/ContentSpecNode.hpp	/^inline int ContentSpecNode::getMaxOccurs() const$/;"	f	class:ContentSpecNode
getMaxOccursUnbounded	include/xercesc/framework/psvi/XSParticle.hpp	/^inline bool XSParticle::getMaxOccursUnbounded() const$/;"	f	class:XSParticle
getMayMatch	include/xercesc/validators/schema/identity/FieldActivator.hpp	/^inline bool FieldActivator::getMayMatch(IC_Field* const field) {$/;"	f	class:FieldActivator
getMemberTypeDefinition	include/xercesc/framework/psvi/PSVIAttribute.hpp	/^inline XSSimpleTypeDefinition* PSVIAttribute::getMemberTypeDefinition() $/;"	f	class:PSVIAttribute
getMemberTypeValidators	include/xercesc/validators/datatype/UnionDatatypeValidator.hpp	/^RefVectorOf<DatatypeValidator>* UnionDatatypeValidator::getMemberTypeValidators() const$/;"	f	class:UnionDatatypeValidator
getMemberTypes	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^inline XSSimpleTypeDefinitionList* XSSimpleTypeDefinition::getMemberTypes() const$/;"	f	class:XSSimpleTypeDefinition
getMemoryManager	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^inline MemoryManager* DOMDocumentImpl::getMemoryManager() const$/;"	f	class:DOMDocumentImpl
getMemoryManager	include/xercesc/framework/XMLAttDef.hpp	/^inline MemoryManager* XMLAttDef::getMemoryManager() const$/;"	f	class:XMLAttDef
getMemoryManager	include/xercesc/framework/XMLAttDefList.hpp	/^inline MemoryManager* XMLAttDefList::getMemoryManager() const$/;"	f	class:XMLAttDefList
getMemoryManager	include/xercesc/framework/XMLElementDecl.hpp	/^inline MemoryManager* XMLElementDecl::getMemoryManager() const$/;"	f	class:XMLElementDecl
getMemoryManager	include/xercesc/framework/XMLEntityDecl.hpp	/^inline MemoryManager* XMLEntityDecl::getMemoryManager() const$/;"	f	class:XMLEntityDecl
getMemoryManager	include/xercesc/framework/XMLGrammarDescription.hpp	/^inline MemoryManager* XMLGrammarDescription::getMemoryManager() const$/;"	f	class:XMLGrammarDescription
getMemoryManager	include/xercesc/framework/XMLGrammarPool.hpp	/^	inline MemoryManager*    getMemoryManager()$/;"	f	class:XMLGrammarPool
getMemoryManager	include/xercesc/framework/XMLNotationDecl.hpp	/^inline MemoryManager* XMLNotationDecl::getMemoryManager() const$/;"	f	class:XMLNotationDecl
getMemoryManager	include/xercesc/internal/XMLScanner.hpp	/^inline MemoryManager* XMLScanner::getMemoryManager() const$/;"	f	class:XMLScanner
getMemoryManager	include/xercesc/parsers/AbstractDOMParser.hpp	/^inline MemoryManager* AbstractDOMParser::getMemoryManager() const$/;"	f	class:AbstractDOMParser
getMemoryManager	include/xercesc/sax/InputSource.hpp	/^inline MemoryManager* InputSource::getMemoryManager() const$/;"	f	class:InputSource
getMemoryManager	include/xercesc/util/BaseRefVectorOf.c	/^MemoryManager* BaseRefVectorOf<TElem>::getMemoryManager() const$/;"	f	class:TElem
getMemoryManager	include/xercesc/util/Hash2KeysSetOf.c	/^MemoryManager* Hash2KeysSetOf<THasher>::getMemoryManager() const$/;"	f	class:THasher
getMemoryManager	include/xercesc/util/NameIdPool.c	/^inline MemoryManager* NameIdPool<TElem>::getMemoryManager() const$/;"	f	class:TElem
getMemoryManager	include/xercesc/util/QName.hpp	/^inline MemoryManager* QName::getMemoryManager() const$/;"	f	class:QName
getMemoryManager	include/xercesc/util/RefHash2KeysTableOf.c	/^MemoryManager* RefHash2KeysTableOf<TVal, THasher>::getMemoryManager() const$/;"	f	class:THasher
getMemoryManager	include/xercesc/util/RefHash3KeysIdPool.c	/^MemoryManager* RefHash3KeysIdPool<TVal, THasher>::getMemoryManager() const$/;"	f	class:THasher
getMemoryManager	include/xercesc/util/RefHashTableOf.c	/^inline MemoryManager* RefHashTableOf<TVal, THasher>::getMemoryManager() const$/;"	f	class:THasher
getMemoryManager	include/xercesc/util/TransService.hpp	/^inline MemoryManager* XMLTranscoder::getMemoryManager() const$/;"	f	class:XMLTranscoder
getMemoryManager	include/xercesc/util/XMLAbstractDoubleFloat.hpp	/^inline MemoryManager* XMLAbstractDoubleFloat::getMemoryManager() const$/;"	f	class:XMLAbstractDoubleFloat
getMemoryManager	include/xercesc/util/XMLBigDecimal.hpp	/^inline MemoryManager* XMLBigDecimal::getMemoryManager() const$/;"	f	class:XMLBigDecimal
getMemoryManager	include/xercesc/util/XMLURL.hpp	/^inline MemoryManager* XMLURL::getMemoryManager() const$/;"	f	class:XMLURL
getMemoryManager	include/xercesc/util/regx/RegxParser.hpp	/^inline MemoryManager* RegxParser::getMemoryManager() const {$/;"	f	class:RegxParser
getMemoryManager	include/xercesc/util/regx/TokenFactory.hpp	/^inline MemoryManager* TokenFactory::getMemoryManager() const$/;"	f	class:TokenFactory
getMemoryManager	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^inline MemoryManager* DatatypeValidator::getMemoryManager() const$/;"	f	class:DatatypeValidator
getMemoryManager	include/xercesc/validators/schema/identity/XPathMatcher.hpp	/^    MemoryManager* getMemoryManager() const { return fMemoryManager; }$/;"	f	class:XPathMatcher
getMessage	include/xercesc/dom/DOMException.hpp	/^inline const XMLCh* DOMException::getMessage() const$/;"	f	class:DOMException
getMessage	include/xercesc/dom/impl/DOMErrorImpl.hpp	/^inline const XMLCh* DOMErrorImpl::getMessage() const$/;"	f	class:DOMErrorImpl
getMessage	include/xercesc/sax/SAXException.hpp	/^    virtual const XMLCh* getMessage() const$/;"	f	class:SAXException
getMessage	include/xercesc/util/OutOfMemoryException.hpp	/^inline const XMLCh* OutOfMemoryException::getMessage() const$/;"	f	class:OutOfMemoryException
getMessage	include/xercesc/util/XMLException.hpp	/^inline const XMLCh* XMLException::getMessage() const$/;"	f	class:XMLException
getMin	include/xercesc/util/regx/ClosureToken.hpp	/^inline int ClosureToken::getMin() const {$/;"	f	class:ClosureToken
getMin	include/xercesc/util/regx/Token.hpp	/^inline int Token::getMin() const {$/;"	f	class:Token
getMinExclusive	include/xercesc/validators/datatype/AbstractNumericFacetValidator.hpp	/^inline XMLNumber* AbstractNumericFacetValidator::getMinExclusive() const$/;"	f	class:AbstractNumericFacetValidator
getMinInclusive	include/xercesc/validators/datatype/AbstractNumericFacetValidator.hpp	/^inline XMLNumber* AbstractNumericFacetValidator::getMinInclusive() const$/;"	f	class:AbstractNumericFacetValidator
getMinLength	include/xercesc/validators/datatype/AbstractStringValidator.hpp	/^inline XMLSize_t AbstractStringValidator::getMinLength() const$/;"	f	class:AbstractStringValidator
getMinOccurs	include/xercesc/framework/psvi/XSParticle.hpp	/^inline XMLSize_t XSParticle::getMinOccurs() const$/;"	f	class:XSParticle
getMinOccurs	include/xercesc/validators/common/CMRepeatingLeaf.hpp	/^inline int CMRepeatingLeaf::getMinOccurs() const$/;"	f	class:CMRepeatingLeaf
getMinOccurs	include/xercesc/validators/common/ContentSpecNode.hpp	/^inline int ContentSpecNode::getMinOccurs() const$/;"	f	class:ContentSpecNode
getMiscFlags	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^inline int SchemaElementDecl::getMiscFlags() const$/;"	f	class:SchemaElementDecl
getModelType	include/xercesc/validators/DTD/DTDElementDecl.hpp	/^inline DTDElementDecl::ModelTypes DTDElementDecl::getModelType() const$/;"	f	class:DTDElementDecl
getModelType	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^inline SchemaElementDecl::ModelTypes SchemaElementDecl::getModelType() const$/;"	f	class:SchemaElementDecl
getMostRecentAttrValidator	include/xercesc/validators/schema/SchemaValidator.hpp	/^inline DatatypeValidator *SchemaValidator::getMostRecentAttrValidator() const$/;"	f	class:SchemaValidator
getMultiValueFacets	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^inline XSMultiValueFacetList* XSSimpleTypeDefinition::getMultiValueFacets()$/;"	f	class:XSSimpleTypeDefinition
getName	include/xercesc/framework/XMLAttr.hpp	/^inline const XMLCh* XMLAttr::getName() const$/;"	f	class:XMLAttr
getName	include/xercesc/framework/XMLEntityDecl.hpp	/^inline const XMLCh* XMLEntityDecl::getName() const$/;"	f	class:XMLEntityDecl
getName	include/xercesc/framework/XMLNotationDecl.hpp	/^inline const XMLCh* XMLNotationDecl::getName() const$/;"	f	class:XMLNotationDecl
getName	include/xercesc/internal/DGXMLScanner.hpp	/^inline const XMLCh* DGXMLScanner::getName() const$/;"	f	class:DGXMLScanner
getName	include/xercesc/internal/IGXMLScanner.hpp	/^inline const XMLCh* IGXMLScanner::getName() const$/;"	f	class:IGXMLScanner
getName	include/xercesc/internal/ReaderMgr.hpp	/^inline bool ReaderMgr::getName(XMLBuffer& toFill)$/;"	f	class:ReaderMgr
getName	include/xercesc/internal/SGXMLScanner.hpp	/^inline const XMLCh* SGXMLScanner::getName() const$/;"	f	class:SGXMLScanner
getName	include/xercesc/internal/WFXMLScanner.hpp	/^inline const XMLCh* WFXMLScanner::getName() const$/;"	f	class:WFXMLScanner
getName	include/xercesc/internal/XSAXMLScanner.hpp	/^inline const XMLCh* XSAXMLScanner::getName() const$/;"	f	class:XSAXMLScanner
getName	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    QName* getName() const { return fName; }$/;"	f	class:XercesNodeTest
getNameId	include/xercesc/validators/schema/XercesAttGroupInfo.hpp	/^inline unsigned int XercesAttGroupInfo::getNameId() const$/;"	f	class:XercesAttGroupInfo
getNameId	include/xercesc/validators/schema/XercesGroupInfo.hpp	/^inline unsigned int XercesGroupInfo::getNameId() const$/;"	f	class:XercesGroupInfo
getNameSpace	include/xercesc/util/XMLResourceIdentifier.hpp	/^inline const XMLCh* XMLResourceIdentifier::getNameSpace() const$/;"	f	class:XMLResourceIdentifier
getNameSpaceId	include/xercesc/framework/XMLNotationDecl.hpp	/^inline unsigned int XMLNotationDecl::getNameSpaceId() const$/;"	f	class:XMLNotationDecl
getNameToken	include/xercesc/internal/ReaderMgr.hpp	/^inline bool ReaderMgr::getNameToken(XMLBuffer& toFill)$/;"	f	class:ReaderMgr
getNamespaceContext	include/xercesc/internal/XMLScanner.hpp	/^inline ValueVectorOf<PrefMapElem*>* XMLScanner::getNamespaceContext() const$/;"	f	class:XMLScanner
getNamespaceId	include/xercesc/validators/schema/XercesAttGroupInfo.hpp	/^inline unsigned int XercesAttGroupInfo::getNamespaceId() const$/;"	f	class:XercesAttGroupInfo
getNamespaceId	include/xercesc/validators/schema/XercesGroupInfo.hpp	/^inline unsigned int XercesGroupInfo::getNamespaceId() const$/;"	f	class:XercesGroupInfo
getNamespaceItems	include/xercesc/framework/psvi/XSModel.hpp	/^inline XSNamespaceItemList *XSModel::getNamespaceItems()$/;"	f	class:XSModel
getNamespaceList	include/xercesc/validators/schema/SchemaAttDef.hpp	/^SchemaAttDef::getNamespaceList() const {$/;"	f	class:SchemaAttDef
getNamespaceScope	include/xercesc/validators/schema/SchemaInfo.hpp	/^inline NamespaceScope* SchemaInfo::getNamespaceScope() const {$/;"	f	class:SchemaInfo
getNamespaceURI	include/xercesc/validators/schema/identity/IdentityConstraint.hpp	/^inline int IdentityConstraint::getNamespaceURI() const$/;"	f	class:IdentityConstraint
getNamespaces	include/xercesc/framework/psvi/XSModel.hpp	/^inline StringList *XSModel::getNamespaces()$/;"	f	class:XSModel
getNextChar	include/xercesc/internal/XMLReader.hpp	/^inline bool XMLReader::getNextChar(XMLCh& chGotten)$/;"	f	class:XMLReader
getNextCharIfNot	include/xercesc/internal/ReaderMgr.hpp	/^inline bool ReaderMgr::getNextCharIfNot(const XMLCh chNotToGet, XMLCh& chGotten)$/;"	f	class:ReaderMgr
getNextCharIfNot	include/xercesc/internal/XMLReader.hpp	/^inline bool XMLReader::getNextCharIfNot(const XMLCh chNotToGet, XMLCh& chGotten)$/;"	f	class:XMLReader
getNextOp	include/xercesc/util/regx/Op.hpp	/^inline const Op* Op::getNextOp() const {$/;"	f	class:Op
getNextState	include/xercesc/validators/common/AllContentModel.hpp	/^AllContentModel::getNextState(unsigned int,$/;"	f	class:AllContentModel
getNextState	include/xercesc/validators/common/DFAContentModel.hpp	/^DFAContentModel::getNextState(unsigned int currentState,$/;"	f	class:DFAContentModel
getNextState	include/xercesc/validators/common/MixedContentModel.hpp	/^MixedContentModel::getNextState(unsigned int,$/;"	f	class:MixedContentModel
getNextState	include/xercesc/validators/common/SimpleContentModel.hpp	/^SimpleContentModel::getNextState(unsigned int,$/;"	f	class:SimpleContentModel
getNoGroups	include/xercesc/util/regx/Match.hpp	/^inline int Match::getNoGroups() const {$/;"	f	class:Match
getNoMoreFlag	include/xercesc/internal/XMLReader.hpp	/^inline bool XMLReader::getNoMoreFlag() const$/;"	f	class:XMLReader
getNoParen	include/xercesc/util/regx/ParenToken.hpp	/^inline int ParenToken::getNoParen() const {$/;"	f	class:ParenToken
getNoParen	include/xercesc/util/regx/RegxParser.hpp	/^inline int RegxParser::getNoParen() const {$/;"	f	class:RegxParser
getNoParen	include/xercesc/util/regx/Token.hpp	/^inline int Token::getNoParen() const {$/;"	f	class:Token
getNodeIDMap	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^    inline DOMNodeIDMap*         getNodeIDMap() {return fNodeIDMap;};$/;"	f	class:DOMDocumentImpl
getNodeTest	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    XercesNodeTest* getNodeTest() const { return fNodeTest; }$/;"	f	class:XercesStep
getNonXSAttList	include/xercesc/validators/schema/SchemaInfo.hpp	/^inline ValueVectorOf<DOMNode*>* SchemaInfo::getNonXSAttList() const$/;"	f	class:SchemaInfo
getNormalizeData	include/xercesc/internal/XMLScanner.hpp	/^inline bool XMLScanner::getNormalizeData() const$/;"	f	class:XMLScanner
getNormalizedValue	include/xercesc/validators/schema/SchemaValidator.hpp	/^inline const XMLCh* SchemaValidator::getNormalizedValue() const$/;"	f	class:SchemaValidator
getNotationDecl	include/xercesc/validators/DTD/DTDGrammar.hpp	/^inline XMLNotationDecl* DTDGrammar::getNotationDecl(const XMLCh* const notName)$/;"	f	class:DTDGrammar
getNotationDecl	include/xercesc/validators/DTD/DTDGrammar.hpp	/^inline const XMLNotationDecl* DTDGrammar::getNotationDecl(const XMLCh* const notName) const$/;"	f	class:DTDGrammar
getNotationDecl	include/xercesc/validators/schema/SchemaGrammar.hpp	/^inline XMLNotationDecl* SchemaGrammar::getNotationDecl(const XMLCh* const notName)$/;"	f	class:SchemaGrammar
getNotationDecl	include/xercesc/validators/schema/SchemaGrammar.hpp	/^inline const XMLNotationDecl* SchemaGrammar::getNotationDecl(const XMLCh* const notName) const$/;"	f	class:SchemaGrammar
getNotationDeclaration	include/xercesc/framework/psvi/PSVIElement.hpp	/^inline XSNotationDeclaration* PSVIElement::getNotationDeclaration() $/;"	f	class:PSVIElement
getNotationEnumerator	include/xercesc/validators/DTD/DTDGrammar.hpp	/^DTDGrammar::getNotationEnumerator() const$/;"	f	class:DTDGrammar
getNotationEnumerator	include/xercesc/validators/schema/SchemaGrammar.hpp	/^SchemaGrammar::getNotationEnumerator() const$/;"	f	class:SchemaGrammar
getNotationName	include/xercesc/framework/XMLEntityDecl.hpp	/^inline const XMLCh* XMLEntityDecl::getNotationName() const$/;"	f	class:XMLEntityDecl
getNsConstraintList	include/xercesc/framework/psvi/XSWildcard.hpp	/^inline StringList* XSWildcard::getNsConstraintList()$/;"	f	class:XSWildcard
getNumeric	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^inline bool DatatypeValidator::getNumeric() const$/;"	f	class:DatatypeValidator
getObjectFromMap	include/xercesc/internal/XSObjectFactory.hpp	/^inline XSObject* XSObjectFactory::getObjectFromMap(void* key)$/;"	f	class:XSObjectFactory
getOffset	include/xercesc/util/regx/RegxParser.hpp	/^inline XMLSize_t RegxParser::getOffset() const {$/;"	f	class:RegxParser
getOpType	include/xercesc/util/regx/Op.hpp	/^inline Op::opType Op::getOpType() const {$/;"	f	class:Op
getOptions	include/xercesc/util/regx/RegxParser.hpp	/^inline int RegxParser::getOptions() const {$/;"	f	class:RegxParser
getOrdered	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^inline XSSimpleTypeDefinition::ORDERING DatatypeValidator::getOrdered() const$/;"	f	class:DatatypeValidator
getPSVIAttributeToFill	include/xercesc/framework/psvi/PSVIAttributeList.hpp	/^inline PSVIAttribute *PSVIAttributeList::getPSVIAttributeToFill($/;"	f	class:PSVIAttributeList
getPSVIHandler	include/xercesc/internal/XMLScanner.hpp	/^inline PSVIHandler* XMLScanner::getPSVIHandler()$/;"	f	class:XMLScanner
getPSVIHandler	include/xercesc/internal/XMLScanner.hpp	/^inline const PSVIHandler* XMLScanner::getPSVIHandler() const$/;"	f	class:XMLScanner
getPSVIHandler	include/xercesc/parsers/AbstractDOMParser.hpp	/^inline PSVIHandler* AbstractDOMParser::getPSVIHandler()$/;"	f	class:AbstractDOMParser
getPSVIHandler	include/xercesc/parsers/AbstractDOMParser.hpp	/^inline const PSVIHandler* AbstractDOMParser::getPSVIHandler() const$/;"	f	class:AbstractDOMParser
getPSVIHandler	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^inline PSVIHandler* SAX2XMLReaderImpl::getPSVIHandler() const$/;"	f	class:SAX2XMLReaderImpl
getPSVIHandler	include/xercesc/parsers/SAXParser.hpp	/^inline PSVIHandler* SAXParser::getPSVIHandler()$/;"	f	class:SAXParser
getPSVIHandler	include/xercesc/parsers/SAXParser.hpp	/^inline const PSVIHandler* SAXParser::getPSVIHandler() const$/;"	f	class:SAXParser
getPSVIScope	include/xercesc/validators/schema/SchemaAttDef.hpp	/^inline PSVIDefs::PSVIScope SchemaAttDef::getPSVIScope() const$/;"	f	class:SchemaAttDef
getPSVIScope	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^inline PSVIDefs::PSVIScope SchemaElementDecl::getPSVIScope() const$/;"	f	class:SchemaElementDecl
getParent	include/xercesc/parsers/SAX2XMLFilterImpl.hpp	/^inline SAX2XMLReader* SAX2XMLFilterImpl::getParent() const$/;"	f	class:SAX2XMLFilterImpl
getParseContext	include/xercesc/util/regx/RegxParser.hpp	/^inline RegxParser::parserStateContext RegxParser::getParseContext() const {$/;"	f	class:RegxParser
getParseInProgress	include/xercesc/parsers/AbstractDOMParser.hpp	/^inline bool AbstractDOMParser::getParseInProgress() const$/;"	f	class:AbstractDOMParser
getParticle	include/xercesc/framework/psvi/XSComplexTypeDefinition.hpp	/^inline XSParticle *XSComplexTypeDefinition::getParticle() const$/;"	f	class:XSComplexTypeDefinition
getParticles	include/xercesc/framework/psvi/XSModelGroup.hpp	/^inline XSParticleList* XSModelGroup::getParticles() const$/;"	f	class:XSModelGroup
getPassword	include/xercesc/util/XMLURL.hpp	/^inline const XMLCh* XMLURL::getPassword() const$/;"	f	class:XMLURL
getPath	include/xercesc/util/XMLURL.hpp	/^inline const XMLCh* XMLURL::getPath() const$/;"	f	class:XMLURL
getPath	include/xercesc/util/XMLUri.hpp	/^inline const XMLCh* XMLUri::getPath() const$/;"	f	class:XMLUri
getPattern	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^inline const XMLCh* DatatypeValidator::getPattern() const$/;"	f	class:DatatypeValidator
getPooledNString	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^getPooledNString(const XMLCh *in, XMLSize_t n)$/;"	f	class:DOMDocumentImpl
getPooledString	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^inline const XMLCh*  DOMDocumentImpl::getPooledString(const XMLCh *in)$/;"	f	class:DOMDocumentImpl
getPort	include/xercesc/util/XMLUri.hpp	/^inline int XMLUri::getPort() const$/;"	f	class:XMLUri
getPosition	include/xercesc/validators/common/CMLeaf.hpp	/^inline unsigned int CMLeaf::getPosition() const$/;"	f	class:CMLeaf
getPrefix	include/xercesc/framework/XMLAttr.hpp	/^inline const XMLCh* XMLAttr::getPrefix() const$/;"	f	class:XMLAttr
getPrefix	include/xercesc/util/QName.hpp	/^inline XMLCh* QName::getPrefix()$/;"	f	class:QName
getPrefix	include/xercesc/util/QName.hpp	/^inline const XMLCh* QName::getPrefix() const$/;"	f	class:QName
getPrefix	include/xercesc/validators/schema/TraverseSchema.hpp	/^inline const XMLCh* TraverseSchema::getPrefix(const XMLCh* const rawName) {$/;"	f	class:TraverseSchema
getPrefixColonPos	include/xercesc/internal/ElemStack.hpp	/^inline int ElemStack::getPrefixColonPos() const {$/;"	f	class:ElemStack
getPrefixForId	include/xercesc/internal/ElemStack.hpp	/^inline const XMLCh* ElemStack::getPrefixForId(unsigned int prefId) const$/;"	f	class:ElemStack
getPrefixForId	include/xercesc/internal/XMLScanner.hpp	/^inline const XMLCh* XMLScanner::getPrefixForId(unsigned int prefId) const$/;"	f	class:XMLScanner
getPrefixId	include/xercesc/internal/ElemStack.hpp	/^inline unsigned int ElemStack::getPrefixId(const XMLCh* const prefix) const$/;"	f	class:ElemStack
getPrefixId	include/xercesc/internal/XMLScanner.hpp	/^inline unsigned int XMLScanner::getPrefixId(const XMLCh* const prefix) const$/;"	f	class:XMLScanner
getPreprocessed	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline bool ComplexTypeInfo::getPreprocessed() const {$/;"	f	class:ComplexTypeInfo
getPrimitiveType	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^inline XSSimpleTypeDefinition* XSSimpleTypeDefinition::getPrimitiveType()$/;"	f	class:XSSimpleTypeDefinition
getProcessContents	include/xercesc/framework/psvi/XSWildcard.hpp	/^inline XSWildcard::PROCESS_CONTENTS XSWildcard::getProcessContents() const$/;"	f	class:XSWildcard
getProcessed	include/xercesc/validators/schema/SchemaInfo.hpp	/^inline bool SchemaInfo::getProcessed() const {$/;"	f	class:SchemaInfo
getProhibitedSubstitutions	include/xercesc/framework/psvi/XSComplexTypeDefinition.hpp	/^inline short XSComplexTypeDefinition::getProhibitedSubstitutions() const$/;"	f	class:XSComplexTypeDefinition
getProtocol	include/xercesc/util/XMLURL.hpp	/^inline XMLURL::Protocols XMLURL::getProtocol() const$/;"	f	class:XMLURL
getPublicId	include/xercesc/dom/impl/DOMLSInputImpl.hpp	/^inline const XMLCh* DOMLSInputImpl::getPublicId() const$/;"	f	class:DOMLSInputImpl
getPublicId	include/xercesc/framework/XMLEntityDecl.hpp	/^inline const XMLCh* XMLEntityDecl::getPublicId() const$/;"	f	class:XMLEntityDecl
getPublicId	include/xercesc/framework/XMLNotationDecl.hpp	/^inline const XMLCh* XMLNotationDecl::getPublicId() const$/;"	f	class:XMLNotationDecl
getPublicId	include/xercesc/internal/XMLReader.hpp	/^inline const XMLCh* XMLReader::getPublicId() const$/;"	f	class:XMLReader
getPublicId	include/xercesc/sax/InputSource.hpp	/^inline const XMLCh* InputSource::getPublicId() const$/;"	f	class:InputSource
getPublicId	include/xercesc/util/XMLResourceIdentifier.hpp	/^inline const XMLCh* XMLResourceIdentifier::getPublicId() const$/;"	f	class:XMLResourceIdentifier
getPublicId	include/xercesc/validators/schema/XSDLocator.hpp	/^inline const XMLCh* XSDLocator::getPublicId() const$/;"	f	class:XSDLocator
getQName	include/xercesc/internal/ReaderMgr.hpp	/^inline bool ReaderMgr::getQName(XMLBuffer& toFill, int *colonPosition)$/;"	f	class:ReaderMgr
getQuery	include/xercesc/util/XMLURL.hpp	/^inline const XMLCh* XMLURL::getQuery() const$/;"	f	class:XMLURL
getQueryString	include/xercesc/util/XMLUri.hpp	/^inline const XMLCh* XMLUri::getQueryString() const$/;"	f	class:XMLUri
getRange	include/xercesc/util/regx/TokenFactory.hpp	/^inline RangeToken* TokenFactory::getRange(const XMLCh* const name,const bool complement)$/;"	f	class:TokenFactory
getRangeMap	include/xercesc/util/regx/RangeTokenMap.hpp	/^inline RefHashTableOf<RangeFactory>* RangeTokenMap::getRangeMap() const {$/;"	f	class:RangeTokenMap
getRangeToken	include/xercesc/util/regx/RangeTokenMap.hpp	/^inline RangeToken* RangeTokenElemMap::getRangeToken(const bool complement) const {$/;"	f	class:RangeTokenElemMap
getRawBuffer	include/xercesc/dom/impl/DOMStringPool.hpp	/^    const XMLCh* getRawBuffer() const$/;"	f	class:DOMBuffer
getRawBuffer	include/xercesc/framework/XMLBuffer.hpp	/^    XMLCh* getRawBuffer()$/;"	f	class:XMLBuffer
getRawBuffer	include/xercesc/framework/XMLBuffer.hpp	/^    const XMLCh* getRawBuffer() const$/;"	f	class:XMLBuffer
getRawBuffer	include/xercesc/framework/XMLBufferMgr.hpp	/^    XMLCh* getRawBuffer()$/;"	f	class:XMLBufBid
getRawBuffer	include/xercesc/framework/XMLBufferMgr.hpp	/^    const XMLCh* getRawBuffer() const$/;"	f	class:XMLBufBid
getRawData	include/xercesc/util/XMLBigDecimal.hpp	/^inline XMLCh*  XMLBigDecimal::getRawData() const$/;"	f	class:XMLBigDecimal
getRawData	include/xercesc/util/XMLBigInteger.hpp	/^inline XMLCh*  XMLBigInteger::getRawData() const$/;"	f	class:XMLBigInteger
getReaderMgr	include/xercesc/framework/XMLValidator.hpp	/^inline ReaderMgr* XMLValidator::getReaderMgr()$/;"	f	class:XMLValidator
getReaderMgr	include/xercesc/framework/XMLValidator.hpp	/^inline const ReaderMgr* XMLValidator::getReaderMgr() const$/;"	f	class:XMLValidator
getReaderMgr	include/xercesc/internal/XMLScanner.hpp	/^inline const ReaderMgr* XMLScanner::getReaderMgr() const$/;"	f	class:XMLScanner
getReaderNum	include/xercesc/internal/EndOfEntityException.hpp	/^inline XMLSize_t EndOfEntityException::getReaderNum() const$/;"	f	class:EndOfEntityException
getReaderNum	include/xercesc/internal/XMLReader.hpp	/^inline XMLSize_t XMLReader::getReaderNum() const$/;"	f	class:XMLReader
getRecursingAnonTypes	include/xercesc/validators/schema/SchemaInfo.hpp	/^SchemaInfo::getRecursingAnonTypes() const {$/;"	f	class:SchemaInfo
getRecursingTypeNames	include/xercesc/validators/schema/SchemaInfo.hpp	/^SchemaInfo::getRecursingTypeNames() const {$/;"	f	class:SchemaInfo
getRedefineNewTypeName	include/xercesc/validators/schema/TraverseSchema.hpp	/^inline void TraverseSchema::getRedefineNewTypeName(const XMLCh* const oldTypeName,$/;"	f	class:TraverseSchema
getRefFrom	include/xercesc/internal/XMLReader.hpp	/^inline XMLReader::RefFrom XMLReader::getRefFrom() const$/;"	f	class:XMLReader
getRefKey	include/xercesc/framework/psvi/XSIDCDefinition.hpp	/^inline XSIDCDefinition* XSIDCDefinition::getRefKey() const$/;"	f	class:XSIDCDefinition
getRefName	include/xercesc/framework/XMLRefInfo.hpp	/^inline const XMLCh* XMLRefInfo::getRefName() const$/;"	f	class:XMLRefInfo
getReferenceEscaped	include/xercesc/internal/ElemStack.hpp	/^inline bool ElemStack::getReferenceEscaped() const$/;"	f	class:ElemStack
getReferenceNo	include/xercesc/util/regx/StringToken.hpp	/^inline int StringToken::getReferenceNo() const {$/;"	f	class:StringToken
getReferenceNo	include/xercesc/util/regx/Token.hpp	/^inline int Token::getReferenceNo() const {$/;"	f	class:Token
getRegBasedAuthority	include/xercesc/util/XMLUri.hpp	/^inline const XMLCh* XMLUri::getRegBasedAuthority() const$/;"	f	class:XMLUri
getRegex	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^inline RegularExpression* DatatypeValidator::getRegex() const$/;"	f	class:DatatypeValidator
getRelatedData	include/xercesc/dom/impl/DOMErrorImpl.hpp	/^inline void* DOMErrorImpl::getRelatedData() const$/;"	f	class:DOMErrorImpl
getRelatedException	include/xercesc/dom/impl/DOMErrorImpl.hpp	/^inline void* DOMErrorImpl::getRelatedException() const$/;"	f	class:DOMErrorImpl
getRelatedNode	include/xercesc/dom/impl/DOMLocatorImpl.hpp	/^inline DOMNode* DOMLocatorImpl::getRelatedNode() const$/;"	f	class:DOMLocatorImpl
getRequired	include/xercesc/framework/psvi/XSAttributeUse.hpp	/^inline bool XSAttributeUse::getRequired() const$/;"	f	class:XSAttributeUse
getResourceIdentifierType	include/xercesc/util/XMLResourceIdentifier.hpp	/^inline XMLResourceIdentifier::ResourceIdentifierType XMLResourceIdentifier::getResourceIdentifierType() const $/;"	f	class:XMLResourceIdentifier
getRetVal	include/xercesc/util/XMLDateTime.hpp	/^inline int XMLDateTime::getRetVal(int c1, int c2)$/;"	f	class:XMLDateTime
getRoot	include/xercesc/validators/schema/SchemaInfo.hpp	/^inline const DOMElement* SchemaInfo::getRoot() const {$/;"	f	class:SchemaInfo
getRootGrammar	include/xercesc/internal/XMLScanner.hpp	/^inline Grammar* XMLScanner::getRootGrammar() const$/;"	f	class:XMLScanner
getRootGrammar	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^inline Grammar* SAX2XMLReaderImpl::getRootGrammar()$/;"	f	class:SAX2XMLReaderImpl
getSawError	include/xercesc/internal/XMLInternalErrorHandler.hpp	/^inline bool XMLInternalErrorHandler::getSawError() const$/;"	f	class:XMLInternalErrorHandler
getSawFatal	include/xercesc/internal/XMLInternalErrorHandler.hpp	/^inline bool XMLInternalErrorHandler::getSawFatal() const$/;"	f	class:XMLInternalErrorHandler
getSawFatal	include/xercesc/validators/schema/XSDDOMParser.hpp	/^inline bool XSDDOMParser::getSawFatal() const$/;"	f	class:XSDDOMParser
getSawWarning	include/xercesc/internal/XMLInternalErrorHandler.hpp	/^inline bool XMLInternalErrorHandler::getSawWarning() const$/;"	f	class:XMLInternalErrorHandler
getScale	include/xercesc/util/XMLBigDecimal.hpp	/^inline unsigned int XMLBigDecimal::getScale() const$/;"	f	class:XMLBigDecimal
getScanner	include/xercesc/framework/XMLValidator.hpp	/^inline XMLScanner* XMLValidator::getScanner()$/;"	f	class:XMLValidator
getScanner	include/xercesc/framework/XMLValidator.hpp	/^inline const XMLScanner* XMLValidator::getScanner() const$/;"	f	class:XMLValidator
getScanner	include/xercesc/parsers/AbstractDOMParser.hpp	/^inline XMLScanner* AbstractDOMParser::getScanner() const$/;"	f	class:AbstractDOMParser
getScanner	include/xercesc/parsers/SAXParser.hpp	/^inline const XMLScanner& SAXParser::getScanner() const$/;"	f	class:SAXParser
getSchemaDefault	include/xercesc/framework/psvi/PSVIItem.hpp	/^inline const XMLCh* PSVIItem::getSchemaDefault() $/;"	f	class:PSVIItem
getSchemaInformation	include/xercesc/framework/psvi/PSVIElement.hpp	/^inline XSModel* PSVIElement::getSchemaInformation() $/;"	f	class:PSVIElement
getSchemaLocation	include/xercesc/util/XMLResourceIdentifier.hpp	/^inline const XMLCh* XMLResourceIdentifier::getSchemaLocation() const$/;"	f	class:XMLResourceIdentifier
getSchemaNamespace	include/xercesc/framework/psvi/XSNamespaceItem.hpp	/^inline const XMLCh *XSNamespaceItem::getSchemaNamespace() const$/;"	f	class:XSNamespaceItem
getSchemaNormalizedValue	include/xercesc/framework/psvi/PSVIItem.hpp	/^inline const XMLCh* PSVIItem::getSchemaNormalizedValue() $/;"	f	class:PSVIItem
getScheme	include/xercesc/util/XMLUri.hpp	/^inline const XMLCh* XMLUri::getScheme() const$/;"	f	class:XMLUri
getScope	include/xercesc/framework/psvi/XSAttributeDeclaration.hpp	/^inline XSConstants::SCOPE XSAttributeDeclaration::getScope() const$/;"	f	class:XSAttributeDeclaration
getScope	include/xercesc/framework/psvi/XSElementDeclaration.hpp	/^inline XSConstants::SCOPE XSElementDeclaration::getScope() const$/;"	f	class:XSElementDeclaration
getScope	include/xercesc/validators/schema/XercesGroupInfo.hpp	/^inline unsigned int XercesGroupInfo::getScope() const {$/;"	f	class:XercesGroupInfo
getScopeCount	include/xercesc/validators/schema/SchemaGrammar.hpp	/^SchemaGrammar::getScopeCount () const$/;"	f	class:SchemaGrammar
getScopeDefined	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline unsigned int ComplexTypeInfo::getScopeDefined() const {$/;"	f	class:ComplexTypeInfo
getSecond	include/xercesc/validators/common/ContentSpecNode.hpp	/^inline ContentSpecNode* ContentSpecNode::getSecond()$/;"	f	class:ContentSpecNode
getSecond	include/xercesc/validators/common/ContentSpecNode.hpp	/^inline const ContentSpecNode* ContentSpecNode::getSecond() const$/;"	f	class:ContentSpecNode
getSecurityManager	include/xercesc/internal/XMLScanner.hpp	/^inline SecurityManager* XMLScanner::getSecurityManager() const$/;"	f	class:XMLScanner
getSelector	include/xercesc/validators/schema/identity/IdentityConstraint.hpp	/^inline IC_Selector* IdentityConstraint::getSelector() const {$/;"	f	class:IdentityConstraint
getSeverity	include/xercesc/dom/impl/DOMErrorImpl.hpp	/^inline DOMError::ErrorSeverity DOMErrorImpl::getSeverity() const$/;"	f	class:DOMErrorImpl
getSign	include/xercesc/util/XMLBigDecimal.hpp	/^inline int XMLBigDecimal::getSign() const$/;"	f	class:XMLBigDecimal
getSign	include/xercesc/util/XMLBigInteger.hpp	/^inline int XMLBigInteger::getSign() const$/;"	f	class:XMLBigInteger
getSimpleType	include/xercesc/framework/psvi/XSComplexTypeDefinition.hpp	/^inline XSSimpleTypeDefinition* XSComplexTypeDefinition::getSimpleType() const$/;"	f	class:XSComplexTypeDefinition
getSize	include/xercesc/util/BinMemInputStream.hpp	/^inline XMLSize_t BinMemInputStream::getSize() const$/;"	f	class:BinMemInputStream
getSkipDTDValidation	include/xercesc/internal/XMLScanner.hpp	/^inline bool XMLScanner::getSkipDTDValidation() const$/;"	f	class:XMLScanner
getSource	include/xercesc/internal/XMLReader.hpp	/^inline XMLReader::Sources XMLReader::getSource() const$/;"	f	class:XMLReader
getSpecified	include/xercesc/framework/XMLAttr.hpp	/^inline bool XMLAttr::getSpecified() const$/;"	f	class:XMLAttr
getSrcFile	include/xercesc/util/OutOfMemoryException.hpp	/^inline const char* OutOfMemoryException::getSrcFile() const$/;"	f	class:OutOfMemoryException
getSrcFile	include/xercesc/util/XMLException.hpp	/^inline const char* XMLException::getSrcFile() const$/;"	f	class:XMLException
getSrcLine	include/xercesc/util/OutOfMemoryException.hpp	/^inline XMLFileLoc OutOfMemoryException::getSrcLine() const {$/;"	f	class:OutOfMemoryException
getSrcLine	include/xercesc/util/XMLException.hpp	/^inline XMLFileLoc XMLException::getSrcLine() const$/;"	f	class:XMLException
getSrcOffset	include/xercesc/internal/ReaderMgr.hpp	/^inline XMLFilePos ReaderMgr::getSrcOffset() const$/;"	f	class:ReaderMgr
getSrcOffset	include/xercesc/internal/XMLScanner.hpp	/^inline XMLFilePos XMLScanner::getSrcOffset() const$/;"	f	class:XMLScanner
getSrcOffset	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^inline XMLFilePos SAX2XMLReaderImpl::getSrcOffset() const$/;"	f	class:SAX2XMLReaderImpl
getStandalone	include/xercesc/internal/XMLScanner.hpp	/^inline bool XMLScanner::getStandalone() const$/;"	f	class:XMLScanner
getStandardUriConformant	include/xercesc/internal/XMLScanner.hpp	/^inline bool XMLScanner::getStandardUriConformant() const$/;"	f	class:XMLScanner
getStartPos	include/xercesc/util/regx/Match.hpp	/^inline int Match::getStartPos(int index) const {$/;"	f	class:Match
getState	include/xercesc/util/regx/RegxParser.hpp	/^inline RegxParser::parserState RegxParser::getState() const {$/;"	f	class:RegxParser
getStep	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^inline XercesStep* XercesLocationPath::getStep(const XMLSize_t index) const {$/;"	f	class:XercesLocationPath
getStepSize	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^inline XMLSize_t XercesLocationPath::getStepSize() const {$/;"	f	class:XercesLocationPath
getStorerLevel	include/xercesc/internal/XSerializeEngine.hpp	/^unsigned int XSerializeEngine::getStorerLevel() const$/;"	f	class:XSerializeEngine
getString	include/xercesc/util/regx/RegularExpression.hpp	/^            inline const XMLCh* getString() const { return fString; }$/;"	f	class:RegularExpression::Context
getString	include/xercesc/util/regx/StringToken.hpp	/^inline const XMLCh* StringToken::getString() const {$/;"	f	class:StringToken
getString	include/xercesc/util/regx/Token.hpp	/^inline const XMLCh* Token::getString() const {$/;"	f	class:Token
getStringCount	include/xercesc/util/StringPool.hpp	/^inline unsigned int XMLStringPool::getStringCount() const$/;"	f	class:XMLStringPool
getStringData	include/xercesc/dom/impl/DOMLSInputImpl.hpp	/^inline const XMLCh* DOMLSInputImpl::getStringData() const$/;"	f	class:DOMLSInputImpl
getStringData	include/xercesc/framework/Wrapper4InputSource.hpp	/^inline const XMLCh* Wrapper4InputSource::getStringData() const$/;"	f	class:Wrapper4InputSource
getStringPool	include/xercesc/validators/common/GrammarResolver.hpp	/^inline XMLStringPool* GrammarResolver::getStringPool() {$/;"	f	class:GrammarResolver
getSubstitutionGroupAffiliation	include/xercesc/framework/psvi/XSElementDeclaration.hpp	/^inline XSElementDeclaration* XSElementDeclaration::getSubstitutionGroupAffiliation() const$/;"	f	class:XSElementDeclaration
getSubstitutionGroupElem	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^SchemaElementDecl::getSubstitutionGroupElem() const {$/;"	f	class:SchemaElementDecl
getSubstitutionGroupExclusions	include/xercesc/framework/psvi/XSElementDeclaration.hpp	/^inline short XSElementDeclaration::getSubstitutionGroupExclusions() const$/;"	f	class:XSElementDeclaration
getSystemId	include/xercesc/dom/impl/DOMLSInputImpl.hpp	/^inline const XMLCh* DOMLSInputImpl::getSystemId() const$/;"	f	class:DOMLSInputImpl
getSystemId	include/xercesc/dom/impl/DOMLSOutputImpl.hpp	/^inline const XMLCh* DOMLSOutputImpl::getSystemId() const$/;"	f	class:DOMLSOutputImpl
getSystemId	include/xercesc/framework/XMLDTDDescription.hpp	/^    virtual const XMLCh*          getSystemId() const {return 0;};$/;"	f	class:XMLDTDDescription
getSystemId	include/xercesc/framework/XMLEntityDecl.hpp	/^inline const XMLCh* XMLEntityDecl::getSystemId() const$/;"	f	class:XMLEntityDecl
getSystemId	include/xercesc/framework/XMLNotationDecl.hpp	/^inline const XMLCh* XMLNotationDecl::getSystemId() const$/;"	f	class:XMLNotationDecl
getSystemId	include/xercesc/framework/psvi/XSAnnotation.hpp	/^inline const XMLCh* XSAnnotation::getSystemId() const$/;"	f	class:XSAnnotation
getSystemId	include/xercesc/internal/XMLReader.hpp	/^inline const XMLCh* XMLReader::getSystemId() const$/;"	f	class:XMLReader
getSystemId	include/xercesc/sax/InputSource.hpp	/^inline const XMLCh* InputSource::getSystemId() const$/;"	f	class:InputSource
getSystemId	include/xercesc/util/XMLResourceIdentifier.hpp	/^inline const XMLCh* XMLResourceIdentifier::getSystemId() const$/;"	f	class:XMLResourceIdentifier
getSystemId	include/xercesc/validators/schema/XSDLocator.hpp	/^inline const XMLCh* XSDLocator::getSystemId() const$/;"	f	class:XSDLocator
getTargetNSURI	include/xercesc/validators/schema/SchemaInfo.hpp	/^inline int SchemaInfo::getTargetNSURI() const {$/;"	f	class:SchemaInfo
getTargetNSURIString	include/xercesc/validators/schema/SchemaInfo.hpp	/^inline const XMLCh* SchemaInfo::getTargetNSURIString() const {$/;"	f	class:SchemaInfo
getTargetNamespace	include/xercesc/validators/DTD/DTDGrammar.hpp	/^inline const XMLCh* DTDGrammar::getTargetNamespace() const {$/;"	f	class:DTDGrammar
getTargetNamespace	include/xercesc/validators/schema/SchemaGrammar.hpp	/^inline const XMLCh* SchemaGrammar::getTargetNamespace() const {$/;"	f	class:SchemaGrammar
getTermType	include/xercesc/framework/psvi/XSParticle.hpp	/^inline XSParticle::TERM_TYPE XSParticle::getTermType() const$/;"	f	class:XSParticle
getThrowAtEnd	include/xercesc/internal/XMLReader.hpp	/^inline bool XMLReader::getThrowAtEnd() const$/;"	f	class:XMLReader
getThrowEOE	include/xercesc/internal/ReaderMgr.hpp	/^inline bool ReaderMgr::getThrowEOE() const$/;"	f	class:ReaderMgr
getTokenFactory	include/xercesc/util/regx/RangeTokenMap.hpp	/^inline TokenFactory* RangeTokenMap::getTokenFactory() const {$/;"	f	class:RangeTokenMap
getTokenFactory	include/xercesc/util/regx/RegxParser.hpp	/^inline TokenFactory* RegxParser::getTokenFactory() const {$/;"	f	class:RegxParser
getTokenRegistry	include/xercesc/util/regx/RangeTokenMap.hpp	/^inline RefHashTableOf<RangeTokenElemMap>* RangeTokenMap::getTokenRegistry() const {$/;"	f	class:RangeTokenMap
getTokenType	include/xercesc/util/regx/Token.hpp	/^inline Token::tokType Token::getTokenType() const {$/;"	f	class:Token
getTotalDigit	include/xercesc/util/XMLBigDecimal.hpp	/^inline unsigned int XMLBigDecimal::getTotalDigit() const$/;"	f	class:XMLBigDecimal
getTotalDigit	include/xercesc/util/XMLBigInteger.hpp	/^inline unsigned int XMLBigInteger::getTotalDigit() const$/;"	f	class:XMLBigInteger
getTotalDigits	include/xercesc/validators/datatype/DecimalDatatypeValidator.hpp	/^inline unsigned int DecimalDatatypeValidator::getTotalDigits() const$/;"	f	class:DecimalDatatypeValidator
getTranscoder	include/xercesc/framework/XMLFormatter.hpp	/^inline XMLTranscoder* XMLFormatter::getTranscoder()$/;"	f	class:XMLFormatter
getTranscoder	include/xercesc/framework/XMLFormatter.hpp	/^inline const XMLTranscoder* XMLFormatter::getTranscoder() const$/;"	f	class:XMLFormatter
getType	include/xercesc/dom/impl/DOMErrorImpl.hpp	/^inline const XMLCh* DOMErrorImpl::getType() const$/;"	f	class:DOMErrorImpl
getType	include/xercesc/framework/XMLAttDef.hpp	/^inline XMLAttDef::AttTypes XMLAttDef::getType() const$/;"	f	class:XMLAttDef
getType	include/xercesc/framework/XMLAttr.hpp	/^inline XMLAttDef::AttTypes XMLAttr::getType() const$/;"	f	class:XMLAttr
getType	include/xercesc/framework/psvi/XSObject.hpp	/^inline XSConstants::COMPONENT_TYPE XSObject::getType() const$/;"	f	class:XSObject
getType	include/xercesc/internal/XMLReader.hpp	/^inline XMLReader::Types XMLReader::getType() const$/;"	f	class:XMLReader
getType	include/xercesc/util/OutOfMemoryException.hpp	/^inline const XMLCh* OutOfMemoryException::getType() const$/;"	f	class:OutOfMemoryException
getType	include/xercesc/util/XMLAbstractDoubleFloat.hpp	/^inline  XMLAbstractDoubleFloat::LiteralType   XMLAbstractDoubleFloat::getType() const$/;"	f	class:XMLAbstractDoubleFloat
getType	include/xercesc/validators/common/CMNode.hpp	/^inline ContentSpecNode::NodeTypes CMNode::getType() const$/;"	f	class:CMNode
getType	include/xercesc/validators/common/ContentSpecNode.hpp	/^inline ContentSpecNode::NodeTypes ContentSpecNode::getType() const$/;"	f	class:ContentSpecNode
getType	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^inline DatatypeValidator::ValidatorType DatatypeValidator::getType() const$/;"	f	class:DatatypeValidator
getType	include/xercesc/validators/schema/identity/IC_Key.hpp	/^inline short IC_Key::getType() const {$/;"	f	class:IC_Key
getType	include/xercesc/validators/schema/identity/IC_KeyRef.hpp	/^inline short IC_KeyRef::getType() const {$/;"	f	class:IC_KeyRef
getType	include/xercesc/validators/schema/identity/IC_Unique.hpp	/^inline short IC_Unique::getType() const {$/;"	f	class:IC_Unique
getType	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    short getType() const { return fType; }$/;"	f	class:XercesNodeTest
getTypeCategory	include/xercesc/framework/psvi/XSTypeDefinition.hpp	/^inline XSTypeDefinition::TYPE_CATEGORY XSTypeDefinition::getTypeCategory() const$/;"	f	class:XSTypeDefinition
getTypeDefinition	include/xercesc/framework/psvi/PSVIAttribute.hpp	/^inline XSTypeDefinition* PSVIAttribute::getTypeDefinition()$/;"	f	class:PSVIAttribute
getTypeDefinition	include/xercesc/framework/psvi/XSAttributeDeclaration.hpp	/^inline XSSimpleTypeDefinition* XSAttributeDeclaration::getTypeDefinition() const$/;"	f	class:XSAttributeDeclaration
getTypeDefinition	include/xercesc/framework/psvi/XSElementDeclaration.hpp	/^inline XSTypeDefinition* XSElementDeclaration::getTypeDefinition() const$/;"	f	class:XSElementDeclaration
getTypeLocalName	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^inline const XMLCh* DatatypeValidator::getTypeLocalName() const$/;"	f	class:DatatypeValidator
getTypeLocalName	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline const XMLCh* ComplexTypeInfo::getTypeLocalName() const$/;"	f	class:ComplexTypeInfo
getTypeName	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^inline const XMLCh* DatatypeValidator::getTypeName() const$/;"	f	class:DatatypeValidator
getTypeName	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline XMLCh* ComplexTypeInfo::getTypeName() const {$/;"	f	class:ComplexTypeInfo
getTypeUri	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^inline const XMLCh* DatatypeValidator::getTypeUri() const$/;"	f	class:DatatypeValidator
getTypeUri	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline const XMLCh* ComplexTypeInfo::getTypeUri() const$/;"	f	class:ComplexTypeInfo
getURI	include/xercesc/dom/impl/DOMLocatorImpl.hpp	/^inline const XMLCh* DOMLocatorImpl::getURI() const$/;"	f	class:DOMLocatorImpl
getURI	include/xercesc/framework/XMLElementDecl.hpp	/^inline unsigned int XMLElementDecl::getURI() const$/;"	f	class:XMLElementDecl
getURI	include/xercesc/util/QName.hpp	/^inline unsigned int QName::getURI() const$/;"	f	class:QName
getURIForPrefix	include/xercesc/framework/ValidationContext.hpp	/^    virtual const XMLCh* getURIForPrefix(XMLCh* \/*prefix *\/) { return 0; };$/;"	f	class:ValidationContext
getURIId	include/xercesc/framework/XMLAttr.hpp	/^inline unsigned int XMLAttr::getURIId() const$/;"	f	class:XMLAttr
getURIStringPool	include/xercesc/framework/psvi/XSModel.hpp	/^inline XMLStringPool*  XSModel::getURIStringPool()$/;"	f	class:XSModel
getURIStringPool	include/xercesc/internal/XMLScanner.hpp	/^inline XMLStringPool* XMLScanner::getURIStringPool()$/;"	f	class:XMLScanner
getURIStringPool	include/xercesc/internal/XMLScanner.hpp	/^inline const XMLStringPool* XMLScanner::getURIStringPool() const$/;"	f	class:XMLScanner
getURIText	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^inline const XMLCh* SAX2XMLReaderImpl::getURIText(unsigned int uriId) const$/;"	f	class:SAX2XMLReaderImpl
getURLText	include/xercesc/util/XMLURL.hpp	/^inline const XMLCh* XMLURL::getURLText() const$/;"	f	class:XMLURL
getUnRepFlags	include/xercesc/framework/XMLFormatter.hpp	/^inline XMLFormatter::UnRepFlags XMLFormatter::getUnRepFlags() const$/;"	f	class:XMLFormatter
getUnknownNamespaceId	include/xercesc/internal/XMLScanner.hpp	/^inline unsigned int XMLScanner::getUnknownNamespaceId() const$/;"	f	class:XMLScanner
getUriText	include/xercesc/util/XMLUri.hpp	/^inline const XMLCh* XMLUri::getUriText() const$/;"	f	class:XMLUri
getUsed	include/xercesc/framework/XMLRefInfo.hpp	/^inline bool XMLRefInfo::getUsed() const$/;"	f	class:XMLRefInfo
getUser	include/xercesc/util/XMLURL.hpp	/^inline const XMLCh* XMLURL::getUser() const$/;"	f	class:XMLURL
getUserDefinedRegistry	include/xercesc/validators/datatype/DatatypeValidatorFactory.hpp	/^DatatypeValidatorFactory::getUserDefinedRegistry() const {$/;"	f	class:DatatypeValidatorFactory
getUserInfo	include/xercesc/util/XMLUri.hpp	/^inline const XMLCh* XMLUri::getUserInfo() const$/;"	f	class:XMLUri
getUtf16Offset	include/xercesc/dom/impl/DOMLocatorImpl.hpp	/^inline XMLFilePos DOMLocatorImpl::getUtf16Offset() const$/;"	f	class:DOMLocatorImpl
getValidSubstitutionGroups	include/xercesc/validators/schema/SchemaGrammar.hpp	/^SchemaGrammar::getValidSubstitutionGroups() const {$/;"	f	class:SchemaGrammar
getValidateAnnotations	include/xercesc/internal/XMLScanner.hpp	/^inline bool XMLScanner::getValidateAnnotations() const$/;"	f	class:XMLScanner
getValidated	include/xercesc/validators/DTD/DTDGrammar.hpp	/^inline bool DTDGrammar::getValidated() const$/;"	f	class:DTDGrammar
getValidated	include/xercesc/validators/schema/SchemaGrammar.hpp	/^inline bool SchemaGrammar::getValidated() const$/;"	f	class:SchemaGrammar
getValidatingMemberType	include/xercesc/internal/ValidationContextImpl.hpp	/^inline DatatypeValidator * ValidationContextImpl::getValidatingMemberType() const$/;"	f	class:ValidationContextImpl
getValidationAttempted	include/xercesc/framework/psvi/PSVIItem.hpp	/^inline PSVIItem::ASSESSMENT_TYPE PSVIItem::getValidationAttempted() const$/;"	f	class:PSVIItem
getValidationConstraintFatal	include/xercesc/internal/XMLScanner.hpp	/^inline bool XMLScanner::getValidationConstraintFatal() const$/;"	f	class:XMLScanner
getValidationConstraintFatal	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^inline bool SAX2XMLReaderImpl::getValidationConstraintFatal() const$/;"	f	class:SAX2XMLReaderImpl
getValidationContext	include/xercesc/framework/psvi/PSVIItem.hpp	/^inline const XMLCh *PSVIItem::getValidationContext() $/;"	f	class:PSVIItem
getValidationContext	include/xercesc/internal/XMLScanner.hpp	/^inline ValidationContext*  XMLScanner::getValidationContext()$/;"	f	class:XMLScanner
getValidationContext	include/xercesc/validators/schema/SchemaGrammar.hpp	/^inline ValidationContext* SchemaGrammar::getValidationContext() const {$/;"	f	class:SchemaGrammar
getValidationContext	include/xercesc/validators/schema/SchemaInfo.hpp	/^inline ValidationContext* SchemaInfo::getValidationContext() const {$/;"	f	class:SchemaInfo
getValidationFlag	include/xercesc/internal/ElemStack.hpp	/^inline bool ElemStack::getValidationFlag()$/;"	f	class:ElemStack
getValidationSchemaFullChecking	include/xercesc/internal/XMLScanner.hpp	/^inline bool XMLScanner::getValidationSchemaFullChecking() const$/;"	f	class:XMLScanner
getValidationScheme	include/xercesc/internal/XMLScanner.hpp	/^inline XMLScanner::ValSchemes XMLScanner::getValidationScheme() const$/;"	f	class:XMLScanner
getValidator	include/xercesc/internal/XMLScanner.hpp	/^inline XMLValidator* XMLScanner::getValidator()$/;"	f	class:XMLScanner
getValidator	include/xercesc/internal/XMLScanner.hpp	/^inline const XMLValidator* XMLScanner::getValidator() const$/;"	f	class:XMLScanner
getValidity	include/xercesc/framework/psvi/PSVIItem.hpp	/^inline PSVIItem::VALIDITY_STATE PSVIItem::getValidity() const$/;"	f	class:PSVIItem
getValue	include/xercesc/framework/XMLAttDef.hpp	/^inline const XMLCh* XMLAttDef::getValue() const$/;"	f	class:XMLAttDef
getValue	include/xercesc/framework/XMLAttr.hpp	/^inline const XMLCh* XMLAttr::getValue() const$/;"	f	class:XMLAttr
getValue	include/xercesc/framework/XMLEntityDecl.hpp	/^inline const XMLCh* XMLEntityDecl::getValue() const$/;"	f	class:XMLEntityDecl
getValue	include/xercesc/internal/XSerializeEngine.hpp	/^    inline XSerializeEngine::XSerializedObjectId_t getValue() const {return fData; };$/;"	f	class:XSerializedObjectId
getValue	include/xercesc/util/KVStringPair.hpp	/^inline XMLCh* KVStringPair::getValue()$/;"	f	class:KVStringPair
getValue	include/xercesc/util/KVStringPair.hpp	/^inline const XMLCh* KVStringPair::getValue() const$/;"	f	class:KVStringPair
getValue	include/xercesc/util/KeyRefPair.c	/^KeyRefPair<TKey,TValue>::getValue() const$/;"	f	class:TValue
getValue	include/xercesc/util/KeyRefPair.c	/^template <class TKey, class TValue> TValue* KeyRefPair<TKey,TValue>::getValue()$/;"	f	class:TValue
getValue	include/xercesc/util/KeyValuePair.c	/^KeyValuePair<TKey,TValue>::getValue() const$/;"	f	class:TValue
getValue	include/xercesc/util/KeyValuePair.c	/^template <class TKey, class TValue> TValue& KeyValuePair<TKey,TValue>::getValue()$/;"	f	class:TValue
getValue	include/xercesc/util/XMLAbstractDoubleFloat.hpp	/^inline double XMLAbstractDoubleFloat::getValue() const$/;"	f	class:XMLAbstractDoubleFloat
getValue	include/xercesc/util/XMLBigDecimal.hpp	/^inline const XMLCh* XMLBigDecimal::getValue() const$/;"	f	class:XMLBigDecimal
getValueAt	include/xercesc/validators/schema/identity/FieldValueMap.hpp	/^inline XMLCh* FieldValueMap::getValueAt(const XMLSize_t index) const {$/;"	f	class:FieldValueMap
getValueFor	include/xercesc/validators/schema/identity/FieldValueMap.hpp	/^inline XMLCh* FieldValueMap::getValueFor(const IC_Field* const key) const {$/;"	f	class:FieldValueMap
getValueForId	include/xercesc/util/StringPool.hpp	/^inline const XMLCh* XMLStringPool::getValueForId(const unsigned int id) const$/;"	f	class:XMLStringPool
getValueLen	include/xercesc/framework/XMLEntityDecl.hpp	/^inline XMLSize_t XMLEntityDecl::getValueLen() const$/;"	f	class:XMLEntityDecl
getValueStore	include/xercesc/validators/schema/identity/IC_Field.hpp	/^    ValueStore* getValueStore() const { return fValueStore; }$/;"	f	class:FieldMatcher
getValueStoreFor	include/xercesc/validators/schema/identity/ValueStoreCache.hpp	/^ValueStoreCache::getValueStoreFor(const IC_Field* const field, const int initialDepth) {$/;"	f	class:ValueStoreCache
getValueStoreFor	include/xercesc/validators/schema/identity/ValueStoreCache.hpp	/^ValueStoreCache::getValueStoreFor(const IdentityConstraint* const ic, const int initialDepth) {$/;"	f	class:ValueStoreCache
getVariety	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^inline XSSimpleTypeDefinition::VARIETY XSSimpleTypeDefinition::getVariety() const$/;"	f	class:XSSimpleTypeDefinition
getWSFacet	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^inline short DatatypeValidator::getWSFacet() const {$/;"	f	class:DatatypeValidator
getXMLEntityResolver	include/xercesc/parsers/SAX2XMLReaderImpl.hpp	/^inline XMLEntityResolver* SAX2XMLReaderImpl::getXMLEntityResolver() const$/;"	f	class:SAX2XMLReaderImpl
getXMLEntityResolver	include/xercesc/parsers/SAXParser.hpp	/^inline XMLEntityResolver* SAXParser::getXMLEntityResolver()$/;"	f	class:SAXParser
getXMLEntityResolver	include/xercesc/parsers/SAXParser.hpp	/^inline const XMLEntityResolver* SAXParser::getXMLEntityResolver() const$/;"	f	class:SAXParser
getXMLEntityResolver	include/xercesc/parsers/XercesDOMParser.hpp	/^inline XMLEntityResolver* XercesDOMParser::getXMLEntityResolver()$/;"	f	class:XercesDOMParser
getXMLEntityResolver	include/xercesc/parsers/XercesDOMParser.hpp	/^inline const XMLEntityResolver* XercesDOMParser::getXMLEntityResolver() const$/;"	f	class:XercesDOMParser
getXMLNSNamespaceId	include/xercesc/internal/XMLScanner.hpp	/^inline unsigned int XMLScanner::getXMLNSNamespaceId() const$/;"	f	class:XMLScanner
getXMLNamespaceId	include/xercesc/internal/XMLScanner.hpp	/^inline unsigned int XMLScanner::getXMLNamespaceId() const$/;"	f	class:XMLScanner
getXMLVersion	include/xercesc/internal/XMLScanner.hpp	/^inline XMLReader::XMLVersion XMLScanner::getXMLVersion() const$/;"	f	class:XMLScanner
getXPath	include/xercesc/validators/schema/identity/IC_Field.hpp	/^    XercesXPath* getXPath() const { return fXPath; }$/;"	f	class:IC_Field
getXPath	include/xercesc/validators/schema/identity/IC_Selector.hpp	/^    XercesXPath* getXPath() const { return fXPath; }$/;"	f	class:IC_Selector
handlePartialElementPSVI	include/xercesc/framework/psvi/PSVIHandler.hpp	/^inline void PSVIHandler::handlePartialElementPSVI(const XMLCh*        const \/*localName*\/$/;"	f	class:PSVIHandler
handleRepetitions	include/xercesc/validators/common/AllContentModel.hpp	/^AllContentModel::handleRepetitions( const QName* const \/*curElem*\/,$/;"	f	class:AllContentModel
handleRepetitions	include/xercesc/validators/common/MixedContentModel.hpp	/^MixedContentModel::handleRepetitions( const QName* const \/*curElem*\/,$/;"	f	class:MixedContentModel
handleRepetitions	include/xercesc/validators/common/SimpleContentModel.hpp	/^SimpleContentModel::handleRepetitions( const QName* const \/*curElem*\/,$/;"	f	class:SimpleContentModel
handlesDTD	include/xercesc/validators/DTD/DTDValidator.hpp	/^inline bool DTDValidator::handlesDTD() const$/;"	f	class:DTDValidator
handlesDTD	include/xercesc/validators/schema/SchemaValidator.hpp	/^inline bool SchemaValidator::handlesDTD() const$/;"	f	class:SchemaValidator
handlesSchema	include/xercesc/validators/DTD/DTDValidator.hpp	/^inline bool DTDValidator::handlesSchema() const$/;"	f	class:DTDValidator
handlesSchema	include/xercesc/validators/schema/SchemaValidator.hpp	/^inline bool SchemaValidator::handlesSchema() const$/;"	f	class:SchemaValidator
hasAllContent	include/xercesc/validators/common/ContentSpecNode.hpp	/^inline bool ContentSpecNode::hasAllContent() {$/;"	f	class:ContentSpecNode
hasAttDefs	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline bool ComplexTypeInfo::hasAttDefs() const$/;"	f	class:ComplexTypeInfo
hasBackReferences	include/xercesc/util/regx/RegxParser.hpp	/^inline bool RegxParser::hasBackReferences() const {$/;"	f	class:RegxParser
hasDefaults	include/xercesc/dom/impl/DOMAttrMapImpl.hpp	/^inline bool DOMAttrMapImpl::hasDefaults()$/;"	f	class:DOMAttrMapImpl
hasDefaults	include/xercesc/dom/impl/DOMAttrMapImpl.hpp	/^inline void DOMAttrMapImpl::hasDefaults(bool value)$/;"	f	class:DOMAttrMapImpl
hasMoreElements	include/xercesc/util/BaseRefVectorOf.c	/^template <class TElem> bool BaseRefVectorEnumerator<TElem>::hasMoreElements() const$/;"	f	class:TElem
hasMoreElements	include/xercesc/util/Hash2KeysSetOf.c	/^bool Hash2KeysSetOfEnumerator<THasher>::hasMoreElements() const$/;"	f	class:THasher
hasMoreElements	include/xercesc/util/RefArrayOf.c	/^template <class TElem> bool RefArrayEnumerator<TElem>::hasMoreElements() const$/;"	f	class:TElem
hasMoreElements	include/xercesc/util/RefHash2KeysTableOf.c	/^bool RefHash2KeysTableOfEnumerator<TVal, THasher>::hasMoreElements() const$/;"	f	class:THasher
hasMoreElements	include/xercesc/util/RefHash3KeysIdPool.c	/^bool RefHash3KeysIdPoolEnumerator<TVal, THasher>::hasMoreElements() const$/;"	f	class:THasher
hasMoreElements	include/xercesc/util/RefHashTableOf.c	/^bool RefHashTableOfEnumerator<TVal, THasher>::hasMoreElements() const$/;"	f	class:THasher
hasMoreElements	include/xercesc/util/RefStackOf.c	/^template <class TElem> bool RefStackEnumerator<TElem>::hasMoreElements() const$/;"	f	class:TElem
hasMoreElements	include/xercesc/util/ValueArrayOf.c	/^template <class TElem> bool ValueArrayEnumerator<TElem>::hasMoreElements() const$/;"	f	class:TElem
hasMoreElements	include/xercesc/util/ValueHashTableOf.c	/^bool ValueHashTableOfEnumerator<TVal, THasher>::hasMoreElements() const$/;"	f	class:THasher
hasMoreElements	include/xercesc/util/ValueStackOf.c	/^template <class TElem> bool ValueStackEnumerator<TElem>::hasMoreElements() const$/;"	f	class:TElem
hasMoreElements	include/xercesc/util/ValueVectorOf.c	/^ValueVectorEnumerator<TElem>::hasMoreElements() const$/;"	f	class:TElem
hasMoreElements	include/xercesc/validators/common/CMStateSet.hpp	/^    bool hasMoreElements()$/;"	f	class:CMStateSetEnumerator
hasMoreKeys	include/xercesc/util/RefHash3KeysIdPool.c	/^bool RefHash3KeysIdPoolEnumerator<TVal, THasher>::hasMoreKeys() const$/;"	f	class:THasher
hasUserData	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    inline bool hasUserData() const {$/;"	f	class:DOMNodeImpl
hasUserData	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    inline void hasUserData(bool value) {$/;"	f	class:DOMNodeImpl
hash	include/xercesc/util/XMLString.hpp	/^inline XMLSize_t XMLString::hash(const   XMLCh* const   tohash$/;"	f	class:XMLString
hashCode	include/xercesc/validators/common/CMStateSet.hpp	/^    XMLSize_t hashCode() const$/;"	f	class:CMStateSet
hashN	include/xercesc/util/XMLString.hpp	/^inline XMLSize_t XMLString::hashN(const   XMLCh* const   tohash$/;"	f	class:XMLString
hexChar	include/xercesc/util/regx/RegxParser.hpp	/^inline int RegxParser::hexChar(const XMLInt32 ch) {$/;"	f	class:RegxParser
hexNumberTable	include/xercesc/util/HexBin.hpp	/^    static const XMLByte    hexNumberTable[];$/;"	m	class:HexBin
hh	include/xercesc/util/XMLDateTime.hpp	/^        hh = 0,$/;"	e	enum:XMLDateTime::timezoneIndex
ignorableWhitespace	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    inline bool ignorableWhitespace() const {$/;"	f	class:DOMNodeImpl
ignorableWhitespace	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    inline void ignorableWhitespace(bool value) {$/;"	f	class:DOMNodeImpl
ignorableWhitespace	include/xercesc/sax/HandlerBase.hpp	/^HandlerBase::ignorableWhitespace(   const   XMLCh* const$/;"	f	class:HandlerBase
ignorableWhitespace	include/xercesc/sax2/DefaultHandler.hpp	/^DefaultHandler::ignorableWhitespace( const   XMLCh* const$/;"	f	class:DefaultHandler
inGroup	include/xercesc/framework/psvi/XSValue.hpp	/^    static const XSValue::DataGroup inGroup[];$/;"	m	class:XSValue
incRefCount	include/xercesc/dom/DOMNode.hpp	/^    virtual void incRefCount() {}$/;"	f	class:DOMNode
incrementErrorCount	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::incrementErrorCount()$/;"	f	class:XMLScanner
indexofQualifiedName	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^inline int DOMDocumentImpl::indexofQualifiedName(const XMLCh* name)$/;"	f	class:DOMDocumentImpl
init	include/xercesc/validators/common/ContentLeafNameTypeVector.hpp	/^inline void ContentLeafNameTypeVector::init(const XMLSize_t size)$/;"	f	class:ContentLeafNameTypeVector
init	include/xercesc/validators/datatype/AbstractNumericValidator.hpp	/^inline void AbstractNumericValidator::init(RefArrayVectorOf<XMLCh>*  const enums$/;"	f	class:AbstractNumericValidator
initParser	include/xercesc/util/XMLDateTime.hpp	/^inline bool XMLDateTime::initParser()$/;"	f	class:XMLDateTime
initialize	include/xercesc/dom/impl/DOMDeepNodeListPool.c	/^void DOMDeepNodeListPool<TVal, THasher>::initialize(const XMLSize_t modulus)$/;"	f	class:THasher
initialize	include/xercesc/util/Hash2KeysSetOf.c	/^void Hash2KeysSetOf<THasher>::initialize(const XMLSize_t modulus)$/;"	f	class:THasher
initialize	include/xercesc/util/RefHash2KeysTableOf.c	/^void RefHash2KeysTableOf<TVal, THasher>::initialize(const XMLSize_t modulus)$/;"	f	class:THasher
initialize	include/xercesc/util/RefHash3KeysIdPool.c	/^void RefHash3KeysIdPool<TVal, THasher>::initialize(const XMLSize_t modulus)$/;"	f	class:THasher
initialize	include/xercesc/util/RefHashTableOf.c	/^void RefHashTableOf<TVal, THasher>::initialize(const XMLSize_t modulus)$/;"	f	class:THasher
initialize	include/xercesc/util/ValueHashTableOf.c	/^void ValueHashTableOf<TVal, THasher>::initialize(const XMLSize_t modulus)$/;"	f	class:THasher
insertElementAt	include/xercesc/util/BaseRefVectorOf.c	/^insertElementAt(TElem* const toInsert, const XMLSize_t insertAt)$/;"	f	class:TElem
installAdvDocHandler	include/xercesc/parsers/SAX2XMLFilterImpl.hpp	/^inline void SAX2XMLFilterImpl::installAdvDocHandler(XMLDocumentHandler* const \/*toInstall*\/)$/;"	f	class:SAX2XMLFilterImpl
intCh	include/xercesc/util/TransService.hpp	/^        XMLCh       intCh;$/;"	m	struct:XMLTransService::TransRec
intValue	include/xercesc/util/XMLInteger.hpp	/^inline int XMLInteger::intValue() const$/;"	f	class:XMLInteger
internalEntityDecl	include/xercesc/sax2/DefaultHandler.hpp	/^inline void DefaultHandler::internalEntityDecl(const XMLCh* const,$/;"	f	class:DefaultHandler
intersectRanges	include/xercesc/util/regx/Token.hpp	/^inline void Token::intersectRanges(RangeToken* const) {$/;"	f	class:Token
isAtomic	include/xercesc/validators/datatype/AnySimpleTypeDatatypeValidator.hpp	/^inline bool AnySimpleTypeDatatypeValidator::isAtomic() const {$/;"	f	class:AnySimpleTypeDatatypeValidator
isAtomic	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^inline bool DatatypeValidator::isAtomic() const {$/;"	f	class:DatatypeValidator
isAtomic	include/xercesc/validators/datatype/ListDatatypeValidator.hpp	/^inline bool ListDatatypeValidator::isAtomic() const$/;"	f	class:ListDatatypeValidator
isAtomic	include/xercesc/validators/datatype/UnionDatatypeValidator.hpp	/^inline bool UnionDatatypeValidator::isAtomic() const {$/;"	f	class:UnionDatatypeValidator
isAttrOrAttrGroup	include/xercesc/validators/schema/TraverseSchema.hpp	/^inline bool TraverseSchema::isAttrOrAttrGroup(const DOMElement* const elem) {$/;"	f	class:TraverseSchema
isBaseFromAnotherSchema	include/xercesc/validators/schema/TraverseSchema.hpp	/^inline bool TraverseSchema::isBaseFromAnotherSchema(const XMLCh* const baseURI)$/;"	f	class:TraverseSchema
isCachingGrammarFromParse	include/xercesc/internal/XMLScanner.hpp	/^inline bool XMLScanner::isCachingGrammarFromParse() const$/;"	f	class:XMLScanner
isChildNode	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    inline bool isChildNode() const {$/;"	f	class:DOMNodeImpl
isControlChar	include/xercesc/internal/XMLReader.hpp	/^inline bool XMLReader::isControlChar(const XMLCh toCheck) const$/;"	f	class:XMLReader
isControlChar	include/xercesc/util/XMLChar.hpp	/^inline bool XMLChar1_0::isControlChar(const XMLCh toCheck, const XMLCh toCheck2)$/;"	f	class:XMLChar1_0
isControlChar	include/xercesc/util/XMLChar.hpp	/^inline bool XMLChar1_1::isControlChar(const XMLCh toCheck, const XMLCh toCheck2)$/;"	f	class:XMLChar1_1
isDataConverted	include/xercesc/util/XMLAbstractDoubleFloat.hpp	/^inline bool XMLAbstractDoubleFloat::isDataConverted() const$/;"	f	class:XMLAbstractDoubleFloat
isDataNull	include/xercesc/util/Janitor.c	/^template <class T> bool Janitor<T>::isDataNull()$/;"	f	class:T
isDataOverflowed	include/xercesc/util/XMLAbstractDoubleFloat.hpp	/^inline bool XMLAbstractDoubleFloat::isDataOverflowed() const$/;"	f	class:XMLAbstractDoubleFloat
isDeclared	include/xercesc/framework/XMLElementDecl.hpp	/^inline bool XMLElementDecl::isDeclared() const$/;"	f	class:XMLElementDecl
isDelimeter	include/xercesc/util/XMLStringTokenizer.hpp	/^inline bool XMLStringTokenizer::isDelimeter(const XMLCh ch) {$/;"	f	class:XMLStringTokenizer
isEOLChar	include/xercesc/util/regx/RegxUtil.hpp	/^inline bool RegxUtil::isEOLChar(const XMLCh ch) {$/;"	f	class:RegxUtil
isEmpty	include/xercesc/dom/impl/DOMDeepNodeListPool.c	/^bool DOMDeepNodeListPool<TVal, THasher>::isEmpty() const$/;"	f	class:THasher
isEmpty	include/xercesc/framework/XMLBuffer.hpp	/^    bool isEmpty() const$/;"	f	class:XMLBuffer
isEmpty	include/xercesc/framework/XMLBufferMgr.hpp	/^    bool isEmpty() const$/;"	f	class:XMLBufBid
isEmpty	include/xercesc/internal/ElemStack.hpp	/^inline bool ElemStack::isEmpty() const$/;"	f	class:ElemStack
isEmpty	include/xercesc/internal/ElemStack.hpp	/^inline bool WFElemStack::isEmpty() const$/;"	f	class:WFElemStack
isEmpty	include/xercesc/util/Hash2KeysSetOf.c	/^bool Hash2KeysSetOf<THasher>::isEmpty() const$/;"	f	class:THasher
isEmpty	include/xercesc/util/RefHash2KeysTableOf.c	/^bool RefHash2KeysTableOf<TVal, THasher>::isEmpty() const$/;"	f	class:THasher
isEmpty	include/xercesc/util/RefHash3KeysIdPool.c	/^bool RefHash3KeysIdPool<TVal, THasher>::isEmpty() const$/;"	f	class:THasher
isEmpty	include/xercesc/util/RefHashTableOf.c	/^inline bool RefHashTableOf<TVal, THasher>::isEmpty() const$/;"	f	class:THasher
isEmpty	include/xercesc/util/ValueHashTableOf.c	/^bool ValueHashTableOf<TVal, THasher>::isEmpty() const$/;"	f	class:THasher
isEmpty	include/xercesc/validators/common/CMStateSet.hpp	/^    bool isEmpty() const$/;"	f	class:CMStateSet
isEmpty	include/xercesc/validators/schema/NamespaceScope.hpp	/^inline bool NamespaceScope::isEmpty() const$/;"	f	class:NamespaceScope
isError	include/xercesc/framework/XMLErrorCodes.hpp	/^    static bool isError(const XMLErrs::Codes toCheck)$/;"	f	class:XMLErrs
isError	include/xercesc/framework/XMLValidityCodes.hpp	/^    static bool isError(const XMLValid::Codes toCheck)$/;"	f	class:XMLValid
isError	include/xercesc/util/XMLDOMMsg.hpp	/^    static bool isError(const XMLDOMMsg::Codes toCheck)$/;"	f	class:XMLDOMMsg
isExternal	include/xercesc/framework/XMLAttDef.hpp	/^inline bool XMLAttDef::isExternal() const$/;"	f	class:XMLAttDef
isExternal	include/xercesc/framework/XMLElementDecl.hpp	/^inline bool XMLElementDecl::isExternal() const$/;"	f	class:XMLElementDecl
isExternal	include/xercesc/framework/XMLEntityDecl.hpp	/^inline bool XMLEntityDecl::isExternal() const$/;"	f	class:XMLEntityDecl
isFailedRedefine	include/xercesc/validators/schema/SchemaInfo.hpp	/^inline bool SchemaInfo::isFailedRedefine(const DOMElement* const anElem) {$/;"	f	class:SchemaInfo
isFatal	include/xercesc/framework/XMLErrorCodes.hpp	/^    static bool isFatal(const XMLErrs::Codes toCheck)$/;"	f	class:XMLErrs
isFatal	include/xercesc/framework/XMLValidityCodes.hpp	/^    static bool isFatal(const XMLValid::Codes toCheck)$/;"	f	class:XMLValid
isFatal	include/xercesc/util/XMLDOMMsg.hpp	/^    static bool isFatal(const XMLDOMMsg::Codes toCheck)$/;"	f	class:XMLDOMMsg
isFirstAdopted	include/xercesc/validators/common/ContentSpecNode.hpp	/^inline bool ContentSpecNode::isFirstAdopted() const$/;"	f	class:ContentSpecNode
isFirstChild	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    inline bool isFirstChild() const {$/;"	f	class:DOMNodeImpl
isFirstChild	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    inline void isFirstChild(bool value) {$/;"	f	class:DOMNodeImpl
isFirstNCNameChar	include/xercesc/internal/XMLReader.hpp	/^inline bool XMLReader::isFirstNCNameChar(const XMLCh toCheck) const$/;"	f	class:XMLReader
isFirstNCNameChar	include/xercesc/util/XMLChar.hpp	/^inline bool XMLChar1_0::isFirstNCNameChar(const XMLCh toCheck, const XMLCh toCheck2)$/;"	f	class:XMLChar1_0
isFirstNCNameChar	include/xercesc/util/XMLChar.hpp	/^inline bool XMLChar1_1::isFirstNCNameChar(const XMLCh toCheck, const XMLCh toCheck2)$/;"	f	class:XMLChar1_1
isFirstNameChar	include/xercesc/internal/XMLReader.hpp	/^inline bool XMLReader::isFirstNameChar(const XMLCh toCheck) const$/;"	f	class:XMLReader
isFirstNameChar	include/xercesc/util/XMLChar.hpp	/^inline bool XMLChar1_0::isFirstNameChar(const XMLCh toCheck, const XMLCh toCheck2)$/;"	f	class:XMLChar1_0
isFirstNameChar	include/xercesc/util/XMLChar.hpp	/^inline bool XMLChar1_1::isFirstNameChar(const XMLCh toCheck, const XMLCh toCheck2)$/;"	f	class:XMLChar1_1
isFixed	include/xercesc/framework/psvi/XSFacet.hpp	/^inline bool XSFacet::isFixed() const$/;"	f	class:XSFacet
isFixed	include/xercesc/framework/psvi/XSMultiValueFacet.hpp	/^inline bool XSMultiValueFacet::isFixed() const$/;"	f	class:XSMultiValueFacet
isGlobalDecl	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^inline bool SchemaElementDecl::isGlobalDecl() const {$/;"	f	class:SchemaElementDecl
isHighSurrogate	include/xercesc/util/regx/RegxUtil.hpp	/^inline bool RegxUtil::isHighSurrogate(const XMLCh ch) {$/;"	f	class:RegxUtil
isIdAttr	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    inline bool isIdAttr() const {$/;"	f	class:DOMNodeImpl
isIdAttr	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    inline void isIdAttr(bool value) {$/;"	f	class:DOMNodeImpl
isImportingNS	include/xercesc/validators/schema/TraverseSchema.hpp	/^inline bool TraverseSchema::isImportingNS(const int namespaceURI) {$/;"	f	class:TraverseSchema
isLeafNode	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    inline bool isLeafNode() const {$/;"	f	class:DOMNodeImpl
isLoading	include/xercesc/internal/XSerializeEngine.hpp	/^inline bool XSerializeEngine::isLoading() const$/;"	f	class:XSerializeEngine
isLowSurrogate	include/xercesc/util/regx/RegxUtil.hpp	/^inline bool RegxUtil::isLowSurrogate(const XMLCh ch) {$/;"	f	class:RegxUtil
isNCNameChar	include/xercesc/internal/XMLReader.hpp	/^inline bool XMLReader::isNCNameChar(const XMLCh toCheck) const$/;"	f	class:XMLReader
isNCNameChar	include/xercesc/util/XMLChar.hpp	/^inline bool XMLChar1_0::isNCNameChar(const XMLCh toCheck, const XMLCh toCheck2)$/;"	f	class:XMLChar1_0
isNCNameChar	include/xercesc/util/XMLChar.hpp	/^inline bool XMLChar1_1::isNCNameChar(const XMLCh toCheck, const XMLCh toCheck2)$/;"	f	class:XMLChar1_1
isNELRecognized	include/xercesc/util/XMLChar.hpp	/^inline bool XMLChar1_0::isNELRecognized() {$/;"	f	class:XMLChar1_0
isNameChar	include/xercesc/internal/XMLReader.hpp	/^inline bool XMLReader::isNameChar(const XMLCh toCheck) const$/;"	f	class:XMLReader
isNameChar	include/xercesc/util/XMLChar.hpp	/^inline bool XMLChar1_0::isNameChar(const XMLCh toCheck, const XMLCh toCheck2)$/;"	f	class:XMLChar1_0
isNameChar	include/xercesc/util/XMLChar.hpp	/^inline bool XMLChar1_1::isNameChar(const XMLCh toCheck, const XMLCh toCheck2)$/;"	f	class:XMLChar1_1
isNormalized	include/xercesc/util/XMLDateTime.hpp	/^inline bool XMLDateTime::isNormalized() const$/;"	f	class:XMLDateTime
isNullable	include/xercesc/validators/common/CMNode.hpp	/^inline bool CMNode::isNullable() const$/;"	f	class:CMNode
isOccurrenceRangeOK	include/xercesc/validators/schema/SchemaValidator.hpp	/^SchemaValidator::isOccurrenceRangeOK(const int min1, const int max1,$/;"	f	class:SchemaValidator
isOwned	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    inline bool isOwned() const {$/;"	f	class:DOMNodeImpl
isOwned	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    inline void isOwned(bool value) {$/;"	f	class:DOMNodeImpl
isPad	include/xercesc/util/Base64.hpp	/^inline bool Base64::isPad(const XMLByte& octet)$/;"	f	class:Base64
isPathCharacter	include/xercesc/util/XMLUri.hpp	/^inline bool XMLUri::isPathCharacter(const XMLCh theChar)$/;"	f	class:XMLUri
isPlainContentChar	include/xercesc/internal/XMLReader.hpp	/^inline bool XMLReader::isPlainContentChar(const XMLCh toCheck) const$/;"	f	class:XMLReader
isPlainContentChar	include/xercesc/util/XMLChar.hpp	/^inline bool XMLChar1_0::isPlainContentChar(const XMLCh toCheck, const XMLCh toCheck2)$/;"	f	class:XMLChar1_0
isPlainContentChar	include/xercesc/util/XMLChar.hpp	/^inline bool XMLChar1_1::isPlainContentChar(const XMLCh toCheck, const XMLCh toCheck2)$/;"	f	class:XMLChar1_1
isPrefixUnknown	include/xercesc/framework/ValidationContext.hpp	/^    virtual bool isPrefixUnknown(XMLCh* \/* prefix *\/) { return true; };$/;"	f	class:ValidationContext
isReadOnly	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    inline bool isReadOnly() const {$/;"	f	class:DOMNodeImpl
isReadOnly	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    inline void isReadOnly(bool value) {$/;"	f	class:DOMNodeImpl
isReadingExternalEntity	include/xercesc/validators/DTD/DTDScanner.hpp	/^inline bool DTDScanner::isReadingExternalEntity() {$/;"	f	class:DTDScanner
isRepeatableLeaf	include/xercesc/validators/common/CMLeaf.hpp	/^inline bool CMLeaf::isRepeatableLeaf() const$/;"	f	class:CMLeaf
isRepeatableLeaf	include/xercesc/validators/common/CMRepeatingLeaf.hpp	/^inline bool CMRepeatingLeaf::isRepeatableLeaf() const$/;"	f	class:CMRepeatingLeaf
isReservedCharacter	include/xercesc/util/XMLUri.hpp	/^inline bool XMLUri::isReservedCharacter(const XMLCh theChar)$/;"	f	class:XMLUri
isReservedOrUnreservedCharacter	include/xercesc/util/XMLUri.hpp	/^inline bool XMLUri::isReservedOrUnreservedCharacter(const XMLCh theChar)$/;"	f	class:XMLUri
isSecondAdopted	include/xercesc/validators/common/ContentSpecNode.hpp	/^inline bool ContentSpecNode::isSecondAdopted() const$/;"	f	class:ContentSpecNode
isSet	include/xercesc/util/regx/RegularExpression.hpp	/^  inline bool RegularExpression::isSet(const int options, const int flag) {$/;"	f	class:RegularExpression
isSet	include/xercesc/util/regx/RegxParser.hpp	/^inline bool RegxParser::isSet(const int flag) {$/;"	f	class:RegxParser
isSet	include/xercesc/util/regx/Token.hpp	/^inline bool Token::isSet(const int options, const unsigned int flag) {$/;"	f	class:Token
isSpecialStartTagChar	include/xercesc/internal/XMLReader.hpp	/^inline bool XMLReader::isSpecialStartTagChar(const XMLCh toCheck) const$/;"	f	class:XMLReader
isSpecialStartTagChar	include/xercesc/util/XMLChar.hpp	/^inline bool XMLChar1_0::isSpecialStartTagChar(const XMLCh toCheck, const XMLCh toCheck2)$/;"	f	class:XMLChar1_0
isSpecialStartTagChar	include/xercesc/util/XMLChar.hpp	/^inline bool XMLChar1_1::isSpecialStartTagChar(const XMLCh toCheck, const XMLCh toCheck2)$/;"	f	class:XMLChar1_1
isSpecialValue	include/xercesc/util/XMLAbstractDoubleFloat.hpp	/^inline bool XMLAbstractDoubleFloat::isSpecialValue() const$/;"	f	class:XMLAbstractDoubleFloat
isSpecified	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    inline bool isSpecified() const {$/;"	f	class:DOMNodeImpl
isSpecified	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    inline void isSpecified(bool value) {$/;"	f	class:DOMNodeImpl
isStoring	include/xercesc/internal/XSerializeEngine.hpp	/^inline bool XSerializeEngine::isStoring() const$/;"	f	class:XSerializeEngine
isSubstitutableBy	include/xercesc/validators/datatype/AnySimpleTypeDatatypeValidator.hpp	/^AnySimpleTypeDatatypeValidator::isSubstitutableBy(const DatatypeValidator* const)$/;"	f	class:AnySimpleTypeDatatypeValidator
isSubstitutableBy	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^DatatypeValidator::isSubstitutableBy(const DatatypeValidator* const toCheck)$/;"	f	class:DatatypeValidator
isSubstitutableBy	include/xercesc/validators/datatype/UnionDatatypeValidator.hpp	/^inline bool UnionDatatypeValidator::isSubstitutableBy(const DatatypeValidator* const toCheck) {$/;"	f	class:UnionDatatypeValidator
isToBeReleased	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    inline bool isToBeReleased() const {$/;"	f	class:DOMNodeImpl
isToBeReleased	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    inline void isToBeReleased(bool value) {$/;"	f	class:DOMNodeImpl
isUnparsed	include/xercesc/framework/XMLEntityDecl.hpp	/^inline bool XMLEntityDecl::isUnparsed() const$/;"	f	class:XMLEntityDecl
isUnreservedCharacter	include/xercesc/util/XMLUri.hpp	/^inline bool XMLUri::isUnreservedCharacter(const XMLCh theChar)$/;"	f	class:XMLUri
isUsingCachedGrammarInParse	include/xercesc/internal/XMLScanner.hpp	/^inline bool XMLScanner::isUsingCachedGrammarInParse() const$/;"	f	class:XMLScanner
isValidatorFromUser	include/xercesc/internal/XMLScanner.hpp	/^inline bool XMLScanner::isValidatorFromUser()$/;"	f	class:XMLScanner
isWarning	include/xercesc/framework/XMLErrorCodes.hpp	/^    static bool isWarning(const XMLErrs::Codes toCheck)$/;"	f	class:XMLErrs
isWarning	include/xercesc/framework/XMLValidityCodes.hpp	/^    static bool isWarning(const XMLValid::Codes toCheck)$/;"	f	class:XMLValid
isWarning	include/xercesc/util/XMLDOMMsg.hpp	/^    static bool isWarning(const XMLDOMMsg::Codes toCheck)$/;"	f	class:XMLDOMMsg
isWhitespace	include/xercesc/internal/XMLReader.hpp	/^inline bool XMLReader::isWhitespace(const XMLCh toCheck) const$/;"	f	class:XMLReader
isWhitespace	include/xercesc/util/XMLChar.hpp	/^inline bool XMLChar1_0::isWhitespace(const XMLCh toCheck)$/;"	f	class:XMLChar1_0
isWhitespace	include/xercesc/util/XMLChar.hpp	/^inline bool XMLChar1_0::isWhitespace(const XMLCh toCheck, const XMLCh toCheck2)$/;"	f	class:XMLChar1_0
isWhitespace	include/xercesc/util/XMLChar.hpp	/^inline bool XMLChar1_1::isWhitespace(const XMLCh toCheck, const XMLCh toCheck2)$/;"	f	class:XMLChar1_1
isWordChar	include/xercesc/util/regx/RegxUtil.hpp	/^inline bool RegxUtil::isWordChar(const XMLCh ch) {$/;"	f	class:RegxUtil
isXMLChar	include/xercesc/internal/XMLReader.hpp	/^inline bool XMLReader::isXMLChar(const XMLCh toCheck) const$/;"	f	class:XMLReader
isXMLChar	include/xercesc/util/XMLChar.hpp	/^inline bool XMLChar1_0::isXMLChar(const XMLCh toCheck, const XMLCh toCheck2)$/;"	f	class:XMLChar1_0
isXMLChar	include/xercesc/util/XMLChar.hpp	/^inline bool XMLChar1_1::isXMLChar(const XMLCh toCheck, const XMLCh toCheck2)$/;"	f	class:XMLChar1_1
isXMLLetter	include/xercesc/internal/XMLReader.hpp	/^inline bool XMLReader::isXMLLetter(const XMLCh toCheck) const$/;"	f	class:XMLReader
isXMLLetter	include/xercesc/util/XMLChar.hpp	/^inline bool XMLChar1_0::isXMLLetter(const XMLCh toCheck, const XMLCh toCheck2)$/;"	f	class:XMLChar1_0
isXMLLetter	include/xercesc/util/XMLChar.hpp	/^inline bool XMLChar1_1::isXMLLetter(const XMLCh toCheck, const XMLCh toCheck2)$/;"	f	class:XMLChar1_1
item	include/xercesc/framework/psvi/XSNamedMap.c	/^TVal* XSNamedMap<TVal>::item(XMLSize_t index)$/;"	f	class:TVal
item	include/xercesc/framework/psvi/XSNamedMap.c	/^const TVal* XSNamedMap<TVal>::item(XMLSize_t index) const$/;"	f	class:TVal
itemByName	include/xercesc/framework/psvi/XSNamedMap.c	/^TVal *XSNamedMap<TVal>::itemByName(const XMLCh *compNamespace,$/;"	f	class:TVal
kCharBufSize	include/xercesc/internal/XMLReader.hpp	/^        kCharBufSize        = 16 * 1024$/;"	e	enum:XMLReader::Constants
kRawBufSize	include/xercesc/internal/XMLReader.hpp	/^        , kRawBufSize       = 48 * 1024$/;"	e	enum:XMLReader::Constants
kTmpBufSize	include/xercesc/framework/XMLFormatter.hpp	/^        kTmpBufSize     = 16 * 1024$/;"	e	enum:XMLFormatter::Constants
keyAt	include/xercesc/validators/schema/identity/FieldValueMap.hpp	/^inline IC_Field* FieldValueMap::keyAt(const XMLSize_t index) const {$/;"	f	class:FieldValueMap
lastElement	include/xercesc/dom/impl/DOMNodeVector.hpp	/^inline DOMNode *DOMNodeVector::lastElement() {$/;"	f	class:DOMNodeVector
lastIndexOf	include/xercesc/util/XMLString.hpp	/^inline int XMLString::lastIndexOf(const XMLCh* const toSearch, const XMLCh ch)$/;"	f	class:XMLString
lastScopeWithBindings	include/xercesc/dom/impl/DOMNormalizer.hpp	/^        Scope *lastScopeWithBindings;$/;"	m	class:DOMNormalizer::InScopeNamespaces
length	include/xercesc/util/TransService.hpp	/^inline XMLSize_t TranscodeFromStr::length() const$/;"	f	class:TranscodeFromStr
length	include/xercesc/util/TransService.hpp	/^inline XMLSize_t TranscodeToStr::length () const$/;"	f	class:TranscodeToStr
lineNumber	include/xercesc/internal/ReaderMgr.hpp	/^                XMLFileLoc      lineNumber;$/;"	m	struct:ReaderMgr::LastExtEntityInfo
lookingAtChar	include/xercesc/internal/ReaderMgr.hpp	/^inline bool ReaderMgr::lookingAtChar(const XMLCh chToCheck)$/;"	f	class:ReaderMgr
lookingAtSpace	include/xercesc/internal/ReaderMgr.hpp	/^inline bool ReaderMgr::lookingAtSpace()$/;"	f	class:ReaderMgr
m_node	include/xercesc/dom/StDOMNode.hpp	/^	T* m_node;$/;"	m	class:StDOMNode
makeNew	include/xercesc/util/TransENameMap.c	/^EEndianNameMapFor<TType>::makeNew(const XMLSize_t      blockSize,$/;"	f	class:TType
makeNew	include/xercesc/util/TransENameMap.c	/^ENameMapFor<TType>::makeNew(const XMLSize_t      blockSize,$/;"	f	class:TType
match	include/xercesc/util/regx/CharToken.hpp	/^inline bool CharToken::match(const XMLInt32 ch){$/;"	f	class:CharToken
maxOccurs	include/xercesc/validators/common/DFAContentModel.hpp	/^        int maxOccurs;$/;"	m	class:DFAContentModel::Occurence
mergeRanges	include/xercesc/util/regx/Token.hpp	/^inline void Token::mergeRanges(const Token *const) {$/;"	f	class:Token
minOccurs	include/xercesc/validators/common/DFAContentModel.hpp	/^        int minOccurs;$/;"	m	class:DFAContentModel::Occurence
mm	include/xercesc/util/XMLDateTime.hpp	/^        mm ,$/;"	e	enum:XMLDateTime::timezoneIndex
mode_Load	include/xercesc/internal/XSerializeEngine.hpp	/^         , mode_Load$/;"	e	enum:XSerializeEngine::<anonymous>
mode_Store	include/xercesc/internal/XSerializeEngine.hpp	/^    enum { mode_Store$/;"	e	enum:XSerializeEngine::<anonymous>
moveChars	include/xercesc/util/XMLString.hpp	/^inline void XMLString::moveChars(       XMLCh* const targetStr$/;"	f	class:XMLString
movePlainContentChars	include/xercesc/internal/ReaderMgr.hpp	/^inline void ReaderMgr::movePlainContentChars(XMLBuffer &dest)$/;"	f	class:ReaderMgr
movePlainContentChars	include/xercesc/internal/XMLReader.hpp	/^inline void XMLReader::movePlainContentChars(XMLBuffer &dest)$/;"	f	class:XMLReader
msg	include/xercesc/dom/DOMException.hpp	/^    const XMLCh *msg;$/;"	m	class:DOMException
needsSyncChildren	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    inline bool needsSyncChildren() const {$/;"	f	class:DOMNodeImpl
needsSyncChildren	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    inline void needsSyncChildren(bool value) {$/;"	f	class:DOMNodeImpl
needsSyncData	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    inline bool needsSyncData() const {$/;"	f	class:DOMNodeImpl
needsSyncData	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    inline void needsSyncData(bool value) {$/;"	f	class:DOMNodeImpl
newInstance	include/xercesc/validators/datatype/BooleanDatatypeValidator.hpp	/^inline DatatypeValidator* BooleanDatatypeValidator::newInstance$/;"	f	class:BooleanDatatypeValidator
newInstance	include/xercesc/validators/datatype/UnionDatatypeValidator.hpp	/^inline DatatypeValidator* UnionDatatypeValidator::newInstance$/;"	f	class:UnionDatatypeValidator
next	include/xercesc/xinclude/XIncludeUtils.hpp	/^    struct XIncludeHistoryNode *next;$/;"	m	struct:XIncludeHistoryNode
nextElement	include/xercesc/util/BaseRefVectorOf.c	/^template <class TElem> TElem& BaseRefVectorEnumerator<TElem>::nextElement()$/;"	f	class:TElem
nextElement	include/xercesc/util/RefArrayOf.c	/^template <class TElem> TElem& RefArrayEnumerator<TElem>::nextElement()$/;"	f	class:TElem
nextElement	include/xercesc/util/RefHash2KeysTableOf.c	/^TVal& RefHash2KeysTableOfEnumerator<TVal, THasher>::nextElement()$/;"	f	class:THasher
nextElement	include/xercesc/util/RefHash3KeysIdPool.c	/^TVal& RefHash3KeysIdPoolEnumerator<TVal, THasher>::nextElement()$/;"	f	class:THasher
nextElement	include/xercesc/util/RefHashTableOf.c	/^TVal& RefHashTableOfEnumerator<TVal, THasher>::nextElement()$/;"	f	class:THasher
nextElement	include/xercesc/util/RefStackOf.c	/^template <class TElem> TElem& RefStackEnumerator<TElem>::nextElement()$/;"	f	class:TElem
nextElement	include/xercesc/util/ValueArrayOf.c	/^template <class TElem> TElem& ValueArrayEnumerator<TElem>::nextElement()$/;"	f	class:TElem
nextElement	include/xercesc/util/ValueHashTableOf.c	/^TVal& ValueHashTableOfEnumerator<TVal, THasher>::nextElement()$/;"	f	class:THasher
nextElement	include/xercesc/util/ValueStackOf.c	/^template <class TElem> TElem& ValueStackEnumerator<TElem>::nextElement()$/;"	f	class:TElem
nextElement	include/xercesc/util/ValueVectorOf.c	/^template <class TElem> TElem& ValueVectorEnumerator<TElem>::nextElement()$/;"	f	class:TElem
nextElement	include/xercesc/validators/common/CMStateSet.hpp	/^    unsigned int nextElement()$/;"	f	class:CMStateSetEnumerator
nextElementKey	include/xercesc/util/Hash2KeysSetOf.c	/^void Hash2KeysSetOfEnumerator<THasher>::nextElementKey(const void*& retKey1, int& retKey2)$/;"	f	class:THasher
nextElementKey	include/xercesc/util/RefHash2KeysTableOf.c	/^void RefHash2KeysTableOfEnumerator<TVal, THasher>::nextElementKey(void*& retKey1, int& retKey2)$/;"	f	class:THasher
nextElementKey	include/xercesc/util/RefHash3KeysIdPool.c	/^void RefHash3KeysIdPoolEnumerator<TVal, THasher>::nextElementKey(void*& retKey1, int& retKey2, int& retKey3)$/;"	f	class:THasher
nextElementKey	include/xercesc/util/RefHashTableOf.c	/^void* RefHashTableOfEnumerator<TVal, THasher>::nextElementKey()$/;"	f	class:THasher
nextElementKey	include/xercesc/util/ValueHashTableOf.c	/^void* ValueHashTableOfEnumerator<TVal, THasher>::nextElementKey()$/;"	f	class:THasher
nextFreeSlot	include/xercesc/dom/impl/DOMNodeVector.hpp	/^    XMLSize_t       nextFreeSlot;$/;"	m	class:DOMNodeVector
nextSibling	include/xercesc/dom/impl/DOMChildNode.hpp	/^    DOMNode                *nextSibling;$/;"	m	class:DOMChildNode
notationDecl	include/xercesc/sax/HandlerBase.hpp	/^inline void HandlerBase::notationDecl(  const   XMLCh* const$/;"	f	class:HandlerBase
notationDecl	include/xercesc/sax2/DefaultHandler.hpp	/^inline void DefaultHandler::notationDecl(  const   XMLCh* const$/;"	f	class:DefaultHandler
numericSign	include/xercesc/framework/psvi/XSValue.hpp	/^    static const bool numericSign[];$/;"	m	class:XSValue
objectType	include/xercesc/framework/XMLElementDecl.hpp	/^    enum objectType$/;"	g	class:XMLElementDecl
opType	include/xercesc/util/regx/Op.hpp	/^    } opType;$/;"	t	class:Op
operator	include/xercesc/util/Janitor.c	/^ArrayJanitor<T>::operator[](int index) const$/;"	f	class:T
operator	include/xercesc/util/Janitor.c	/^Janitor<T>::operator->() const$/;"	f	class:T
operator	include/xercesc/util/Janitor.c	/^T* JanitorMemFunCall<T>::operator->() const$/;"	f	class:T
operator	include/xercesc/util/RefArrayOf.c	/^operator=(const RefArrayOf<TElem>& toAssign)$/;"	m	class:TElem	file:
operator	include/xercesc/util/RefArrayOf.c	/^operator[](const XMLSize_t index) const$/;"	f	class:TElem
operator	include/xercesc/util/RefArrayOf.c	/^operator[](const XMLSize_t index)$/;"	f	class:TElem
operator	include/xercesc/util/ValueArrayOf.c	/^operator=(const ValueArrayOf<TElem>& toAssign)$/;"	m	class:TElem	file:
operator	include/xercesc/util/ValueArrayOf.c	/^operator[](const XMLSize_t index) const$/;"	f	class:TElem
operator	include/xercesc/util/ValueArrayOf.c	/^operator[](const XMLSize_t index)$/;"	f	class:TElem
operator	include/xercesc/util/ValueVectorOf.c	/^ValueVectorOf<TElem>::operator=(const ValueVectorOf<TElem>& toAssign)$/;"	m	class:TElem	file:
operator !=	include/xercesc/dom/StDOMNode.hpp	/^	inline bool operator!= (T* node) const { return (m_node != node); }$/;"	f	class:StDOMNode
operator !=	include/xercesc/util/XMLURL.hpp	/^inline bool XMLURL::operator!=(const XMLURL& toCompare) const$/;"	f	class:XMLURL
operator *	include/xercesc/dom/StDOMNode.hpp	/^	inline T& operator* () { return (*m_node); }$/;"	f	class:StDOMNode
operator *	include/xercesc/dom/StDOMNode.hpp	/^	inline const T& operator* () const { return (*m_node); }$/;"	f	class:StDOMNode
operator ->	include/xercesc/dom/StDOMNode.hpp	/^	inline T* operator-> () const { return (m_node); }$/;"	f	class:StDOMNode
operator <<	include/xercesc/framework/XMLFormatter.hpp	/^inline XMLFormatter& XMLFormatter::operator<<(const EscapeFlags newFlags)$/;"	f	class:XMLFormatter
operator <<	include/xercesc/framework/XMLFormatter.hpp	/^inline XMLFormatter& XMLFormatter::operator<<(const UnRepFlags newFlags)$/;"	f	class:XMLFormatter
operator <<	include/xercesc/internal/XSerializeEngine.hpp	/^inline XSerializeEngine& operator<<(XSerializeEngine&       serEng$/;"	f
operator =	include/xercesc/dom/StDOMNode.hpp	/^	inline T* operator= (T *node)$/;"	f	class:StDOMNode
operator =	include/xercesc/framework/XMLPScanToken.hpp	/^inline XMLPScanToken& XMLPScanToken::operator=(const XMLPScanToken& toCopy)$/;"	f	class:XMLPScanToken
operator =	include/xercesc/sax/SAXException.hpp	/^    SAXException& operator=(const SAXException& toCopy)$/;"	f	class:SAXException
operator =	include/xercesc/util/OutOfMemoryException.hpp	/^inline OutOfMemoryException& OutOfMemoryException::operator=(const OutOfMemoryException&)$/;"	f	class:OutOfMemoryException
operator =	include/xercesc/validators/common/CMStateSet.hpp	/^    CMStateSet& operator=(const CMStateSet& srcSet)$/;"	f	class:CMStateSet
operator ==	include/xercesc/dom/StDOMNode.hpp	/^	inline bool operator== (T* node) const { return (m_node == node); }$/;"	f	class:StDOMNode
operator ==	include/xercesc/util/XMLBigInteger.hpp	/^inline bool XMLBigInteger::operator==(const XMLBigInteger& toCompare) const$/;"	f	class:XMLBigInteger
operator ==	include/xercesc/validators/common/CMStateSet.hpp	/^    bool operator==(const CMStateSet& setToCompare) const$/;"	f	class:CMStateSet
operator T*	include/xercesc/dom/StDOMNode.hpp	/^	inline operator T*() const { return (m_node); }$/;"	f	class:StDOMNode
operator delete	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^inline void operator delete(void* \/*ptr*\/, XERCES_CPP_NAMESPACE_QUALIFIER DOMDocument * \/*doc*\/)$/;"	f
operator delete	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^inline void operator delete(void* \/*ptr*\/, XERCES_CPP_NAMESPACE_QUALIFIER DOMDocument * \/*doc*\/, XERCES_CPP_NAMESPACE_QUALIFIER DOMMemoryManager::NodeObjectType \/*type*\/)$/;"	f
operator delete	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^inline void operator delete(void* \/*ptr*\/, XERCES_CPP_NAMESPACE_QUALIFIER DOMDocumentImpl * \/*doc*\/)$/;"	f
operator delete	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^inline void operator delete(void* \/*ptr*\/, XERCES_CPP_NAMESPACE_QUALIFIER DOMDocumentImpl * \/*doc*\/, XERCES_CPP_NAMESPACE_QUALIFIER DOMMemoryManager::NodeObjectType \/*type*\/)$/;"	f
operator new	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^inline void * operator new(size_t amt, XERCES_CPP_NAMESPACE_QUALIFIER DOMDocument *doc)$/;"	f
operator new	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^inline void * operator new(size_t amt, XERCES_CPP_NAMESPACE_QUALIFIER DOMDocument *doc, XERCES_CPP_NAMESPACE_QUALIFIER DOMMemoryManager::NodeObjectType type)$/;"	f
operator new	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^inline void * operator new(size_t amt, XERCES_CPP_NAMESPACE_QUALIFIER DOMDocumentImpl *doc)$/;"	f
operator new	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^inline void * operator new(size_t amt, XERCES_CPP_NAMESPACE_QUALIFIER DOMDocumentImpl *doc, XERCES_CPP_NAMESPACE_QUALIFIER DOMMemoryManager::NodeObjectType type)$/;"	f
operator |=	include/xercesc/validators/common/CMStateSet.hpp	/^    void operator|=(const CMStateSet& setToOr)$/;"	f	class:CMStateSet
orphan	include/xercesc/util/Janitor.c	/^ArrayJanitor<T>::orphan()$/;"	f	class:T
orphan	include/xercesc/util/Janitor.c	/^Janitor<T>::orphan()$/;"	f	class:T
orphanChild	include/xercesc/validators/common/CMLeaf.hpp	/^inline void CMLeaf::orphanChild()$/;"	f	class:CMLeaf
orphanElementAt	include/xercesc/util/BaseRefVectorOf.c	/^orphanElementAt(const XMLSize_t orphanAt)$/;"	f	class:TElem
orphanFirst	include/xercesc/validators/common/ContentSpecNode.hpp	/^inline ContentSpecNode* ContentSpecNode::orphanFirst()$/;"	f	class:ContentSpecNode
orphanKey	include/xercesc/util/RefHashTableOf.c	/^orphanKey(const void* const key)$/;"	f	class:THasher
orphanSecond	include/xercesc/validators/common/ContentSpecNode.hpp	/^inline ContentSpecNode* ContentSpecNode::orphanSecond()$/;"	f	class:ContentSpecNode
parserState	include/xercesc/util/regx/RegxParser.hpp	/^    } parserState;$/;"	t	class:RegxParser
parserStateContext	include/xercesc/util/regx/RegxParser.hpp	/^    } parserStateContext;$/;"	t	class:RegxParser
peek	include/xercesc/util/RefStackOf.c	/^template <class TElem> const TElem* RefStackOf<TElem>::peek() const$/;"	f	class:TElem
peek	include/xercesc/util/ValueStackOf.c	/^template <class TElem> const TElem& ValueStackOf<TElem>::peek() const$/;"	f	class:TElem
peekNextChar	include/xercesc/internal/XMLReader.hpp	/^inline bool XMLReader::peekNextChar(XMLCh& chGotten)$/;"	f	class:XMLReader
peekString	include/xercesc/internal/ReaderMgr.hpp	/^inline bool ReaderMgr::peekString(const XMLCh* const toPeek)$/;"	f	class:ReaderMgr
pop	include/xercesc/util/RefStackOf.c	/^template <class TElem> TElem* RefStackOf<TElem>::pop()$/;"	f	class:TElem
pop	include/xercesc/util/ValueStackOf.c	/^template <class TElem> TElem ValueStackOf<TElem>::pop()$/;"	f	class:TElem
popAt	include/xercesc/util/RefStackOf.c	/^template <class TElem> TElem* RefStackOf<TElem>::popAt(const XMLSize_t index)$/;"	f	class:TElem
popContext	include/xercesc/validators/schema/identity/XPathMatcherStack.hpp	/^inline void XPathMatcherStack::popContext() {$/;"	f	class:XPathMatcherStack
popCurrentTypeNameStack	include/xercesc/validators/schema/TraverseSchema.hpp	/^inline void TraverseSchema::popCurrentTypeNameStack() {$/;"	f	class:TraverseSchema
previousSibling	include/xercesc/dom/impl/DOMChildNode.hpp	/^    DOMNode                *previousSibling;$/;"	m	class:DOMChildNode
processingInstruction	include/xercesc/sax/HandlerBase.hpp	/^HandlerBase::processingInstruction( const   XMLCh* const$/;"	f	class:HandlerBase
processingInstruction	include/xercesc/sax2/DefaultHandler.hpp	/^DefaultHandler::processingInstruction( const   XMLCh* const$/;"	f	class:DefaultHandler
publicId	include/xercesc/internal/ReaderMgr.hpp	/^        const   XMLCh*          publicId;$/;"	m	struct:ReaderMgr::LastExtEntityInfo
push	include/xercesc/util/RefStackOf.c	/^template <class TElem> void RefStackOf<TElem>::push(TElem* const toPush)$/;"	f	class:TElem
push	include/xercesc/util/ValueStackOf.c	/^template <class TElem> void ValueStackOf<TElem>::push(const TElem& toPush)$/;"	f	class:TElem
pushContext	include/xercesc/validators/schema/identity/XPathMatcherStack.hpp	/^inline void XPathMatcherStack::pushContext() {$/;"	f	class:XPathMatcherStack
put	include/xercesc/dom/impl/DOMDeepNodeListPool.c	/^DOMDeepNodeListPool<TVal, THasher>::put(void* key1, XMLCh* key2, XMLCh* key3, TVal* const valueToAdopt)$/;"	f	class:THasher
put	include/xercesc/util/Hash2KeysSetOf.c	/^void Hash2KeysSetOf<THasher>::put(const void* key1, int key2)$/;"	f	class:THasher
put	include/xercesc/util/NameIdPool.c	/^XMLSize_t NameIdPool<TElem>::put(TElem* const elemToAdopt)$/;"	f	class:TElem
put	include/xercesc/util/RefHash2KeysTableOf.c	/^void RefHash2KeysTableOf<TVal, THasher>::put(void* key1, int key2, TVal* const valueToAdopt)$/;"	f	class:THasher
put	include/xercesc/util/RefHash3KeysIdPool.c	/^RefHash3KeysIdPool<TVal, THasher>::put(void* key1, int key2, int key3, TVal* const valueToAdopt)$/;"	f	class:THasher
put	include/xercesc/util/RefHashTableOf.c	/^void RefHashTableOf<TVal, THasher>::put(void* key, TVal* const valueToAdopt)$/;"	f	class:THasher
put	include/xercesc/util/ValueHashTableOf.c	/^void ValueHashTableOf<TVal, THasher>::put(void* key, const TVal& valueToAdopt)$/;"	f	class:THasher
put	include/xercesc/validators/schema/identity/FieldValueMap.hpp	/^inline void FieldValueMap::put(IC_Field* const key,$/;"	f	class:FieldValueMap
putElemDecl	include/xercesc/validators/DTD/DTDGrammar.hpp	/^DTDGrammar::putElemDecl(XMLElementDecl* const elemDecl,$/;"	f	class:DTDGrammar
putElemDecl	include/xercesc/validators/schema/SchemaGrammar.hpp	/^SchemaGrammar::putElemDecl(XMLElementDecl* const elemDecl,$/;"	f	class:SchemaGrammar
putEntityDecl	include/xercesc/validators/DTD/DTDGrammar.hpp	/^inline XMLSize_t DTDGrammar::putEntityDecl(DTDEntityDecl* const entityDecl)   const$/;"	f	class:DTDGrammar
putGroupElemDecl	include/xercesc/validators/schema/SchemaGrammar.hpp	/^inline XMLSize_t SchemaGrammar::putGroupElemDecl (XMLElementDecl* const elemDecl)   const$/;"	f	class:SchemaGrammar
putIfNotPresent	include/xercesc/util/Hash2KeysSetOf.c	/^bool Hash2KeysSetOf<THasher>::putIfNotPresent(const void* key1, int key2)$/;"	f	class:THasher
putNotationDecl	include/xercesc/validators/DTD/DTDGrammar.hpp	/^inline XMLSize_t DTDGrammar::putNotationDecl(XMLNotationDecl* const notationDecl)   const$/;"	f	class:DTDGrammar
putNotationDecl	include/xercesc/validators/schema/SchemaGrammar.hpp	/^inline XMLSize_t SchemaGrammar::putNotationDecl(XMLNotationDecl* const notationDecl)   const$/;"	f	class:SchemaGrammar
quadsPerLine	include/xercesc/util/Base64.hpp	/^    static const unsigned int  quadsPerLine;$/;"	m	class:Base64
readString	include/xercesc/internal/XSerializeEngine.hpp	/^inline void XSerializeEngine::readString(XMLByte*&      toRead$/;"	f	class:XSerializeEngine
readString	include/xercesc/internal/XSerializeEngine.hpp	/^inline void XSerializeEngine::readString(XMLByte*&      toRead)$/;"	f	class:XSerializeEngine
readString	include/xercesc/internal/XSerializeEngine.hpp	/^inline void XSerializeEngine::readString(XMLCh*&        toRead$/;"	f	class:XSerializeEngine
readString	include/xercesc/internal/XSerializeEngine.hpp	/^inline void XSerializeEngine::readString(XMLCh*&        toRead)$/;"	f	class:XSerializeEngine
regexParserStateInBrackets	include/xercesc/util/regx/RegxParser.hpp	/^        regexParserStateInBrackets = 1$/;"	e	enum:RegxParser::<anonymous>
regexParserStateNormal	include/xercesc/util/regx/RegxParser.hpp	/^        regexParserStateNormal = 0,$/;"	e	enum:RegxParser::<anonymous>
rehash	include/xercesc/util/Hash2KeysSetOf.c	/^rehash()$/;"	f	class:THasher
rehash	include/xercesc/util/RefHash2KeysTableOf.c	/^rehash()$/;"	f	class:THasher
rehash	include/xercesc/util/RefHashTableOf.c	/^void RefHashTableOf<TVal, THasher>::rehash()$/;"	f	class:THasher
rehash	include/xercesc/util/ValueHashTableOf.c	/^void ValueHashTableOf<TVal, THasher>::rehash()$/;"	f	class:THasher
reinitialize	include/xercesc/util/BaseRefVectorOf.c	/^template <class TElem> void BaseRefVectorOf<TElem>::reinitialize()$/;"	f	class:TElem
reinitialize	include/xercesc/util/RefHashTableOf.c	/^void RefHashTableOf<TVal, THasher>::reinitialize(const THasher& hasher)$/;"	f	class:THasher
release	include/xercesc/util/FlagJanitor.c	/^template <class T> void FlagJanitor<T>::release()$/;"	f	class:T
release	include/xercesc/util/Janitor.c	/^ArrayJanitor<T>::release()$/;"	f	class:T
release	include/xercesc/util/Janitor.c	/^Janitor<T>::release()$/;"	f	class:T
release	include/xercesc/util/Janitor.c	/^T* JanitorMemFunCall<T>::release()$/;"	f	class:T
removeAdvDocHandler	include/xercesc/parsers/SAX2XMLFilterImpl.hpp	/^inline bool SAX2XMLFilterImpl::removeAdvDocHandler(XMLDocumentHandler* const \/*toRemove*\/)$/;"	f	class:SAX2XMLFilterImpl
removeAll	include/xercesc/dom/impl/DOMDeepNodeListPool.c	/^void DOMDeepNodeListPool<TVal, THasher>::removeAll()$/;"	f	class:THasher
removeAll	include/xercesc/util/Hash2KeysSetOf.c	/^void Hash2KeysSetOf<THasher>::removeAll()$/;"	f	class:THasher
removeAll	include/xercesc/util/NameIdPool.c	/^template <class TElem> void NameIdPool<TElem>::removeAll()$/;"	f	class:TElem
removeAll	include/xercesc/util/RefHash2KeysTableOf.c	/^void RefHash2KeysTableOf<TVal, THasher>::removeAll()$/;"	f	class:THasher
removeAll	include/xercesc/util/RefHash3KeysIdPool.c	/^void RefHash3KeysIdPool<TVal, THasher>::removeAll()$/;"	f	class:THasher
removeAll	include/xercesc/util/RefHashTableOf.c	/^void RefHashTableOf<TVal, THasher>::removeAll()$/;"	f	class:THasher
removeAll	include/xercesc/util/ValueHashTableOf.c	/^void ValueHashTableOf<TVal, THasher>::removeAll()$/;"	f	class:THasher
removeAllElements	include/xercesc/util/BaseRefVectorOf.c	/^template <class TElem> void BaseRefVectorOf<TElem>::removeAllElements()$/;"	f	class:TElem
removeAllElements	include/xercesc/util/RefArrayVectorOf.c	/^template <class TElem> void RefArrayVectorOf<TElem>::removeAllElements()$/;"	f	class:TElem
removeAllElements	include/xercesc/util/RefStackOf.c	/^template <class TElem> void RefStackOf<TElem>::removeAllElements()$/;"	f	class:TElem
removeAllElements	include/xercesc/util/ValueStackOf.c	/^template <class TElem> void ValueStackOf<TElem>::removeAllElements()$/;"	f	class:TElem
removeAttrFromIDNodeMap	include/xercesc/dom/impl/DOMAttrImpl.hpp	/^inline void DOMAttrImpl::removeAttrFromIDNodeMap()$/;"	f	class:DOMAttrImpl
removeBucketElem	include/xercesc/util/ValueHashTableOf.c	/^removeBucketElem(const void* const key, XMLSize_t& hashVal)$/;"	f	class:THasher
removeDotDotSlash	include/xercesc/util/LogicalPath.c	/^void XMLPlatformUtils::removeDotDotSlash(XMLCh* const path$/;"	f	class:XMLPlatformUtils
removeDotSlash	include/xercesc/util/LogicalPath.c	/^void XMLPlatformUtils::removeDotSlash(XMLCh* const path$/;"	f	class:XMLPlatformUtils
removeElementAt	include/xercesc/util/BaseRefVectorOf.c	/^removeElementAt(const XMLSize_t removeAt)$/;"	f	class:TElem
removeElementAt	include/xercesc/util/RefArrayVectorOf.c	/^removeElementAt(const XMLSize_t removeAt)$/;"	f	class:TElem
removeKey	include/xercesc/util/Hash2KeysSetOf.c	/^removeKey(const void* const key1)$/;"	f	class:THasher
removeKey	include/xercesc/util/Hash2KeysSetOf.c	/^void Hash2KeysSetOf<THasher>::removeKey(const void* const key1, const int key2)$/;"	f	class:THasher
removeKey	include/xercesc/util/RefHash2KeysTableOf.c	/^removeKey(const void* const key1)$/;"	f	class:THasher
removeKey	include/xercesc/util/RefHash2KeysTableOf.c	/^removeKey(const void* const key1, const int key2)$/;"	f	class:THasher
removeKey	include/xercesc/util/RefHashTableOf.c	/^removeKey(const void* const key)$/;"	f	class:THasher
removeKey	include/xercesc/util/ValueHashTableOf.c	/^removeKey(const void* const key)$/;"	f	class:THasher
removeLastElement	include/xercesc/util/BaseRefVectorOf.c	/^template <class TElem> void BaseRefVectorOf<TElem>::removeLastElement()$/;"	f	class:TElem
removeLastElement	include/xercesc/util/RefArrayVectorOf.c	/^template <class TElem> void RefArrayVectorOf<TElem>::removeLastElement()$/;"	f	class:TElem
replicate	include/xercesc/util/XMLString.hpp	/^inline XMLCh* XMLString::replicate(const XMLCh* const toRep,$/;"	f	class:XMLString
reset	include/xercesc/dom/impl/DOMStringPool.hpp	/^    void reset()$/;"	f	class:DOMBuffer
reset	include/xercesc/framework/XMLBuffer.hpp	/^    void reset()$/;"	f	class:XMLBuffer
reset	include/xercesc/framework/XMLBufferMgr.hpp	/^    void reset()$/;"	f	class:XMLBufBid
reset	include/xercesc/framework/psvi/PSVIAttributeList.hpp	/^inline void PSVIAttributeList::reset()$/;"	f	class:PSVIAttributeList
reset	include/xercesc/util/BinMemInputStream.hpp	/^inline void BinMemInputStream::reset()$/;"	f	class:BinMemInputStream
reset	include/xercesc/util/Janitor.c	/^ArrayJanitor<T>::reset(T* p)$/;"	f	class:T
reset	include/xercesc/util/Janitor.c	/^ArrayJanitor<T>::reset(T* p, MemoryManager* const manager)$/;"	f	class:T
reset	include/xercesc/util/Janitor.c	/^template <class T> void Janitor<T>::reset(T* p)$/;"	f	class:T
reset	include/xercesc/util/Janitor.c	/^void JanitorMemFunCall<T>::reset(T* p)$/;"	f	class:T
reset	include/xercesc/util/XMLDateTime.hpp	/^inline void XMLDateTime::reset()$/;"	f	class:XMLDateTime
reset	include/xercesc/util/regx/OpFactory.hpp	/^inline void OpFactory::reset() {$/;"	f	class:OpFactory
reset	include/xercesc/validators/DTD/DTDAttDef.hpp	/^    virtual void reset() {};$/;"	f	class:DTDAttDef
reset	include/xercesc/validators/schema/SchemaAttDef.hpp	/^inline void SchemaAttDef::reset() {    $/;"	f	class:SchemaAttDef
resetDocType	include/xercesc/sax/HandlerBase.hpp	/^inline void HandlerBase::resetDocType()$/;"	f	class:HandlerBase
resetDocType	include/xercesc/sax2/DefaultHandler.hpp	/^inline void DefaultHandler::resetDocType()$/;"	f	class:DefaultHandler
resetDocument	include/xercesc/sax/HandlerBase.hpp	/^inline void HandlerBase::resetDocument()$/;"	f	class:HandlerBase
resetDocument	include/xercesc/sax2/DefaultHandler.hpp	/^inline void DefaultHandler::resetDocument()$/;"	f	class:DefaultHandler
resetEntities	include/xercesc/parsers/DOMLSParserImpl.hpp	/^inline void DOMLSParserImpl::resetEntities()$/;"	f	class:DOMLSParserImpl
resetEntities	include/xercesc/parsers/XercesDOMParser.hpp	/^inline void XercesDOMParser::resetEntities()$/;"	f	class:XercesDOMParser
resetErrors	include/xercesc/internal/XMLInternalErrorHandler.hpp	/^inline void XMLInternalErrorHandler::resetErrors()$/;"	f	class:XMLInternalErrorHandler
resetErrors	include/xercesc/sax/HandlerBase.hpp	/^inline void HandlerBase::resetErrors()$/;"	f	class:HandlerBase
resetErrors	include/xercesc/sax2/DefaultHandler.hpp	/^inline void DefaultHandler::resetErrors()$/;"	f	class:DefaultHandler
resetKey	include/xercesc/util/RefHash3KeysIdPool.c	/^void RefHash3KeysIdPoolEnumerator<TVal, THasher>::resetKey()$/;"	f	class:THasher
resetNamespaceList	include/xercesc/validators/schema/SchemaAttDef.hpp	/^inline void SchemaAttDef::resetNamespaceList() {$/;"	f	class:SchemaAttDef
resetNillable	include/xercesc/validators/schema/SchemaValidator.hpp	/^inline void SchemaValidator::resetNillable() {$/;"	f	class:SchemaValidator
resetRoot	include/xercesc/validators/schema/SchemaInfo.hpp	/^inline void SchemaInfo::resetRoot ()$/;"	f	class:SchemaInfo
resetValidationContext	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::resetValidationContext()$/;"	f	class:XMLScanner
resolveEntity	include/xercesc/sax/HandlerBase.hpp	/^HandlerBase::resolveEntity( const   XMLCh* const$/;"	f	class:HandlerBase
resolveEntity	include/xercesc/sax2/DefaultHandler.hpp	/^DefaultHandler::resolveEntity( const   XMLCh* const$/;"	f	class:DefaultHandler
resolveSystemId	include/xercesc/internal/XMLScanner.hpp	/^    virtual InputSource* resolveSystemId(const XMLCh* const \/*sysId*\/$/;"	f	class:XMLScanner
searchSlashDotDotSlash	include/xercesc/util/LogicalPath.c	/^int XMLPlatformUtils::searchSlashDotDotSlash(XMLCh* const srcPath)$/;"	f	class:XMLPlatformUtils
serialize	include/xercesc/internal/XSerializable.hpp	/^inline void XSerializable::serialize(XSerializeEngine& )$/;"	f	class:XSerializable
set	include/xercesc/dom/impl/DOMStringPool.hpp	/^set (const XMLCh* const chars)$/;"	f	class:DOMBuffer
set	include/xercesc/dom/impl/DOMStringPool.hpp	/^set (const XMLCh* const chars, const XMLSize_t count)$/;"	f	class:DOMBuffer
set	include/xercesc/framework/XMLAttr.hpp	/^inline void XMLAttr::set(const  unsigned int        uriId$/;"	f	class:XMLAttr
set	include/xercesc/framework/XMLBuffer.hpp	/^    void set (const XMLCh* const chars)$/;"	f	class:XMLBuffer
set	include/xercesc/framework/XMLBuffer.hpp	/^    void set (const XMLCh* const chars, const XMLSize_t count)$/;"	f	class:XMLBuffer
set	include/xercesc/framework/XMLBufferMgr.hpp	/^    void set(const XMLCh* const chars, const XMLSize_t count = 0)$/;"	f	class:XMLBufBid
set	include/xercesc/framework/XMLPScanToken.hpp	/^inline void XMLPScanToken::set( const   XMLUInt32   scannerId$/;"	f	class:XMLPScanToken
set	include/xercesc/util/KVStringPair.hpp	/^inline void KVStringPair::set(  const   XMLCh* const    newKey$/;"	f	class:KVStringPair
set	include/xercesc/util/KVStringPair.hpp	/^inline void KVStringPair::set(  const   XMLCh* const newKey$/;"	f	class:KVStringPair
set1stOctet	include/xercesc/util/Base64.hpp	/^inline XMLByte Base64::set1stOctet(const XMLByte& b1, const XMLByte& b2)$/;"	f	class:Base64
set2ndOctet	include/xercesc/util/Base64.hpp	/^inline XMLByte Base64::set2ndOctet(const XMLByte& b2, const XMLByte& b3)$/;"	f	class:Base64
set3rdOctet	include/xercesc/util/Base64.hpp	/^inline XMLByte Base64::set3rdOctet(const XMLByte& b3, const XMLByte& b4)$/;"	f	class:Base64
setAbstract	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline void ComplexTypeInfo::setAbstract(const bool isAbstract) {$/;"	f	class:ComplexTypeInfo
setAdoptContentSpec	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline void ComplexTypeInfo::setAdoptContentSpec(const bool toAdopt) {$/;"	f	class:ComplexTypeInfo
setAdoptElements	include/xercesc/util/RefHashTableOf.c	/^inline void RefHashTableOf<TVal, THasher>::setAdoptElements(const bool aValue)$/;"	f	class:THasher
setAdoptFirst	include/xercesc/validators/common/ContentSpecNode.hpp	/^inline void ContentSpecNode::setAdoptFirst(bool newState)$/;"	f	class:ContentSpecNode
setAdoptLocation	include/xercesc/dom/impl/DOMErrorImpl.hpp	/^inline void DOMErrorImpl::setAdoptLocation(const bool value)$/;"	f	class:DOMErrorImpl
setAdoptSecond	include/xercesc/validators/common/ContentSpecNode.hpp	/^inline void ContentSpecNode::setAdoptSecond(bool newState)$/;"	f	class:ContentSpecNode
setAnonTypeCount	include/xercesc/validators/schema/SchemaGrammar.hpp	/^SchemaGrammar::setAnonTypeCount (unsigned int count)$/;"	f	class:SchemaGrammar
setAnonymous	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^inline void DatatypeValidator::setAnonymous() {$/;"	f	class:DatatypeValidator
setAnonymous	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline void ComplexTypeInfo::setAnonymous() {$/;"	f	class:ComplexTypeInfo
setAttGroupInfoRegistry	include/xercesc/validators/schema/SchemaGrammar.hpp	/^SchemaGrammar::setAttGroupInfoRegistry(RefHashTableOf<XercesAttGroupInfo>* const other) {$/;"	f	class:SchemaGrammar
setAttWildCard	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline void ComplexTypeInfo::setAttWildCard(SchemaAttDef* const toAdopt) {$/;"	f	class:ComplexTypeInfo
setAttWildCard	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^SchemaElementDecl::setAttWildCard(SchemaAttDef* const attWildCard) {$/;"	f	class:SchemaElementDecl
setAttWithTypeId	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline void ComplexTypeInfo::setAttWithTypeId(const bool value) {$/;"	f	class:ComplexTypeInfo
setAttrDupChkRegistry	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::setAttrDupChkRegistry(const XMLSize_t    &attrNumber$/;"	f	class:XMLScanner
setAttributeDeclRegistry	include/xercesc/validators/schema/SchemaGrammar.hpp	/^SchemaGrammar::setAttributeDeclRegistry(RefHashTableOf<XMLAttDef>* const attReg) {$/;"	f	class:SchemaGrammar
setBaseAttDecl	include/xercesc/validators/schema/SchemaAttDef.hpp	/^inline void SchemaAttDef::setBaseAttDecl(SchemaAttDef* const attDef)$/;"	f	class:SchemaAttDef
setBaseComplexTypeInfo	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^ComplexTypeInfo::setBaseComplexTypeInfo(ComplexTypeInfo* const typeInfo) {$/;"	f	class:ComplexTypeInfo
setBaseDatatypeValidator	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^ComplexTypeInfo::setBaseDatatypeValidator(DatatypeValidator* const validator) {$/;"	f	class:ComplexTypeInfo
setBaseGroup	include/xercesc/validators/schema/XercesGroupInfo.hpp	/^inline void XercesGroupInfo::setBaseGroup(XercesGroupInfo* const baseGroup) {$/;"	f	class:XercesGroupInfo
setBaseType	include/xercesc/framework/psvi/XSComplexTypeDefinition.hpp	/^XSComplexTypeDefinition::setBaseType(XSTypeDefinition* const xsBaseType)$/;"	f	class:XSComplexTypeDefinition
setBaseURI	include/xercesc/framework/Wrapper4InputSource.hpp	/^inline void Wrapper4InputSource::setBaseURI(const XMLCh* const)$/;"	f	class:Wrapper4InputSource
setBaseURI	include/xercesc/framework/XMLEntityDecl.hpp	/^inline void XMLEntityDecl::setBaseURI(const XMLCh* const newId)$/;"	f	class:XMLEntityDecl
setBaseURI	include/xercesc/framework/XMLNotationDecl.hpp	/^inline void XMLNotationDecl::setBaseURI(const XMLCh* const newId)$/;"	f	class:XMLNotationDecl
setBit	include/xercesc/validators/common/CMStateSet.hpp	/^    void setBit(const XMLSize_t bitToSet)$/;"	f	class:CMStateSet
setBlockDefault	include/xercesc/validators/schema/SchemaInfo.hpp	/^inline void SchemaInfo::setBlockDefault(const int aValue) {$/;"	f	class:SchemaInfo
setBlockSet	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline void ComplexTypeInfo::setBlockSet(const int blockSet) {$/;"	f	class:ComplexTypeInfo
setBlockSet	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^inline void SchemaElementDecl::setBlockSet(const int blockSet)$/;"	f	class:SchemaElementDecl
setBounded	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^inline void DatatypeValidator::setBounded(bool bounded)$/;"	f	class:DatatypeValidator
setBuffer	include/xercesc/util/XMLDateTime.hpp	/^inline void XMLDateTime::setBuffer(const XMLCh* const aString)$/;"	f	class:XMLDateTime
setByteOffset	include/xercesc/dom/impl/DOMLocatorImpl.hpp	/^inline void DOMLocatorImpl::setByteOffset(const XMLFilePos offset)$/;"	f	class:DOMLocatorImpl
setByteStream	include/xercesc/framework/Wrapper4InputSource.hpp	/^inline void Wrapper4InputSource::setByteStream(InputSource*)$/;"	f	class:Wrapper4InputSource
setCDFrom	include/xercesc/util/Transcoders/IconvGNU/IconvGNUTransService.hpp	/^    inline void	setCDFrom (iconv_t cd) { fCDFrom = cd; }$/;"	f	class:IconvGNUWrapper
setCDTo	include/xercesc/util/Transcoders/IconvGNU/IconvGNUTransService.hpp	/^    inline void	setCDTo (iconv_t cd) { fCDTo = cd; }$/;"	f	class:IconvGNUWrapper
setCalculateSrcOfs	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::setCalculateSrcOfs(const bool newValue)$/;"	f	class:XMLScanner
setCaseInsensitiveToken	include/xercesc/util/regx/RangeToken.hpp	/^inline void RangeToken::setCaseInsensitiveToken(RangeToken* tok)$/;"	f	class:RangeToken
setCategoryId	include/xercesc/util/regx/RangeTokenMap.hpp	/^inline void RangeTokenElemMap::setCategoryId(const unsigned int categId) {$/;"	f	class:RangeTokenElemMap
setCheckElementConsistency	include/xercesc/validators/schema/XercesGroupInfo.hpp	/^inline void XercesGroupInfo::setCheckElementConsistency(const bool aValue) {$/;"	f	class:XercesGroupInfo
setColumnNumber	include/xercesc/dom/impl/DOMLocatorImpl.hpp	/^inline void DOMLocatorImpl::setColumnNumber(const XMLFileLoc columnNumber)$/;"	f	class:DOMLocatorImpl
setCommentOrPISeen	include/xercesc/internal/ElemStack.hpp	/^inline void ElemStack::setCommentOrPISeen()$/;"	f	class:ElemStack
setCompleteWildCard	include/xercesc/validators/schema/XercesAttGroupInfo.hpp	/^XercesAttGroupInfo::setCompleteWildCard(SchemaAttDef* const toSet) {$/;"	f	class:XercesAttGroupInfo
setComplexTypeInfo	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^SchemaElementDecl::setComplexTypeInfo(ComplexTypeInfo* const typeInfo)$/;"	f	class:SchemaElementDecl
setComplexTypeRegistry	include/xercesc/validators/schema/SchemaGrammar.hpp	/^SchemaGrammar::setComplexTypeRegistry(RefHashTableOf<ComplexTypeInfo>* const other) {$/;"	f	class:SchemaGrammar
setContent	include/xercesc/validators/datatype/ListDatatypeValidator.hpp	/^inline void ListDatatypeValidator::setContent(const XMLCh* const content)$/;"	f	class:ListDatatypeValidator
setContentHandler	include/xercesc/parsers/SAX2XMLFilterImpl.hpp	/^inline void SAX2XMLFilterImpl::setContentHandler(ContentHandler* const handler)$/;"	f	class:SAX2XMLFilterImpl
setContentModel	include/xercesc/validators/DTD/DTDElementDecl.hpp	/^DTDElementDecl::setContentModel(XMLContentModel* const newModelToAdopt)$/;"	f	class:DTDElementDecl
setContentModel	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^SchemaElementDecl::setContentModel(XMLContentModel* const)$/;"	f	class:SchemaElementDecl
setContentSpec	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^SchemaElementDecl::setContentSpec(ContentSpecNode*)$/;"	f	class:SchemaElementDecl
setContentSpec	include/xercesc/validators/schema/XercesGroupInfo.hpp	/^inline void XercesGroupInfo::setContentSpec(ContentSpecNode* const other) {$/;"	f	class:XercesGroupInfo
setContentType	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^ComplexTypeInfo::setContentType(const int contentType) {$/;"	f	class:ComplexTypeInfo
setCopyBufToStream	include/xercesc/framework/MemBufInputSource.hpp	/^inline void MemBufInputSource::setCopyBufToStream(const bool newState)$/;"	f	class:MemBufInputSource
setCreateCommentNodes	include/xercesc/parsers/AbstractDOMParser.hpp	/^inline void AbstractDOMParser::setCreateCommentNodes(const bool create)$/;"	f	class:AbstractDOMParser
setCreateEntityReferenceNodes	include/xercesc/parsers/AbstractDOMParser.hpp	/^inline void AbstractDOMParser::setCreateEntityReferenceNodes(const bool create)$/;"	f	class:AbstractDOMParser
setCreateReason	include/xercesc/framework/XMLAttDef.hpp	/^XMLAttDef::setCreateReason(const XMLAttDef::CreateReasons newReason)$/;"	f	class:XMLAttDef
setCreateReason	include/xercesc/framework/XMLElementDecl.hpp	/^XMLElementDecl::setCreateReason(const XMLElementDecl::CreateReasons newReason)$/;"	f	class:XMLElementDecl
setCurrentGrammar	include/xercesc/internal/ElemStack.hpp	/^inline void ElemStack::setCurrentGrammar(Grammar* currentGrammar)$/;"	f	class:ElemStack
setCurrentNode	include/xercesc/parsers/AbstractDOMParser.hpp	/^inline void AbstractDOMParser::setCurrentNode(DOMNode* toSet)$/;"	f	class:AbstractDOMParser
setCurrentSchemaElemName	include/xercesc/internal/ElemStack.hpp	/^inline void ElemStack::setCurrentSchemaElemName(const XMLCh * const schemaElemName)$/;"	f	class:ElemStack
setCurrentScope	include/xercesc/internal/ElemStack.hpp	/^inline void ElemStack::setCurrentScope(int currentScope)$/;"	f	class:ElemStack
setCurrentURI	include/xercesc/internal/ElemStack.hpp	/^inline void ElemStack::setCurrentURI(unsigned int uri)$/;"	f	class:ElemStack
setCurrentURI	include/xercesc/internal/ElemStack.hpp	/^inline void WFElemStack::setCurrentURI(unsigned int uri)$/;"	f	class:WFElemStack
setDTDHandler	include/xercesc/parsers/SAX2XMLFilterImpl.hpp	/^inline void SAX2XMLFilterImpl::setDTDHandler(DTDHandler* const handler)$/;"	f	class:SAX2XMLFilterImpl
setDatatypeBuffer	include/xercesc/validators/schema/SchemaValidator.hpp	/^inline void SchemaValidator::setDatatypeBuffer(const XMLCh* const value)$/;"	f	class:SchemaValidator
setDatatypeValidator	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^ComplexTypeInfo::setDatatypeValidator(DatatypeValidator* const validator) {$/;"	f	class:ComplexTypeInfo
setDatatypeValidator	include/xercesc/validators/schema/SchemaAttDef.hpp	/^inline void SchemaAttDef::setDatatypeValidator(DatatypeValidator* newDatatypeValidator)$/;"	f	class:SchemaAttDef
setDatatypeValidator	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^inline void SchemaElementDecl::setDatatypeValidator(DatatypeValidator* newDatatypeValidator)$/;"	f	class:SchemaElementDecl
setDeclarationHandler	include/xercesc/parsers/SAX2XMLFilterImpl.hpp	/^inline void SAX2XMLFilterImpl::setDeclarationHandler(DeclHandler* const \/*handler*\/)$/;"	f	class:SAX2XMLFilterImpl
setDeclared	include/xercesc/framework/XMLRefInfo.hpp	/^inline void XMLRefInfo::setDeclared(const bool newValue)$/;"	f	class:XMLRefInfo
setDeclaredInIntSubset	include/xercesc/validators/DTD/DTDEntityDecl.hpp	/^inline void DTDEntityDecl::setDeclaredInIntSubset(const bool newValue)$/;"	f	class:DTDEntityDecl
setDefaultType	include/xercesc/framework/XMLAttDef.hpp	/^inline void XMLAttDef::setDefaultType(const XMLAttDef::DefAttTypes newValue)$/;"	f	class:XMLAttDef
setDefaultValue	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^inline void SchemaElementDecl::setDefaultValue(const XMLCh* const value)$/;"	f	class:SchemaElementDecl
setDerivedBy	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline void ComplexTypeInfo::setDerivedBy(const int derivedBy) {$/;"	f	class:ComplexTypeInfo
setDisableDefaultEntityResolution	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::setDisableDefaultEntityResolution(const bool newValue)$/;"	f	class:XMLScanner
setDoNamespaces	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::setDoNamespaces(const bool doNamespaces)$/;"	f	class:XMLScanner
setDoSchema	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::setDoSchema(const bool doSchema)$/;"	f	class:XMLScanner
setDoXInclude	include/xercesc/parsers/AbstractDOMParser.hpp	/^inline void AbstractDOMParser::setDoXInclude(const bool newState)$/;"	f	class:AbstractDOMParser
setDocHandler	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::setDocHandler(XMLDocumentHandler* const docHandler)$/;"	f	class:XMLScanner
setDocTypeHandler	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::setDocTypeHandler(DocTypeHandler* const docTypeHandler)$/;"	f	class:XMLScanner
setDocTypeHandler	include/xercesc/validators/DTD/DTDScanner.hpp	/^inline void DTDScanner::setDocTypeHandler(DocTypeHandler* const handlerToSet)$/;"	f	class:DTDScanner
setDocumentLocator	include/xercesc/sax/HandlerBase.hpp	/^inline void HandlerBase::setDocumentLocator(const Locator* const)$/;"	f	class:HandlerBase
setDocumentLocator	include/xercesc/sax2/DefaultHandler.hpp	/^inline void DefaultHandler::setDocumentLocator(const Locator* const)$/;"	f	class:DefaultHandler
setElemAttrDefaultQualified	include/xercesc/validators/schema/SchemaInfo.hpp	/^inline void SchemaInfo::setElemAttrDefaultQualified(const unsigned short aValue) {$/;"	f	class:SchemaInfo
setElemId	include/xercesc/validators/DTD/DTDAttDef.hpp	/^inline void DTDAttDef::setElemId(const XMLSize_t newId)$/;"	f	class:DTDAttDef
setElemId	include/xercesc/validators/schema/SchemaAttDef.hpp	/^inline void SchemaAttDef::setElemId(const XMLSize_t newId)$/;"	f	class:SchemaAttDef
setElemStack	include/xercesc/framework/ValidationContext.hpp	/^    virtual void setElemStack(ElemStack* \/* elemStack *\/) {};$/;"	f	class:ValidationContext
setElemStack	include/xercesc/internal/ValidationContextImpl.hpp	/^inline void ValidationContextImpl::setElemStack(ElemStack* elemStack) {$/;"	f	class:ValidationContextImpl
setElement	include/xercesc/validators/common/ContentSpecNode.hpp	/^inline void ContentSpecNode::setElement(QName* const element)$/;"	f	class:ContentSpecNode
setElementAt	include/xercesc/util/BaseRefVectorOf.c	/^BaseRefVectorOf<TElem>::setElementAt(TElem* const toSet, const XMLSize_t setAt)$/;"	f	class:TElem
setElementAt	include/xercesc/util/RefArrayVectorOf.c	/^RefArrayVectorOf<TElem>::setElementAt(TElem* const toSet, const XMLSize_t setAt)$/;"	f	class:TElem
setElementId	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline void ComplexTypeInfo::setElementId(const unsigned int elemId) {$/;"	f	class:ComplexTypeInfo
setEnclosingCT	include/xercesc/validators/schema/SchemaAttDef.hpp	/^inline void SchemaAttDef::setEnclosingCT(ComplexTypeInfo*)$/;"	f	class:SchemaAttDef
setEnclosingCTDefinition	include/xercesc/framework/psvi/XSAttributeDeclaration.hpp	/^inline void XSAttributeDeclaration::setEnclosingCTDefinition$/;"	f	class:XSAttributeDeclaration
setEnclosingCTDefinition	include/xercesc/framework/psvi/XSElementDeclaration.hpp	/^inline void XSElementDeclaration::setEnclosingCTDefinition(XSComplexTypeDefinition* const toSet)$/;"	f	class:XSElementDeclaration
setEnclosingScope	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^inline void SchemaElementDecl::setEnclosingScope(const unsigned int newEnclosingScope)$/;"	f	class:SchemaElementDecl
setEndPos	include/xercesc/util/regx/Match.hpp	/^inline void Match::setEndPos(const int index, const int value) {$/;"	f	class:Match
setEntityExpansionLimit	include/xercesc/util/SecurityManager.hpp	/^    virtual void setEntityExpansionLimit(XMLSize_t newLimit)$/;"	f	class:SecurityManager
setEntityHandler	include/xercesc/internal/ReaderMgr.hpp	/^inline void ReaderMgr::setEntityHandler(XMLEntityHandler* const newHandler)$/;"	f	class:ReaderMgr
setEntityHandler	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::setEntityHandler(XMLEntityHandler* const entityHandler)$/;"	f	class:XMLScanner
setEntityResolver	include/xercesc/parsers/SAX2XMLFilterImpl.hpp	/^inline void SAX2XMLFilterImpl::setEntityResolver(EntityResolver* const resolver)$/;"	f	class:SAX2XMLFilterImpl
setEnumeration	include/xercesc/framework/XMLAttDef.hpp	/^inline void XMLAttDef::setEnumeration(const XMLCh* const newValue)$/;"	f	class:XMLAttDef
setEnumeration	include/xercesc/validators/datatype/AbstractStringValidator.hpp	/^inline void AbstractStringValidator::setEnumeration(RefArrayVectorOf<XMLCh>* enums$/;"	f	class:AbstractStringValidator
setEnumeration	include/xercesc/validators/datatype/UnionDatatypeValidator.hpp	/^inline void UnionDatatypeValidator::setEnumeration(RefArrayVectorOf<XMLCh>* enums$/;"	f	class:UnionDatatypeValidator
setErrorChecking	include/xercesc/dom/impl/DOMDocumentImpl.hpp	/^    inline void setErrorChecking(bool check) {$/;"	f	class:DOMDocumentImpl
setErrorHandler	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::setErrorHandler(ErrorHandler* const handler)$/;"	f	class:XMLScanner
setErrorHandler	include/xercesc/parsers/SAX2XMLFilterImpl.hpp	/^inline void SAX2XMLFilterImpl::setErrorHandler(ErrorHandler* const handler)$/;"	f	class:SAX2XMLFilterImpl
setErrorReporter	include/xercesc/framework/XMLValidator.hpp	/^XMLValidator::setErrorReporter(XMLErrorReporter* const errorReporter)$/;"	f	class:XMLValidator
setErrorReporter	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::setErrorReporter(XMLErrorReporter* const errHandler)$/;"	f	class:XMLScanner
setErrorReporter	include/xercesc/validators/schema/SchemaValidator.hpp	/^inline void SchemaValidator::setErrorReporter(XMLErrorReporter* const errorReporter) {$/;"	f	class:SchemaValidator
setErrorReporter	include/xercesc/validators/schema/XSDErrorReporter.hpp	/^inline void XSDErrorReporter::setErrorReporter(XMLErrorReporter* const errorReporter)$/;"	f	class:XSDErrorReporter
setEscapeFlags	include/xercesc/framework/XMLFormatter.hpp	/^inline void XMLFormatter::setEscapeFlags(const EscapeFlags newFlags)$/;"	f	class:XMLFormatter
setExitOnFirstFatal	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::setExitOnFirstFatal(const bool newValue)$/;"	f	class:XMLScanner
setExitOnFirstFatal	include/xercesc/validators/schema/SchemaValidator.hpp	/^inline void SchemaValidator::setExitOnFirstFatal(const bool newValue) {$/;"	f	class:SchemaValidator
setExitOnFirstFatal	include/xercesc/validators/schema/XSDErrorReporter.hpp	/^inline void XSDErrorReporter::setExitOnFirstFatal(const bool newValue)$/;"	f	class:XSDErrorReporter
setExternalAttDeclaration	include/xercesc/framework/XMLAttDef.hpp	/^inline void XMLAttDef::setExternalAttDeclaration(const bool aValue)$/;"	f	class:XMLAttDef
setExternalElemDeclaration	include/xercesc/framework/XMLElementDecl.hpp	/^inline void XMLElementDecl::setExternalElemDeclaration(const bool aValue)$/;"	f	class:XMLElementDecl
setExternalNoNamespaceSchemaLocation	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::setExternalNoNamespaceSchemaLocation(const XMLCh* const noNamespaceSchemaLocation)$/;"	f	class:XMLScanner
setExternalNoNamespaceSchemaLocation	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::setExternalNoNamespaceSchemaLocation(const char* const noNamespaceSchemaLocation)$/;"	f	class:XMLScanner
setExternalSchemaLocation	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::setExternalSchemaLocation(const XMLCh* const schemaLocation)$/;"	f	class:XMLScanner
setExternalSchemaLocation	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::setExternalSchemaLocation(const char* const schemaLocation)$/;"	f	class:XMLScanner
setFacetsDefined	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^inline void DatatypeValidator::setFacetsDefined(int facets)$/;"	f	class:DatatypeValidator
setFeature	include/xercesc/dom/impl/DOMLSSerializerImpl.hpp	/^inline void DOMLSSerializerImpl::setFeature(const int featureId$/;"	f	class:DOMLSSerializerImpl
setFinalDefault	include/xercesc/validators/schema/SchemaInfo.hpp	/^inline void SchemaInfo::setFinalDefault(const int aValue) {$/;"	f	class:SchemaInfo
setFinalSet	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline void ComplexTypeInfo::setFinalSet(const int finalSet) {$/;"	f	class:ComplexTypeInfo
setFinalSet	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^inline void SchemaElementDecl::setFinalSet(const int finalSet)$/;"	f	class:SchemaElementDecl
setFinite	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^inline void DatatypeValidator::setFinite(bool finite)$/;"	f	class:DatatypeValidator
setFirst	include/xercesc/validators/common/ContentSpecNode.hpp	/^inline void ContentSpecNode::setFirst(ContentSpecNode* const toAdopt)$/;"	f	class:ContentSpecNode
setFixed	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^inline void DatatypeValidator::setFixed(int fixed)$/;"	f	class:DatatypeValidator
setFractionDigits	include/xercesc/validators/datatype/DecimalDatatypeValidator.hpp	/^inline void DecimalDatatypeValidator::setFractionDigits(unsigned int newFractionDigits)$/;"	f	class:DecimalDatatypeValidator
setFullHandler	include/xercesc/framework/XMLBuffer.hpp	/^    void setFullHandler(XMLBufferFullHandler* handler, const XMLSize_t fullSize)$/;"	f	class:XMLBuffer
setGenerateSyntheticAnnotations	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::setGenerateSyntheticAnnotations(const bool newValue)$/;"	f	class:XMLScanner
setGrammar	include/xercesc/validators/DTD/DTDValidator.hpp	/^inline void DTDValidator::setGrammar(Grammar* aGrammar) {$/;"	f	class:DTDValidator
setGrammar	include/xercesc/validators/schema/SchemaValidator.hpp	/^inline void SchemaValidator::setGrammar(Grammar* aGrammar) {$/;"	f	class:SchemaValidator
setGrammarResolver	include/xercesc/validators/schema/SchemaValidator.hpp	/^inline void SchemaValidator::setGrammarResolver(GrammarResolver* grammarResolver) {$/;"	f	class:SchemaValidator
setGroupInfoRegistry	include/xercesc/validators/schema/SchemaGrammar.hpp	/^SchemaGrammar::setGroupInfoRegistry(RefHashTableOf<XercesGroupInfo>* const other) {$/;"	f	class:SchemaGrammar
setHandleMultipleImports	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::setHandleMultipleImports(const bool newValue)$/;"	f	class:XMLScanner
setHasNoDTD	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::setHasNoDTD(const bool hasNoDTD)$/;"	f	class:XMLScanner
setId	include/xercesc/framework/XMLAttDef.hpp	/^inline void XMLAttDef::setId(const XMLSize_t newId)$/;"	f	class:XMLAttDef
setId	include/xercesc/framework/XMLElementDecl.hpp	/^inline void XMLElementDecl::setId(const XMLSize_t newId)$/;"	f	class:XMLElementDecl
setId	include/xercesc/framework/XMLEntityDecl.hpp	/^inline void XMLEntityDecl::setId(const XMLSize_t newId)$/;"	f	class:XMLEntityDecl
setId	include/xercesc/framework/XMLNotationDecl.hpp	/^inline void XMLNotationDecl::setId(const XMLSize_t newId)$/;"	f	class:XMLNotationDecl
setIdentityConstraintChecking	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::setIdentityConstraintChecking(const bool identityConstraintChecking)$/;"	f	class:XMLScanner
setIgnoreAnnotations	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::setIgnoreAnnotations(const bool newValue)$/;"	f	class:XMLScanner
setIgnoreSerializedAnnotations	include/xercesc/framework/XMLGrammarPool.hpp	/^    inline void setIgnoreSerializedAnnotations(const bool flag)$/;"	f	class:XMLGrammarPool
setIgnoredCachedDTD	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::setIgnoredCachedDTD(const bool newValue)$/;"	f	class:XMLScanner
setInUse	include/xercesc/framework/XMLBuffer.hpp	/^    void setInUse(const bool newValue)$/;"	f	class:XMLBuffer
setIncludeIgnorableWhitespace	include/xercesc/parsers/AbstractDOMParser.hpp	/^inline void AbstractDOMParser::setIncludeIgnorableWhitespace(const bool include)$/;"	f	class:AbstractDOMParser
setInputBufferSize	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::setInputBufferSize(const XMLSize_t bufferSize)$/;"	f	class:XMLScanner
setInputBufferSize	include/xercesc/sax2/SAX2XMLReader.hpp	/^inline void SAX2XMLReader::setInputBufferSize(const XMLSize_t \/*bufferSize*\/)$/;"	f	class:SAX2XMLReader
setIsChildNode	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    inline void setIsChildNode(bool value) {$/;"	f	class:DOMNodeImpl
setIsExternal	include/xercesc/framework/XMLEntityDecl.hpp	/^inline void XMLEntityDecl::setIsExternal(bool value)$/;"	f	class:XMLEntityDecl
setIsLeafNode	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    inline void setIsLeafNode(bool value) {$/;"	f	class:DOMNodeImpl
setIsParameter	include/xercesc/validators/DTD/DTDEntityDecl.hpp	/^inline void DTDEntityDecl::setIsParameter(const bool newValue)$/;"	f	class:DTDEntityDecl
setIsSpecialChar	include/xercesc/validators/DTD/DTDEntityDecl.hpp	/^inline void DTDEntityDecl::setIsSpecialChar(const bool newValue)$/;"	f	class:DTDEntityDecl
setIssueFatalErrorIfNotFound	include/xercesc/sax/InputSource.hpp	/^inline void InputSource::setIssueFatalErrorIfNotFound(const bool flag)$/;"	f	class:InputSource
setKey	include/xercesc/util/KVStringPair.hpp	/^inline void KVStringPair::setKey(  const XMLCh* const newKey$/;"	f	class:KVStringPair
setKey	include/xercesc/util/KVStringPair.hpp	/^inline void KVStringPair::setKey(const XMLCh* const newKey)$/;"	f	class:KVStringPair
setKey	include/xercesc/util/KeyRefPair.c	/^KeyRefPair<TKey,TValue>::setKey(TKey* newKey)$/;"	f	class:TValue
setKey	include/xercesc/util/KeyValuePair.c	/^KeyValuePair<TKey,TValue>::setKey(const TKey& newKey)$/;"	f	class:TValue
setLength	include/xercesc/validators/datatype/AbstractStringValidator.hpp	/^inline void AbstractStringValidator::setLength(XMLSize_t newLength)$/;"	f	class:AbstractStringValidator
setLexicalHandler	include/xercesc/parsers/SAX2XMLFilterImpl.hpp	/^inline void SAX2XMLFilterImpl::setLexicalHandler(LexicalHandler* const \/*handler*\/)$/;"	f	class:SAX2XMLFilterImpl
setLineCol	include/xercesc/framework/psvi/XSAnnotation.hpp	/^inline void XSAnnotation::setLineCol(XMLFileLoc line, XMLFileLoc col)$/;"	f	class:XSAnnotation
setLineNumber	include/xercesc/dom/impl/DOMLocatorImpl.hpp	/^inline void DOMLocatorImpl::setLineNumber(const XMLFileLoc lineNumber)$/;"	f	class:DOMLocatorImpl
setLoadExternalDTD	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::setLoadExternalDTD(const bool loadDTD)$/;"	f	class:XMLScanner
setLoadSchema	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::setLoadSchema(const bool loadSchema)$/;"	f	class:XMLScanner
setLocalPart	include/xercesc/util/QName.hpp	/^inline void QName::setLocalPart(const XMLCh* localPart)$/;"	f	class:QName
setLowWaterMark	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::setLowWaterMark(XMLSize_t newValue)$/;"	f	class:XMLScanner
setMatcherStack	include/xercesc/validators/schema/identity/FieldActivator.hpp	/^FieldActivator::setMatcherStack(XPathMatcherStack* const matcherStack) {$/;"	f	class:FieldActivator
setMax	include/xercesc/util/regx/ClosureToken.hpp	/^inline void ClosureToken::setMax(const int maxVal) {$/;"	f	class:ClosureToken
setMax	include/xercesc/util/regx/Token.hpp	/^inline void Token::setMax(const int) {$/;"	f	class:Token
setMaxLength	include/xercesc/validators/datatype/AbstractStringValidator.hpp	/^inline void AbstractStringValidator::setMaxLength(XMLSize_t newMaxLength)$/;"	f	class:AbstractStringValidator
setMaxOccurs	include/xercesc/validators/common/ContentSpecNode.hpp	/^inline void ContentSpecNode::setMaxOccurs(int max)$/;"	f	class:ContentSpecNode
setMayMatch	include/xercesc/validators/schema/identity/FieldActivator.hpp	/^inline void FieldActivator::setMayMatch(IC_Field* const field, bool value) {$/;"	f	class:FieldActivator
setMessage	include/xercesc/dom/impl/DOMErrorImpl.hpp	/^inline void DOMErrorImpl::setMessage(const XMLCh* const message)$/;"	f	class:DOMErrorImpl
setMin	include/xercesc/util/regx/ClosureToken.hpp	/^inline void ClosureToken::setMin(const int minVal) {$/;"	f	class:ClosureToken
setMin	include/xercesc/util/regx/Token.hpp	/^inline void Token::setMin(const int) {$/;"	f	class:Token
setMinLength	include/xercesc/validators/datatype/AbstractStringValidator.hpp	/^inline void AbstractStringValidator::setMinLength(XMLSize_t newMinLength)$/;"	f	class:AbstractStringValidator
setMinOccurs	include/xercesc/validators/common/ContentSpecNode.hpp	/^inline void ContentSpecNode::setMinOccurs(int min)$/;"	f	class:ContentSpecNode
setMiscFlags	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^inline void SchemaElementDecl::setMiscFlags(const int flags)$/;"	f	class:SchemaElementDecl
setModelType	include/xercesc/validators/DTD/DTDElementDecl.hpp	/^DTDElementDecl::setModelType(const DTDElementDecl::ModelTypes toSet)$/;"	f	class:DTDElementDecl
setModelType	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^SchemaElementDecl::setModelType(const SchemaElementDecl::ModelTypes toSet)$/;"	f	class:SchemaElementDecl
setNameSpaceId	include/xercesc/framework/XMLNotationDecl.hpp	/^inline void XMLNotationDecl::setNameSpaceId(const unsigned int newId)$/;"	f	class:XMLNotationDecl
setNamespaceList	include/xercesc/validators/schema/SchemaAttDef.hpp	/^inline void SchemaAttDef::setNamespaceList(const ValueVectorOf<unsigned int>* const toSet) {$/;"	f	class:SchemaAttDef
setNamespaceScope	include/xercesc/framework/ValidationContext.hpp	/^    virtual void setNamespaceScope(NamespaceScope* \/* nsStack *\/) { };$/;"	f	class:ValidationContext
setNamespaceScope	include/xercesc/internal/ValidationContextImpl.hpp	/^inline void ValidationContextImpl::setNamespaceScope(NamespaceScope* nsStack) {$/;"	f	class:ValidationContextImpl
setNamespaceURI	include/xercesc/validators/schema/identity/IdentityConstraint.hpp	/^inline void IdentityConstraint::setNamespaceURI(int uri)$/;"	f	class:IdentityConstraint
setNextOp	include/xercesc/util/regx/Op.hpp	/^inline void Op::setNextOp(const Op* const nextOp) {$/;"	f	class:Op
setNillable	include/xercesc/validators/schema/SchemaValidator.hpp	/^inline void SchemaValidator::setNillable(bool isNil) {$/;"	f	class:SchemaValidator
setNormalizeData	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::setNormalizeData(const bool normalizeData)$/;"	f	class:XMLScanner
setNotationName	include/xercesc/framework/XMLEntityDecl.hpp	/^inline void XMLEntityDecl::setNotationName(const XMLCh* const newName)$/;"	f	class:XMLEntityDecl
setNumeric	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^inline void DatatypeValidator::setNumeric(bool numeric)$/;"	f	class:DatatypeValidator
setOpType	include/xercesc/util/regx/Op.hpp	/^inline void Op::setOpType(const Op::opType type) {$/;"	f	class:Op
setOptions	include/xercesc/util/regx/RegxParser.hpp	/^inline void RegxParser::setOptions(const int options) {$/;"	f	class:RegxParser
setOrdered	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^inline void DatatypeValidator::setOrdered(XSSimpleTypeDefinition::ORDERING ordered)$/;"	f	class:DatatypeValidator
setPSVIHandler	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::setPSVIHandler(PSVIHandler* const handler)$/;"	f	class:XMLScanner
setPSVIScope	include/xercesc/validators/schema/SchemaAttDef.hpp	/^inline void SchemaAttDef::setPSVIScope(const PSVIDefs::PSVIScope toSet)$/;"	f	class:SchemaAttDef
setPSVIScope	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^SchemaElementDecl::setPSVIScope(const PSVIDefs::PSVIScope toSet)$/;"	f	class:SchemaElementDecl
setParseContext	include/xercesc/util/regx/RegxParser.hpp	/^inline void RegxParser::setParseContext(const RegxParser::parserStateContext value) {$/;"	f	class:RegxParser
setParseInProgress	include/xercesc/parsers/AbstractDOMParser.hpp	/^inline void AbstractDOMParser::setParseInProgress(const bool toSet)$/;"	f	class:AbstractDOMParser
setPattern	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^inline void DatatypeValidator::setPattern(const XMLCh* pattern)$/;"	f	class:DatatypeValidator
setPosition	include/xercesc/validators/common/CMLeaf.hpp	/^inline void CMLeaf::setPosition(const unsigned int newPosition)$/;"	f	class:CMLeaf
setPrefix	include/xercesc/util/QName.hpp	/^inline void QName::setPrefix(const XMLCh* prefix)$/;"	f	class:QName
setPrefixColonPos	include/xercesc/internal/ElemStack.hpp	/^inline void ElemStack::setPrefixColonPos(int colonPos)$/;"	f	class:ElemStack
setPreprocessed	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline void ComplexTypeInfo::setPreprocessed(const bool aValue) {$/;"	f	class:ComplexTypeInfo
setPrimaryKey	include/xercesc/util/Hash2KeysSetOf.c	/^void Hash2KeysSetOfEnumerator<THasher>::setPrimaryKey(const void* key)$/;"	f	class:THasher
setPrimaryKey	include/xercesc/util/RefHash2KeysTableOf.c	/^void RefHash2KeysTableOfEnumerator<TVal, THasher>::setPrimaryKey(const void* key)$/;"	f	class:THasher
setPrimitiveType	include/xercesc/framework/psvi/XSSimpleTypeDefinition.hpp	/^XSSimpleTypeDefinition::setPrimitiveType(XSSimpleTypeDefinition* const toSet)$/;"	f	class:XSSimpleTypeDefinition
setProcessed	include/xercesc/validators/schema/SchemaInfo.hpp	/^inline void SchemaInfo::setProcessed(const bool aValue) {$/;"	f	class:SchemaInfo
setPublicId	include/xercesc/framework/XMLEntityDecl.hpp	/^inline void XMLEntityDecl::setPublicId(const XMLCh* const newId)$/;"	f	class:XMLEntityDecl
setPublicId	include/xercesc/framework/XMLNotationDecl.hpp	/^inline void XMLNotationDecl::setPublicId(const XMLCh* const newId)$/;"	f	class:XMLNotationDecl
setRangeToken	include/xercesc/util/regx/RangeTokenMap.hpp	/^inline void RangeTokenElemMap::setRangeToken(RangeToken* const tok,$/;"	f	class:RangeTokenElemMap
setReaderNum	include/xercesc/internal/XMLReader.hpp	/^inline void XMLReader::setReaderNum(const XMLSize_t newNum)$/;"	f	class:XMLReader
setReferenceEscaped	include/xercesc/internal/ElemStack.hpp	/^inline void ElemStack::setReferenceEscaped()$/;"	f	class:ElemStack
setRegex	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^inline void DatatypeValidator::setRegex(RegularExpression* const regex)$/;"	f	class:DatatypeValidator
setRelatedData	include/xercesc/dom/impl/DOMErrorImpl.hpp	/^inline void DOMErrorImpl::setRelatedData(void* relatedData)$/;"	f	class:DOMErrorImpl
setRelatedNode	include/xercesc/dom/impl/DOMLocatorImpl.hpp	/^inline void DOMLocatorImpl::setRelatedNode(DOMNode* const errorNode)$/;"	f	class:DOMLocatorImpl
setRootElemName	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::setRootElemName(XMLCh* rootElemName)$/;"	f	class:XMLScanner
setScanner	include/xercesc/framework/ValidationContext.hpp	/^    virtual void setScanner(XMLScanner* \/* scanner *\/) { };$/;"	f	class:ValidationContext
setScanner	include/xercesc/internal/ValidationContextImpl.hpp	/^inline void ValidationContextImpl::setScanner(XMLScanner* scanner) {$/;"	f	class:ValidationContextImpl
setScanner	include/xercesc/validators/schema/identity/ValueStoreCache.hpp	/^inline void ValueStoreCache::setScanner(XMLScanner* const scanner) {$/;"	f	class:ValueStoreCache
setScannerInfo	include/xercesc/framework/XMLValidator.hpp	/^XMLValidator::setScannerInfo(XMLScanner* const      owningScanner$/;"	f	class:XMLValidator
setScope	include/xercesc/validators/schema/XercesGroupInfo.hpp	/^inline void XercesGroupInfo::setScope(const unsigned int other) {$/;"	f	class:XercesGroupInfo
setScopeCount	include/xercesc/validators/schema/SchemaGrammar.hpp	/^SchemaGrammar::setScopeCount (unsigned int scopeCount)$/;"	f	class:SchemaGrammar
setScopeDefined	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline void ComplexTypeInfo::setScopeDefined(const unsigned int scopeDefined) {$/;"	f	class:ComplexTypeInfo
setSecond	include/xercesc/validators/common/ContentSpecNode.hpp	/^inline void ContentSpecNode::setSecond(ContentSpecNode* const toAdopt)$/;"	f	class:ContentSpecNode
setSecurityManager	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::setSecurityManager(SecurityManager* const securityManager)$/;"	f	class:XMLScanner
setSeverity	include/xercesc/dom/impl/DOMErrorImpl.hpp	/^inline void DOMErrorImpl::setSeverity(const ErrorSeverity severity)$/;"	f	class:DOMErrorImpl
setSign	include/xercesc/util/XMLBigInteger.hpp	/^inline void XMLBigInteger::setSign(int newSign)$/;"	f	class:XMLBigInteger
setSkipDTDValidation	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::setSkipDTDValidation(const bool newValue)$/;"	f	class:XMLScanner
setSpecified	include/xercesc/framework/XMLAttr.hpp	/^inline void XMLAttr::setSpecified(const bool newValue)$/;"	f	class:XMLAttr
setStandardUriConformant	include/xercesc/internal/ReaderMgr.hpp	/^inline void ReaderMgr::setStandardUriConformant(const bool newValue)$/;"	f	class:ReaderMgr
setStandardUriConformant	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::setStandardUriConformant(const bool newValue)$/;"	f	class:XMLScanner
setStartPos	include/xercesc/util/regx/Match.hpp	/^inline void Match::setStartPos(const int index, const int value) {$/;"	f	class:Match
setString	include/xercesc/util/regx/StringToken.hpp	/^inline void StringToken::setString(const XMLCh* const literal) {$/;"	f	class:StringToken
setStringData	include/xercesc/framework/Wrapper4InputSource.hpp	/^inline void Wrapper4InputSource::setStringData(const XMLCh*)$/;"	f	class:Wrapper4InputSource
setSubstitutionGroupElem	include/xercesc/validators/schema/SchemaElementDecl.hpp	/^SchemaElementDecl::setSubstitutionGroupElem(SchemaElementDecl* const elemDecl) {$/;"	f	class:SchemaElementDecl
setSystemId	include/xercesc/framework/XMLDTDDescription.hpp	/^    virtual void                  setSystemId(const XMLCh* const) {};$/;"	f	class:XMLDTDDescription
setSystemId	include/xercesc/framework/XMLEntityDecl.hpp	/^inline void XMLEntityDecl::setSystemId(const XMLCh* const newId)$/;"	f	class:XMLEntityDecl
setSystemId	include/xercesc/framework/XMLNotationDecl.hpp	/^inline void XMLNotationDecl::setSystemId(const XMLCh* const newId)$/;"	f	class:XMLNotationDecl
setTargetNamespace	include/xercesc/validators/schema/SchemaGrammar.hpp	/^inline void SchemaGrammar::setTargetNamespace(const XMLCh* const targetNamespace)$/;"	f	class:SchemaGrammar
setThrowAtEnd	include/xercesc/internal/XMLReader.hpp	/^inline void XMLReader::setThrowAtEnd(const bool newValue)$/;"	f	class:XMLReader
setThrowEOE	include/xercesc/internal/ReaderMgr.hpp	/^inline void ReaderMgr::setThrowEOE(const bool newValue)$/;"	f	class:ReaderMgr
setTokenFactory	include/xercesc/util/regx/RegxParser.hpp	/^inline void RegxParser::setTokenFactory(TokenFactory* const tokFactory) {$/;"	f	class:RegxParser
setTokenType	include/xercesc/util/regx/Token.hpp	/^inline void Token::setTokenType(const Token::tokType tokType) {$/;"	f	class:Token
setTotalDigits	include/xercesc/validators/datatype/DecimalDatatypeValidator.hpp	/^inline void DecimalDatatypeValidator::setTotalDigits(unsigned int newTotalDigits)$/;"	f	class:DecimalDatatypeValidator
setType	include/xercesc/dom/impl/DOMErrorImpl.hpp	/^inline void DOMErrorImpl::setType(const XMLCh* type)$/;"	f	class:DOMErrorImpl
setType	include/xercesc/framework/XMLAttDef.hpp	/^inline void XMLAttDef::setType(const XMLAttDef::AttTypes newValue)$/;"	f	class:XMLAttDef
setType	include/xercesc/framework/XMLAttr.hpp	/^inline void XMLAttr::setType(const XMLAttDef::AttTypes newValue)$/;"	f	class:XMLAttr
setType	include/xercesc/validators/common/ContentSpecNode.hpp	/^inline void ContentSpecNode::setType(const NodeTypes type)$/;"	f	class:ContentSpecNode
setType	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^inline void DatatypeValidator::setType(ValidatorType theType)$/;"	f	class:DatatypeValidator
setTypeDefinition	include/xercesc/framework/psvi/XSElementDeclaration.hpp	/^inline void XSElementDeclaration::setTypeDefinition(XSTypeDefinition* typeDefinition)$/;"	f	class:XSElementDeclaration
setTypeName	include/xercesc/validators/schema/ComplexTypeInfo.hpp	/^inline void ComplexTypeInfo::setTypeName(const XMLCh* const typeName) {$/;"	f	class:ComplexTypeInfo
setTypeWithId	include/xercesc/validators/schema/XercesAttGroupInfo.hpp	/^inline void XercesAttGroupInfo::setTypeWithId(const bool other) {$/;"	f	class:XercesAttGroupInfo
setUBO	include/xercesc/util/Transcoders/IconvGNU/IconvGNUTransService.hpp	/^    inline void	setUBO (unsigned int u) { fUBO = u; }$/;"	f	class:IconvGNUWrapper
setUChSize	include/xercesc/util/Transcoders/IconvGNU/IconvGNUTransService.hpp	/^    inline void	setUChSize (size_t sz) { fUChSize = sz; }$/;"	f	class:IconvGNUWrapper
setURCharRef	include/xercesc/dom/impl/DOMLSSerializerImpl.hpp	/^inline void DOMLSSerializerImpl::setURCharRef()$/;"	f	class:DOMLSSerializerImpl
setURI	include/xercesc/dom/impl/DOMLocatorImpl.hpp	/^inline void DOMLocatorImpl::setURI(const XMLCh* const uri)$/;"	f	class:DOMLocatorImpl
setURI	include/xercesc/util/QName.hpp	/^inline void QName::setURI(const unsigned int uriId)$/;"	f	class:QName
setUnRepFlags	include/xercesc/framework/XMLFormatter.hpp	/^inline void XMLFormatter::setUnRepFlags(const UnRepFlags newFlags)$/;"	f	class:XMLFormatter
setUsed	include/xercesc/framework/XMLRefInfo.hpp	/^inline void XMLRefInfo::setUsed(const bool newValue)$/;"	f	class:XMLRefInfo
setUtf16Offset	include/xercesc/dom/impl/DOMLocatorImpl.hpp	/^inline void DOMLocatorImpl::setUtf16Offset(const XMLFilePos offset)$/;"	f	class:DOMLocatorImpl
setValidSubstitutionGroups	include/xercesc/validators/schema/SchemaGrammar.hpp	/^SchemaGrammar::setValidSubstitutionGroups(RefHash2KeysTableOf<ElemVector>* const other) {$/;"	f	class:SchemaGrammar
setValidateAnnotations	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::setValidateAnnotations(const bool newValue)$/;"	f	class:XMLScanner
setValidated	include/xercesc/validators/DTD/DTDGrammar.hpp	/^inline void DTDGrammar::setValidated(const bool newState)$/;"	f	class:DTDGrammar
setValidated	include/xercesc/validators/schema/SchemaGrammar.hpp	/^inline void SchemaGrammar::setValidated(const bool newState)$/;"	f	class:SchemaGrammar
setValidatingMemberType	include/xercesc/internal/ValidationContextImpl.hpp	/^inline void ValidationContextImpl::setValidatingMemberType(DatatypeValidator * validatingMemberType) $/;"	f	class:ValidationContextImpl
setValidationConstraintFatal	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::setValidationConstraintFatal(const bool newValue)$/;"	f	class:XMLScanner
setValidationFlag	include/xercesc/internal/ElemStack.hpp	/^inline void ElemStack::setValidationFlag(bool validationFlag)$/;"	f	class:ElemStack
setValidationSchemaFullChecking	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::setValidationSchemaFullChecking(const bool schemaFullChecking)$/;"	f	class:XMLScanner
setValidationScheme	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::setValidationScheme(const ValSchemes newScheme)$/;"	f	class:XMLScanner
setValue	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    inline bool setValue() const {$/;"	f	class:DOMNodeImpl
setValue	include/xercesc/dom/impl/DOMNodeImpl.hpp	/^    inline void setValue(bool value) {$/;"	f	class:DOMNodeImpl
setValue	include/xercesc/framework/XMLAttDef.hpp	/^inline void XMLAttDef::setValue(const XMLCh* const newValue)$/;"	f	class:XMLAttDef
setValue	include/xercesc/framework/XMLEntityDecl.hpp	/^inline void XMLEntityDecl::setValue(const XMLCh* const newValue)$/;"	f	class:XMLEntityDecl
setValue	include/xercesc/util/KVStringPair.hpp	/^inline void KVStringPair::setValue(  const XMLCh* const newValue$/;"	f	class:KVStringPair
setValue	include/xercesc/util/KVStringPair.hpp	/^inline void KVStringPair::setValue(const XMLCh* const newValue)$/;"	f	class:KVStringPair
setValue	include/xercesc/util/KeyRefPair.c	/^KeyRefPair<TKey,TValue>::setValue(TValue* newValue)$/;"	f	class:TValue
setValue	include/xercesc/util/KeyValuePair.c	/^KeyValuePair<TKey,TValue>::setValue(const TValue& newValue)$/;"	f	class:TValue
setValueStoreCache	include/xercesc/validators/schema/identity/FieldActivator.hpp	/^inline void FieldActivator::setValueStoreCache(ValueStoreCache* const other) {$/;"	f	class:FieldActivator
setWhiteSpace	include/xercesc/validators/datatype/DatatypeValidator.hpp	/^inline void DatatypeValidator::setWhiteSpace(short newValue)$/;"	f	class:DatatypeValidator
setXMLVersion	include/xercesc/internal/ReaderMgr.hpp	/^inline void ReaderMgr::setXMLVersion(const XMLReader::XMLVersion version)$/;"	f	class:ReaderMgr
setXMLVersion	include/xercesc/internal/XMLReader.hpp	/^inline void XMLReader::setXMLVersion(const XMLVersion version)$/;"	f	class:XMLReader
setXsiType	include/xercesc/validators/schema/SchemaValidator.hpp	/^inline void SchemaValidator::setXsiType(const XMLCh* const        prefix$/;"	f	class:SchemaValidator
size	include/xercesc/dom/impl/DOMNodeVector.hpp	/^inline XMLSize_t DOMNodeVector::size() {$/;"	f	class:DOMNodeVector
size	include/xercesc/util/BaseRefVectorOf.c	/^template <class TElem> XMLSize_t BaseRefVectorOf<TElem>::size() const$/;"	f	class:TElem
size	include/xercesc/util/RefHash3KeysIdPool.c	/^XMLSize_t RefHash3KeysIdPoolEnumerator<TVal, THasher>::size() const$/;"	f	class:THasher
size	include/xercesc/util/RefStackOf.c	/^template <class TElem> XMLSize_t RefStackOf<TElem>::size()$/;"	f	class:TElem
size	include/xercesc/util/ValueStackOf.c	/^template <class TElem> XMLSize_t ValueStackOf<TElem>::size()$/;"	f	class:TElem
size	include/xercesc/util/regx/ClosureToken.hpp	/^inline XMLSize_t ClosureToken::size() const {$/;"	f	class:ClosureToken
size	include/xercesc/util/regx/ConcatToken.hpp	/^inline XMLSize_t ConcatToken::size() const {$/;"	f	class:ConcatToken
size	include/xercesc/util/regx/ParenToken.hpp	/^inline XMLSize_t ParenToken::size() const {$/;"	f	class:ParenToken
size	include/xercesc/util/regx/Token.hpp	/^inline XMLSize_t Token::size() const {$/;"	f	class:Token
size	include/xercesc/util/regx/UnionToken.hpp	/^inline XMLSize_t UnionToken::size() const {$/;"	f	class:UnionToken
size	include/xercesc/validators/schema/identity/FieldValueMap.hpp	/^inline XMLSize_t FieldValueMap::size() const {$/;"	f	class:FieldValueMap
size	include/xercesc/validators/schema/identity/XPathMatcherStack.hpp	/^inline XMLSize_t XPathMatcherStack::size() const {$/;"	f	class:XPathMatcherStack
skipPastChar	include/xercesc/internal/ReaderMgr.hpp	/^inline void ReaderMgr::skipPastChar(const XMLCh toSkipPast)$/;"	f	class:ReaderMgr
skipToChar	include/xercesc/internal/ReaderMgr.hpp	/^inline void ReaderMgr::skipToChar(const XMLCh toSkipTo)$/;"	f	class:ReaderMgr
skippedEntity	include/xercesc/sax2/DefaultHandler.hpp	/^inline void DefaultHandler::skippedEntity ( const	XMLCh* const)$/;"	f	class:DefaultHandler
skippedString	include/xercesc/internal/ReaderMgr.hpp	/^inline bool ReaderMgr::skippedString(const XMLCh* const toSkip)$/;"	f	class:ReaderMgr
skippedStringLong	include/xercesc/internal/ReaderMgr.hpp	/^inline bool ReaderMgr::skippedStringLong(const XMLCh* const toSkip)$/;"	f	class:ReaderMgr
sortRanges	include/xercesc/util/regx/Token.hpp	/^inline void Token::sortRanges() {$/;"	f	class:Token
split1stOctet	include/xercesc/util/Base64.hpp	/^inline void Base64::split1stOctet(const XMLByte& ch, XMLByte& b1, XMLByte& b2) {$/;"	f	class:Base64
split2ndOctet	include/xercesc/util/Base64.hpp	/^inline void Base64::split2ndOctet(const XMLByte& ch, XMLByte& b2, XMLByte& b3) {$/;"	f	class:Base64
split3rdOctet	include/xercesc/util/Base64.hpp	/^inline void Base64::split3rdOctet(const XMLByte& ch, XMLByte& b3, XMLByte& b4) {$/;"	f	class:Base64
st_CantCreateRegEx	include/xercesc/framework/psvi/XSValue.hpp	/^            st_CantCreateRegEx,$/;"	e	enum:XSValue::Status
st_FOCA0001	include/xercesc/framework/psvi/XSValue.hpp	/^            st_FOCA0001,        \/\/input value too large\/too small for decimal$/;"	e	enum:XSValue::Status
st_FOCA0002	include/xercesc/framework/psvi/XSValue.hpp	/^            st_FOCA0002,        \/\/invalid lexical value$/;"	e	enum:XSValue::Status
st_FOCA0003	include/xercesc/framework/psvi/XSValue.hpp	/^            st_FOCA0003,        \/\/input value too large for integer$/;"	e	enum:XSValue::Status
st_FODT0003	include/xercesc/framework/psvi/XSValue.hpp	/^            st_FODT0003,        \/\/invalid timezone value$/;"	e	enum:XSValue::Status
st_Init	include/xercesc/framework/psvi/XSValue.hpp	/^            st_Init,$/;"	e	enum:XSValue::Status
st_NoActVal	include/xercesc/framework/psvi/XSValue.hpp	/^            st_NoActVal,$/;"	e	enum:XSValue::Status
st_NoCanRep	include/xercesc/framework/psvi/XSValue.hpp	/^            st_NoCanRep,$/;"	e	enum:XSValue::Status
st_NoContent	include/xercesc/framework/psvi/XSValue.hpp	/^            st_NoContent,$/;"	e	enum:XSValue::Status
st_NotSupported	include/xercesc/framework/psvi/XSValue.hpp	/^            st_NotSupported,$/;"	e	enum:XSValue::Status
st_UnknownType	include/xercesc/framework/psvi/XSValue.hpp	/^            st_UnknownType$/;"	e	enum:XSValue::Status
startCDATA	include/xercesc/sax2/DefaultHandler.hpp	/^inline void DefaultHandler::startCDATA ()$/;"	f	class:DefaultHandler
startDTD	include/xercesc/sax2/DefaultHandler.hpp	/^inline void DefaultHandler::startDTD(  const   XMLCh* const$/;"	f	class:DefaultHandler
startDocument	include/xercesc/sax/HandlerBase.hpp	/^inline void HandlerBase::startDocument()$/;"	f	class:HandlerBase
startDocument	include/xercesc/sax2/DefaultHandler.hpp	/^inline void DefaultHandler::startDocument()$/;"	f	class:DefaultHandler
startElement	include/xercesc/sax/HandlerBase.hpp	/^HandlerBase::startElement(  const   XMLCh* const$/;"	f	class:HandlerBase
startElement	include/xercesc/sax2/DefaultHandler.hpp	/^DefaultHandler::startElement(  const     XMLCh* const$/;"	f	class:DefaultHandler
startEntity	include/xercesc/sax2/DefaultHandler.hpp	/^inline void DefaultHandler::startEntity (const XMLCh* const)$/;"	f	class:DefaultHandler
startInputSource	include/xercesc/parsers/DOMLSParserImpl.hpp	/^inline void DOMLSParserImpl::startInputSource(const InputSource&)$/;"	f	class:DOMLSParserImpl
startInputSource	include/xercesc/parsers/XercesDOMParser.hpp	/^inline void XercesDOMParser::startInputSource(const InputSource&)$/;"	f	class:XercesDOMParser
startPrefixMapping	include/xercesc/sax2/DefaultHandler.hpp	/^inline void DefaultHandler::startPrefixMapping ( const	XMLCh* const$/;"	f	class:DefaultHandler
startsWith	include/xercesc/util/XMLString.hpp	/^inline bool XMLString::startsWith(  const   XMLCh* const    toTest$/;"	f	class:XMLString
startsWithI	include/xercesc/util/XMLString.hpp	/^inline bool XMLString::startsWithI( const   XMLCh* const    toTest$/;"	f	class:XMLString
staticCleanup	include/xercesc/util/regx/RegularExpression.hpp	/^  inline void RegularExpression::staticCleanup()$/;"	f	class:RegularExpression
str	include/xercesc/util/TransService.hpp	/^inline const XMLByte *TranscodeToStr::str() const$/;"	f	class:TranscodeToStr
str	include/xercesc/util/TransService.hpp	/^inline const XMLCh *TranscodeFromStr::str() const$/;"	f	class:TranscodeFromStr
stringLen	include/xercesc/util/XMLString.hpp	/^inline XMLSize_t XMLString::stringLen(const XMLCh* const src)$/;"	f	class:XMLString
subtractRanges	include/xercesc/util/regx/Token.hpp	/^inline void Token::subtractRanges(RangeToken* const) {$/;"	f	class:Token
swapBytes	include/xercesc/util/BitOps.hpp	/^    static inline XMLCh swapBytes(const XMLUInt16 toSwap)$/;"	f	class:BitOps
swapBytes	include/xercesc/util/BitOps.hpp	/^    static inline unsigned int swapBytes(const XMLUInt32 toSwap)$/;"	f	class:BitOps
systemId	include/xercesc/internal/ReaderMgr.hpp	/^        const   XMLCh*          systemId;$/;"	m	struct:ReaderMgr::LastExtEntityInfo
t_value	include/xercesc/framework/psvi/XSValue.hpp	/^    } t_value;$/;"	t	class:XSValue
timezoneIndex	include/xercesc/util/XMLDateTime.hpp	/^    enum timezoneIndex$/;"	g	class:XMLDateTime
toCheckIdentityConstraint	include/xercesc/internal/IGXMLScanner.hpp	/^inline bool IGXMLScanner::toCheckIdentityConstraint()  const$/;"	f	class:IGXMLScanner
toCheckIdentityConstraint	include/xercesc/internal/SGXMLScanner.hpp	/^inline bool SGXMLScanner::toCheckIdentityConstraint()  const$/;"	f	class:SGXMLScanner
toReadBufferLen	include/xercesc/internal/XSerializeEngine.hpp	/^    static const bool toReadBufferLen;$/;"	m	class:XSerializeEngine
toWriteBufferLen	include/xercesc/internal/XSerializeEngine.hpp	/^    static const bool toWriteBufferLen;$/;"	m	class:XSerializeEngine
tokType	include/xercesc/util/regx/Token.hpp	/^    } tokType;$/;"	t	class:Token
transferElement	include/xercesc/util/RefHash2KeysTableOf.c	/^void RefHash2KeysTableOf<TVal, THasher>::transferElement(const void* const key1, void* key2)$/;"	f	class:THasher
transferElement	include/xercesc/util/RefHashTableOf.c	/^inline void RefHashTableOf<TVal, THasher>::transferElement(const void* const key1, void* key2)$/;"	f	class:THasher
true	include/xercesc/util/XercesDefs.hpp	82;"	d
uChSize	include/xercesc/util/Transcoders/IconvGNU/IconvGNUTransService.hpp	/^    inline size_t	uChSize () const { return fUChSize; }$/;"	f	class:IconvGNUWrapper
unparsedEntityDecl	include/xercesc/sax/HandlerBase.hpp	/^HandlerBase::unparsedEntityDecl(const   XMLCh* const$/;"	f	class:HandlerBase
unparsedEntityDecl	include/xercesc/sax2/DefaultHandler.hpp	/^DefaultHandler::unparsedEntityDecl(const   XMLCh* const$/;"	f	class:DefaultHandler
updateValidity	include/xercesc/framework/psvi/PSVIAttribute.hpp	/^inline void PSVIAttribute::updateValidity(VALIDITY_STATE newValue)$/;"	f	class:PSVIAttribute
urlSrc	include/xercesc/framework/URLInputSource.hpp	/^inline const XMLURL& URLInputSource::urlSrc() const$/;"	f	class:URLInputSource
useCachedGrammarInParse	include/xercesc/internal/XMLScanner.hpp	/^inline void XMLScanner::useCachedGrammarInParse(const bool newValue)$/;"	f	class:XMLScanner
useCachedGrammarInParse	include/xercesc/validators/common/GrammarResolver.hpp	/^inline void GrammarResolver::useCachedGrammarInParse(const bool aValue)$/;"	f	class:GrammarResolver
useImplementation	include/xercesc/parsers/AbstractDOMParser.hpp	/^inline void AbstractDOMParser::useImplementation(const XMLCh* const implementationFeatures)$/;"	f	class:AbstractDOMParser
utc	include/xercesc/util/XMLDateTime.hpp	/^        utc        ,$/;"	e	enum:XMLDateTime::valueIndex
utcType	include/xercesc/util/XMLDateTime.hpp	/^    enum utcType$/;"	g	class:XMLDateTime
validate	include/xercesc/validators/datatype/AnySimpleTypeDatatypeValidator.hpp	/^AnySimpleTypeDatatypeValidator::validate(const XMLCh*             const$/;"	f	class:AnySimpleTypeDatatypeValidator
validate	include/xercesc/validators/datatype/BooleanDatatypeValidator.hpp	/^inline void BooleanDatatypeValidator::validate( const XMLCh*             const content$/;"	f	class:BooleanDatatypeValidator
validate	include/xercesc/validators/datatype/UnionDatatypeValidator.hpp	/^inline void UnionDatatypeValidator::validate( const XMLCh*             const content$/;"	f	class:UnionDatatypeValidator
validateElement	include/xercesc/validators/DTD/DTDValidator.hpp	/^inline void DTDValidator::validateElement (const   XMLElementDecl*) {$/;"	f	class:DTDValidator
validateRegion	include/xercesc/util/XMLString.hpp	/^inline bool XMLString::validateRegion(const XMLCh* const str1,$/;"	f	class:XMLString
valueIndex	include/xercesc/util/XMLDateTime.hpp	/^	enum valueIndex$/;"	g	class:XMLDateTime
ver_10	include/xercesc/framework/psvi/XSValue.hpp	/^            ver_10,$/;"	e	enum:XSValue::XMLVersion
ver_11	include/xercesc/framework/psvi/XSValue.hpp	/^            ver_11$/;"	e	enum:XSValue::XMLVersion
warning	include/xercesc/internal/XMLInternalErrorHandler.hpp	/^inline void XMLInternalErrorHandler::warning(const SAXParseException& toCatch)$/;"	f	class:XMLInternalErrorHandler
warning	include/xercesc/sax/HandlerBase.hpp	/^inline void HandlerBase::warning(const SAXParseException&)$/;"	f	class:HandlerBase
warning	include/xercesc/sax2/DefaultHandler.hpp	/^inline void DefaultHandler::warning(const SAXParseException&)$/;"	f	class:DefaultHandler
weavePaths	include/xercesc/util/LogicalPath.c	/^XMLCh* XMLPlatformUtils::weavePaths(const XMLCh* const    basePath$/;"	f	class:XMLPlatformUtils
wordType	include/xercesc/util/regx/RegularExpression.hpp	/^    } wordType;$/;"	t	class:RegularExpression
wordTypeIgnore	include/xercesc/util/regx/RegularExpression.hpp	/^        wordTypeIgnore = 0,$/;"	e	enum:RegularExpression::<anonymous>
wordTypeLetter	include/xercesc/util/regx/RegularExpression.hpp	/^        wordTypeLetter = 1,$/;"	e	enum:RegularExpression::<anonymous>
wordTypeOther	include/xercesc/util/regx/RegularExpression.hpp	/^        wordTypeOther = 2$/;"	e	enum:RegularExpression::<anonymous>
zeroBits	include/xercesc/validators/common/CMStateSet.hpp	/^    void zeroBits()$/;"	f	class:CMStateSet
~ArrayJanitor	include/xercesc/util/Janitor.c	/^template <class T> ArrayJanitor<T>::~ArrayJanitor()$/;"	f	class:T
~AttributeList	include/xercesc/sax/AttributeList.hpp	/^    virtual ~AttributeList()$/;"	f	class:AttributeList
~Attributes	include/xercesc/sax2/Attributes.hpp	/^    virtual ~Attributes()$/;"	f	class:Attributes
~BaseRefVectorEnumerator	include/xercesc/util/BaseRefVectorOf.c	/^template <class TElem> BaseRefVectorEnumerator<TElem>::~BaseRefVectorEnumerator()$/;"	f	class:TElem
~BaseRefVectorOf	include/xercesc/util/BaseRefVectorOf.c	/^template <class TElem> BaseRefVectorOf<TElem>::~BaseRefVectorOf()$/;"	f	class:TElem
~BooleanDatatypeValidator	include/xercesc/validators/datatype/BooleanDatatypeValidator.hpp	/^inline BooleanDatatypeValidator::~BooleanDatatypeValidator()$/;"	f	class:BooleanDatatypeValidator
~CMLeaf	include/xercesc/validators/common/CMLeaf.hpp	/^inline CMLeaf::~CMLeaf()$/;"	f	class:CMLeaf
~CMNode	include/xercesc/validators/common/CMNode.hpp	/^inline CMNode::~CMNode()$/;"	f	class:CMNode
~CMStateSet	include/xercesc/validators/common/CMStateSet.hpp	/^    ~CMStateSet()$/;"	f	class:CMStateSet
~CharOp	include/xercesc/util/regx/Op.hpp	/^    ~CharOp() {}$/;"	f	class:CharOp
~ChildOp	include/xercesc/util/regx/Op.hpp	/^    ~ChildOp() {}$/;"	f	class:ChildOp
~ContentHandler	include/xercesc/sax2/ContentHandler.hpp	/^    virtual ~ContentHandler()$/;"	f	class:ContentHandler
~ContentSpecNode	include/xercesc/validators/common/ContentSpecNode.hpp	/^inline ContentSpecNode::~ContentSpecNode()$/;"	f	class:ContentSpecNode
~CountedPointerTo	include/xercesc/util/CountedPointer.c	/^template <class T> CountedPointerTo<T>::~CountedPointerTo()$/;"	f	class:T
~DOMAttr	include/xercesc/dom/DOMAttr.hpp	/^    virtual ~DOMAttr() {};$/;"	f	class:DOMAttr
~DOMBuffer	include/xercesc/dom/impl/DOMStringPool.hpp	/^    ~DOMBuffer()$/;"	f	class:DOMBuffer
~DOMCDATASection	include/xercesc/dom/DOMCDATASection.hpp	/^    virtual ~DOMCDATASection() {};$/;"	f	class:DOMCDATASection
~DOMCharacterData	include/xercesc/dom/DOMCharacterData.hpp	/^    virtual ~DOMCharacterData() {};$/;"	f	class:DOMCharacterData
~DOMComment	include/xercesc/dom/DOMComment.hpp	/^    virtual ~DOMComment() {};$/;"	f	class:DOMComment
~DOMConfiguration	include/xercesc/dom/DOMConfiguration.hpp	/^    virtual ~DOMConfiguration() {};$/;"	f	class:DOMConfiguration
~DOMDeepNodeListPool	include/xercesc/dom/impl/DOMDeepNodeListPool.c	/^DOMDeepNodeListPool<TVal, THasher>::~DOMDeepNodeListPool()$/;"	f	class:THasher
~DOMDeepNodeListPoolTableBucketElem	include/xercesc/dom/impl/DOMDeepNodeListPool.hpp	/^    ~DOMDeepNodeListPoolTableBucketElem() {};$/;"	f	struct:DOMDeepNodeListPoolTableBucketElem
~DOMDocument	include/xercesc/dom/DOMDocument.hpp	/^    virtual ~DOMDocument() {};$/;"	f	class:DOMDocument
~DOMDocumentFragment	include/xercesc/dom/DOMDocumentFragment.hpp	/^    virtual ~DOMDocumentFragment() {};$/;"	f	class:DOMDocumentFragment
~DOMDocumentRange	include/xercesc/dom/DOMDocumentRange.hpp	/^    virtual ~DOMDocumentRange() {};$/;"	f	class:DOMDocumentRange
~DOMDocumentTraversal	include/xercesc/dom/DOMDocumentTraversal.hpp	/^    virtual ~DOMDocumentTraversal() {};$/;"	f	class:DOMDocumentTraversal
~DOMDocumentType	include/xercesc/dom/DOMDocumentType.hpp	/^    virtual ~DOMDocumentType() {};$/;"	f	class:DOMDocumentType
~DOMElement	include/xercesc/dom/DOMElement.hpp	/^    virtual ~DOMElement() {};$/;"	f	class:DOMElement
~DOMEntity	include/xercesc/dom/DOMEntity.hpp	/^    virtual ~DOMEntity() {};$/;"	f	class:DOMEntity
~DOMEntityReference	include/xercesc/dom/DOMEntityReference.hpp	/^    virtual ~DOMEntityReference() {};$/;"	f	class:DOMEntityReference
~DOMError	include/xercesc/dom/DOMError.hpp	/^    virtual ~DOMError() {};$/;"	f	class:DOMError
~DOMErrorHandler	include/xercesc/dom/DOMErrorHandler.hpp	/^    virtual ~DOMErrorHandler() {};$/;"	f	class:DOMErrorHandler
~DOMImplementation	include/xercesc/dom/DOMImplementation.hpp	/^    virtual ~DOMImplementation() {};$/;"	f	class:DOMImplementation
~DOMImplementationImpl	include/xercesc/dom/impl/DOMImplementationImpl.hpp	/^    virtual ~DOMImplementationImpl() {};$/;"	f	class:DOMImplementationImpl
~DOMImplementationLS	include/xercesc/dom/DOMImplementationLS.hpp	/^    virtual ~DOMImplementationLS() {};$/;"	f	class:DOMImplementationLS
~DOMImplementationList	include/xercesc/dom/DOMImplementationList.hpp	/^    virtual ~DOMImplementationList()  {};$/;"	f	class:DOMImplementationList
~DOMImplementationSource	include/xercesc/dom/DOMImplementationSource.hpp	/^    virtual ~DOMImplementationSource() {};$/;"	f	class:DOMImplementationSource
~DOMLSInput	include/xercesc/dom/DOMLSInput.hpp	/^    virtual ~DOMLSInput() {};$/;"	f	class:DOMLSInput
~DOMLSOutput	include/xercesc/dom/DOMLSOutput.hpp	/^    virtual ~DOMLSOutput() {};$/;"	f	class:DOMLSOutput
~DOMLSParser	include/xercesc/dom/DOMLSParser.hpp	/^    virtual ~DOMLSParser() {};$/;"	f	class:DOMLSParser
~DOMLSParserFilter	include/xercesc/dom/DOMLSParserFilter.hpp	/^    virtual ~DOMLSParserFilter() {};$/;"	f	class:DOMLSParserFilter
~DOMLSResourceResolver	include/xercesc/dom/DOMLSResourceResolver.hpp	/^    virtual ~DOMLSResourceResolver() {};$/;"	f	class:DOMLSResourceResolver
~DOMLSSerializer	include/xercesc/dom/DOMLSSerializer.hpp	/^    virtual ~DOMLSSerializer() {};$/;"	f	class:DOMLSSerializer
~DOMLSSerializerFilter	include/xercesc/dom/DOMLSSerializerFilter.hpp	/^    virtual ~DOMLSSerializerFilter() {};$/;"	f	class:DOMLSSerializerFilter
~DOMLocator	include/xercesc/dom/DOMLocator.hpp	/^    virtual ~DOMLocator() {};$/;"	f	class:DOMLocator
~DOMMemoryManager	include/xercesc/dom/DOMMemoryManager.hpp	/^    virtual ~DOMMemoryManager() {};$/;"	f	class:DOMMemoryManager
~DOMNamedNodeMap	include/xercesc/dom/DOMNamedNodeMap.hpp	/^    virtual ~DOMNamedNodeMap() {};$/;"	f	class:DOMNamedNodeMap
~DOMNode	include/xercesc/dom/DOMNode.hpp	/^    virtual ~DOMNode() {};$/;"	f	class:DOMNode
~DOMNodeFilter	include/xercesc/dom/DOMNodeFilter.hpp	/^    virtual ~DOMNodeFilter() {};$/;"	f	class:DOMNodeFilter
~DOMNodeIterator	include/xercesc/dom/DOMNodeIterator.hpp	/^    virtual ~DOMNodeIterator() {};$/;"	f	class:DOMNodeIterator
~DOMNodeList	include/xercesc/dom/DOMNodeList.hpp	/^    virtual ~DOMNodeList()  {};$/;"	f	class:DOMNodeList
~DOMNotation	include/xercesc/dom/DOMNotation.hpp	/^    virtual ~DOMNotation() {};$/;"	f	class:DOMNotation
~DOMPSVITypeInfo	include/xercesc/dom/DOMPSVITypeInfo.hpp	/^    virtual ~DOMPSVITypeInfo() {};$/;"	f	class:DOMPSVITypeInfo
~DOMProcessingInstruction	include/xercesc/dom/DOMProcessingInstruction.hpp	/^    virtual ~DOMProcessingInstruction() {};$/;"	f	class:DOMProcessingInstruction
~DOMRange	include/xercesc/dom/DOMRange.hpp	/^    virtual ~DOMRange() {};$/;"	f	class:DOMRange
~DOMStringList	include/xercesc/dom/DOMStringList.hpp	/^    virtual ~DOMStringList()  {};$/;"	f	class:DOMStringList
~DOMText	include/xercesc/dom/DOMText.hpp	/^    virtual ~DOMText() {};$/;"	f	class:DOMText
~DOMTreeWalker	include/xercesc/dom/DOMTreeWalker.hpp	/^    virtual ~DOMTreeWalker() {};$/;"	f	class:DOMTreeWalker
~DOMTypeInfo	include/xercesc/dom/DOMTypeInfo.hpp	/^    virtual ~DOMTypeInfo() {};$/;"	f	class:DOMTypeInfo
~DOMUserDataHandler	include/xercesc/dom/DOMUserDataHandler.hpp	/^    virtual ~DOMUserDataHandler() {};$/;"	f	class:DOMUserDataHandler
~DOMXPathEvaluator	include/xercesc/dom/DOMXPathEvaluator.hpp	/^    virtual ~DOMXPathEvaluator() {};$/;"	f	class:DOMXPathEvaluator
~DOMXPathExpression	include/xercesc/dom/DOMXPathExpression.hpp	/^    virtual ~DOMXPathExpression() {};$/;"	f	class:DOMXPathExpression
~DOMXPathNSResolver	include/xercesc/dom/DOMXPathNSResolver.hpp	/^    virtual ~DOMXPathNSResolver() {};$/;"	f	class:DOMXPathNSResolver
~DOMXPathNamespace	include/xercesc/dom/DOMXPathNamespace.hpp	/^    virtual ~DOMXPathNamespace() {};$/;"	f	class:DOMXPathNamespace
~DOMXPathResult	include/xercesc/dom/DOMXPathResult.hpp	/^    virtual ~DOMXPathResult() {};$/;"	f	class:DOMXPathResult
~DTDEntityDecl	include/xercesc/validators/DTD/DTDEntityDecl.hpp	/^inline DTDEntityDecl::~DTDEntityDecl()$/;"	f	class:DTDEntityDecl
~DTDHandler	include/xercesc/sax/DTDHandler.hpp	/^    virtual ~DTDHandler()$/;"	f	class:DTDHandler
~DeclHandler	include/xercesc/sax2/DeclHandler.hpp	/^    virtual ~DeclHandler()$/;"	f	class:DeclHandler
~DefaultHandler	include/xercesc/sax2/DefaultHandler.hpp	/^    virtual ~DefaultHandler() {};$/;"	f	class:DefaultHandler
~DefaultPanicHandler	include/xercesc/util/DefaultPanicHandler.hpp	/^    virtual ~DefaultPanicHandler(){};$/;"	f	class:DefaultPanicHandler
~DocTypeHandler	include/xercesc/validators/DTD/DocTypeHandler.hpp	/^    virtual ~DocTypeHandler()$/;"	f	class:DocTypeHandler
~DocumentHandler	include/xercesc/sax/DocumentHandler.hpp	/^    virtual ~DocumentHandler()$/;"	f	class:DocumentHandler
~EEndianNameMapFor	include/xercesc/util/TransENameMap.c	/^template <class TType> EEndianNameMapFor<TType>::~EEndianNameMapFor()$/;"	f	class:TType
~ENameMap	include/xercesc/util/TransENameMap.hpp	/^    virtual ~ENameMap()$/;"	f	class:ENameMap
~ENameMapFor	include/xercesc/util/TransENameMap.c	/^template <class TType> ENameMapFor<TType>::~ENameMapFor()$/;"	f	class:TType
~EndOfEntityException	include/xercesc/internal/EndOfEntityException.hpp	/^    ~EndOfEntityException()$/;"	f	class:EndOfEntityException
~EntityResolver	include/xercesc/sax/EntityResolver.hpp	/^    virtual ~EntityResolver()$/;"	f	class:EntityResolver
~ErrorHandler	include/xercesc/sax/ErrorHandler.hpp	/^    virtual ~ErrorHandler()$/;"	f	class:ErrorHandler
~FieldMatcher	include/xercesc/validators/schema/identity/IC_Field.hpp	/^    ~FieldMatcher() {}$/;"	f	class:FieldMatcher
~FlagJanitor	include/xercesc/util/FlagJanitor.c	/^template <class T> FlagJanitor<T>::~FlagJanitor()$/;"	f	class:T
~Grammar	include/xercesc/validators/common/Grammar.hpp	/^    virtual ~Grammar(){};$/;"	f	class:Grammar
~HandlerBase	include/xercesc/sax/HandlerBase.hpp	/^    virtual ~HandlerBase() {};$/;"	f	class:HandlerBase
~Hash2KeysSetOf	include/xercesc/util/Hash2KeysSetOf.c	/^Hash2KeysSetOf<THasher>::~Hash2KeysSetOf()$/;"	f	class:THasher
~Hash2KeysSetOfEnumerator	include/xercesc/util/Hash2KeysSetOf.c	/^Hash2KeysSetOfEnumerator<THasher>::~Hash2KeysSetOfEnumerator()$/;"	f	class:THasher
~Janitor	include/xercesc/util/Janitor.c	/^template <class T> Janitor<T>::~Janitor()$/;"	f	class:T
~JanitorMemFunCall	include/xercesc/util/Janitor.c	/^JanitorMemFunCall<T>::~JanitorMemFunCall()$/;"	f	class:T
~KeyRefPair	include/xercesc/util/KeyRefPair.c	/^template <class TKey, class TValue> KeyRefPair<TKey,TValue>::~KeyRefPair()$/;"	f	class:TValue
~KeyValuePair	include/xercesc/util/KeyValuePair.c	/^template <class TKey, class TValue> KeyValuePair<TKey,TValue>::~KeyValuePair()$/;"	f	class:TValue
~LexicalHandler	include/xercesc/sax2/LexicalHandler.hpp	/^    virtual ~LexicalHandler()$/;"	f	class:LexicalHandler
~Locator	include/xercesc/sax/Locator.hpp	/^    virtual ~Locator()$/;"	f	class:Locator
~MemoryManager	include/xercesc/framework/MemoryManager.hpp	/^    virtual ~MemoryManager()$/;"	f	class:MemoryManager
~MemoryManagerImpl	include/xercesc/internal/MemoryManagerImpl.hpp	/^    virtual ~MemoryManagerImpl()$/;"	f	class:MemoryManagerImpl
~ModifierOp	include/xercesc/util/regx/Op.hpp	/^    ~ModifierOp() {}$/;"	f	class:ModifierOp
~NameIdPool	include/xercesc/util/NameIdPool.c	/^template <class TElem> NameIdPool<TElem>::~NameIdPool()$/;"	f	class:TElem
~NameIdPoolEnumerator	include/xercesc/util/NameIdPool.c	/^template <class TElem> NameIdPoolEnumerator<TElem>::~NameIdPoolEnumerator()$/;"	f	class:TElem
~Op	include/xercesc/util/regx/Op.hpp	/^    virtual ~Op() { }$/;"	f	class:Op
~OutOfMemoryException	include/xercesc/util/OutOfMemoryException.hpp	/^inline OutOfMemoryException::~OutOfMemoryException() {}$/;"	f	class:OutOfMemoryException
~PSVIAttribute	include/xercesc/framework/psvi/PSVIAttribute.hpp	/^inline PSVIAttribute::~PSVIAttribute() $/;"	f	class:PSVIAttribute
~PSVIAttributeList	include/xercesc/framework/psvi/PSVIAttributeList.hpp	/^inline PSVIAttributeList::~PSVIAttributeList()$/;"	f	class:PSVIAttributeList
~PSVIAttributeStorage	include/xercesc/framework/psvi/PSVIAttributeList.hpp	/^    ~PSVIAttributeStorage()$/;"	f	class:PSVIAttributeStorage
~PSVIHandler	include/xercesc/framework/psvi/PSVIHandler.hpp	/^    virtual ~PSVIHandler()$/;"	f	class:PSVIHandler
~PSVIItem	include/xercesc/framework/psvi/PSVIItem.hpp	/^inline PSVIItem::~PSVIItem() {}$/;"	f	class:PSVIItem
~PanicHandler	include/xercesc/util/PanicHandler.hpp	/^    virtual ~PanicHandler(){};   $/;"	f	class:PanicHandler
~Parser	include/xercesc/sax/Parser.hpp	/^    virtual ~Parser()$/;"	f	class:Parser
~RangeOp	include/xercesc/util/regx/Op.hpp	/^    ~RangeOp() {}$/;"	f	class:RangeOp
~RefArrayEnumerator	include/xercesc/util/RefArrayOf.c	/^template <class TElem> RefArrayEnumerator<TElem>::~RefArrayEnumerator()$/;"	f	class:TElem
~RefArrayOf	include/xercesc/util/RefArrayOf.c	/^template <class TElem> RefArrayOf<TElem>::~RefArrayOf()$/;"	f	class:TElem
~RefArrayVectorOf	include/xercesc/util/RefArrayVectorOf.c	/^template <class TElem> RefArrayVectorOf<TElem>::~RefArrayVectorOf()$/;"	f	class:TElem
~RefHash2KeysTableBucketElem	include/xercesc/util/RefHash2KeysTableOf.hpp	/^    ~RefHash2KeysTableBucketElem() {};$/;"	f	struct:RefHash2KeysTableBucketElem
~RefHash2KeysTableOf	include/xercesc/util/RefHash2KeysTableOf.c	/^RefHash2KeysTableOf<TVal, THasher>::~RefHash2KeysTableOf()$/;"	f	class:THasher
~RefHash2KeysTableOfEnumerator	include/xercesc/util/RefHash2KeysTableOf.c	/^RefHash2KeysTableOfEnumerator<TVal, THasher>::~RefHash2KeysTableOfEnumerator()$/;"	f	class:THasher
~RefHash3KeysIdPool	include/xercesc/util/RefHash3KeysIdPool.c	/^RefHash3KeysIdPool<TVal, THasher>::~RefHash3KeysIdPool()$/;"	f	class:THasher
~RefHash3KeysIdPoolEnumerator	include/xercesc/util/RefHash3KeysIdPool.c	/^RefHash3KeysIdPoolEnumerator<TVal, THasher>::~RefHash3KeysIdPoolEnumerator()$/;"	f	class:THasher
~RefHash3KeysTableBucketElem	include/xercesc/util/RefHash3KeysIdPool.hpp	/^    ~RefHash3KeysTableBucketElem() {};$/;"	f	struct:RefHash3KeysTableBucketElem
~RefHashTableBucketElem	include/xercesc/util/RefHashTableOf.hpp	/^  ~RefHashTableBucketElem(){};$/;"	f	struct:RefHashTableBucketElem
~RefHashTableOf	include/xercesc/util/RefHashTableOf.c	/^RefHashTableOf<TVal, THasher>::~RefHashTableOf()$/;"	f	class:THasher
~RefHashTableOfEnumerator	include/xercesc/util/RefHashTableOf.c	/^RefHashTableOfEnumerator<TVal, THasher>::~RefHashTableOfEnumerator()$/;"	f	class:THasher
~RefStackEnumerator	include/xercesc/util/RefStackOf.c	/^template <class TElem> RefStackEnumerator<TElem>::~RefStackEnumerator()$/;"	f	class:TElem
~RefStackOf	include/xercesc/util/RefStackOf.c	/^template <class TElem> RefStackOf<TElem>::~RefStackOf()$/;"	f	class:TElem
~RefVectorOf	include/xercesc/util/RefVectorOf.c	/^template <class TElem> RefVectorOf<TElem>::~RefVectorOf()$/;"	f	class:TElem
~RegxUtil	include/xercesc/util/regx/RegxUtil.hpp	/^    ~RegxUtil() {}$/;"	f	class:RegxUtil
~SAX2XMLFilter	include/xercesc/sax2/SAX2XMLFilter.hpp	/^    virtual ~SAX2XMLFilter()$/;"	f	class:SAX2XMLFilter
~SAX2XMLReader	include/xercesc/sax2/SAX2XMLReader.hpp	/^    virtual ~SAX2XMLReader()$/;"	f	class:SAX2XMLReader
~SAXException	include/xercesc/sax/SAXException.hpp	/^    virtual ~SAXException()$/;"	f	class:SAXException
~SecurityManager	include/xercesc/util/SecurityManager.hpp	/^    virtual ~SecurityManager(){};$/;"	f	class:SecurityManager
~SelectorMatcher	include/xercesc/validators/schema/identity/IC_Selector.hpp	/^    ~SelectorMatcher() {}$/;"	f	class:SelectorMatcher
~SimpleContentModel	include/xercesc/validators/common/SimpleContentModel.hpp	/^inline SimpleContentModel::~SimpleContentModel()$/;"	f	class:SimpleContentModel
~StDOMNode	include/xercesc/dom/StDOMNode.hpp	/^	inline ~StDOMNode() { DECREFCOUNT(m_node); }$/;"	f	class:StDOMNode
~StdInInputSource	include/xercesc/framework/StdInInputSource.hpp	/^inline StdInInputSource::~StdInInputSource()$/;"	f	class:StdInInputSource
~StringOp	include/xercesc/util/regx/Op.hpp	/^    ~StringOp() { fMemoryManager->deallocate(fLiteral);}$/;"	f	class:StringOp
~SubstitutionGroupComparator	include/xercesc/validators/schema/SubstitutionGroupComparator.hpp	/^inline SubstitutionGroupComparator::~SubstitutionGroupComparator()$/;"	f	class:SubstitutionGroupComparator
~ThrowEOEJanitor	include/xercesc/internal/ReaderMgr.hpp	/^    ~ThrowEOEJanitor()$/;"	f	class:ThrowEOEJanitor
~UnionOp	include/xercesc/util/regx/Op.hpp	/^    ~UnionOp() { delete fBranches; }$/;"	f	class:UnionOp
~ValidationContext	include/xercesc/framework/ValidationContext.hpp	/^    virtual ~ValidationContext(){};$/;"	f	class:ValidationContext
~ValueArrayEnumerator	include/xercesc/util/ValueArrayOf.c	/^template <class TElem> ValueArrayEnumerator<TElem>::~ValueArrayEnumerator()$/;"	f	class:TElem
~ValueArrayOf	include/xercesc/util/ValueArrayOf.c	/^template <class TElem> ValueArrayOf<TElem>::~ValueArrayOf()$/;"	f	class:TElem
~ValueHashTableBucketElem	include/xercesc/util/ValueHashTableOf.hpp	/^    ~ValueHashTableBucketElem(){};$/;"	f	struct:ValueHashTableBucketElem
~ValueHashTableOf	include/xercesc/util/ValueHashTableOf.c	/^ValueHashTableOf<TVal, THasher>::~ValueHashTableOf()$/;"	f	class:THasher
~ValueHashTableOfEnumerator	include/xercesc/util/ValueHashTableOf.c	/^ValueHashTableOfEnumerator<TVal, THasher>::~ValueHashTableOfEnumerator()$/;"	f	class:THasher
~ValueStackEnumerator	include/xercesc/util/ValueStackOf.c	/^template <class TElem> ValueStackEnumerator<TElem>::~ValueStackEnumerator()$/;"	f	class:TElem
~ValueStackOf	include/xercesc/util/ValueStackOf.c	/^template <class TElem> ValueStackOf<TElem>::~ValueStackOf()$/;"	f	class:TElem
~ValueVectorEnumerator	include/xercesc/util/ValueVectorOf.c	/^template <class TElem> ValueVectorEnumerator<TElem>::~ValueVectorEnumerator()$/;"	f	class:TElem
~ValueVectorOf	include/xercesc/util/ValueVectorOf.c	/^template <class TElem> ValueVectorOf<TElem>::~ValueVectorOf()$/;"	f	class:TElem
~XMLAttDefList	include/xercesc/framework/XMLAttDefList.hpp	/^inline XMLAttDefList::~XMLAttDefList()$/;"	f	class:XMLAttDefList
~XMLAttr	include/xercesc/framework/XMLAttr.hpp	/^inline XMLAttr::~XMLAttr()$/;"	f	class:XMLAttr
~XMLBufBid	include/xercesc/framework/XMLBufferMgr.hpp	/^    ~XMLBufBid()$/;"	f	class:XMLBufBid
~XMLBuffer	include/xercesc/framework/XMLBuffer.hpp	/^    ~XMLBuffer()$/;"	f	class:XMLBuffer
~XMLBufferFullHandler	include/xercesc/framework/XMLBuffer.hpp	/^    virtual ~XMLBufferFullHandler() {}$/;"	f	class:XMLBufferFullHandler
~XMLContentModel	include/xercesc/framework/XMLContentModel.hpp	/^    virtual ~XMLContentModel()$/;"	f	class:XMLContentModel
~XMLDeleter	include/xercesc/util/PlatformUtils.hpp	/^inline XMLDeleter::~XMLDeleter()$/;"	f	class:XMLDeleter
~XMLDocumentHandler	include/xercesc/framework/XMLDocumentHandler.hpp	/^    virtual ~XMLDocumentHandler()$/;"	f	class:XMLDocumentHandler
~XMLEntityHandler	include/xercesc/framework/XMLEntityHandler.hpp	/^    virtual ~XMLEntityHandler()$/;"	f	class:XMLEntityHandler
~XMLEntityResolver	include/xercesc/util/XMLEntityResolver.hpp	/^    virtual ~XMLEntityResolver()$/;"	f	class:XMLEntityResolver
~XMLEnumerator	include/xercesc/util/XMLEnumerator.hpp	/^    virtual ~XMLEnumerator() {};$/;"	f	class:XMLEnumerator
~XMLErrorReporter	include/xercesc/framework/XMLErrorReporter.hpp	/^    virtual ~XMLErrorReporter()$/;"	f	class:XMLErrorReporter
~XMLFileMgr	include/xercesc/util/XMLFileMgr.hpp	/^        virtual ~XMLFileMgr() {}$/;"	f	class:XMLFileMgr
~XMLFormatTarget	include/xercesc/framework/XMLFormatter.hpp	/^    virtual ~XMLFormatTarget() {}$/;"	f	class:XMLFormatTarget
~XMLGrammarPool	include/xercesc/framework/XMLGrammarPool.hpp	/^    virtual ~XMLGrammarPool(){};$/;"	f	class:XMLGrammarPool
~XMLInteger	include/xercesc/util/XMLInteger.hpp	/^inline XMLInteger::~XMLInteger()$/;"	f	class:XMLInteger
~XMLInternalErrorHandler	include/xercesc/internal/XMLInternalErrorHandler.hpp	/^    ~XMLInternalErrorHandler()$/;"	f	class:XMLInternalErrorHandler
~XMLMsgLoader	include/xercesc/util/XMLMsgLoader.hpp	/^inline XMLMsgLoader::~XMLMsgLoader()$/;"	f	class:XMLMsgLoader
~XMLMutexMgr	include/xercesc/util/XMLMutexMgr.hpp	/^        virtual ~XMLMutexMgr() {}$/;"	f	class:XMLMutexMgr
~XMLNetAccessor	include/xercesc/util/XMLNetAccessor.hpp	/^    virtual ~XMLNetAccessor()$/;"	f	class:XMLNetAccessor
~XMLPScanToken	include/xercesc/framework/XMLPScanToken.hpp	/^inline XMLPScanToken::~XMLPScanToken()$/;"	f	class:XMLPScanToken
~XMLRefInfo	include/xercesc/framework/XMLRefInfo.hpp	/^inline XMLRefInfo::~XMLRefInfo()$/;"	f	class:XMLRefInfo
~XMLResourceIdentifier	include/xercesc/util/XMLResourceIdentifier.hpp	/^    ~XMLResourceIdentifier()$/;"	f	class:XMLResourceIdentifier
~XMLUniCharacter	include/xercesc/util/regx/XMLUniCharacter.hpp	/^    ~XMLUniCharacter() {}$/;"	f	class:XMLUniCharacter
~XMLValidator	include/xercesc/framework/XMLValidator.hpp	/^    virtual ~XMLValidator()$/;"	f	class:XMLValidator
~XMemory	include/xercesc/util/XMemory.hpp	/^    virtual ~XMemory()$/;"	f	class:XMemory
~XPathScanner	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    virtual ~XPathScanner() {}$/;"	f	class:XPathScanner
~XPathScannerForSchema	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    ~XPathScannerForSchema() {}$/;"	f	class:XPathScannerForSchema
~XSDErrorReporter	include/xercesc/validators/schema/XSDErrorReporter.hpp	/^    virtual ~XSDErrorReporter()$/;"	f	class:XSDErrorReporter
~XSDLocator	include/xercesc/validators/schema/XSDLocator.hpp	/^    virtual ~XSDLocator()$/;"	f	class:XSDLocator
~XSNamedMap	include/xercesc/framework/psvi/XSNamedMap.c	/^template <class TVal> XSNamedMap<TVal>::~XSNamedMap()$/;"	f	class:TVal
~XSerializable	include/xercesc/internal/XSerializable.hpp	/^    virtual ~XSerializable() {} ;$/;"	f	class:XSerializable
~XSerializedObjectId	include/xercesc/internal/XSerializeEngine.hpp	/^    ~XSerializedObjectId(){};$/;"	f	class:XSerializedObjectId
~XUtil	include/xercesc/validators/schema/XUtil.hpp	/^	~XUtil() {};$/;"	f	class:XUtil
~XercesLocationPath	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    ~XercesLocationPath() { delete fSteps; }$/;"	f	class:XercesLocationPath
~XercesNodeTest	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    ~XercesNodeTest() { delete fName; }$/;"	f	class:XercesNodeTest
~XercesStep	include/xercesc/validators/schema/identity/XercesXPath.hpp	/^    ~XercesStep() { delete fNodeTest; }$/;"	f	class:XercesStep
